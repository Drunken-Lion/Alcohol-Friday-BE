package com.drunkenlion.alcoholfriday.global.init;

import com.drunkenlion.alcoholfriday.domain.address.dao.AddressRepository;
import com.drunkenlion.alcoholfriday.domain.address.entity.Address;
import com.drunkenlion.alcoholfriday.domain.auth.enumerated.ProviderType;
import com.drunkenlion.alcoholfriday.domain.cart.dao.CartDetailRepository;
import com.drunkenlion.alcoholfriday.domain.cart.dao.CartRepository;
import com.drunkenlion.alcoholfriday.domain.cart.entity.Cart;
import com.drunkenlion.alcoholfriday.domain.cart.entity.CartDetail;
import com.drunkenlion.alcoholfriday.domain.category.dao.CategoryClassRepository;
import com.drunkenlion.alcoholfriday.domain.category.dao.CategoryRepository;
import com.drunkenlion.alcoholfriday.domain.category.entity.Category;
import com.drunkenlion.alcoholfriday.domain.category.entity.CategoryClass;
import com.drunkenlion.alcoholfriday.domain.customerservice.answer.dao.AnswerRepository;
import com.drunkenlion.alcoholfriday.domain.customerservice.answer.entity.Answer;
import com.drunkenlion.alcoholfriday.domain.customerservice.question.entity.Question;
import com.drunkenlion.alcoholfriday.domain.customerservice.question.enumerated.QuestionStatus;
import com.drunkenlion.alcoholfriday.domain.customerservice.notice.dao.NoticeRepository;
import com.drunkenlion.alcoholfriday.domain.customerservice.question.dao.QuestionRepository;
import com.drunkenlion.alcoholfriday.domain.customerservice.notice.entity.Notice;
import com.drunkenlion.alcoholfriday.domain.item.dao.ItemProductRepository;
import com.drunkenlion.alcoholfriday.domain.item.dao.ItemRepository;
import com.drunkenlion.alcoholfriday.domain.item.entity.Item;
import com.drunkenlion.alcoholfriday.domain.item.entity.ItemProduct;
import com.drunkenlion.alcoholfriday.domain.maker.dao.MakerRepository;
import com.drunkenlion.alcoholfriday.domain.maker.entity.Maker;
import com.drunkenlion.alcoholfriday.domain.member.dao.MemberRepository;
import com.drunkenlion.alcoholfriday.domain.member.entity.Member;
import com.drunkenlion.alcoholfriday.domain.member.enumerated.MemberRole;
import com.drunkenlion.alcoholfriday.domain.order.dao.OrderDetailRepository;
import com.drunkenlion.alcoholfriday.domain.order.dao.OrderRepository;
import com.drunkenlion.alcoholfriday.domain.order.entity.OrderDetail;
import com.drunkenlion.alcoholfriday.domain.payment.dao.PaymentRepository;
import com.drunkenlion.alcoholfriday.domain.payment.entity.Payment;
import com.drunkenlion.alcoholfriday.domain.payment.enumerated.PaymentCardCode;
import com.drunkenlion.alcoholfriday.domain.payment.enumerated.PaymentCardType;
import com.drunkenlion.alcoholfriday.domain.payment.enumerated.PaymentMethod;
import com.drunkenlion.alcoholfriday.domain.payment.enumerated.PaymentOwnerType;
import com.drunkenlion.alcoholfriday.domain.payment.enumerated.PaymentProvider;
import com.drunkenlion.alcoholfriday.domain.payment.enumerated.PaymentStatus;
import com.drunkenlion.alcoholfriday.domain.product.dao.ProductRepository;
import com.drunkenlion.alcoholfriday.domain.product.entity.Product;
import com.drunkenlion.alcoholfriday.domain.restaurant.cart.dao.RestaurantOrderCartDetailRepository;
import com.drunkenlion.alcoholfriday.domain.restaurant.cart.entity.RestaurantOrderCart;
import com.drunkenlion.alcoholfriday.domain.restaurant.cart.entity.RestaurantOrderCartDetail;
import com.drunkenlion.alcoholfriday.domain.restaurant.dao.RestaurantRepository;
import com.drunkenlion.alcoholfriday.domain.restaurant.dao.RestaurantStockRepository;
import com.drunkenlion.alcoholfriday.domain.restaurant.entity.Restaurant;
import com.drunkenlion.alcoholfriday.domain.restaurant.entity.RestaurantStock;
import com.drunkenlion.alcoholfriday.domain.restaurant.enumerated.DayInfo;
import com.drunkenlion.alcoholfriday.domain.restaurant.enumerated.Provision;
import com.drunkenlion.alcoholfriday.domain.restaurant.cart.dao.RestaurantOrderCartRepository;
import com.drunkenlion.alcoholfriday.domain.restaurant.order.dao.RestaurantOrderDetailRepository;
import com.drunkenlion.alcoholfriday.domain.restaurant.order.dao.RestaurantOrderRepository;
import com.drunkenlion.alcoholfriday.domain.restaurant.order.entity.RestaurantOrder;
import com.drunkenlion.alcoholfriday.domain.restaurant.order.entity.RestaurantOrderDetail;
import com.drunkenlion.alcoholfriday.domain.restaurant.order.enumerated.RestaurantOrderStatus;
import com.drunkenlion.alcoholfriday.domain.restaurant.refund.dao.RestaurantOrderRefundDetailRepository;
import com.drunkenlion.alcoholfriday.domain.restaurant.refund.dao.RestaurantOrderRefundRepository;
import com.drunkenlion.alcoholfriday.domain.restaurant.refund.entity.RestaurantOrderRefund;
import com.drunkenlion.alcoholfriday.domain.restaurant.refund.entity.RestaurantOrderRefundDetail;
import com.drunkenlion.alcoholfriday.domain.restaurant.refund.enumerated.RestaurantOrderRefundStatus;
import com.drunkenlion.alcoholfriday.domain.restaurant.vo.TimeData;
import com.drunkenlion.alcoholfriday.domain.review.dao.ReviewRepository;
import com.drunkenlion.alcoholfriday.domain.review.entity.Review;
import com.drunkenlion.alcoholfriday.global.common.entity.BaseEntity;
import com.drunkenlion.alcoholfriday.global.common.enumerated.ItemType;
import com.drunkenlion.alcoholfriday.global.common.enumerated.OrderStatus;
import com.drunkenlion.alcoholfriday.global.file.application.FileServiceImpl;
import java.time.LocalDateTime;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.locationtech.jts.geom.Coordinate;
import org.locationtech.jts.geom.GeometryFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.ApplicationRunner;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Lazy;
import org.springframework.context.annotation.Profile;
import org.springframework.http.MediaType;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.web.multipart.MultipartFile;
import com.drunkenlion.alcoholfriday.domain.order.entity.Order;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

@Slf4j
@Profile("!prod & !test")
@RequiredArgsConstructor
@Configuration
public class NotProd {
    @Autowired
    @Lazy
    private NotProd self;

    private final MemberRepository memberRepository;
    private final RestaurantRepository restaurantRepository;
    private final MakerRepository makerRepository;
    private final FileServiceImpl fileService;
    private final CategoryClassRepository categoryClassRepository;
    private final CategoryRepository categoryRepository;
    private final ProductRepository productRepository;
    private final QuestionRepository questionRepository;
    private final AnswerRepository answerRepository;
    private final AddressRepository addressRepository;
    private final NoticeRepository noticeRepository;
    private final ItemRepository itemRepository;
    private final ItemProductRepository itemProductRepository;
    private final CartRepository cartRepository;
    private final CartDetailRepository cartDetailRepository;
    private final RestaurantStockRepository restaurantStockRepository;
    private final RestaurantOrderCartRepository restaurantOrderCartRepository;
    private final RestaurantOrderDetailRepository restaurantOrderDetailRepository;
    private final RestaurantOrderCartDetailRepository restaurantOrderCartDetailRepository;
    private final PaymentRepository paymentRepository;
    private final RestaurantOrderRepository restaurantOrderRepository;
    private final RestaurantOrderRefundRepository restaurantOrderRefundRepository;
    private final RestaurantOrderRefundDetailRepository restaurantOrderRefundDetailRepository;
    private final GeometryFactory geometryFactory = new GeometryFactory();

    private final OrderRepository orderRepository;
    private final OrderDetailRepository orderDetailRepository;
    private final ReviewRepository reviewRepository;

    @Bean
    @org.springframework.core.annotation.Order(3)
    public ApplicationRunner initNotProd() {
        return args -> {
            if (memberRepository.findById(1L).isPresent()) {
                return;
            }

            initAdmin();
            initMember();
            initMaker();
            initCategory();
            initProduct();
            initProduct2();
            initItem();
            initItemProduct();
            initRestaurant();
            initNotice();
            initCart();
            initCartDetail1();
            initCartDetail2();
            initRestauranStock();
            initQuestion();
            initQuestion2();
            initAnswer();

            initOrder();
            initOrderDetail1();
            initOrderDetail2();

            initRestaurantCart();
            initRestaurantCartDetail();
            initPayment();
            initReview();
            initAddress();
            initRestaurantOrder();
            initRestaurantOrderDetail();
            initRestaurantOrderRefund();
            initRestaurantOrderRefundDetail();
        };
    }

    private Map<String, Object> getTimeTest() {
        Map<String, Object> allDayTime = new LinkedHashMap<>();

        allDayTime.put("holiday", true);
        allDayTime.put("etc", "명절 당일만 휴업");

        TimeData timeData = TimeData.builder()
                .businessStatus(true)
                .startTime(LocalTime.of(9, 0))
                .endTime(LocalTime.of(22, 0))
                .breakBusinessStatus(true)
                .breakStartTime(LocalTime.of(15, 0))
                .breakEndTime(LocalTime.of(17, 0))
                .build();

        for (DayInfo value : DayInfo.values()) {
            allDayTime.put(value.toString(), timeData);
        }

        return allDayTime;
    }

    private Map<String, Object> getProvisionTest() {
        Map<String, Object> frame = new LinkedHashMap<>();

        for (Provision value : Provision.values()) {
            frame.put(value.toString(), true);
        }
        return frame;
    }

    private void insertImage(BaseEntity entity, List<MultipartFile> files) {
        fileService.saveFiles(entity, files);
    }


    public void addImage() throws Exception {
        // Test Image 저장은 JPEG만 되도록 설정
        File file = new File(getClass().getClassLoader().getResource("img/gayoung.jpeg").getFile());
        InputStream fileInputStream = new FileInputStream(file);
        MultipartFile mpf = new MockMultipartFile("file", file.getName(), MediaType.IMAGE_JPEG_VALUE,
                fileInputStream);
        List<MultipartFile> files = List.of(mpf);
        fileService.uploadFiles(files, 1L, EntityType.TEST.getEntityName());
    }

    public void initMaker() {
        makerRepository.save(Maker.builder().name("(주)국순당").address("강원도 횡성군 둔내면 강변로 975").region("강원도 횡성군").detail("101").build());
        makerRepository.save(Maker.builder().name("(주)1932 포천일동막걸리").address("경기도 포천시 일동면 운악청계로 1597").region("경기도 포천시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 33가 주식회사").address("강원도 홍천군 남면 어두원이길 143").region("강원도 홍천군").detail("101").build());
        makerRepository.save(Maker.builder().name("솔래원").address("강원도 양구군 방산면 칠전길 12-7").region("강원도 양구군").detail("101").build());
        makerRepository.save(Maker.builder().name("(주)한국애플리즈").address("경상북도 의성군 단촌면 일직점곡로 755").region("경상북도 의성군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 명세주가(주)").address("충청북도 청주시 상당구 가덕면 한계길 32-5").region("충청북도 청주시").detail("101").build());
        makerRepository.save(Maker.builder().name("예인화원").address("경상북도 경주시 남산순환로10").region("경상북도 경주시").detail("101").build());
        makerRepository.save(Maker.builder().name("가평 우리술").address("경기도 가평군 조종면 대보간선로 26, 29").region("경기도 가평군").detail("101").build());
        makerRepository.save(Maker.builder().name("양촌감영농조합법인").address("충청남도 논산시 황산벌로 1075-21").region("충청남도 논산시").detail("101").build());
        makerRepository.save(Maker.builder().name("청도감와인(주)").address("경상북도 청도군 풍각면 봉길1길27").region("경상북도 청도군").detail("101").build());
        makerRepository.save(Maker.builder().name("술샘").address("경기도 용인시 처인구 양지면 죽양대로 2298-1").region("경기도 용인시").detail("101").build());
        makerRepository.save(Maker.builder().name("(주)배상면주가").address("경기도 포천시 화현면 화동로 432번길 25").region("경기도 포천시").detail("101").build());
        makerRepository.save(Maker.builder().name("산머루농원영농조합법인").address("경기도 파주시 윗배우니길 441-25").region("경기도 파주시").detail("101").build());
        makerRepository.save(Maker.builder().name("오대서주양조").address("강원도 평창군 진부면 영정게길57-1").region("강원도 평창군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)감홍로").address("경기도 파주시 파주읍 부곡리 34-7").region("경기도 파주시").detail("101").build());
        makerRepository.save(Maker.builder().name("내국양조").address("충청남도 논산시 연무읍 마종로 361").region("충청남도 논산시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(유)술소리").address("전라북도 남원시 시묘길 130(오암동)").region("전라북도 남원시").detail("101").build());
        makerRepository.save(Maker.builder().name("디오케이브루어리").address("서울특별시 강북구 삼양로 455, 1층").region("서울특별시 강북구").detail("101").build());
        makerRepository.save(Maker.builder().name("두이술공방").address("충청남도 청양군 대치면 방죽골길 46-19").region("충청남도 청양군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 동문거리양조장(주) (전주술로시티)").address("전라북도 전주시 완산구 동문길99").region("전라북도 전주시").detail("101").build());
        makerRepository.save(Maker.builder().name("계룡백일주").address("충청남도 공주시 봉정길 32").region("충청남도 공주시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 한국산삼(주)").address("충청남도 공주시 계룡면 여서울2길9").region("충청남도 공주시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 배상면주가 고창LB").address("전라북도 고창군 아산면 병암길 48").region("전라북도 고창군").detail("101").build());
        makerRepository.save(Maker.builder().name("고도리 와이너리").address("경상북도 영천시 고경면 고도리 494").region("경상북도 영천시").detail("101").build());
        makerRepository.save(Maker.builder().name("제주샘영농조합법인").address("제주특별자치도 제주시 애월읍 애원로 283").region("제주특별자치도 제주시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)제이엘").address("경상북도 문경시 문경읍 새재로 609").region("경상북도 문경시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 고창선운산(유)").address("전라북도 고창군 심원면 심원로 270-73").region("전라북도 고창군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 사곡양조원").address("충청남도 공주시 사곡면 마곡사로 49").region("충청남도 공주시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)시트러스").address("제주특별자치도 서귀포시 남원읍 신례천로46").region("제주특별자치도 서귀포시").detail("101").build());
        makerRepository.save(Maker.builder().name("그린영농조합법인").address("경기도 안산시 단원구 뻐꾹산길 107(대부북동)").region("경기도 안산시").detail("101").build());
        makerRepository.save(Maker.builder().name("월류원").address("충청북도 영동군 황간면 남성동3길 4-14").region("충청북도 영동군").detail("101").build());
        makerRepository.save(Maker.builder().name("월류원 (오드린)").address("충청북도 영동군 황간면 남성동3길 4-14").region("충청북도 영동군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)금산인삼주").address("충청남도 금산군 금성면 파초길 23").region("충청남도 금산군").detail("101").build());
        makerRepository.save(Maker.builder().name("(유)금정산성토산주").address("부산시 금정구 산성로 453(금성동)").region("부산시 금정구").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)제이케이크래프트").address("부산광역시 동래구 사직북로48번길 34").region("부산광역시 동래구").detail("101").build());
        makerRepository.save(Maker.builder().name("김천 과하주").address("경상북도 김천시 대항면 괘방령로 1178-4").region("경상북도 김천시").detail("101").build());
        makerRepository.save(Maker.builder().name("김포양조").address("경기도 김포시 월곶면 김포대로 2763").region("경기도 김포시").detail("101").build());
        makerRepository.save(Maker.builder().name("김포금쌀탁주영농조합법인").address("경기도 김포시 하성면 하성로 622").region("경기도 김포시").detail("101").build());
        makerRepository.save(Maker.builder().name("낙천").address("강원도 동해시 공단2로 73").region("강원도 동해시").detail("101").build());
        makerRepository.save(Maker.builder().name("한강주조").address("서울특별시 성동구 둘레15길 12, 2층").region("서울특별시 성동구").detail("101").build());
        makerRepository.save(Maker.builder().name("내장산 복분자 영농조합").address("전라북도 정읍시 북면 장학 1길").region("전라북도 정읍시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)토향").address("제주특별자치도 제주시 한경면 연명로 372").region("제주특별자치도 제주시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)솔송주").address("경상남도 함양군 지곡면 지곡창촌길3").region("경상남도 함양군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 명품안동소주 (주)").address("경상북도 안동시 풍산읍 유통단지길 124-34").region("경상북도 안동시").detail("101").build());
        makerRepository.save(Maker.builder().name("배상면주가 포천LB").address("경기도 포천시 화현면 화동로 432번길 25").region("경기도 포천시").detail("101").build());
        makerRepository.save(Maker.builder().name("영농조합법인 오름주가").address("경상남도 사천시 미룡길 31-20").region("경상남도 사천시").detail("101").build());
        makerRepository.save(Maker.builder().name("다랭이팜").address("경상남도 남해군 남면 홍현리 897번지").region("경상남도 남해군").detail("101").build());
        makerRepository.save(Maker.builder().name("명가원영농조합법인").address("경상남도 함양군 지곡면 지곡창촌길3").region("경상남도 함양군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 (주)죽향도가").address("전라남도 담양군 담양읍 외다길30").region("전라남도 담양군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 (주)세찬 제조사").address("경상북도 영천시 임고면 포은로 842-50").region("경상북도 영천시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)홍지원").address("강원도 평창군 평창읍 농공단지길 24-14").region("강원도 평창군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 대윤가야곡주조(주)").address("충청남도 논산시 가야곡면 매죽헌로 809").region("충청남도 논산시").detail("101").build());
        makerRepository.save(Maker.builder().name("대작영농조합법인").address("강원도 철원군 동송읍 이평로34번길 20-28").region("강원도 철원군").detail("101").build());
        makerRepository.save(Maker.builder().name("추성고을").address("전라남도 담양군 용명 추령로 29").region("전라남도 담양군").detail("101").build());
        makerRepository.save(Maker.builder().name("동해명주").address("경상북도 포항시 남구 동해면 일월리 51-1").region("경상북도 포항시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 (주)도깨비양조장").address("충청북도 단양군 가곡면 사평3길 5").region("충청북도 단양군").detail("101").build());
        makerRepository.save(Maker.builder().name("방풍도가").address("강원도 강릉시 미노길 103").region("강원도 강릉시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 오산양조(주)").address("경기도 오산시 시장길 63").region("경기도 오산시").detail("101").build());
        makerRepository.save(Maker.builder().name("영월더덕영농조합법인").address("강원도 영월군 주천면 솔치로 633").region("강원도 영월군").detail("101").build());
        makerRepository.save(Maker.builder().name("예술").address("강원도 홍천군 내촌면 물걸리 508-2").region("강원도 홍천군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)산수").address("강원도 홍천군 화촌면 야시대로 211-57").region("강원도 홍천군").detail("101").build());
        makerRepository.save(Maker.builder().name("고헌정영농조합법인").address("충청북도 충주시 산척면 샛강영길 39").region("충청북도 충주시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 (주)두레양조").address("충청남도 천안시 서북구 입장면 율목길17-6").region("충청남도 천안시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)두레양조").address("충청남도 천안시 서북구 입장면 율목길17-6").region("충청남도 천안시").detail("101").build());
        makerRepository.save(Maker.builder().name("케이소주 (전주가양주연구소)").address("전라북도 전주시 완산구 중산중앙로27. 3층").region("전라북도 전주시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 (주)벗드림").address("부산광역시 북구 덕천로247번길 3, 2층").region("부산광역시 북구").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 작은알자스").address("충청북도 충주시 엄정면 도자기길 32").region("충청북도 충주시").detail("101").build());
        makerRepository.save(Maker.builder().name("(농)국순당 여주명주(주)").address("경기도 여주시 강천면 부평로 330").region("경기도 여주시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 유토피아(주)").address("경상북도 안동시 남후면 광음리 1111-2").region("경상북도 안동시").detail("101").build());
        makerRepository.save(Maker.builder().name("옥순가 소곡주 마주").address("충청남도 서천군 서초면 시초동로 88-1").region("충청남도 서천군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)착한농부").address("경상북도 예천군 용문면 복천길 16-8").region("경상북도 예천군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 우포의아침 주식회사").address("경상남도 창녕군 대지면 대지농공단지길 40").region("경상남도 창녕군").detail("101").build());
        makerRepository.save(Maker.builder().name("내변산양조장").address("전라북도 부안군 행안면 부안농공단지길 14-11").region("전라북도 부안군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)백운주가").address("전라남도 광양시 옥룡면 신재로 946-18").region("전라남도 광양시").detail("101").build());
        makerRepository.save(Maker.builder().name("더한주류").address("서울시 은평구 증산로7길 28-13").region("서울시 은평구").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인산들벗(주)").address("전라북도 무주군 적상면 서창로 72").region("전라북도 무주군").detail("101").build());
        makerRepository.save(Maker.builder().name("배혜정 도가").address("경기도 화성시 정남면 문학리 674-23").region("경기도 화성시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 두루(주)").address("강원도 홍천 내촌면 용포길 31-25").region("강원도 홍천").detail("101").build());
        makerRepository.save(Maker.builder().name("(주)면천두견주").address("충청남도 당진시 면천로 성하로 250").region("충청남도 당진시").detail("101").build());
        makerRepository.save(Maker.builder().name("대농바이오우리산삼").address("경기도 광주시 퇴촌면 천진암로 684").region("경기도 광주시").detail("101").build());
        makerRepository.save(Maker.builder().name("(농)국순당고창명주(주)").address("전라북도 고창군 심원면 선운대로 2197").region("전라북도 고창군").detail("101").build());
        makerRepository.save(Maker.builder().name("대대로영농조합법인").address("전라남도 진도군 군내면 명량대첩로288-23").region("전라남도 진도군").detail("101").build());
        makerRepository.save(Maker.builder().name("협동조합 주담").address("강원도 원주시 판부면 판부신촌길 84").region("강원도 원주시").detail("101").build());
        makerRepository.save(Maker.builder().name("덕유양조").address("전라북도 무주군 안성면 장무로 1375-7").region("전라북도 무주군").detail("101").build());
        makerRepository.save(Maker.builder().name("문배주양조원").address("경기도 김포시 통진읍 서암리 203-4").region("경기도 김포시").detail("101").build());
        makerRepository.save(Maker.builder().name("문경주조 (전통술 체험관)").address("경상북도 문경시 동로면 노은리 192").region("경상북도 문경시").detail("101").build());
        makerRepository.save(Maker.builder().name("울진술도가").address("경상북도 울진군 근남면 노음2길 4").region("경상북도 울진군").detail("101").build());
        makerRepository.save(Maker.builder().name("최행숙 전통주가").address("경기도 파주시 법원읍 사임당로 763").region("경기도 파주시").detail("101").build());
        makerRepository.save(Maker.builder().name("민속주안동소주").address("경상북도 안동시 강남로 71-1").region("경상북도 안동시").detail("101").build());
        makerRepository.save(Maker.builder().name("민속주 안동소주").address("경상북도 안동시 강남로 71-1").region("경상북도 안동시").detail("101").build());
        makerRepository.save(Maker.builder().name("조은술 세종").address("충청북도 청주시 청원구 사천로 18번길 5-2").region("충청북도 청주시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 (주)금계당").address("경상북도 안동시 일직면 돌고개길 9, 1층").region("경상북도 안동시").detail("101").build());
        makerRepository.save(Maker.builder().name("(주)농업회사법인 술빚는 전가네").address("경기도 포천시 영북면 산정호수로 322번길 28").region("경기도 포천시").detail("101").build());
        makerRepository.save(Maker.builder().name("주식회사 배혜정 농업회사법인").address("경기도 화성시 정남면 서봉로 835").region("경기도 화성시").detail("101").build());
        makerRepository.save(Maker.builder().name("(주)농업회사법인 추연당").address("경기도 여주시 가남읍 금당리길 1-111").region("경기도 여주시").detail("101").build());
        makerRepository.save(Maker.builder().name("신평양조장").address("충청남도 당진시 신평면 신평로 813").region("충청남도 당진시").detail("101").build());
        makerRepository.save(Maker.builder().name("(주)한국와인").address("경상북도 영천시 금호읍 창산길 100-44").region("경상북도 영천시").detail("101").build());
        makerRepository.save(Maker.builder().name("병영양조장").address("전라남도 강진군 병영로 하멜로 407").region("전라남도 강진군").detail("101").build());
        makerRepository.save(Maker.builder().name("김정식").address("울산광역시 울주군 상북면 향산동길 48").region("울산광역시 울주군").detail("101").build());
        makerRepository.save(Maker.builder().name("내변산(동진주조)").address("전라북도 부안군 행안면 부안농공단지길 14-11").region("전라북도 부안군").detail("101").build());
        makerRepository.save(Maker.builder().name("한산소곡주").address("충청남도 서천군 한산면 충절로 1118번지").region("충청남도 서천군").detail("101").build());
        makerRepository.save(Maker.builder().name("거창사과원예농협").address("경상남도 거창군 거창읍 거함대로 3452-41").region("경상남도 거창군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인신탄진주조(주)").address("대전광역시 대덕구 신탄진로 738번길 128").region("대전광역시 대덕구").detail("101").build());
        makerRepository.save(Maker.builder().name("송도향전통주조").address("인천광역시 남동구 호구포로 50, 8층 819-1호").region("인천광역시 남동구").detail("101").build());
        makerRepository.save(Maker.builder().name("도란원").address("충청북도 영동군 매곡면 유전장척길 143").region("충청북도 영동군").detail("101").build());
        makerRepository.save(Maker.builder().name("(주)선운산복분자주 흥진").address("전라북도 고창군 부안면 복분자로535").region("전라북도 고창군").detail("101").build());
        makerRepository.save(Maker.builder().name("석이원주조").address("대전광역시 동구 송촌남로 13").region("대전광역시 동구").detail("101").build());
        makerRepository.save(Maker.builder().name("영농조합법인 석전상온전통주가").address("경상북도 칠곡군 왜관읍 동산2길19").region("경상북도 칠곡군").detail("101").build());
        makerRepository.save(Maker.builder().name("리큐랩주식회사").address("부산광역시 영도구 남항새싹길 186").region("부산광역시 영도구").detail("101").build());
        makerRepository.save(Maker.builder().name("성포양조장").address("경상남도 거제시 사등면 지석3길3").region("경상남도 거제시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 장희도가(주)").address("충청북도 청주시 청원구 내수읍 미원초정로 1275").region("충청북도 청주시").detail("101").build());
        makerRepository.save(Maker.builder().name("녹천주조장").address("충청남도 서천군 한산면 한마로 105").region("충청남도 서천군").detail("101").build());
        makerRepository.save(Maker.builder().name("용두산조은술").address("충청북도 제천시 송학면 송학주천로647").region("충청북도 제천시").detail("101").build());
        makerRepository.save(Maker.builder().name("대강양조장").address("충청북도 단양군 대강면 장림리 113-7").region("충청북도 단양군").detail("101").build());
        makerRepository.save(Maker.builder().name("소양강도가 (구. 천정양조장)").address("강원도 춘천시 신북읍 율문길 65-5").region("강원도 춘천시").detail("101").build());
        makerRepository.save(Maker.builder().name("명가원 영농조합법인").address("경상남도 함양군 지곡면 지곡창촌길3").region("경상남도 함양군").detail("101").build());
        makerRepository.save(Maker.builder().name("태인합동주조").address("전라북도 정읍시 태인면 태흥리 392-1").region("전라북도 정읍시").detail("101").build());
        makerRepository.save(Maker.builder().name("송화양조사").address("전라북도 완주군 구이면 구이로 1096").region("전라북도 완주군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)좋은술").address("경기도 평택시 오성면 숙성뜰길 108").region("경기도 평택시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)술아원").address("경기도 여주시 대신면 대신1로 120, 나호").region("경기도 여주시").detail("101").build());
        makerRepository.save(Maker.builder().name("불휘농장").address("충청북도 영동군 심천면 약목2길26").region("충청북도 영동군").detail("101").build());
        makerRepository.save(Maker.builder().name("이원양조장").address("충청북도 옥천군 이원면 묘목로 113").region("충청북도 옥천군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)신선").address("충청북도 청주시 상당구 것대로 5 1층").region("충청북도 청주시").detail("101").build());
        makerRepository.save(Maker.builder().name("명인 안동소주").address("경상북도 안동시 풍산읍 산업단지6길 6").region("경상북도 안동시").detail("101").build());
        makerRepository.save(Maker.builder().name("안동소주일품").address("경상북도 안동시 풍산읍 괴정리 926-5번지").region("경상북도 안동시").detail("101").build());
        makerRepository.save(Maker.builder().name("한주양조").address("경기도 안성시 서운면 서운로 241-14").region("경기도 안성시").detail("101").build());
        makerRepository.save(Maker.builder().name("안양주조장").address("전라남도 장흥군 안양면 주교비동로4").region("전라남도 장흥군").detail("101").build());
        makerRepository.save(Maker.builder().name("지리산그린영농조합 운봉주조").address("전라북도 남원시 운봉읍 황산로 1018").region("전라북도 남원시").detail("101").build());
        makerRepository.save(Maker.builder().name("양촌양조").address("충청남도 논산시 양촌면 매죽헌로 1665번길 14-7").region("충청남도 논산시").detail("101").build());
        makerRepository.save(Maker.builder().name("왕지케양조장 (제주본초협동조합)").address("제주특별자치도 제주시 한경면 고산로 2길 22-13").region("제주특별자치도 제주시").detail("101").build());
        makerRepository.save(Maker.builder().name("여포와인농장").address("충청북도 영동군 양강면 유점지촌길 75(여포와인농장)").region("충청북도 영동군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 연천양조(주)").address("경기도 연천군 마산면 청정로 1738번길 15").region("경기도 연천군").detail("101").build());
        makerRepository.save(Maker.builder().name("한산예담은소곡주").address("충청남도 서천군 한산면 한마로 5(동산리)").region("충청남도 서천군").detail("101").build());
        makerRepository.save(Maker.builder().name("예밀2리영농조합법인").address("강원도 영월군 김삿갓면 예밀촌길 228-20").region("강원도 영월군").detail("101").build());
        makerRepository.save(Maker.builder().name("국순당").address("강원도 횡성군 둔내면 강변로 975").region("강원도 횡성군").detail("101").build());
        makerRepository.save(Maker.builder().name("국순당 고창명주").address("전라북도 고창군 심원면 선운대로 2197").region("전라북도 고창군").detail("101").build());
        makerRepository.save(Maker.builder().name("제주술익는집").address("제주특별자치도 서귀포시 표선면 중산간동로 4726").region("제주특별자치도 서귀포시").detail("101").build());
        makerRepository.save(Maker.builder().name("알에프").address("전라북도 장수군 계남면 침곡로 11-26").region("전라북도 장수군").detail("101").build());
        makerRepository.save(Maker.builder().name("문경주조").address("경상북도 문경시 동로면 노은1길 49-15").region("경상북도 문경시").detail("101").build());
        makerRepository.save(Maker.builder().name("배혜정도가").address("경기도 화성시 정남면 문학리 674-23").region("경기도 화성시").detail("101").build());
        makerRepository.save(Maker.builder().name("원조소곡주").address("충청남도 서천군 한산면 한마로34").region("충청남도 서천군").detail("101").build());
        makerRepository.save(Maker.builder().name("서울장수주식회사").address("충청북도 진천군 광혜원면 죽현길141").region("충청북도 진천군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 조은술세종(주)").address("충청북도 청주시 청원구 사천로 18번길 5-2").region("충청북도 청주시").detail("101").build());
        makerRepository.save(Maker.builder().name("은척양조장").address("경상북도 상주시 은척면 봉중2길 16-9").region("경상북도 상주시").detail("101").build());
        makerRepository.save(Maker.builder().name("전주 이강주").address("전라북도 전주시 덕진구 매암길 28").region("전라북도 전주시").detail("101").build());
        makerRepository.save(Maker.builder().name("조은술세종").address("충청북도 청주시 청원구 사천로18번길 5-2").region("충청북도 청주시").detail("101").build());
        makerRepository.save(Maker.builder().name("이동주조").address("경기도 포천시 이동면 화동로 2466").region("경기도 포천시").detail("101").build());
        makerRepository.save(Maker.builder().name("이가수불").address("충청남도 아산시 도고면 기곡로 77번길 30-7").region("충청남도 아산시").detail("101").build());
        makerRepository.save(Maker.builder().name("이화백주 순탁주").address("경상남도 양산시 상북면 충렬로 941").region("경상남도 양산시").detail("101").build());
        makerRepository.save(Maker.builder().name("인천탁주").address("인천광역시 부평구 안남로 433번길 14").region("인천광역시 부평구").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 입장주조㈜").address("충청남도 천안시 서북구 입장면 성진로 808").region("충청남도 천안시").detail("101").build());
        makerRepository.save(Maker.builder().name("자두사랑").address("경상북도 김천시 대학로 214").region("경상북도 김천시").detail("101").build());
        makerRepository.save(Maker.builder().name("자희자양").address("전라남도 함평군 신광면 신해로 92").region("전라남도 함평군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 (주)알에프").address("전라북도 장수군 계남면 침곡로 11-26").region("전라북도 장수군").detail("101").build());
        makerRepository.save(Maker.builder().name("남도탁주").address("전라남도 나주시 노안면 노안로379").region("전라남도 나주시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 (주)젤코바와이너리").address("경상북도 상주시 청리면 남상주로 1108-3").region("경상북도 상주시").detail("101").build());
        makerRepository.save(Maker.builder().name("청송양조장").address("경상북도 청송군 부남면 대전로 121-1").region("경상북도 청송군").detail("101").build());
        makerRepository.save(Maker.builder().name("(유)친구들의술지란지교").address("전라북도 순창군 순창읍 순창7길 5-1").region("전라북도 순창군").detail("101").build());
        makerRepository.save(Maker.builder().name("지평주조").address("경기도 양평군 지평면 지평의병로62번길 27").region("경기도 양평군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 (주)밀과노닐다").address("경상북도 안동시 도산면 신성중앙길32").region("경상북도 안동시").detail("101").build());
        makerRepository.save(Maker.builder().name("태평주가").address("전라북도 진안군 진안읍 거북바위로 3길 15-35").region("전라북도 진안군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 우포의아침(주)").address("경상남도 창녕군 대지면 대지농공단지길 40, (2공장) 경상남도 창원시 의창군 북면 천주로 1173번길29").region("경상남도 창녕군").detail("101").build());
        makerRepository.save(Maker.builder().name("(유)산에들에 농업회사법인").address("전라북도 완주군 구이면 구이로 885").region("전라북도 완주군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)영덕주조").address("경상북도 영덕군 강구면 소월1길 16-10").region("경상북도 영덕군").detail("101").build());
        makerRepository.save(Maker.builder().name("중원당").address("충청북도 충주시 중앙탑면 청금로 112-10").region("충청북도 충주시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(주)청산녹수").address("전라남도 장성군 장성읍 남양촌길(백계리) 19").region("전라남도 장성군").detail("101").build());
        makerRepository.save(Maker.builder().name("병영주조장").address("전라남도 강진군 병영면 성남리 140-3").region("전라남도 강진군").detail("101").build());
        makerRepository.save(Maker.builder().name("청양 둔송 구기주").address("충청남도 청양군 운곡면 추광길 2-10").region("충청남도 청양군").detail("101").build());
        makerRepository.save(Maker.builder().name("전통주연구개발원").address("경기도 가평군 가평읍 분자골로68번길 82").region("경기도 가평군").detail("101").build());
        makerRepository.save(Maker.builder().name("예산사과와인(주)").address("충청남도 예산군 고덕면 대몽로 107-25").region("충청남도 예산군").detail("101").build());
        makerRepository.save(Maker.builder().name("예산사과와인").address("충청남도 예산군 고덕면 대몽로 107-25").region("충청남도 예산군").detail("101").build());
        makerRepository.save(Maker.builder().name("컨츄리 농원").address("충청북도 영동군 영동읍 주곡리 590-14").region("충청북도 영동군").detail("101").build());
        makerRepository.save(Maker.builder().name("코이버펑크").address("경상북도 영천시 봉계길 52").region("경상북도 영천시").detail("101").build());
        makerRepository.save(Maker.builder().name("산머루").address("경상북도 김천시 증산면 금곡리3길 29").region("경상북도 김천시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(유)대마주조").address("전라남도 영광군 대마면 동삼로 699").region("전라남도 영광군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인 (주)청산녹수").address("전라남도 장성군 장성읍 남양촌길(백계리) 19").region("전라남도 장성군").detail("101").build());
        makerRepository.save(Maker.builder().name("갈기산포도농원 (주)농업회사법인").address("충청북도 영동군 학산면 모리1길 23").region("충청북도 영동군").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인(유)화양").address("충청북도 청주시 청원구 내수읍 풍정1길 8-4").region("충청북도 청주시").detail("101").build());
        makerRepository.save(Maker.builder().name("하향주가 영농조합법인").address("대구광역시광역시 달성군 유가읍 휴양림길 440-27").region("대구광역시광역시 달성군").detail("101").build());
        makerRepository.save(Maker.builder().name("제천한약영농조합법인").address("충청북도 제천시 봉양읍 북부로 5길 16-10").region("충청북도 제천시").detail("101").build());
        makerRepository.save(Maker.builder().name("농업회사법인해미읍성딸기와인(주)").address("충청남도 서산시 고북면 산직마을길85").region("충청남도 서산시").detail("101").build());
        makerRepository.save(Maker.builder().name("해창주조장").address("전라남도 해남군 화산면 해창길1").region("전라남도 해남군").detail("101").build());
        makerRepository.save(Maker.builder().name("아이비영농조합법인").address("경기도 양평군 강하면 왕창부로길 110").region("경기도 양평군").detail("101").build());
        makerRepository.save(Maker.builder().name("자연과 인삼").address("충청북도 괴산군 청천면 도경로 640").region("충청북도 괴산군").detail("101").build());
        makerRepository.save(Maker.builder().name("황금보리(유)농업회사법인").address("충청남도 홍성군 서부면 서부로 696").region("충청남도 홍성군").detail("101").build());
        makerRepository.save(Maker.builder().name("회곡양조장").address("경상북도 안동시 풍산읍 산업단지 5길 39").region("경상북도 안동시").detail("101").build());
        makerRepository.save(Maker.builder().name("두술도가").address("경상북도 문경시 가은읍 가은5길 7").region("경상북도 문경시").detail("101").build());
    }

    public void initProduct() {
        productRepository.save(Product.builder().name("1000억 막걸리 프리바이오").price(BigDecimal.valueOf(3500)).quantity(100L).alcohol(5D).ingredient("쌀(국내산), 밀(국내산), 누룩, 정제수").sweet(3L).sour(4L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)국순당").get()).distributionPrice(BigDecimal.valueOf(3850.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("1000억 유산균막걸리").price(BigDecimal.valueOf(3200)).quantity(100L).alcohol(5D).ingredient("쌀(국내산), 밀(국내산), 누룩, 정제수").sweet(3L).sour(5L).cool(5L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)국순당").get()).distributionPrice(BigDecimal.valueOf(3520.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("1932 새싹땅콩 햅쌀막걸리").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 땅콩농축액, 입국, 효모, 고과당, 정제효소제, 정제수").sweet(2L).sour(2L).cool(3L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)1932 포천일동막걸리").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("1932 새싹땅콩 흑미막걸리").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 흑미(15%), 땅콩농축액, 입국, 효모, 고과당, 정제효소제, 정제수").sweet(3L).sour(1L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)1932 포천일동막걸리").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("33JU").price(BigDecimal.valueOf(49000)).quantity(100L).alcohol(18D).ingredient("산양산삼, 주정, 결정과당, 효소처리스테비아, 에리스리톨, 호박산, 꿀").sweet(3L).sour(0L).cool(0L).body(1L).balance(0L).incense(4L).throat(1L).maker(makerRepository.findByName("농업회사법인 33가 주식회사").get()).distributionPrice(BigDecimal.valueOf(53900.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("52C").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(17.5D).ingredient("정제수, 주정, 쌀증류식소주원액, 오이").sweet(3L).sour(0L).cool(0L).body(3L).balance(0L).incense(4L).throat(2L).maker(makerRepository.findByName("농업회사법인(주)청산녹수").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("DMZ 240km").price(BigDecimal.valueOf(8000)).quantity(100L).alcohol(25D).ingredient("자연송이버섯, 브랜디원액, 블랙커런트, 벌꿀").sweet(2L).sour(0L).cool(0L).body(0L).balance(0L).incense(1L).throat(3L).maker(makerRepository.findByName("솔래원").get()).distributionPrice(BigDecimal.valueOf(8800.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("G12 골디락스").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(12D).ingredient("정제수, 멥쌀(국내산), 찹쌀(국내산), 누룩, 종국, 효모, 밀함유").sweet(2L).sour(2L).cool(2L).body(3L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)청산녹수").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("The 찾을수록 피치").price(BigDecimal.valueOf(9000)).quantity(100L).alcohol(14D).ingredient("사과와인, 정제수, 정제주정 외 제품별 농축액(복숭아, 포도, 사과, 감귤, 생강, 커피향 등)").sweet(4L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)한국애플리즈").get()).distributionPrice(BigDecimal.valueOf(9900.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("The 찾을수록 모스카토").price(BigDecimal.valueOf(9000)).quantity(100L).alcohol(14D).ingredient("사과와인, 정제수, 정제주정 외 제품별 농축액(복숭아, 포도, 사과, 감귤, 생강, 커피향 등)").sweet(4L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)한국애플리즈").get()).distributionPrice(BigDecimal.valueOf(9900.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("The 찾을수록 애플").price(BigDecimal.valueOf(9000)).quantity(100L).alcohol(16D).ingredient("사과와인, 정제수, 정제주정 외 제품별 농축액(복숭아, 포도, 사과, 감귤, 생강, 커피향 등)").sweet(4L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)한국애플리즈").get()).distributionPrice(BigDecimal.valueOf(9900.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("The 찾을수록 감귤").price(BigDecimal.valueOf(9000)).quantity(100L).alcohol(16D).ingredient("사과와인, 정제수, 정제주정 외 제품별 농축액(복숭아, 포도, 사과, 감귤, 생강, 커피향 등)").sweet(4L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)한국애플리즈").get()).distributionPrice(BigDecimal.valueOf(9900.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("The 찾을수록 생강").price(BigDecimal.valueOf(9000)).quantity(100L).alcohol(16D).ingredient("사과와인, 정제수, 정제주정 외 제품별 농축액(복숭아, 포도, 사과, 감귤, 생강, 커피향 등)").sweet(4L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)한국애플리즈").get()).distributionPrice(BigDecimal.valueOf(9900.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("가덕 순쌀 막걸리").price(BigDecimal.valueOf(13500)).quantity(100L).alcohol(6D).ingredient("국내산 쌀, 효모, 조효소재, 물엿, 아스파탐, 정제수").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 명세주가(주)").get()).distributionPrice(BigDecimal.valueOf(14850.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("가을빛 레드와인").price(BigDecimal.valueOf(35000)).quantity(100L).alcohol(14D).ingredient("포도(캠벨얼리)").sweet(2L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("예인화원").get()).distributionPrice(BigDecimal.valueOf(38500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("가평 잣 막걸리").price(BigDecimal.valueOf(1450)).quantity(100L).alcohol(6D).ingredient("쌀, 정제수, 쌀입국, 잣, 효모, 정제효소 등").sweet(2L).sour(2L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("가평 우리술").get()).distributionPrice(BigDecimal.valueOf(1595.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("감 보드카").price(BigDecimal.valueOf(14000)).quantity(100L).alcohol(32D).ingredient("감(국내산) 100%").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(2L).throat(4L).maker(makerRepository.findByName("양촌감영농조합법인").get()).distributionPrice(BigDecimal.valueOf(15400.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("감그린 레귤러").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(12D).ingredient("감(국내산)").sweet(3L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("청도감와인(주)").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("감그린 스페셜").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(12D).ingredient("감(국내산)").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("청도감와인(주)").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("감그린 아이스와인").price(BigDecimal.valueOf(89000)).quantity(100L).alcohol(10D).ingredient("감(국내산)").sweet(4L).sour(2L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("청도감와인(주)").get()).distributionPrice(BigDecimal.valueOf(97900.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("감사").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(14D).ingredient("쌀(국내산 경기미 100%), 누룩, 정제수").sweet(2L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("술샘").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("감아락 25도").price(BigDecimal.valueOf(26000)).quantity(100L).alcohol(25D).ingredient("감증류원액, 쌀(국내산)").sweet(2L).sour(0L).cool(0L).body(2L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("(주)배상면주가").get()).distributionPrice(BigDecimal.valueOf(28600.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("감악산 머루주").price(BigDecimal.valueOf(28000)).quantity(100L).alcohol(12D).ingredient("국내산 산머루원액 78.5%, 주정").sweet(4L).sour(4L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("산머루농원영농조합법인").get()).distributionPrice(BigDecimal.valueOf(30800.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("감이슬").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(23D).ingredient("감(국내산) 100%").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(2L).throat(2L).maker(makerRepository.findByName("양촌감영농조합법인").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("감자술 13도").price(BigDecimal.valueOf(14000)).quantity(100L).alcohol(13D).ingredient("백미(국내산), 감자(국내산), 누룩, 효모, 정제수").sweet(3L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("오대서주양조").get()).distributionPrice(BigDecimal.valueOf(15400.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("감홍로 백자").price(BigDecimal.valueOf(75000)).quantity(100L).alcohol(40D).ingredient("쌀(70%), 조(30%), 7가지 약재(용안육, 계피, 진피, 정향, 생강, 감초, 지초)").sweet(3L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)감홍로").get()).distributionPrice(BigDecimal.valueOf(82500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("감홍로 청자").price(BigDecimal.valueOf(90000)).quantity(100L).alcohol(40D).ingredient("쌀(70%), 조(30%), 8가지 약재(용안육, 계피, 진피, 방품, 정향, 생각, 감초, 지초)").sweet(3L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)감홍로").get()).distributionPrice(BigDecimal.valueOf(99000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("강소주").price(BigDecimal.valueOf(11000)).quantity(100L).alcohol(50D).ingredient("국내산 쌀, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(4L).throat(2L).maker(makerRepository.findByName("내국양조").get()).distributionPrice(BigDecimal.valueOf(12100.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("강쇠").price(BigDecimal.valueOf(2500)).quantity(100L).alcohol(13D).ingredient("쌀, 누룩, 오가피").sweet(2L).sour(2L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(유)술소리").get()).distributionPrice(BigDecimal.valueOf(2750.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("걍즐겨").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(8D).ingredient("찹쌀(국내산), 멥살(국내산), 누룩, 석류, 히비스커스, 정제수").sweet(3L).sour(4L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("디오케이브루어리").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("겨울소주 25도").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(25D).ingredient("증류원액(국내산쌀), 효모, 효소, 정제수").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(4L).throat(3L).maker(makerRepository.findByName("두이술공방").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("경기전").price(BigDecimal.valueOf(27000)).quantity(100L).alcohol(5D).ingredient("보리(국내산), 맥아(국내산), 호프펠렛, 효모, 정제효소제, 정제수").sweet(2L).sour(3L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 동문거리양조장(주) (전주술로시티)").get()).distributionPrice(BigDecimal.valueOf(29700.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("계룡백일주 12년").price(BigDecimal.valueOf(150000)).quantity(100L).alcohol(40D).ingredient("찹쌀, 백미, 누룩, 재리종국화꽃, 오미자, 진달래, 재래종 솔잎").sweet(3L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("계룡백일주").get()).distributionPrice(BigDecimal.valueOf(165000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("계룡백일주 16도").price(BigDecimal.valueOf(37000)).quantity(100L).alcohol(16D).ingredient("찹쌀, 백미, 누룩, 재리종국화꽃, 오미자, 진달래, 재래종 솔잎").sweet(1L).sour(1L).cool(1L).body(5L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("계룡백일주").get()).distributionPrice(BigDecimal.valueOf(40700.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("계룡백일주 30도").price(BigDecimal.valueOf(40000)).quantity(100L).alcohol(30D).ingredient("찹쌀, 백미, 누룩, 재리종국화꽃, 오미자, 진달래, 재래종 솔잎").sweet(2L).sour(0L).cool(0L).body(3L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("계룡백일주").get()).distributionPrice(BigDecimal.valueOf(44000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("계룡백일주 40도").price(BigDecimal.valueOf(80000)).quantity(100L).alcohol(40D).ingredient("찹쌀, 백미, 누룩, 재리종국화꽃, 오미자, 진달래, 재래종 솔잎").sweet(3L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("계룡백일주").get()).distributionPrice(BigDecimal.valueOf(88000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("계룡산 산삼주 금수강산 21도").price(BigDecimal.valueOf(110000)).quantity(100L).alcohol(21D).ingredient("산양산삼, 정제주, 주정").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(2L).throat(2L).maker(makerRepository.findByName("농업회사법인 한국산삼(주)").get()).distributionPrice(BigDecimal.valueOf(121000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("계룡산 산삼주 금수강산 40도").price(BigDecimal.valueOf(150000)).quantity(100L).alcohol(40D).ingredient("산양산삼, 정제주, 주정").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(3L).maker(makerRepository.findByName("농업회사법인 한국산삼(주)").get()).distributionPrice(BigDecimal.valueOf(165000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("고구마 아락").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(40D).ingredient("보리, 고구마, 정제수").sweet(2L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("농업회사법인 배상면주가 고창LB").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("고도리 레드와인 스위트").price(BigDecimal.valueOf(22000)).quantity(100L).alcohol(12D).ingredient("MBA 머루포도(경북 영천)").sweet(3L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("고도리 와이너리").get()).distributionPrice(BigDecimal.valueOf(24200.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("고도리 복숭아와인").price(BigDecimal.valueOf(38000)).quantity(100L).alcohol(6.5D).ingredient("복숭아(경북 영천)").sweet(3L).sour(4L).cool(3L).body(3L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("고도리 와이너리").get()).distributionPrice(BigDecimal.valueOf(41800.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("고도리 화이트와인 드라이").price(BigDecimal.valueOf(22000)).quantity(100L).alcohol(10.5D).ingredient("거봉포도(경북 영천)").sweet(2L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("고도리 와이너리").get()).distributionPrice(BigDecimal.valueOf(24200.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("고도리 화이트와인 스위트").price(BigDecimal.valueOf(22000)).quantity(100L).alcohol(10.5D).ingredient("거봉포도(경북 영천)").sweet(4L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("고도리 와이너리").get()).distributionPrice(BigDecimal.valueOf(24200.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("고소리 술").price(BigDecimal.valueOf(45000)).quantity(100L).alcohol(40D).ingredient("쌀, 차조, 입국, 누룩, 효모, 효소, 정제수, 스테비올 배당체").sweet(2L).sour(0L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("제주샘영농조합법인").get()).distributionPrice(BigDecimal.valueOf(49500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("고소리술").price(BigDecimal.valueOf(32000)).quantity(100L).alcohol(40D).ingredient("쌀, 차조, 입국, 누룩, 효모, 효소, 정제수, 스테비올 배당체").sweet(1L).sour(1L).cool(1L).body(2L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("제주샘영농조합법인").get()).distributionPrice(BigDecimal.valueOf(35200.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("고운달 백자").price(BigDecimal.valueOf(360000)).quantity(100L).alcohol(52D).ingredient("오미자(문경산)").sweet(0L).sour(0L).cool(0L).body(5L).balance(0L).incense(3L).throat(4L).maker(makerRepository.findByName("농업회사법인(주)제이엘").get()).distributionPrice(BigDecimal.valueOf(396000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("고운달 오크").price(BigDecimal.valueOf(360000)).quantity(100L).alcohol(52D).ingredient("오미자(문경산)").sweet(0L).sour(0L).cool(0L).body(5L).balance(0L).incense(4L).throat(3L).maker(makerRepository.findByName("농업회사법인(주)제이엘").get()).distributionPrice(BigDecimal.valueOf(396000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("고창복분자주").price(BigDecimal.valueOf(2500)).quantity(100L).alcohol(15D).ingredient("복분자과실, 주정, 효모, 구연산, 정제수").sweet(3L).sour(1L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 고창선운산(유)").get()).distributionPrice(BigDecimal.valueOf(2750.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("고창선운산 땡큐블루베리주").price(BigDecimal.valueOf(60000)).quantity(100L).alcohol(13D).ingredient("블루베리과실, 주정, 효모, 구연산, 정제수").sweet(0L).sour(2L).cool(2L).body(2L).balance(2L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 고창선운산(유)").get()).distributionPrice(BigDecimal.valueOf(66000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("공주애 오디와인").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(15D).ingredient("국내산 오디, 정제수, 주정, 과당, 효모").sweet(0L).sour(3L).cool(2L).body(3L).balance(1L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 사곡양조원").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("구기홍주 14도").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(14D).ingredient("쌀, 국, 구기자추출액, 올리고당, 효모, 효소, 아세설팜칼륨, 정제수").sweet(0L).sour(3L).cool(1L).body(2L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("두이술공방").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("구름을 벗삼아").price(BigDecimal.valueOf(1500)).quantity(100L).alcohol(6D).ingredient("정제수, 찹쌀·백미(국내산햅쌀 100%), 입국 등").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("문경주조").get()).distributionPrice(BigDecimal.valueOf(1650.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("귀감").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(25D).ingredient("감귤과즙(제주산), 백설탕, 액상효모, 스테비올배당체, 무수아황산").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(2L).maker(makerRepository.findByName("농업회사법인(주)시트러스").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("그랑꼬또 M56").price(BigDecimal.valueOf(21000)).quantity(100L).alcohol(12D).ingredient("포도(캠벨얼리)").sweet(0L).sour(2L).cool(3L).body(1L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("그린영농조합법인").get()).distributionPrice(BigDecimal.valueOf(23100.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("그랑꼬또 M5610").price(BigDecimal.valueOf(56000)).quantity(100L).alcohol(10D).ingredient("포도(캠벨얼리)").sweet(0L).sour(4L).cool(3L).body(3L).balance(2L).incense(0L).throat(0L).maker(makerRepository.findByName("그린영농조합법인").get()).distributionPrice(BigDecimal.valueOf(61600.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("그랑꼬또 레드와인").price(BigDecimal.valueOf(35000)).quantity(100L).alcohol(12D).ingredient("포도(캠벨얼리)").sweet(3L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("그린영농조합법인").get()).distributionPrice(BigDecimal.valueOf(38500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("그랑꼬또 로제와인").price(BigDecimal.valueOf(21000)).quantity(100L).alcohol(12D).ingredient("포도(캠벨얼리)").sweet(0L).sour(2L).cool(3L).body(1L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("그린영농조합법인").get()).distributionPrice(BigDecimal.valueOf(23100.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("그랑꼬또 청수").price(BigDecimal.valueOf(73500)).quantity(100L).alcohol(12D).ingredient("포도(청수)").sweet(2L).sour(4L).cool(4L).body(3L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("그린영농조합법인").get()).distributionPrice(BigDecimal.valueOf(80850.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("그랑꼬또 화이트와인").price(BigDecimal.valueOf(40000)).quantity(100L).alcohol(12D).ingredient("포도(캠벨얼리)").sweet(0L).sour(3L).cool(3L).body(3L).balance(2L).incense(0L).throat(0L).maker(makerRepository.findByName("그린영농조합법인").get()).distributionPrice(BigDecimal.valueOf(44000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("그랑티 그르 S1974").price(BigDecimal.valueOf(40000)).quantity(100L).alcohol(12D).ingredient("포도(캠벨얼리 100%)").sweet(0L).sour(1L).cool(3L).body(2L).balance(2L).incense(0L).throat(0L).maker(makerRepository.findByName("월류원").get()).distributionPrice(BigDecimal.valueOf(44000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("그랑티그르CE2002").price(BigDecimal.valueOf(40000)).quantity(100L).alcohol(12D).ingredient("포도(캠벨얼리 100%)").sweet(0L).sour(3L).cool(2L).body(2L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("월류원 (오드린)").get()).distributionPrice(BigDecimal.valueOf(44000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("그랑티그르M1988").price(BigDecimal.valueOf(40000)).quantity(100L).alcohol(12D).ingredient("포도(캠벨얼리), 오미자").sweet(0L).sour(3L).cool(3L).body(2L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("월류원 (오드린)").get()).distributionPrice(BigDecimal.valueOf(44000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("금산인삼주").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(12.5D).ingredient("쌀, 인삼, 누룩, 정제수 등").sweet(0L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)금산인삼주").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("금정산성 막걸리").price(BigDecimal.valueOf(19000)).quantity(100L).alcohol(8D).ingredient("백미, 밀누룩, 정제수, 아스파탐").sweet(1L).sour(1L).cool(3L).body(2L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("(유)금정산성토산주").get()).distributionPrice(BigDecimal.valueOf(20900.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("기다림 16도").price(BigDecimal.valueOf(11000)).quantity(100L).alcohol(9D).ingredient("찹쌀(국내산), 흑미(국내산), 곡자(밀누룩 국내산), 정제수").sweet(2L).sour(2L).cool(4L).body(2L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)제이케이크래프트").get()).distributionPrice(BigDecimal.valueOf(12100.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("기다림 25도").price(BigDecimal.valueOf(9900)).quantity(100L).alcohol(8D).ingredient("백미(국내산), 찹쌀(국내산), 곡자(밀누룩 국내산), 정제수").sweet(2L).sour(2L).cool(4L).body(2L).balance(2L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)제이케이크래프트").get()).distributionPrice(BigDecimal.valueOf(10890.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("기다림 34도").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(12D).ingredient("멥쌀(국내산), 찹쌀(국내산), 곡자(밀누룩 국내산), 정제수").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)제이케이크래프트").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("기다림 맑은술").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(15D).ingredient("멥쌀(국내산), 찹쌀(국내산), 곡자(밀누룩 국내산), 정제수").sweet(4L).sour(4L).cool(3L).body(3L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)제이케이크래프트").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("김천 과하주 23도").price(BigDecimal.valueOf(22000)).quantity(100L).alcohol(23D).ingredient("멥쌀, 누룩, 샘물, 황국잎").sweet(1L).sour(0L).cool(0L).body(2L).balance(0L).incense(1L).throat(0L).maker(makerRepository.findByName("김천 과하주").get()).distributionPrice(BigDecimal.valueOf(24200.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("김천과하주 16도").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(16D).ingredient("찹쌀, 누룩, 샘물, 황국잎").sweet(1L).sour(1L).cool(2L).body(1L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("김천 과하주").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("김포 막걸리").price(BigDecimal.valueOf(1200)).quantity(100L).alcohol(6D).ingredient("쌀, 누룩, 정제수").sweet(0L).sour(2L).cool(2L).body(3L).balance(1L).incense(0L).throat(0L).maker(makerRepository.findByName("김포양조").get()).distributionPrice(BigDecimal.valueOf(1320.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("김포별주").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(13D).ingredient("쌀, 옥수수 전분, 국, 효모, 젖산, 효소제, 정제수").sweet(0L).sour(3L).cool(1L).body(1L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("김포양조").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("김포약주").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(11D).ingredient("옥수수 전분, 밀, 국, 효모, 젖산, 효소제, 정제수").sweet(0L).sour(1L).cool(2L).body(1L).balance(2L).incense(0L).throat(0L).maker(makerRepository.findByName("김포양조").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("김포예주 프리미엄").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(13D).ingredient("국내산 쌀, 국, 효모, 젖산, 정제수").sweet(2L).sour(2L).cool(1L).body(1L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("김포양조").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("김포특주").price(BigDecimal.valueOf(3000)).quantity(100L).alcohol(15D).ingredient("국내산 쌀, 효모, 정제효소, 정제수, 프락토올리고당").sweet(0L).sour(4L).cool(4L).body(2L).balance(2L).incense(0L).throat(0L).maker(makerRepository.findByName("김포금쌀탁주영농조합법인").get()).distributionPrice(BigDecimal.valueOf(3300.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("까메오 막걸리").price(BigDecimal.valueOf(5000)).quantity(100L).alcohol(6D).ingredient("정제수(지장수), 쌀, 효모, 누룩, 과당 등").sweet(3L).sour(1L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("낙천").get()).distributionPrice(BigDecimal.valueOf(5500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("나루 생막걸리 11.5도").price(BigDecimal.valueOf(11000)).quantity(100L).alcohol(11.5D).ingredient("쌀(국내산), 국, 효모, 정제수").sweet(4L).sour(1L).cool(1L).body(5L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("한강주조").get()).distributionPrice(BigDecimal.valueOf(12100.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("나루 생막걸리 6도").price(BigDecimal.valueOf(7000)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 국, 효모, 정제수").sweet(3L).sour(3L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("한강주조").get()).distributionPrice(BigDecimal.valueOf(7700.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("남산애 레드와인").price(BigDecimal.valueOf(45000)).quantity(100L).alcohol(14D).ingredient("포도(캠벨얼리, MBA, 산머루)").sweet(3L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("예인화원").get()).distributionPrice(BigDecimal.valueOf(49500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("남산애 포트와인").price(BigDecimal.valueOf(55000)).quantity(100L).alcohol(18.5D).ingredient("포도(캠벨얼리, MBA, 산머루)").sweet(3L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("예인화원").get()).distributionPrice(BigDecimal.valueOf(60500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("내장산 복분자주 지통1호").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(16D).ingredient("복분자, 주정, 정제수, 설탕 등").sweet(1L).sour(3L).cool(2L).body(0L).balance(0L).incense(0L).throat(3L).maker(makerRepository.findByName("내장산 복분자 영농조합").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("녹고의눈물").price(BigDecimal.valueOf(23000)).quantity(100L).alcohol(16D).ingredient("섬오가피").sweet(2L).sour(0L).cool(0L).body(3L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)토향").get()).distributionPrice(BigDecimal.valueOf(25300.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("녹파주").price(BigDecimal.valueOf(35000)).quantity(100L).alcohol(15D).ingredient("국내산 찹쌀, 멥쌀, 누룩, 정제수").sweet(3L).sour(2L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)솔송주").get()).distributionPrice(BigDecimal.valueOf(38500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("뉴트로").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(8D).ingredient("찹쌀(국내산), 멥살(국내산), 누룩, 레몬, 라임, 잉글리쉬블랙퍼스트, 정제수").sweet(4L).sour(4L).cool(4L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("디오케이브루어리").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("느낌 19.8도").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(19.8D).ingredient("백미(국내산), 누룩, 효모, 정제수").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(2L).throat(2L).maker(makerRepository.findByName("농업회사법인 명품안동소주 (주)").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("느낌 30도").price(BigDecimal.valueOf(6500)).quantity(100L).alcohol(30D).ingredient("백미(국내산), 누룩, 효모, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(3L).maker(makerRepository.findByName("농업회사법인 명품안동소주 (주)").get()).distributionPrice(BigDecimal.valueOf(7150.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("느린마을 막걸리").price(BigDecimal.valueOf(3600)).quantity(100L).alcohol(6D).ingredient("쌀, 국, 효모, 정제수").sweet(3L).sour(2L).cool(2L).body(4L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("배상면주가 포천LB").get()).distributionPrice(BigDecimal.valueOf(3960.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("능이주").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(13D).ingredient("국내산 쌀, 능이농충액, 누룩, 정제수").sweet(1L).sour(3L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("내국양조").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("니모메").price(BigDecimal.valueOf(33000)).quantity(100L).alcohol(11D).ingredient("백미, 누룩, 감귤 진피, 효모").sweet(3L).sour(3L).cool(1L).body(3L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("제주샘영농조합법인").get()).distributionPrice(BigDecimal.valueOf(36300.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("다래와인 3004").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(8D).ingredient("참다래").sweet(2L).sour(2L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("영농조합법인 오름주가").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("다래와인 7004D").price(BigDecimal.valueOf(28000)).quantity(100L).alcohol(12D).ingredient("참다래").sweet(1L).sour(4L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("영농조합법인 오름주가").get()).distributionPrice(BigDecimal.valueOf(30800.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("다래와인 7004S").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(8D).ingredient("참다래").sweet(2L).sour(2L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("영농조합법인 오름주가").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("다랭이팜 생 막걸리 (백미)").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(6D).ingredient("쌀, 7분도 유기농 현미, 누룩, 효모 등").sweet(1L).sour(4L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("다랭이팜").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("다랭이팜 생 막걸리 (흑미)").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(6D).ingredient("남해산 유기농 현미, 누룩, 효모 등").sweet(1L).sour(5L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("다랭이팜").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("다랭이팜 유자 막걸리").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(6D).ingredient("남해산 유기농 유자원액, 누룩, 효모 등").sweet(1L).sour(5L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("다랭이팜").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("담솔 40도").price(BigDecimal.valueOf(22000)).quantity(100L).alcohol(40D).ingredient("정제수, 국내산 쌀, 국내산 송순농축액(송순 33%, 정제수 67%)5.24%, 누룩, 조제종국, 효모").sweet(3L).sour(0L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("명가원영농조합법인").get()).distributionPrice(BigDecimal.valueOf(24200.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("담양죽력고").price(BigDecimal.valueOf(13000)).quantity(100L).alcohol(25D).ingredient("정제수, 쌀(국내산), 누룩, 죽력, 계피, 석창포, 생강, 효모").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(4L).throat(0L).maker(makerRepository.findByName("추성고을").get()).distributionPrice(BigDecimal.valueOf(14300.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("담은").price(BigDecimal.valueOf(33000)).quantity(100L).alcohol(6.5D).ingredient("쌀(국내산), 입국, 효모, 고과당, 정제효소제, 정제수").sweet(4L).sour(2L).cool(1L).body(2L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)1932 포천일동막걸리").get()).distributionPrice(BigDecimal.valueOf(36300.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("담향 대대포 블루").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(6D).ingredient("백미(국내산, 무기농 무농약), 벌꿀(국내산), 정제수").sweet(3L).sour(2L).cool(2L).body(2L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)죽향도가").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("당당하리").price(BigDecimal.valueOf(16000)).quantity(100L).alcohol(15D).ingredient("쌀(국산), 홍마늘(국산), 감초(국산), 개량누룩(국산), 효모, 정제효소제, 정제수, 복분자(국산), 설탕, 올리고당, DL-사과산, 구연산, 무수아황산, 이산화항, 밀 함유").sweet(4L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)세찬 제조사").get()).distributionPrice(BigDecimal.valueOf(17600.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("대관령 복분자주").price(BigDecimal.valueOf(13000)).quantity(100L).alcohol(16D).ingredient("국내산 복분자").sweet(1L).sour(2L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)홍지원").get()).distributionPrice(BigDecimal.valueOf(14300.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("대윤 가야곡 왕주").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(13D).ingredient("쌀, 누룩, 효모, 물엿, 정제수").sweet(2L).sour(2L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 대윤가야곡주조(주)").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("대잎 생동동주").price(BigDecimal.valueOf(2500)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 좁쌀, 정제효소, 젖산, 효모, 아스파탐, 영지, 생각, 정제수").sweet(1L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)죽향도가").get()).distributionPrice(BigDecimal.valueOf(2750.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("대작 생막걸리").price(BigDecimal.valueOf(2000)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 조제종국 효모, 정제효소, 올리고당, 스테비텐후레쉬(천영감미료), 정제수").sweet(4L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("대작영농조합법인").get()).distributionPrice(BigDecimal.valueOf(2200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("대통대잎술 십오야").price(BigDecimal.valueOf(16000)).quantity(100L).alcohol(15D).ingredient("쌀, 누룩, 갈근, 구기자, 솔잎, 진피 등").sweet(1L).sour(1L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("추성고을").get()).distributionPrice(BigDecimal.valueOf(17600.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("도구 막걸리").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(6D).ingredient("밀(외국산), 쌀(국내산, 외국산), 물엿, 효모, 조제종국, 정제효소제, 아스파탐, 젖산").sweet(2L).sour(2L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("동해명주").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("도깨비술 11도").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(11D).ingredient("멥쌀(국내산), 누룩, 효모, 정제수").sweet(4L).sour(4L).cool(3L).body(5L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)도깨비양조장").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("도깨비술 7도").price(BigDecimal.valueOf(8000)).quantity(100L).alcohol(7D).ingredient("멥쌀(국내산), 누룩, 효모, 정제수").sweet(3L).sour(3L).cool(4L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)도깨비양조장").get()).distributionPrice(BigDecimal.valueOf(8800.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("도깨비술 9도").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(9D).ingredient("멥쌀(국내산), 누룩, 효모, 정제수").sweet(3L).sour(3L).cool(3L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)도깨비양조장").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("도로시 머루주").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(12D).ingredient("국내산 산머루원액 78.5%, 주정").sweet(4L).sour(4L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("산머루농원영농조합법인").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("도문대작 생막걸리").price(BigDecimal.valueOf(3000)).quantity(100L).alcohol(10D).ingredient("강릉 쌀, 누룩, 갯방풍나물, 정제수").sweet(1L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("방풍도가").get()).distributionPrice(BigDecimal.valueOf(3300.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("독산 53도").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(53D).ingredient("쌀(국내산), 국, 효모, 정제수").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(2L).throat(5L).maker(makerRepository.findByName("농업회사법인 오산양조(주)").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("동강더덕주").price(BigDecimal.valueOf(3500)).quantity(100L).alcohol(20D).ingredient("더덕, 대추구기자, 감초, 원지").sweet(3L).sour(0L).cool(0L).body(2L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("영월더덕영농조합법인").get()).distributionPrice(BigDecimal.valueOf(3850.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("동몽").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(17D).ingredient("홍천 쌀, 정제수, 단호박, 국(밀 누룩)").sweet(2L).sour(3L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("예술").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("동정춘").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(8D).ingredient("쌀, 누국, 정제수").sweet(4L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)산수").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("동학 1957").price(BigDecimal.valueOf(3500)).quantity(100L).alcohol(13D).ingredient("쌀(국내산), 구연산, 효모, 젖산, 정제효소제, 국, 주정, 정제수").sweet(3L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("고헌정영농조합법인").get()).distributionPrice(BigDecimal.valueOf(3850.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("동해 동동주").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(6D).ingredient("쌀(국내산, 외국산), 물엿, 효모, 조제종국, 정제효소제, 아스파탐, 젖산").sweet(2L).sour(1L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("동해명주").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("두레앙 22도").price(BigDecimal.valueOf(5000)).quantity(100L).alcohol(22D).ingredient("거봉포도원액").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(1L).throat(2L).maker(makerRepository.findByName("농업회사법인 (주)두레양조").get()).distributionPrice(BigDecimal.valueOf(5500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("두레앙 브랜디").price(BigDecimal.valueOf(70000)).quantity(100L).alcohol(35D).ingredient("거봉포도원액").sweet(3L).sour(0L).cool(0L).body(3L).balance(0L).incense(4L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)두레양조").get()).distributionPrice(BigDecimal.valueOf(77000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("두레앙 와인").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(12D).ingredient("거봉포도원액").sweet(2L).sour(2L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)두레양조").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("두레앙 증류주").price(BigDecimal.valueOf(35000)).quantity(100L).alcohol(35D).ingredient("거봉포도원액").sweet(2L).sour(0L).cool(0L).body(2L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)두레양조").get()).distributionPrice(BigDecimal.valueOf(38500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("두리향").price(BigDecimal.valueOf(36000)).quantity(100L).alcohol(43D).ingredient("국내산 찹쌀, 누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(3L).maker(makerRepository.findByName("케이소주 (전주가양주연구소)").get()).distributionPrice(BigDecimal.valueOf(39600.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("두유노").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(6D).ingredient("찹쌀(국내산), 멥살(국내산), 누룩, 밀가루").sweet(2L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("디오케이브루어리").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("라이스퐁당 13도").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(13D).ingredient("찹쌀(국내산), 누룩, 정제수(음양곽, 감초)").sweet(3L).sour(2L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)벗드림").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("라이스퐁당 17도").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(17D).ingredient("찹쌀(국내산), 누룩, 정제수(음양곽, 감초)").sweet(3L).sour(3L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)벗드림").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("레돔 내추럴 스파클링 로제와인").price(BigDecimal.valueOf(38000)).quantity(100L).alcohol(7.5D).ingredient("포도(99.99%)").sweet(3L).sour(3L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 작은알자스").get()).distributionPrice(BigDecimal.valueOf(41800.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("레돔 시드르").price(BigDecimal.valueOf(32000)).quantity(100L).alcohol(6D).ingredient("사과(100%)").sweet(3L).sour(3L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 작은알자스").get()).distributionPrice(BigDecimal.valueOf(35200.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("려(驪)고구마증류소주 25도").price(BigDecimal.valueOf(0)).quantity(100L).alcohol(25D).ingredient("고구마(여주산 100%)").sweet(1L).sour(0L).cool(0L).body(3L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("(농)국순당 여주명주(주)").get()).distributionPrice(BigDecimal.valueOf(0.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("려(驪)고구마증류소주 40도").price(BigDecimal.valueOf(0)).quantity(100L).alcohol(40D).ingredient("고구마(여주산 100%)").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(2L).throat(2L).maker(makerRepository.findByName("(농)국순당 여주명주(주)").get()).distributionPrice(BigDecimal.valueOf(0.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("려(驪)증류소주 25도").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(25D).ingredient("고구마(여주산 100%), 쌀(여주산 100%)").sweet(0L).sour(0L).cool(0L).body(1L).balance(0L).incense(3L).throat(1L).maker(makerRepository.findByName("(농)국순당 여주명주(주)").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("로얄 안동소주 18년").price(BigDecimal.valueOf(72000)).quantity(100L).alcohol(45D).ingredient("국내산 쌀, 입국").sweet(3L).sour(0L).cool(0L).body(4L).balance(0L).incense(1L).throat(0L).maker(makerRepository.findByName("농업회사법인 유토피아(주)").get()).distributionPrice(BigDecimal.valueOf(79200.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("르깔롱").price(BigDecimal.valueOf(35000)).quantity(100L).alcohol(16D).ingredient("정제수, 주정, 고과당, 죽력, 메론후레바, 레이지라임, 코코넛향, 윌튼스카이아이싱칼라").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(4L).throat(4L).maker(makerRepository.findByName("추성고을").get()).distributionPrice(BigDecimal.valueOf(38500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("마셔블랑").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("감귤과즙(한라봉), 백설탕, 액상효모, 무수아황산").sweet(3L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)시트러스").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("마주 소곡주").price(BigDecimal.valueOf(17000)).quantity(100L).alcohol(16D).ingredient("찹쌀(국내산), 백미(국내산), 모싯잎, 우리밀 누룩, 정제수, 효모").sweet(4L).sour(3L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("옥순가 소곡주 마주").get()).distributionPrice(BigDecimal.valueOf(18700.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("마주 소화곡주").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(41D).ingredient("찹쌀(국내산), 백미(국내산), 모싯잎, 우리밀 누룩, 정제수, 홍고추").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(3L).maker(makerRepository.findByName("옥순가 소곡주 마주").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("막시모40").price(BigDecimal.valueOf(49000)).quantity(100L).alcohol(40D).ingredient("오미자(국내산)증류원액, 오미자(국내산)원액, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(4L).throat(3L).maker(makerRepository.findByName("농업회사법인(주)착한농부").get()).distributionPrice(BigDecimal.valueOf(53900.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("만강에 비친 달").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(10D).ingredient("홍천 쌀, 정제수, 단호박, 곡자(밀 누룩)").sweet(2L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("예술").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("맑은 문희주").price(BigDecimal.valueOf(36000)).quantity(100L).alcohol(13D).ingredient("유기농찹쌀 (국산), 멥쌀 (국산), 전통누룩 (우리 밀), 정제수").sweet(3L).sour(1L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("문경주조").get()).distributionPrice(BigDecimal.valueOf(39600.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("맑은내일 WINery 단감명작").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(7D).ingredient("단감(국내산_창녕), 정제수, 설탕, 효소제, 무수구연산, 효모, 무수아황산(산아방지제), 소브산(보존료)").sweet(3L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 우포의아침 주식회사").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("맑은내일 발효막걸리").price(BigDecimal.valueOf(2200)).quantity(100L).alcohol(7D).ingredient("쌀(국내산), 누룩, 효소, 아스파탐, 정제수").sweet(3L).sour(3L).cool(3L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 우포의아침(주)").get()).distributionPrice(BigDecimal.valueOf(2420.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("맑은내일 우포").price(BigDecimal.valueOf(5000)).quantity(100L).alcohol(12D).ingredient("쌀(국내산), 옥수수전분, 효모, 누룩, 양파, 정제수").sweet(3L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 우포의아침(주)").get()).distributionPrice(BigDecimal.valueOf(5500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("맑은술 해밀").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(15D).ingredient("쌀, 누룩, 정제수").sweet(3L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("내변산양조장").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("매실 막걸리").price(BigDecimal.valueOf(3500)).quantity(100L).alcohol(7D).ingredient("쌀, 매실과즙").sweet(3L).sour(2L).cool(1L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)백운주가").get()).distributionPrice(BigDecimal.valueOf(3850.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("매실원주 15도").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(15D).ingredient("매실주원액, 발효주정, 정제수, 꿀").sweet(3L).sour(0L).cool(0L).body(3L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("더한주류").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("매실향기 담은 술").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(14D).ingredient("국내산 쌀, 효모, 조효소재, 물엿, 아스파탐, 정제수").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 명세주가(주)").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("머루 이야기").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(12D).ingredient("국내산 산머루").sweet(3L).sour(1L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인산들벗(주)").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("머르드 서 드라이").price(BigDecimal.valueOf(35000)).quantity(100L).alcohol(13.5D).ingredient("국내산 산머루 100%").sweet(2L).sour(4L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("산머루농원영농조합법인").get()).distributionPrice(BigDecimal.valueOf(38500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("머르드 서 스위트").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(12D).ingredient("국내산 산머루 100%").sweet(4L).sour(3L).cool(3L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("산머루농원영농조합법인").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("메로니아").price(BigDecimal.valueOf(2000)).quantity(100L).alcohol(4D).ingredient("쌀, 국, 효모, 젖산, 멜론 향, 물엿 등").sweet(4L).sour(1L).cool(5L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("배혜정 도가").get()).distributionPrice(BigDecimal.valueOf(2200.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("메밀로").price(BigDecimal.valueOf(150000)).quantity(100L).alcohol(45D).ingredient("국내산쌀, 메밀, 누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(3L).maker(makerRepository.findByName("농업회사법인 두루(주)").get()).distributionPrice(BigDecimal.valueOf(165000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("면천두견주").price(BigDecimal.valueOf(32000)).quantity(100L).alcohol(18D).ingredient("국내산 찹쌀, 누룩, 진달래꽃").sweet(3L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)면천두견주").get()).distributionPrice(BigDecimal.valueOf(35200.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("명가원 복분자술").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(16D).ingredient("복분자 37.65%, 주정, 정제수, 구연산, 호박산, 정제식염, 액상과당, 효모, 설탕").sweet(3L).sour(1L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("명가원영농조합법인").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("명술").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(20D).ingredient("산양산삼, 정제주, 주정").sweet(2L).sour(0L).cool(0L).body(3L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("대농바이오우리산삼").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("명인 홍삼주").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(12.5D).ingredient("쌀, 홍삼, 누룩, 정제수 등").sweet(1L).sour(3L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)금산인삼주").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("명작복분자").price(BigDecimal.valueOf(78000)).quantity(100L).alcohol(13D).ingredient("복분자, 효모, 주정, 정제수, 과당, 구연산").sweet(3L).sour(1L).cool(1L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(농)국순당고창명주(주)").get()).distributionPrice(BigDecimal.valueOf(85800.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("명품 진도홍주").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(38D).ingredient("쌀, 보리, 누룩, 지초, 정제수").sweet(3L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("대대로영농조합법인").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("모월 로").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(25D).ingredient("쌀(국내산), 누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(3L).throat(2L).maker(makerRepository.findByName("협동조합 주담").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("모월 연").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(13D).ingredient("쌀(국내산), 누룩, 정제수").sweet(1L).sour(3L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("협동조합 주담").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("모월 인").price(BigDecimal.valueOf(40000)).quantity(100L).alcohol(41D).ingredient("쌀(국내산), 누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(4L).throat(3L).maker(makerRepository.findByName("협동조합 주담").get()).distributionPrice(BigDecimal.valueOf(44000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("모월 청").price(BigDecimal.valueOf(21000)).quantity(100L).alcohol(16D).ingredient("쌀(국내산), 누룩, 정제수").sweet(1L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("협동조합 주담").get()).distributionPrice(BigDecimal.valueOf(23100.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("모을동주 소주").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(43D).ingredient("쌀(국내산), 조제종국 효모, 정제효소, 정제수").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(4L).maker(makerRepository.findByName("대작영농조합법인").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("모을동주 약주").price(BigDecimal.valueOf(13000)).quantity(100L).alcohol(13D).ingredient("쌀(국내산), 조제종국 효모, 정제효소, 정제수").sweet(4L).sour(3L).cool(3L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("대작영농조합법인").get()).distributionPrice(BigDecimal.valueOf(14300.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("무주 구천동 머루와인").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(12D).ingredient("국내산 산머루").sweet(2L).sour(2L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("덕유양조").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("무주 구천동 산머루주").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(16D).ingredient("국내산 산머루").sweet(2L).sour(2L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("덕유양조").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("문경바람 백자 25도").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(25D).ingredient("사과(문경산)").sweet(2L).sour(1L).cool(1L).body(3L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)제이엘").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("문경바람 백자 40도").price(BigDecimal.valueOf(40000)).quantity(100L).alcohol(40D).ingredient("사과(문경산)").sweet(4L).sour(2L).cool(1L).body(3L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)제이엘").get()).distributionPrice(BigDecimal.valueOf(44000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("문경바람 오크 40도").price(BigDecimal.valueOf(44000)).quantity(100L).alcohol(40D).ingredient("사과(문경산)").sweet(2L).sour(1L).cool(1L).body(4L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)제이엘").get()).distributionPrice(BigDecimal.valueOf(48400.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("문배술 헤리티지 23도").price(BigDecimal.valueOf(50000)).quantity(100L).alcohol(23D).ingredient("메조, 찰수수, 쌀").sweet(1L).sour(0L).cool(0L).body(1L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("문배주양조원").get()).distributionPrice(BigDecimal.valueOf(55000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("문배술 헤리티지 40도").price(BigDecimal.valueOf(48000)).quantity(100L).alcohol(40D).ingredient("메조, 찰수수, 쌀").sweet(2L).sour(0L).cool(0L).body(3L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("문배주양조원").get()).distributionPrice(BigDecimal.valueOf(52800.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("문배술헤리티지25").price(BigDecimal.valueOf(55000)).quantity(100L).alcohol(25D).ingredient("메조, 찰수수, 쌀").sweet(1L).sour(0L).cool(0L).body(1L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("문배주양조원").get()).distributionPrice(BigDecimal.valueOf(60500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("문경오미자 수제 전통주").price(BigDecimal.valueOf(21000)).quantity(100L).alcohol(12D).ingredient("햇찹쌀 100%(국내산), 전통누룩, 오미자(문경동로산)").sweet(3L).sour(1L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("문경주조 (전통술 체험관)").get()).distributionPrice(BigDecimal.valueOf(23100.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("햇찹쌀 수제 전통주").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(13D).ingredient("유기농찹쌀 (국산), 멥쌀 (국산), 전통누룩 (우리 밀), 정제수").sweet(3L).sour(1L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("문경주조").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("미르25").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(25D).ingredient("쌀(국내산 경기미 100%), 누룩, 정제수").sweet(2L).sour(0L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("술샘").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("미르40").price(BigDecimal.valueOf(23000)).quantity(100L).alcohol(40D).ingredient("쌀(국내산 경기미 100%), 누룩, 정제수").sweet(1L).sour(0L).cool(0L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("술샘").get()).distributionPrice(BigDecimal.valueOf(25300.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("미생 막걸리").price(BigDecimal.valueOf(1100)).quantity(100L).alcohol(6D).ingredient("국내산 쌀, 누룩, 효모, 정제효소, 정제수").sweet(2L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("김포금쌀탁주영농조합법인").get()).distributionPrice(BigDecimal.valueOf(1210.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("미소 생막걸리").price(BigDecimal.valueOf(1500)).quantity(100L).alcohol(7D).ingredient("쌀(국내산), 누룩, 정제수").sweet(3L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("울진술도가").get()).distributionPrice(BigDecimal.valueOf(1650.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("미소 아이스").price(BigDecimal.valueOf(40000)).quantity(100L).alcohol(12D).ingredient("포도, 산화방지제, 효모 등").sweet(4L).sour(1L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("도란원").get()).distributionPrice(BigDecimal.valueOf(44000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("미인약주").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(15D).ingredient("찹쌀, 누룩, 정제수").sweet(4L).sour(1L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("최행숙 전통주가").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("미인탁주").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(10D).ingredient("찹쌀, 누룩, 정제수").sweet(3L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("최행숙 전통주가").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("민속주 안동소주").price(BigDecimal.valueOf(28000)).quantity(100L).alcohol(45D).ingredient("쌀(국내산), 누룩, 정제수").sweet(1L).sour(0L).cool(0L).body(4L).balance(0L).incense(1L).throat(0L).maker(makerRepository.findByName("민속주안동소주").get()).distributionPrice(BigDecimal.valueOf(30800.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("민속주안동소주").price(BigDecimal.valueOf(28000)).quantity(100L).alcohol(45D).ingredient("쌀(국내산), 누룩, 정제수").sweet(1L).sour(0L).cool(0L).body(4L).balance(0L).incense(1L).throat(0L).maker(makerRepository.findByName("민속주안동소주").get()).distributionPrice(BigDecimal.valueOf(30800.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("바나나 주").price(BigDecimal.valueOf(1700)).quantity(100L).alcohol(4D).ingredient("쌀, 국 , 정제수, 바나나 농축액, 조제종국, 효모, 물엿 등").sweet(3L).sour(1L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("조은술 세종").get()).distributionPrice(BigDecimal.valueOf(1870.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("바랑 탁").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(15D).ingredient("찹쌀(국내산), 맵쌀(국내산), 누룩, 소맥분, 정제수").sweet(4L).sour(2L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)금계당").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("밤꽃향기").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(13.5D).ingredient("국내산 쌀, 밤, 누룩, 정제수").sweet(5L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 사곡양조원").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("방문주 약주").price(BigDecimal.valueOf(7000)).quantity(100L).alcohol(15D).ingredient("국내산 찹쌀, 누룩, 정제수").sweet(2L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("케이소주 (전주가양주연구소)").get()).distributionPrice(BigDecimal.valueOf(7700.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("방문주 탁주").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(15D).ingredient("국내산 찹쌀, 누룩, 정제수").sweet(2L).sour(3L).cool(3L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("케이소주 (전주가양주연구소)").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("배꽃담은 연 생막걸리").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(10D).ingredient("국내산 쌀, 누룩, 효모, 젖산, 연잎, 정제수").sweet(3L).sour(3L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)농업회사법인 술빚는 전가네").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("배도가 로아 19 레드").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(19D).ingredient("사과(국내산)").sweet(4L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("주식회사 배혜정 농업회사법인").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("배도가 로아 40도 옐로우").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(40D).ingredient("쌀(국산), 배(국산)").sweet(2L).sour(0L).cool(0L).body(3L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("배혜정 도가").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("백년향").price(BigDecimal.valueOf(33000)).quantity(100L).alcohol(10D).ingredient("국내산 쌀, 누룩, 정제수").sweet(3L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)농업회사법인 추연당").get()).distributionPrice(BigDecimal.valueOf(36300.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("백련 맑은술").price(BigDecimal.valueOf(7000)).quantity(100L).alcohol(12D).ingredient("백미, 정제수, 물엿, 과당, 누룩, 백련잎, 누룩 등").sweet(2L).sour(2L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("신평양조장").get()).distributionPrice(BigDecimal.valueOf(7700.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("백련 생막걸리 Misty").price(BigDecimal.valueOf(3000)).quantity(100L).alcohol(7D).ingredient("백미, 정제수, 물엿, 과당, 누룩, 백련잎, 누룩 등").sweet(2L).sour(3L).cool(4L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("신평양조장").get()).distributionPrice(BigDecimal.valueOf(3300.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("백련 생막걸리 snow").price(BigDecimal.valueOf(1600)).quantity(100L).alcohol(6D).ingredient("백미, 연잎, 정제수, 종국, 효모, 아스파탐, 물엿 등").sweet(2L).sour(2L).cool(4L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("신평양조장").get()).distributionPrice(BigDecimal.valueOf(1760.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("백운 복분자 와인").price(BigDecimal.valueOf(7000)).quantity(100L).alcohol(11D).ingredient("쌀, 토종 복분자과즙").sweet(2L).sour(2L).cool(1L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)백운주가").get()).distributionPrice(BigDecimal.valueOf(7700.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("백운 복분자주").price(BigDecimal.valueOf(7000)).quantity(100L).alcohol(13D).ingredient("쌀, 토종 복분자과즙").sweet(3L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)백운주가").get()).distributionPrice(BigDecimal.valueOf(7700.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("백이주").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(35D).ingredient("쌀(국산), 홍마늘액(국산), 감초(국산), 개량누룩(국산), 효모, 정제효소제, 정제수, 밀함유").sweet(2L).sour(2L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)세찬 제조사").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("백자주").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(10D).ingredient("국내산 찹쌀, 멥쌀, 잣, 누룩, 정제수").sweet(3L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)산수").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("뱅꼬레레드").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(12D).ingredient("양조용포도(경북 영천)").sweet(3L).sour(4L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)한국와인").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("뱅꼬레로제").price(BigDecimal.valueOf(23000)).quantity(100L).alcohol(11.5D).ingredient("양조용포도(경북 영천)").sweet(4L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)한국와인").get()).distributionPrice(BigDecimal.valueOf(25300.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("뱅꼬레아이스").price(BigDecimal.valueOf(90000)).quantity(100L).alcohol(12D).ingredient("양조용포도(경북 영천)").sweet(5L).sour(2L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)한국와인").get()).distributionPrice(BigDecimal.valueOf(99000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("뱅꼬레화이트").price(BigDecimal.valueOf(23000)).quantity(100L).alcohol(11D).ingredient("양조용포도(경북 영천)").sweet(4L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)한국와인").get()).distributionPrice(BigDecimal.valueOf(25300.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("베베마루 캠벨로제 스위트").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(10D).ingredient("포도(캠벨얼리 100%)").sweet(2L).sour(2L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("월류원").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("베베마루 캠벨로제").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("포도(캠벨얼리 100%)").sweet(3L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("월류원").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("별바랑").price(BigDecimal.valueOf(27000)).quantity(100L).alcohol(17.5D).ingredient("찹쌀(국내산), 맵쌀(국내산), 누룩(1%), 정제수").sweet(4L).sour(2L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)금계당").get()).distributionPrice(BigDecimal.valueOf(29700.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("병영설성 동동주").price(BigDecimal.valueOf(2500)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 전분, 효모, 누룩, 정제수").sweet(2L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("병영양조장").get()).distributionPrice(BigDecimal.valueOf(2750.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("병영설성 생막걸리").price(BigDecimal.valueOf(3500)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 효모, 누룩, 정제수").sweet(3L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("병영양조장").get()).distributionPrice(BigDecimal.valueOf(3850.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("병영설성사또").price(BigDecimal.valueOf(40000)).quantity(100L).alcohol(40D).ingredient("쌀(국내산), 효모, 누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(4L).throat(3L).maker(makerRepository.findByName("병영양조장").get()).distributionPrice(BigDecimal.valueOf(44000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("병영소주").price(BigDecimal.valueOf(59400)).quantity(100L).alcohol(40D).ingredient("정제수, 보리증류식 소주원액(보리 : 국내산)").sweet(3L).sour(0L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("병영주조장").get()).distributionPrice(BigDecimal.valueOf(65340.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("복분자 아락").price(BigDecimal.valueOf(40000)).quantity(100L).alcohol(40D).ingredient("복분자증류원액(국내산), 정제수").sweet(2L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("농업회사법인 배상면주가 고창LB").get()).distributionPrice(BigDecimal.valueOf(44000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("복분자음").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(12D).ingredient("복분자(국내산), 정제수").sweet(2L).sour(2L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 배상면주가 고창LB").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("복분자주 360").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(16D).ingredient("복분자, 주정, 정제수, 설탕 등").sweet(1L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("내장산 복분자 영농조합").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("복순도가 손 막걸리").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(6.5D).ingredient("복순도가").sweet(2L).sour(3L).cool(5L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("김정식").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("볼빨간막걸리 10").price(BigDecimal.valueOf(7000)).quantity(100L).alcohol(10D).ingredient("찹쌀(국내산), 누룩, 정제수").sweet(1L).sour(5L).cool(4L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)벗드림").get()).distributionPrice(BigDecimal.valueOf(7700.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("볼빨간막걸리 7").price(BigDecimal.valueOf(5000)).quantity(100L).alcohol(7D).ingredient("찹쌀(국내산), 누룩, 정제수").sweet(1L).sour(4L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)벗드림").get()).distributionPrice(BigDecimal.valueOf(5500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("봉하쌀 생막걸리").price(BigDecimal.valueOf(2000)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 정제효소, 젖산, 효모, 아스파탐, 정제수").sweet(1L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)죽향도가").get()).distributionPrice(BigDecimal.valueOf(2200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("부안 참뽕 막걸리").price(BigDecimal.valueOf(2000)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 오디, 종국, 정제수, 누룩, 효모, 아스파탐").sweet(2L).sour(1L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("내변산(동진주조)").get()).distributionPrice(BigDecimal.valueOf(2200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("부안 참뽕 와인").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(13D).ingredient("오디(국내산), 정제수, 주정").sweet(3L).sour(2L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("내변산(동진주조)").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("부자 10").price(BigDecimal.valueOf(5000)).quantity(100L).alcohol(10D).ingredient("쌀, 정제수, 고과당, 효모 등").sweet(4L).sour(1L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("배혜정 도가").get()).distributionPrice(BigDecimal.valueOf(5500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("불소곡주").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(43D).ingredient("찹쌀, 누룩, 백미, 정제수, 야국, 메주콩, 생강, 홍고추").sweet(2L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("한산소곡주").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("붉은 원숭이").price(BigDecimal.valueOf(7000)).quantity(100L).alcohol(10.8D).ingredient("쌀(국내산 경기미 100%), 누룩, 홍국, 정제수").sweet(4L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("술샘").get()).distributionPrice(BigDecimal.valueOf(7700.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("블루베리 이야기").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(12D).ingredient("국내산 산머루 50%, 블루베리 50%").sweet(3L).sour(1L).cool(1L).body(3L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("농업회사법인산들벗(주)").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("산내울 복분자주").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(16D).ingredient("복분자, 설탕, 주정, 정제수, 과당").sweet(4L).sour(4L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("거창사과원예농협").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("산내울 사과애주").price(BigDecimal.valueOf(14000)).quantity(100L).alcohol(16D).ingredient("사과, 설탕, 주정, 정제수, 과당").sweet(4L).sour(4L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("거창사과원예농협").get()).distributionPrice(BigDecimal.valueOf(15400.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("산내울 오미자주").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(16D).ingredient("오미자, 설탕, 주정, 정제수, 과당").sweet(2L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("거창사과원예농협").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("산막 생유 막걸리").price(BigDecimal.valueOf(1200)).quantity(100L).alcohol(6D).ingredient("국내산 쌀, 소맥분, 종국, 효모").sweet(1L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인신탄진주조(주)").get()).distributionPrice(BigDecimal.valueOf(1320.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("산막대덕주").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(13D).ingredient("국내산 쌀, 우리밀누룩").sweet(3L).sour(1L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인신탄진주조(주)").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("산정호수 동정춘막걸리").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(6D).ingredient("국내산 쌀, 누룩, 정제수").sweet(5L).sour(1L).cool(4L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)농업회사법인 술빚는 전가네").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("삼선").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(10D).ingredient("국내산쌀, 누룩, 정제수").sweet(1L).sour(4L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 두루(주)").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("삼양춘 생약주").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(15D).ingredient("강화섬쌀, 전통누룩, 정제수").sweet(2L).sour(1L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("송도향전통주조").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("삼양춘 생탁주").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(12.5D).ingredient("강화섬쌀, 전통누룩, 정제수").sweet(2L).sour(1L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("송도향전통주조").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("삼양춘 청주").price(BigDecimal.valueOf(16800)).quantity(100L).alcohol(15D).ingredient("강화섬쌀, 정제수, 백국, 황국, 전통누룩, 토종효모").sweet(3L).sour(4L).cool(2L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("송도향전통주조").get()).distributionPrice(BigDecimal.valueOf(18480.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("생 청주 막걸리").price(BigDecimal.valueOf(1500)).quantity(100L).alcohol(6D).ingredient("쌀, 소맥분, 국, 조제종국, 효모, 물엿 등").sweet(2L).sour(1L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("조은술 세종").get()).distributionPrice(BigDecimal.valueOf(1650.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("샤토미소 랑").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("청포도").sweet(4L).sour(3L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("도란원").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("샤토미소 레드 프리미엄 드라이").price(BigDecimal.valueOf(40000)).quantity(100L).alcohol(13D).ingredient("포도(MBA, 산머루, 캠벨얼리)").sweet(2L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("도란원").get()).distributionPrice(BigDecimal.valueOf(44000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("샤토미소 스위트").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("포도, 산화방지제, 효모, 설탕 등").sweet(3L).sour(1L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("도란원").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("샤토미소 스위트 로제").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("포도, 산화방지제, 효모, 설탕 등").sweet(3L).sour(1L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("도란원").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("샤토미소 영동").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(40D).ingredient("포도").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(2L).maker(makerRepository.findByName("도란원").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("샹스프랑보아즈").price(BigDecimal.valueOf(150000)).quantity(100L).alcohol(13D).ingredient("복분자(고창산), 구연산, 과당, 아스파탐, 주정, 정제수").sweet(4L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)선운산복분자주 흥진").get()).distributionPrice(BigDecimal.valueOf(165000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("서울의 밤").price(BigDecimal.valueOf(7500)).quantity(100L).alcohol(25D).ingredient("매실증류주원액, 벌꿀, 포도당, 노간주나무열매, 정제수").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(4L).throat(1L).maker(makerRepository.findByName("더한주류").get()).distributionPrice(BigDecimal.valueOf(8250.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("서주 16도").price(BigDecimal.valueOf(45000)).quantity(100L).alcohol(16D).ingredient("백미(국내산), 감자(국내산), 누룩, 효모, 정제수").sweet(3L).sour(2L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("오대서주양조").get()).distributionPrice(BigDecimal.valueOf(49500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("석로주").price(BigDecimal.valueOf(0)).quantity(100L).alcohol(13D).ingredient("멥쌀(국내산), 석이버섯(국내산), 정제수, 누룩(밀함유), 효모").sweet(1L).sour(1L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("석이원주조").get()).distributionPrice(BigDecimal.valueOf(0.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("석탄주 약주").price(BigDecimal.valueOf(7000)).quantity(100L).alcohol(15D).ingredient("국내산 찹쌀, 누룩, 정제수").sweet(1L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("케이소주 (전주가양주연구소)").get()).distributionPrice(BigDecimal.valueOf(7700.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("석탄주 탁주").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(15D).ingredient("국내산 찹쌀, 누룩, 정제수").sweet(2L).sour(3L).cool(3L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("케이소주 (전주가양주연구소)").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("선운산 복분자와인").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(13D).ingredient("복분자(고창산), 구연산, 과당, 아스파탐, 주정, 정제수").sweet(4L).sour(4L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)선운산복분자주 흥진").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("선운산 복분자주").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(16D).ingredient("복분자(고창산), 과당, 구연산, 아스파탐, 무수아황산").sweet(4L).sour(4L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)선운산복분자주 흥진").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("선운산 복분자주 프리미엄").price(BigDecimal.valueOf(40000)).quantity(100L).alcohol(19D).ingredient("복분자(고창산), 과당, 구연산, 아스파탐, 무수아황산").sweet(4L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)선운산복분자주 흥진").get()).distributionPrice(BigDecimal.valueOf(44000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("선운산의 아침 복분자막걸리").price(BigDecimal.valueOf(28000)).quantity(100L).alcohol(6D).ingredient("복분자, 쌀, 효모, 국, 과당, 구연산, 젖산, 정제수").sweet(2L).sour(2L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(농)국순당고창명주(주)").get()).distributionPrice(BigDecimal.valueOf(30800.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("선호 생막걸리").price(BigDecimal.valueOf(1700)).quantity(100L).alcohol(6D).ingredient("국내산 쌀, 누룩, 효모, 정제효소, 천연감미료, 정제수").sweet(2L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("김포금쌀탁주영농조합법인").get()).distributionPrice(BigDecimal.valueOf(1870.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("설궁").price(BigDecimal.valueOf(0)).quantity(100L).alcohol(30D).ingredient("자연산 송이버섯, 산양산삼, 토종벌꿀").sweet(2L).sour(0L).cool(0L).body(2L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("솔래원").get()).distributionPrice(BigDecimal.valueOf(0.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("설레온").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(40D).ingredient("쌀, 누룩, 효모, 정제수").sweet(2L).sour(0L).cool(0L).body(3L).balance(0L).incense(1L).throat(0L).maker(makerRepository.findByName("농업회사법인 대윤가야곡주조(주)").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("설련주").price(BigDecimal.valueOf(35000)).quantity(100L).alcohol(16D).ingredient("백련, 찹쌀, 멥쌀, 누룩").sweet(2L).sour(4L).cool(4L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("영농조합법인 석전상온전통주가").get()).distributionPrice(BigDecimal.valueOf(38500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("설성 만월 막걸리").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(8D).ingredient("정제수, 유기농쌀국내산, 누룩, 유기농올리고당 등").sweet(2L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("병영주조장").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("설하담").price(BigDecimal.valueOf(7400)).quantity(100L).alcohol(8D).ingredient("국내산 멥쌀 100%, 개량 누룩, 정제수, 이산화탄소").sweet(3L).sour(1L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("리큐랩주식회사").get()).distributionPrice(BigDecimal.valueOf(8140.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("성포 생막걸리").price(BigDecimal.valueOf(1100)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 소맥분(미국산), 전분당, 정제수, 무농약 미나리추출액, 정제효소, 종국, 효모, 아스파탐").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("성포양조장").get()).distributionPrice(BigDecimal.valueOf(1210.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("세우리").price(BigDecimal.valueOf(250000)).quantity(100L).alcohol(45D).ingredient("산양삼, 하수오, 구기자, 쌀").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(5L).throat(3L).maker(makerRepository.findByName("제주샘영농조합법인").get()).distributionPrice(BigDecimal.valueOf(275000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("세종 쌀 막걸리").price(BigDecimal.valueOf(1500)).quantity(100L).alcohol(6D).ingredient("정제수, 백미, 소맥분, 전분당, 효모, 젖산 등").sweet(3L).sour(1L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("조은술 세종").get()).distributionPrice(BigDecimal.valueOf(1650.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("세종 알밤주").price(BigDecimal.valueOf(1500)).quantity(100L).alcohol(6D).ingredient("정제수, 백미, 소맥분, 알밤(국내산), 전분당, 효모, 젖산 등").sweet(4L).sour(1L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("조은술 세종").get()).distributionPrice(BigDecimal.valueOf(1650.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("세종 오가닉").price(BigDecimal.valueOf(9000)).quantity(100L).alcohol(13D).ingredient("정제수, 유기농 백미, 국, 효모, 정제효소, 구연산").sweet(1L).sour(3L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("조은술 세종").get()).distributionPrice(BigDecimal.valueOf(9900.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("세종대왕어주 약주").price(BigDecimal.valueOf(25900)).quantity(100L).alcohol(15D).ingredient("쌀(국내산), 누룩, 정제수").sweet(3L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 장희도가(주)").get()).distributionPrice(BigDecimal.valueOf(28490.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("세종대왕어주 탁주").price(BigDecimal.valueOf(16900)).quantity(100L).alcohol(13D).ingredient("쌀(국내산), 누룩, 정제수").sweet(3L).sour(3L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 장희도가(주)").get()).distributionPrice(BigDecimal.valueOf(18590.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("소곡화주").price(BigDecimal.valueOf(45000)).quantity(100L).alcohol(41D).ingredient("찹쌀, 누룩, 백미, 정제수").sweet(2L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("녹천주조장").get()).distributionPrice(BigDecimal.valueOf(49500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("소나무와 학").price(BigDecimal.valueOf(39000)).quantity(100L).alcohol(43D).ingredient("쌀(국내산), 솔잎, 황기, 당귀, 효모, 아스파탐").sweet(4L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("용두산조은술").get()).distributionPrice(BigDecimal.valueOf(42900.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("소백산 검은콩 막걸리").price(BigDecimal.valueOf(3000)).quantity(100L).alcohol(6D).ingredient("백미, 소맥분, 검은콩, 검은깨 등").sweet(3L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("대강양조장").get()).distributionPrice(BigDecimal.valueOf(3300.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("소백산 생 막걸리").price(BigDecimal.valueOf(1980)).quantity(100L).alcohol(6D).ingredient("쌀, 정제수, 소맥분, 입국, 효모 등").sweet(2L).sour(3L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("대강양조장").get()).distributionPrice(BigDecimal.valueOf(2178.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("소백산 생 만찬주").price(BigDecimal.valueOf(1200)).quantity(100L).alcohol(6D).ingredient("정제수, 쌀, 소맥분, 입국, 효모, 아스파탐 등").sweet(2L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("대강양조장").get()).distributionPrice(BigDecimal.valueOf(1320.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("소백산 청 동동주").price(BigDecimal.valueOf(3000)).quantity(100L).alcohol(10D).ingredient("쌀, 소맥분, 누룩, 주정, 고과당, 대추 등").sweet(2L).sour(1L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("대강양조장").get()).distributionPrice(BigDecimal.valueOf(3300.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("소양강 생 막걸리").price(BigDecimal.valueOf(1200)).quantity(100L).alcohol(6D).ingredient("백미, 소맥분, 정제수, 팽화미, 아스파탐, 물엿, 정제수").sweet(1L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("소양강도가 (구. 천정양조장)").get()).distributionPrice(BigDecimal.valueOf(1320.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("솔송주").price(BigDecimal.valueOf(7000)).quantity(100L).alcohol(13D).ingredient("정제수, 백미(국내산), 국내산 송순 농축액(송순33%, 정제수67%) 5.24%, 누룩, 조제종국, 효모").sweet(2L).sour(1L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("명가원 영농조합법인").get()).distributionPrice(BigDecimal.valueOf(7700.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("송명섭 막걸리").price(BigDecimal.valueOf(3000)).quantity(100L).alcohol(6D).ingredient("국내산쌀, 곡자, 정제수").sweet(1L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("태인합동주조").get()).distributionPrice(BigDecimal.valueOf(3300.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("송이주").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(13D).ingredient("국내산 쌀, 송이농충액, 누룩, 정제수").sweet(1L).sour(4L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("내국양조").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("송화백일주").price(BigDecimal.valueOf(45000)).quantity(100L).alcohol(38D).ingredient("쌀, 찹쌀, 누룩, 산수유, 오미자, 구기자, 솔잎, 송화가루, 꿀").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(3L).maker(makerRepository.findByName("송화양조사").get()).distributionPrice(BigDecimal.valueOf(49500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("수삼단본 23도").price(BigDecimal.valueOf(32000)).quantity(100L).alcohol(23D).ingredient("쌀, 인삼, 누룩, 정제수 등").sweet(1L).sour(0L).cool(0L).body(3L).balance(0L).incense(4L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)금산인삼주").get()).distributionPrice(BigDecimal.valueOf(35200.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("수삼단본 43도").price(BigDecimal.valueOf(42000)).quantity(100L).alcohol(43D).ingredient("쌀, 인삼, 누룩, 정제수 등").sweet(1L).sour(0L).cool(0L).body(4L).balance(0L).incense(4L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)금산인삼주").get()).distributionPrice(BigDecimal.valueOf(46200.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("순향주").price(BigDecimal.valueOf(56000)).quantity(100L).alcohol(15D).ingredient("국내산 쌀, 누룩, 정제수").sweet(2L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)농업회사법인 추연당").get()).distributionPrice(BigDecimal.valueOf(61600.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("술공방 9.0 생막걸리").price(BigDecimal.valueOf(5000)).quantity(100L).alcohol(9D).ingredient("쌀(국내산), 밀누룩(국내산), 국, 효모, 효소, 올리고당").sweet(3L).sour(2L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("두이술공방").get()).distributionPrice(BigDecimal.valueOf(5500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("술그리다 생탁주").price(BigDecimal.valueOf(9000)).quantity(100L).alcohol(10D).ingredient("국내산 쌀, 누룩").sweet(2L).sour(1L).cool(1L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)좋은술").get()).distributionPrice(BigDecimal.valueOf(9900.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("술샘 이화주").price(BigDecimal.valueOf(7600)).quantity(100L).alcohol(8D).ingredient("쌀(국내산 경기미 100%), 누룩, 정제수").sweet(3L).sour(3L).cool(1L).body(4L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("술샘").get()).distributionPrice(BigDecimal.valueOf(8360.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("술아 국화주").price(BigDecimal.valueOf(36000)).quantity(100L).alcohol(15D).ingredient("국내산 찹쌀, 누룩, 건조국화꽃, 증류주, 정제수").sweet(4L).sour(3L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)술아원").get()).distributionPrice(BigDecimal.valueOf(39600.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("술아 막걸리").price(BigDecimal.valueOf(21000)).quantity(100L).alcohol(8D).ingredient("국내산 찹쌀, 누룩, 정제수").sweet(3L).sour(4L).cool(3L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)술아원").get()).distributionPrice(BigDecimal.valueOf(23100.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("술아 매화주").price(BigDecimal.valueOf(36000)).quantity(100L).alcohol(15D).ingredient("국내산 찹쌀, 누룩, 건조매화꽃, 증류주, 정제수").sweet(5L).sour(3L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)술아원").get()).distributionPrice(BigDecimal.valueOf(39600.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("술아 순곡주").price(BigDecimal.valueOf(36000)).quantity(100L).alcohol(20D).ingredient("국내산 찹쌀, 누룩, 증류주, 정제수").sweet(5L).sour(3L).cool(2L).body(5L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)술아원").get()).distributionPrice(BigDecimal.valueOf(39600.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("술아 연화주").price(BigDecimal.valueOf(36000)).quantity(100L).alcohol(15D).ingredient("국내산 찹쌀, 누룩, 건조연화꽃, 증류주, 정제수").sweet(5L).sour(3L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)술아원").get()).distributionPrice(BigDecimal.valueOf(39600.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("술예쁘다 생탁주").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(13D).ingredient("국내산 쌀, 누룩").sweet(1L).sour(3L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)좋은술").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("술취한 원숭이").price(BigDecimal.valueOf(7000)).quantity(100L).alcohol(10.8D).ingredient("쌀(국내산 경기미 100%), 누룩, 홍국, 정제수").sweet(4L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("술샘").get()).distributionPrice(BigDecimal.valueOf(7700.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("술헤는밤").price(BigDecimal.valueOf(5900)).quantity(100L).alcohol(8D).ingredient("국내산쌀, 누룩, 정제수").sweet(2L).sour(4L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 두루(주)").get()).distributionPrice(BigDecimal.valueOf(6490.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("스타베리오디").price(BigDecimal.valueOf(28000)).quantity(100L).alcohol(12D).ingredient("양조용포도(경북 영천)").sweet(3L).sour(4L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)한국와인").get()).distributionPrice(BigDecimal.valueOf(30800.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("시나브로 드 글로리아").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(12D).ingredient("포도(캠벨얼리)").sweet(3L).sour(3L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("불휘농장").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("시나브로 레드 드라이").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(12D).ingredient("포도(캠벨얼리)").sweet(2L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("불휘농장").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("시나브로 레드 스위트").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(12D).ingredient("포도(캠벨얼리)").sweet(3L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("불휘농장").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("시나브로 로제와인").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(10D).ingredient("포도(국내산_캠벨얼리)").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("불휘농장").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("시나브로 에뚜왈 로제 스파클링").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(5D).ingredient("포도(국내산_캠벨얼리)").sweet(2L).sour(3L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("불휘농장").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("시나브로 에뚜왈 스파클링와인").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(5D).ingredient("포도(청수)").sweet(3L).sour(3L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("불휘농장").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("시나브로 화이트와인").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(11D).ingredient("청포도(청수)").sweet(4L).sour(4L).cool(4L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("불휘농장").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("시인의 마을 우리쌀 막걸리").price(BigDecimal.valueOf(7900)).quantity(100L).alcohol(10D).ingredient("쌀(국내산), 누룩, 정제수, 무감미료").sweet(2L).sour(3L).cool(3L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("이원양조장").get()).distributionPrice(BigDecimal.valueOf(8690.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("신례명주").price(BigDecimal.valueOf(99000)).quantity(100L).alcohol(50D).ingredient("감귤(제주산)100%, 감귤 증류주 100%").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(4L).throat(2L).maker(makerRepository.findByName("농업회사법인(주)시트러스").get()).distributionPrice(BigDecimal.valueOf(108900.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("신선주 백주").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(10D).ingredient("청원생명쌀(청주산), 정제수, 찹쌀(국내산), 전통누룩(국내산)(밀함유), 약재(국화, 쇠무릅, 당귀, 하수오, 구기자, 맥문동, 인삼, 육계(계피), 숙지황, 생지황)").sweet(2L).sour(3L).cool(1L).body(3L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)신선").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("신선주 약주").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(16D).ingredient("찹쌀(국내산), 전통누룩(국내산)(밀함유), 약재(국화, 쇠무릅, 당귀, 하수오, 구기자, 맥문동, 인삼, 육계(계피), 숙지황, 생지황)").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)신선").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("신선주 증류주").price(BigDecimal.valueOf(60000)).quantity(100L).alcohol(52D).ingredient("찹쌀(국내산), 전통누룩(국내산)(밀함유), 약재(국화, 쇠무릅, 당귀, 하수오, 구기자, 맥문동, 인삼, 육계(계피), 숙지황, 생지황)").sweet(4L).sour(4L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)신선").get()).distributionPrice(BigDecimal.valueOf(66000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("신선주").price(BigDecimal.valueOf(19000)).quantity(100L).alcohol(16D).ingredient("쌀, 능금, 신선초, 천궁, 구기자, 당귀솔잎, 대추, 인삼").sweet(3L).sour(3L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("용두산조은술").get()).distributionPrice(BigDecimal.valueOf(20900.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("심플리 애플").price(BigDecimal.valueOf(9000)).quantity(100L).alcohol(12D).ingredient("쌀(국산), 사과즙(국산), 벌꿀(국산)").sweet(4L).sour(4L).cool(1L).body(2L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("주식회사 배혜정 농업회사법인").get()).distributionPrice(BigDecimal.valueOf(9900.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
    }

    public void initProduct2() {
        productRepository.save(Product.builder().name("아이싱 자몽(iCing Grapefruit)").price(BigDecimal.valueOf(1300)).quantity(100L).alcohol(4D).ingredient("쌀, 자몽엑기스").sweet(3L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("국순당").get()).distributionPrice(BigDecimal.valueOf(1430.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("아이원 막걸리").price(BigDecimal.valueOf(1000)).quantity(100L).alcohol(6D).ingredient("쌀, 밀, 입국, 누룩, 정제수").sweet(3L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("이원양조장").get()).distributionPrice(BigDecimal.valueOf(1100.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("아황주").price(BigDecimal.valueOf(23000)).quantity(100L).alcohol(17D).ingredient("찹쌀, 멥쌀, 누룩, 정제수").sweet(1L).sour(3L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("최행숙 전통주가").get()).distributionPrice(BigDecimal.valueOf(25300.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("안동소주 22도").price(BigDecimal.valueOf(27000)).quantity(100L).alcohol(22D).ingredient("쌀(국내산), 누룩, 정제수").sweet(1L).sour(0L).cool(0L).body(2L).balance(0L).incense(1L).throat(0L).maker(makerRepository.findByName("명인 안동소주").get()).distributionPrice(BigDecimal.valueOf(29700.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("안동소주 양반탈").price(BigDecimal.valueOf(35000)).quantity(100L).alcohol(45D).ingredient("쌀(국내산), 누룩, 정제수").sweet(1L).sour(0L).cool(0L).body(3L).balance(0L).incense(1L).throat(0L).maker(makerRepository.findByName("명인 안동소주").get()).distributionPrice(BigDecimal.valueOf(38500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("안동소주 일품 17도").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(17D).ingredient("국내산 쌀, 입국").sweet(3L).sour(0L).cool(0L).body(2L).balance(0L).incense(1L).throat(0L).maker(makerRepository.findByName("안동소주일품").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("안동소주 일품 21도").price(BigDecimal.valueOf(13500)).quantity(100L).alcohol(21D).ingredient("국내산 쌀, 입국").sweet(3L).sour(0L).cool(0L).body(2L).balance(0L).incense(1L).throat(0L).maker(makerRepository.findByName("안동소주일품").get()).distributionPrice(BigDecimal.valueOf(14850.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("안동소주 일품 40도 골드").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(40D).ingredient("국내산 쌀, 입국").sweet(3L).sour(0L).cool(0L).body(3L).balance(0L).incense(1L).throat(0L).maker(makerRepository.findByName("안동소주일품").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("안동소주 호리병").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(45D).ingredient("쌀(국내산), 누룩, 정제수").sweet(1L).sour(0L).cool(0L).body(3L).balance(0L).incense(1L).throat(0L).maker(makerRepository.findByName("명인 안동소주").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("안성마춤 생막걸리").price(BigDecimal.valueOf(2000)).quantity(100L).alcohol(6D).ingredient("국내산 쌀, 누룩, 효모, 젖산, 정제효소, 정제수").sweet(3L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("한주양조").get()).distributionPrice(BigDecimal.valueOf(2200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("안양 동동주").price(BigDecimal.valueOf(1100)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 찹쌀(국내산), 전통누룩, 정제수").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("안양주조장").get()).distributionPrice(BigDecimal.valueOf(1210.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("애석").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(15D).ingredient("국내산쌀, 누룩, 정제수").sweet(2L).sour(1L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 두루(주)").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("애피소드 상그리아").price(BigDecimal.valueOf(21000)).quantity(100L).alcohol(3.5D).ingredient("포도와인, 정제주정, 정제수, 포도농축액, 고과당").sweet(4L).sour(4L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)한국애플리즈").get()).distributionPrice(BigDecimal.valueOf(23100.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("애피소드 애플").price(BigDecimal.valueOf(21000)).quantity(100L).alcohol(3.5D).ingredient("사과와인, 정제주정, 정제수, 사과농축액, 고과당").sweet(4L).sour(4L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)한국애플리즈").get()).distributionPrice(BigDecimal.valueOf(23100.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("애피소드 호프").price(BigDecimal.valueOf(21000)).quantity(100L).alcohol(3.5D).ingredient("사과과즙, 보리, 쌀, 홉").sweet(4L).sour(4L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)한국애플리즈").get()).distributionPrice(BigDecimal.valueOf(23100.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("야관문 쌀 막걸리").price(BigDecimal.valueOf(1500)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 종국, 정제수, 누룩, 효모, 야관문").sweet(1L).sour(3L).cool(2L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("지리산그린영농조합 운봉주조").get()).distributionPrice(BigDecimal.valueOf(1650.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("양촌 생 동동주").price(BigDecimal.valueOf(36000)).quantity(100L).alcohol(10D).ingredient("정제수, 백미, 효소제, 효모 등").sweet(3L).sour(1L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("양촌양조").get()).distributionPrice(BigDecimal.valueOf(39600.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("양촌 생 막걸리").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(6D).ingredient("팽화미, 소맥분, 정제수, 물엿, 효소, 국 등").sweet(2L).sour(3L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("양촌양조").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("양촌 우렁이쌀 손 막걸리").price(BigDecimal.valueOf(39000)).quantity(100L).alcohol(7.5D).ingredient("쌀, 정제수 효모, 정제효소, 효소처리 스테비아").sweet(2L).sour(3L).cool(2L).body(1L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("양촌양조").get()).distributionPrice(BigDecimal.valueOf(42900.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("어우야").price(BigDecimal.valueOf(9900)).quantity(100L).alcohol(16D).ingredient("야관문(제주산), 정제수, 포도당, 효모").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(2L).throat(3L).maker(makerRepository.findByName("왕지케양조장 (제주본초협동조합)").get()).distributionPrice(BigDecimal.valueOf(10890.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("여강").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(25D).ingredient("국내산 쌀, 누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(2L).maker(makerRepository.findByName("(주)농업회사법인 추연당").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("여포의 꿈 (레드 드라이)").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("국내산 포도 100%").sweet(2L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("여포와인농장").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("여포의 꿈(레드스위트)").price(BigDecimal.valueOf(19000)).quantity(100L).alcohol(12D).ingredient("국내산 포도 100%").sweet(4L).sour(1L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("여포와인농장").get()).distributionPrice(BigDecimal.valueOf(20900.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("여포의 꿈(화이트)").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("국내산 포도 100%").sweet(1L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("여포와인농장").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("연천 아주").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(8D).ingredient("쌀(국내산), 누룩, 정제수").sweet(2L).sour(4L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 연천양조(주)").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("연천 연주").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(12D).ingredient("쌀(국내산), 누룩, 정제수").sweet(2L).sour(4L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 연천양조(주)").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("연천 우주").price(BigDecimal.valueOf(8500)).quantity(100L).alcohol(22D).ingredient("쌀(국내산), 누룩, 효모, 효소, 연천율무, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(2L).maker(makerRepository.findByName("농업회사법인 연천양조(주)").get()).distributionPrice(BigDecimal.valueOf(9350.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("영일만친구 막걸리").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(6D).ingredient("국내산 쌀, 물엿, 우뭇가사리, 효모, 조제 종국, 정제효소제, 아스파탐, 젖산").sweet(2L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("동해명주").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("예담은 한산소곡주").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(16D).ingredient("찹쌀, 멥쌀, 누룩, 대두, 구절초").sweet(4L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("한산예담은소곡주").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("예담은 한산소곡화주").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(41D).ingredient("찹쌀, 멥쌀, 누룩, 대두, 구절초").sweet(3L).sour(0L).cool(0L).body(3L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("한산예담은소곡주").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("예밀와인 레드 드라이").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(13D).ingredient("포도(캠벨얼리)").sweet(1L).sour(1L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("예밀2리영농조합법인").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("예밀와인 레드 스위트").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("포도(캠벨얼리)").sweet(4L).sour(1L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("예밀2리영농조합법인").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("예밀와인 로제").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("포도(캠벨얼리)").sweet(4L).sour(1L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("예밀2리영농조합법인").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("예주").price(BigDecimal.valueOf(29000)).quantity(100L).alcohol(15D).ingredient("복분자, 주정, 효모, 정제수").sweet(1L).sour(3L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("용두산조은술").get()).distributionPrice(BigDecimal.valueOf(31900.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("예천주 사월24").price(BigDecimal.valueOf(22000)).quantity(100L).alcohol(24D).ingredient("오미자(국내산)증류원액, 건오미자(국내산)추출액, 정제수").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(3L).throat(2L).maker(makerRepository.findByName("농업회사법인(주)착한농부").get()).distributionPrice(BigDecimal.valueOf(24200.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("예천주 사월365").price(BigDecimal.valueOf(29000)).quantity(100L).alcohol(36.5D).ingredient("오미자(국내산)증류원액, 건오미자(국내산)추출액, 정제수").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(3L).throat(3L).maker(makerRepository.findByName("농업회사법인(주)착한농부").get()).distributionPrice(BigDecimal.valueOf(31900.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("예천주복 만월24").price(BigDecimal.valueOf(12800)).quantity(100L).alcohol(24D).ingredient("복분자(국내산)증류원액, 복분자(국내산)과즙, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(4L).throat(3L).maker(makerRepository.findByName("농업회사법인(주)착한농부").get()).distributionPrice(BigDecimal.valueOf(14080.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("예천주복 만월40").price(BigDecimal.valueOf(19200)).quantity(100L).alcohol(40D).ingredient("복분자(국내산)증류원액, 복분자(국내산)과즙, 정제수").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(4L).throat(3L).maker(makerRepository.findByName("농업회사법인(주)착한농부").get()).distributionPrice(BigDecimal.valueOf(21120.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("예화").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(13D).ingredient("쌀, 누룩, 효모, 물엿, 정제수").sweet(2L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 대윤가야곡주조(주)").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("옛날 막걸리 古").price(BigDecimal.valueOf(2700)).quantity(100L).alcohol(7.8D).ingredient("배정제수, 쌀(국산), 국(밀), 과당, 효모 / 에탄올 함량 : 7.8%").sweet(2L).sour(2L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("국순당").get()).distributionPrice(BigDecimal.valueOf(2970.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("오곡 진상주").price(BigDecimal.valueOf(0)).quantity(100L).alcohol(7D).ingredient("쌀, 밀, 보리, 옥수수, 조 등").sweet(1L).sour(4L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("대강양조장").get()).distributionPrice(BigDecimal.valueOf(0.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("오디랑").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(13D).ingredient("오디(국산) 18.2%, 정제수, 과당, 주정, 구연산, 효모").sweet(3L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("국순당 고창명주").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("오매락퍽").price(BigDecimal.valueOf(52000)).quantity(100L).alcohol(40D).ingredient("구운매실, 배증류원액").sweet(3L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("(주)배상면주가").get()).distributionPrice(BigDecimal.valueOf(57200.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("오매백주").price(BigDecimal.valueOf(5000)).quantity(100L).alcohol(12D).ingredient("쌀(국내산), 국, 효모, 정제수").sweet(5L).sour(1L).cool(1L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 오산양조(주)").get()).distributionPrice(BigDecimal.valueOf(5500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("오메기 맑은술").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(16D).ingredient("좁쌀, 햅쌀, 정제수, 누룩").sweet(4L).sour(3L).cool(2L).body(3L).balance(3L).incense(0L).throat(0L).maker(makerRepository.findByName("제주술익는집").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("오목대").price(BigDecimal.valueOf(27000)).quantity(100L).alcohol(5D).ingredient("보리(국내산), 맥아(국내산), 말토텍스트린, 호프펠렛, 효모, 정제효소제, 정제수").sweet(2L).sour(3L).cool(4L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 동문거리양조장(주) (전주술로시티)").get()).distributionPrice(BigDecimal.valueOf(29700.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("오미로제 프리미어와인").price(BigDecimal.valueOf(39000)).quantity(100L).alcohol(12D).ingredient("오미자(문경산)").sweet(3L).sour(4L).cool(4L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)제이엘").get()).distributionPrice(BigDecimal.valueOf(42900.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("오미시앙 스페셜").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(12D).ingredient("오미자, 주정, 설탕, 효모").sweet(1L).sour(3L).cool(0L).body(2L).balance(0L).incense(0L).throat(2L).maker(makerRepository.findByName("알에프").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("오미자 생막걸리").price(BigDecimal.valueOf(2500)).quantity(100L).alcohol(6.5D).ingredient("정제수, 백미(국내산), 입국(쌀, 밀), 올리고당, 물엿, 허브(유기농), 오미자 2.4%(국내산, 문경로동산), 정제효소, 아스파탐·아세셀펌칼륨(함성감미료, 메닐알라닌 함유)").sweet(2L).sour(3L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("문경주조").get()).distributionPrice(BigDecimal.valueOf(2750.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("오산막걸리").price(BigDecimal.valueOf(3000)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 국, 효모, 정제수").sweet(2L).sour(4L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 오산양조(주)").get()).distributionPrice(BigDecimal.valueOf(3300.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("오희 스파클링 막걸리").price(BigDecimal.valueOf(36000)).quantity(100L).alcohol(8.5D).ingredient("백미, 건오미자, 조효소제, 효모, 정제수").sweet(1L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("문경주조").get()).distributionPrice(BigDecimal.valueOf(39600.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("왕율주").price(BigDecimal.valueOf(8000)).quantity(100L).alcohol(25D).ingredient("국내산 쌀, 밤, 누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(3L).maker(makerRepository.findByName("농업회사법인 사곡양조원").get()).distributionPrice(BigDecimal.valueOf(8800.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("왕피천을 품은 미소생막걸리").price(BigDecimal.valueOf(1200)).quantity(100L).alcohol(7D).ingredient("쌀, 누룩, 정제수").sweet(3L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("울진술도가").get()).distributionPrice(BigDecimal.valueOf(1320.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("우곡생주").price(BigDecimal.valueOf(6500)).quantity(100L).alcohol(10D).ingredient("쌀(국내산), 국, 효모, 정제수").sweet(4L).sour(2L).cool(2L).body(5L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("배혜정도가").get()).distributionPrice(BigDecimal.valueOf(7150.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("우도 땅콩 전통주").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(6D).ingredient("정제수, 전분당, 백미, 국, 땅콩분, 효모, 젖산 등").sweet(4L).sour(1L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("조은술 세종").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("운암1945").price(BigDecimal.valueOf(28000)).quantity(100L).alcohol(12D).ingredient("쌀(국내산), 누룩, 정제수").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 우포의아침 주식회사").get()).distributionPrice(BigDecimal.valueOf(30800.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("원매 프리미엄").price(BigDecimal.valueOf(45000)).quantity(100L).alcohol(20D).ingredient("매실주원액, 발효주정, 정제수, 꿀").sweet(2L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("더한주류").get()).distributionPrice(BigDecimal.valueOf(49500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("원매").price(BigDecimal.valueOf(35000)).quantity(100L).alcohol(15D).ingredient("매실원주액, 매실청, 꿀, 카라멜, 효소처리스테비아, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(4L).throat(1L).maker(makerRepository.findByName("더한주류").get()).distributionPrice(BigDecimal.valueOf(38500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("원조 한산소곡주").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(16D).ingredient("찹쌀, 멥쌀, 누룩, 대두, 구절초").sweet(3L).sour(1L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("원조소곡주").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("원조소곡화주").price(BigDecimal.valueOf(14000)).quantity(100L).alcohol(41D).ingredient("찹쌀, 멥쌀, 누룩").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(3L).throat(3L).maker(makerRepository.findByName("원조소곡주").get()).distributionPrice(BigDecimal.valueOf(15400.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("월매 쌀막걸리").price(BigDecimal.valueOf(1200)).quantity(100L).alcohol(6D).ingredient("백미, 말토올리고당, 정제수").sweet(2L).sour(2L).cool(3L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("서울장수주식회사").get()).distributionPrice(BigDecimal.valueOf(1320.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("유기농 이도 42").price(BigDecimal.valueOf(42000)).quantity(100L).alcohol(42D).ingredient("유기농쌀 (100%), 정제수, 증류원액, 국, 조제종국, 효모 등").sweet(2L).sour(0L).cool(0L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("조은술 세종").get()).distributionPrice(BigDecimal.valueOf(46200.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("유기농 이도14").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(14D).ingredient("유기농쌀(국내산), 우리밀누룩, 조제종국, 효모, 정제수").sweet(3L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 조은술세종(주)").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("유자 동동주").price(BigDecimal.valueOf(1100)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 소맥분(미국산), 전분당, 정제수, 유자과즙, 치자, 정제효소, 종국, 효모, 젖산, 아스파탐").sweet(2L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("성포양조장").get()).distributionPrice(BigDecimal.valueOf(1210.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("유자 생 막걸리").price(BigDecimal.valueOf(1800)).quantity(100L).alcohol(5D).ingredient("쌀, 유자, 정제수, 고과당, 효모 등").sweet(2L).sour(3L).cool(3L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("배혜정 도가").get()).distributionPrice(BigDecimal.valueOf(1980.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("율무 동동주").price(BigDecimal.valueOf(14000)).quantity(100L).alcohol(14D).ingredient("쌀(국내산), 누룩, 효모, 연천 율무, 정제수").sweet(2L).sour(4L).cool(3L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 연천양조(주)").get()).distributionPrice(BigDecimal.valueOf(15400.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("은자골 곶감 생 탁배기").price(BigDecimal.valueOf(1500)).quantity(100L).alcohol(6D).ingredient("백미, 소맥분, 정제수, 곶감분말, 전분당, 국, 누룩, 효소, 아스파탐 등").sweet(1L).sour(1L).cool(3L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("은척양조장").get()).distributionPrice(BigDecimal.valueOf(1650.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("은자골 생 탁배기").price(BigDecimal.valueOf(1500)).quantity(100L).alcohol(5D).ingredient("백미, 소맥분, 정제수, 전분당, 국, 누룩, 효소, 아스파탐 등").sweet(1L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("은척양조장").get()).distributionPrice(BigDecimal.valueOf(1650.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("이강주").price(BigDecimal.valueOf(5800)).quantity(100L).alcohol(19D).ingredient("쌀, 소맥분, 정맥, 배, 생강, 계피, 울금, 꿀").sweet(3L).sour(2L).cool(2L).body(3L).balance(5L).incense(0L).throat(0L).maker(makerRepository.findByName("전주 이강주").get()).distributionPrice(BigDecimal.valueOf(6380.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("이강주 2호").price(BigDecimal.valueOf(28000)).quantity(100L).alcohol(25D).ingredient("쌀, 소맥분, 정맥, 배, 생강, 계피, 울금, 꿀").sweet(2L).sour(0L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("전주 이강주").get()).distributionPrice(BigDecimal.valueOf(30800.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("이강주 특7호").price(BigDecimal.valueOf(50000)).quantity(100L).alcohol(25D).ingredient("쌀, 소맥분, 정맥, 배, 생강, 계피, 울금, 꿀").sweet(2L).sour(0L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("전주 이강주").get()).distributionPrice(BigDecimal.valueOf(55000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("이도 32").price(BigDecimal.valueOf(37000)).quantity(100L).alcohol(32D).ingredient("물, 증류원액(유기농 쌀, 국내산)").sweet(2L).sour(1L).cool(3L).body(2L).balance(3L).incense(2L).throat(3L).maker(makerRepository.findByName("조은술세종").get()).distributionPrice(BigDecimal.valueOf(40700.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("이동 생 쌀 막걸리").price(BigDecimal.valueOf(1300)).quantity(100L).alcohol(6D).ingredient("정제수, 백미, 팽화미, 입국, 아스파탐 등").sweet(1L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("이동주조").get()).distributionPrice(BigDecimal.valueOf(1430.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("이동 쌀 막걸리").price(BigDecimal.valueOf(1600)).quantity(100L).alcohol(6D).ingredient("정제수, 백미, 팽화미, 입국, 아스파탐 등").sweet(3L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("이동주조").get()).distributionPrice(BigDecimal.valueOf(1760.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("이상헌 약주").price(BigDecimal.valueOf(45000)).quantity(100L).alcohol(18D).ingredient("아산쌀, 국(국내산 밀누룩), 정제수").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("이가수불").get()).distributionPrice(BigDecimal.valueOf(49500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("이상헌 탁주").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(19D).ingredient("아산쌀, 국(국내산 밀누룩), 정제수").sweet(2L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("이가수불").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("이화백주").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(6D).ingredient("국내산 햅쌀, 전통 누룩, 정제수").sweet(3L).sour(3L).cool(4L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("이화백주 순탁주").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("인천 생 소성주").price(BigDecimal.valueOf(1200)).quantity(100L).alcohol(6D).ingredient("쌀, 팽화미, 정제수, 국, 효모, 아스파탐, 효소, 이소말토 올리고당").sweet(1L).sour(2L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("인천탁주").get()).distributionPrice(BigDecimal.valueOf(1320.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("입장탁주").price(BigDecimal.valueOf(1200)).quantity(100L).alcohol(6D).ingredient("쌀, 정제수, 고과당, 효모 등").sweet(2L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 입장주조㈜").get()).distributionPrice(BigDecimal.valueOf(1320.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("자두와인 레드").price(BigDecimal.valueOf(22000)).quantity(100L).alcohol(12D).ingredient("피자두").sweet(2L).sour(3L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("자두사랑").get()).distributionPrice(BigDecimal.valueOf(24200.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("자두와인 화이트").price(BigDecimal.valueOf(22000)).quantity(100L).alcohol(12D).ingredient("후무사").sweet(2L).sour(3L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("자두사랑").get()).distributionPrice(BigDecimal.valueOf(24200.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("자연담은 복분자막걸리").price(BigDecimal.valueOf(56000)).quantity(100L).alcohol(6D).ingredient("복분자, 쌀, 효모, 국, 과당, 구연산, 젖산, 정제수").sweet(2L).sour(1L).cool(1L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(농)국순당고창명주(주)").get()).distributionPrice(BigDecimal.valueOf(61600.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("자연송이주").price(BigDecimal.valueOf(0)).quantity(100L).alcohol(18D).ingredient("자연송이버섯").sweet(1L).sour(0L).cool(0L).body(1L).balance(0L).incense(1L).throat(0L).maker(makerRepository.findByName("솔래원").get()).distributionPrice(BigDecimal.valueOf(0.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("자희향").price(BigDecimal.valueOf(16000)).quantity(100L).alcohol(12D).ingredient("찹쌀(국내산), 멥쌀(국내산), 누룩(국내산), 정제수").sweet(2L).sour(2L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("자희자양").get()).distributionPrice(BigDecimal.valueOf(17600.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("자희향 국화주").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(15D).ingredient("찹쌀, 멥쌀, 누룩, 정제수, 국화").sweet(1L).sour(2L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("자희자양").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("자희향 나비").price(BigDecimal.valueOf(8000)).quantity(100L).alcohol(8D).ingredient("찹쌀(국내산), 멥쌀(국내산), 누룩(국내산), 정제수").sweet(2L).sour(1L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("자희자양").get()).distributionPrice(BigDecimal.valueOf(8800.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("장수 생 막걸리").price(BigDecimal.valueOf(1200)).quantity(100L).alcohol(6D).ingredient("백미(국내산), 말토올리고당").sweet(2L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("서울장수주식회사").get()).distributionPrice(BigDecimal.valueOf(1320.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("장수 오미자주").price(BigDecimal.valueOf(5400)).quantity(100L).alcohol(16.5D).ingredient("오미자(국내산), 정제수, 주정, 설탕, 효모").sweet(3L).sour(4L).cool(4L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)알에프").get()).distributionPrice(BigDecimal.valueOf(5940.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("장홍삼 장수 막걸리").price(BigDecimal.valueOf(2000)).quantity(100L).alcohol(6D).ingredient("백미, 말토올리고당, 홍삼분말").sweet(1L).sour(4L).cool(3L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("서울장수주식회사").get()).distributionPrice(BigDecimal.valueOf(2200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("정고집 나주배 약주 15도").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(15D).ingredient("쌀, 쌀가루(국내산), 배착즙액(나주산), 정제효소제, 종국, 젖산, 효모").sweet(4L).sour(2L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("남도탁주").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("정고집 나주배 약주 9도").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(9D).ingredient("쌀, 쌀가루(국내산), 배착즙액(나주산), 정제효소제, 종국, 젖산, 효모").sweet(4L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("남도탁주").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("정고집 나주쌀 생막걸리").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(6D).ingredient("쌀, 쌀가루(국내산), 조제종국, 정제효소, 젖산, 아스파탐, 아세셀팜칼").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("남도탁주").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("정고집 옛날 생동동주").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(6D).ingredient("쌀, 쌀가루(국내산), 조제종국, 정제효소, 젖산, 아스파탐, 아세셀팜칼").sweet(3L).sour(3L).cool(4L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("남도탁주").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("제주 고소리술").price(BigDecimal.valueOf(45000)).quantity(100L).alcohol(40D).ingredient("잡곡, 누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(4L).throat(1L).maker(makerRepository.findByName("제주술익는집").get()).distributionPrice(BigDecimal.valueOf(49500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("제주샘주 오메기술").price(BigDecimal.valueOf(7800)).quantity(100L).alcohol(13D).ingredient("쌀, 차조, 입국, 누룩, 효모, 효소, 청호, 조릿대, 감초, 정제수").sweet(3L).sour(2L).cool(1L).body(2L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("제주샘영농조합법인").get()).distributionPrice(BigDecimal.valueOf(8580.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("젤코바 스페셜와인").price(BigDecimal.valueOf(17000)).quantity(100L).alcohol(11.5D).ingredient("국내산 산머루, MBA포도").sweet(2L).sour(4L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)젤코바와이너리").get()).distributionPrice(BigDecimal.valueOf(18700.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("젤코바 캠벨와인").price(BigDecimal.valueOf(62500)).quantity(100L).alcohol(13.5D).ingredient("유기농 캠벨포도, 유기농 설탕").sweet(3L).sour(4L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)젤코바와이너리").get()).distributionPrice(BigDecimal.valueOf(68750.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("젤코바 프리미엄와인").price(BigDecimal.valueOf(33000)).quantity(100L).alcohol(12D).ingredient("국내산 산머루, MBA포도").sweet(1L).sour(4L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)젤코바와이너리").get()).distributionPrice(BigDecimal.valueOf(36300.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("조선주조사").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(14D).ingredient("쌀(국내산), 입국, 누룩, 주정, 정제수").sweet(3L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 우포의아침(주)").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("주몽 복분자주").price(BigDecimal.valueOf(5000)).quantity(100L).alcohol(16D).ingredient("쌀, 복분자").sweet(3L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(유)술소리").get()).distributionPrice(BigDecimal.valueOf(5500.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("주산지 막걸리").price(BigDecimal.valueOf(1200)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 밀가루, 누룩, 입국, 효모, 고과당, 물엿, 아스파탐, 삭카린나트륨, 정제수").sweet(2L).sour(1L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("청송양조장").get()).distributionPrice(BigDecimal.valueOf(1320.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("죽력고").price(BigDecimal.valueOf(60000)).quantity(100L).alcohol(32D).ingredient("국내산쌀, 죽력, 누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(4L).throat(2L).maker(makerRepository.findByName("태인합동주조").get()).distributionPrice(BigDecimal.valueOf(66000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("죽향 생막걸리").price(BigDecimal.valueOf(2000)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 정제효소, 젖산, 효모, 아스파탐, 정제수").sweet(1L).sour(2L).cool(4L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)죽향도가").get()).distributionPrice(BigDecimal.valueOf(2200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("줄포 생 막걸리").price(BigDecimal.valueOf(1200)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 종국정제수, 누룩, 효모, 아스파탐").sweet(2L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("내변산(동진주조)").get()).distributionPrice(BigDecimal.valueOf(1320.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("지란지교 무화과 탁주").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(12D).ingredient("찹쌀, 멥쌀(국내산), 전통누룩(국내산 밀), 정제수, 무화과청, 레드비트분말, 밀함유").sweet(4L).sour(4L).cool(1L).body(4L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("(유)친구들의술지란지교").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("지란지교 약주").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(17D).ingredient("찹쌀 · 멥쌀(국내산), 전통누룩(국내산 밀), 정제수, 밀함유").sweet(4L).sour(4L).cool(4L).body(4L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("(유)친구들의술지란지교").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("지란지교 탁주").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(13D).ingredient("탁주 찹쌀(국내산), 멥쌀(국내산), 누룩(국내산), 정제수").sweet(4L).sour(4L).cool(1L).body(4L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("(유)친구들의술지란지교").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("지리산 허브잎 술").price(BigDecimal.valueOf(1500)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 종국, 정제수, 누룩, 효모, 국내산허브").sweet(1L).sour(2L).cool(2L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("지리산그린영농조합 운봉주조").get()).distributionPrice(BigDecimal.valueOf(1650.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("지리산정담생쌀 막걸리").price(BigDecimal.valueOf(1500)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 종국, 정제수, 누룩, 효모").sweet(1L).sour(3L).cool(2L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("지리산그린영농조합 운봉주조").get()).distributionPrice(BigDecimal.valueOf(1650.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("지장수 생막걸리").price(BigDecimal.valueOf(1300)).quantity(100L).alcohol(6D).ingredient("정제수(지장수), 쌀, 효모, 누룩, 과당 등").sweet(3L).sour(2L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("낙천").get()).distributionPrice(BigDecimal.valueOf(1430.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("지장수 호박 막걸리").price(BigDecimal.valueOf(5000)).quantity(100L).alcohol(6D).ingredient("정제수(지장수), 쌀, 효모, 누룩, 과당 등").sweet(2L).sour(1L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("낙천").get()).distributionPrice(BigDecimal.valueOf(5500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("지장수 호박 생 막걸리").price(BigDecimal.valueOf(1400)).quantity(100L).alcohol(6D).ingredient("정제수(지장수), 쌀, 효모, 누룩, 과당 등").sweet(3L).sour(1L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("낙천").get()).distributionPrice(BigDecimal.valueOf(1540.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("지평 생 쌀막걸리").price(BigDecimal.valueOf(2700)).quantity(100L).alcohol(5D).ingredient("쌀(국내산), 정제수, 국, 효모, 정제효소 등").sweet(4L).sour(1L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("지평주조").get()).distributionPrice(BigDecimal.valueOf(2970.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("지평 생 옛막걸리").price(BigDecimal.valueOf(2500)).quantity(100L).alcohol(5D).ingredient("밀, 정제수, 국, 분말종국, 효모, 정제효소 등").sweet(4L).sour(1L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("지평주조").get()).distributionPrice(BigDecimal.valueOf(2750.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("진도홍주 루비콘").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(40D).ingredient("쌀, 누룩, 지초, 정제수").sweet(3L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("대대로영농조합법인").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("진맥소주 22도").price(BigDecimal.valueOf(22000)).quantity(100L).alcohol(22D).ingredient("유기농 우리밀 100%").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(3L).throat(2L).maker(makerRepository.findByName("농업회사법인 (주)밀과노닐다").get()).distributionPrice(BigDecimal.valueOf(24200.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("진맥소주 40도").price(BigDecimal.valueOf(22000)).quantity(100L).alcohol(40D).ingredient("유기농 우리밀 100%").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(4L).throat(3L).maker(makerRepository.findByName("농업회사법인 (주)밀과노닐다").get()).distributionPrice(BigDecimal.valueOf(24200.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("진맥소주 53도").price(BigDecimal.valueOf(39000)).quantity(100L).alcohol(53D).ingredient("유기농 우리밀 100%").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(4L).throat(4L).maker(makerRepository.findByName("농업회사법인 (주)밀과노닐다").get()).distributionPrice(BigDecimal.valueOf(42900.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("진심 홍삼주 19도").price(BigDecimal.valueOf(3000)).quantity(100L).alcohol(19D).ingredient("쌀, 정제주정, 인삼침출액, 홍삼농축액, 고과당 등").sweet(3L).sour(1L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("태평주가").get()).distributionPrice(BigDecimal.valueOf(3300.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("진쾌남").price(BigDecimal.valueOf(8500)).quantity(100L).alcohol(25D).ingredient("국내산 쌀, 밤, 누룩, 구기자, 오미자, 산수유, 오가피, 동충하초, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(4L).maker(makerRepository.findByName("농업회사법인 사곡양조원").get()).distributionPrice(BigDecimal.valueOf(9350.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("찰막걸리").price(BigDecimal.valueOf(0)).quantity(100L).alcohol(5.5D).ingredient("정제수, 쌀, 밀가루, 찹쌀, 입국, 효모 정제효소제, 아스파탐").sweet(2L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)1932 포천일동막걸리").get()).distributionPrice(BigDecimal.valueOf(0.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("창원 생탁주").price(BigDecimal.valueOf(1000)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 누룩, 효소, 아스파탐, 정제수").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 우포의아침(주)").get()).distributionPrice(BigDecimal.valueOf(1100.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("천년담주").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(15D).ingredient("백미(국내산, 무기농 무농약), 벌꿀(국내산), 정제수").sweet(2L).sour(1L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)죽향도가").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("천년전주 생 막걸리").price(BigDecimal.valueOf(1300)).quantity(100L).alcohol(6D).ingredient("정제수, 쌀, 소맥분, 수쿠랄로스, 효모, 젖산, 정제효소").sweet(1L).sour(1L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(유)산에들에 농업회사법인").get()).distributionPrice(BigDecimal.valueOf(1430.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("천년주").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(25D).ingredient("쌀(국내산), 천년초(열매), 조효소제, 효모, 젖산, 정제효소, 구연산, 정제수").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(2L).throat(3L).maker(makerRepository.findByName("농업회사법인(주)영덕주조").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("천등산 차례주").price(BigDecimal.valueOf(5900)).quantity(100L).alcohol(11D).ingredient("쌀(국내산), 구연산, 효모, 젖산, 정제효소제, 국, 주정, 정제수").sweet(3L).sour(2L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("고헌정영농조합법인").get()).distributionPrice(BigDecimal.valueOf(6490.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("천마 이야기").price(BigDecimal.valueOf(1500)).quantity(100L).alcohol(6D).ingredient("팽화미, 입국미, 무주천마분말, 오미자추출액").sweet(2L).sour(2L).cool(2L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인산들벗(주)").get()).distributionPrice(BigDecimal.valueOf(1650.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("천마몽").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(38D).ingredient("쌀, 누룩, 효모, 천마, 정제수").sweet(3L).sour(0L).cool(0L).body(3L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("덕유양조").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("천매").price(BigDecimal.valueOf(130000)).quantity(100L).alcohol(30D).ingredient("매실주원액, 발효주정, 정제수, 꿀").sweet(2L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("더한주류").get()).distributionPrice(BigDecimal.valueOf(143000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("천비향 약주").price(BigDecimal.valueOf(41000)).quantity(100L).alcohol(16D).ingredient("국내산 쌀, 누룩").sweet(4L).sour(3L).cool(1L).body(3L).balance(4L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)좋은술").get()).distributionPrice(BigDecimal.valueOf(45100.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("천비향 오양주 탁주").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(14D).ingredient("국내산 쌀, 누룩").sweet(2L).sour(2L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)좋은술").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("천비향 화주").price(BigDecimal.valueOf(50000)).quantity(100L).alcohol(40D).ingredient("국내산 쌀, 누룩").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(5L).throat(4L).maker(makerRepository.findByName("농업회사법인(주)좋은술").get()).distributionPrice(BigDecimal.valueOf(55000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("천안 연미주").price(BigDecimal.valueOf(5000)).quantity(100L).alcohol(13D).ingredient("백미 100%(국내산), 한약재 홍삼외 6가지").sweet(2L).sour(3L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 입장주조㈜").get()).distributionPrice(BigDecimal.valueOf(5500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("천지주가 생 막걸리").price(BigDecimal.valueOf(1400)).quantity(100L).alcohol(6D).ingredient("쌀, 정제수, 국, 효모 등").sweet(3L).sour(2L).cool(2L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(유)산에들에 농업회사법인").get()).distributionPrice(BigDecimal.valueOf(1540.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("청남대 블루베리 막걸리").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(6D).ingredient("국내산 쌀, 블루베리엑기스, 효모, 조효소재, 물엿, 아스파탐, 정제수").sweet(3L).sour(2L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 명세주가(주)").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("청명주 500").price(BigDecimal.valueOf(23000)).quantity(100L).alcohol(17D).ingredient("국내산 찹쌀, 누룩, 소맥분").sweet(4L).sour(4L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("중원당").get()).distributionPrice(BigDecimal.valueOf(25300.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("청명주 750").price(BigDecimal.valueOf(36000)).quantity(100L).alcohol(17D).ingredient("국내산 찹쌀, 누룩, 소맥분").sweet(4L).sour(4L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("중원당").get()).distributionPrice(BigDecimal.valueOf(39600.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("청산녹수 꿀막걸리").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(8D).ingredient("쌀(국내산), 벌꿀(국내산), 사과농축액, 효모, 정제효소").sweet(1L).sour(2L).cool(3L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)청산녹수").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("청산녹수 사미인주").price(BigDecimal.valueOf(32000)).quantity(100L).alcohol(8D).ingredient("유기농햅쌀(국내산), 벌꿀(국내산), 입국, 누룩, 효모, 정제수").sweet(2L).sour(2L).cool(4L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)청산녹수").get()).distributionPrice(BigDecimal.valueOf(35200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("청산녹수 생탁주").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 사과농축액, 효모, 정제효소").sweet(1L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)청산녹수").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("청세주").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(18D).ingredient("쌀(100%)").sweet(3L).sour(1L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("병영주조장").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("청송 얼음골 동동주").price(BigDecimal.valueOf(1800)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 밀가루, 누룩, 입국, 효모, 아스파탐, 청송사과액즙, 정제수").sweet(2L).sour(3L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("청송양조장").get()).distributionPrice(BigDecimal.valueOf(1980.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("청송 주왕 사과막걸리").price(BigDecimal.valueOf(1500)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 밀가루, 누룩, 입국, 효모, 아스파탐, 청송사과액즙, 정제수").sweet(2L).sour(3L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("청송양조장").get()).distributionPrice(BigDecimal.valueOf(1650.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("청양 둔송 구기주").price(BigDecimal.valueOf(23000)).quantity(100L).alcohol(16D).ingredient("쌀, 누룩, 구기자, 감초, 두충껍질").sweet(3L).sour(1L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("청양 둔송 구기주").get()).distributionPrice(BigDecimal.valueOf(25300.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("청진주").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(16D).ingredient("찹쌀, 누룩, 정제수").sweet(2L).sour(2L).cool(1L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("전통주연구개발원").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("청춘").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(15D).ingredient("쌀, 누룩, 정제수").sweet(2L).sour(2L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인신탄진주조(주)").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("초선의 꿈 (로제)").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("국내산 포도 100%").sweet(1L).sour(3L).cool(0L).body(2L).balance(0L).incense(0L).throat(2L).maker(makerRepository.findByName("여포와인농장").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("추사 로제").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("사과(국내산)").sweet(2L).sour(3L).cool(2L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("예산사과와인(주)").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("추사 애플와인").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("사과(국내산)").sweet(3L).sour(1L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("예산사과와인(주)").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("추사40").price(BigDecimal.valueOf(60000)).quantity(100L).alcohol(40D).ingredient("사과(국내산)").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(5L).throat(1L).maker(makerRepository.findByName("예산사과와인(주)").get()).distributionPrice(BigDecimal.valueOf(66000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("추사백25").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(25D).ingredient("증류원액(사과증류원액, 사과: 국내산), 정제수").sweet(3L).sour(0L).cool(3L).body(2L).balance(4L).incense(4L).throat(2L).maker(makerRepository.findByName("예산사과와인").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("추사블루").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("블루베리(국내산)").sweet(3L).sour(1L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("예산사과와인(주)").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("추성주").price(BigDecimal.valueOf(80000)).quantity(100L).alcohol(25D).ingredient("쌀, 정제수, 누룩, 오미자, 구기자, 상심자, 갈근").sweet(2L).sour(0L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("추성고을").get()).distributionPrice(BigDecimal.valueOf(88000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("추시와인").price(BigDecimal.valueOf(16000)).quantity(100L).alcohol(12.5D).ingredient("감(국내산) 100%").sweet(3L).sour(2L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("양촌감영농조합법인").get()).distributionPrice(BigDecimal.valueOf(17600.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("충주 백주").price(BigDecimal.valueOf(7800)).quantity(100L).alcohol(35D).ingredient("쌀증류원액(국내산), 당귀, 아스파탐, 아세설팜K, 구연산, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(4L).throat(2L).maker(makerRepository.findByName("고헌정영농조합법인").get()).distributionPrice(BigDecimal.valueOf(8580.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("컨츄리 산머루 와인 (드라이)").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(14D).ingredient("국산 산머루원액 100%").sweet(1L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("컨츄리 농원").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("컨츄리 산머루 와인 (스위트)").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("국산 산머루원액 100%").sweet(2L).sour(3L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("컨츄리 농원").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("컨츄리캠벨 (스위트)").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(12D).ingredient("국산 포도원액 100% (캠벨얼리 100%)").sweet(3L).sour(1L).cool(0L).body(3L).balance(0L).incense(0L).throat(2L).maker(makerRepository.findByName("컨츄리 농원").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("코이버펑크, 머스캣 베일리 에이").price(BigDecimal.valueOf(65000)).quantity(100L).alcohol(12D).ingredient("와이너리 재배 포도 100%").sweet(3L).sour(3L).cool(3L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("코이버펑크").get()).distributionPrice(BigDecimal.valueOf(71500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("코이버펑크, 샤르도네 세미용 블렌드").price(BigDecimal.valueOf(65000)).quantity(100L).alcohol(11D).ingredient("와이너리 재배 포도 100%").sweet(2L).sour(4L).cool(4L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("코이버펑크").get()).distributionPrice(BigDecimal.valueOf(71500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("코이버펑크, 카베르네 소비뇽").price(BigDecimal.valueOf(65000)).quantity(100L).alcohol(12D).ingredient("와이너리 재배 포도 100%").sweet(1L).sour(2L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("코이버펑크").get()).distributionPrice(BigDecimal.valueOf(71500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("쿨샷7.5").price(BigDecimal.valueOf(60000)).quantity(100L).alcohol(7.5D).ingredient("복분자과실, 주정, 효모, 구연산, 정제수").sweet(3L).sour(1L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 고창선운산(유)").get()).distributionPrice(BigDecimal.valueOf(66000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("크라테 레드와인 드라이").price(BigDecimal.valueOf(48000)).quantity(100L).alcohol(11.5D).ingredient("산머루와 포도 98%").sweet(2L).sour(2L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("산머루").get()).distributionPrice(BigDecimal.valueOf(52800.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("크라테 레드와인 스위트").price(BigDecimal.valueOf(48000)).quantity(100L).alcohol(11.5D).ingredient("산머루와 포도 98%").sweet(4L).sour(2L).cool(3L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("산머루").get()).distributionPrice(BigDecimal.valueOf(52800.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("크라테 로제와인").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(11.5D).ingredient("산머루와 포도 98%").sweet(4L).sour(1L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("산머루").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("타미앙스").price(BigDecimal.valueOf(50000)).quantity(100L).alcohol(40D).ingredient("쌀, 정제수, 누룩, 오미자, 구기자, 상심자, 갈근").sweet(1L).sour(0L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("추성고을").get()).distributionPrice(BigDecimal.valueOf(55000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("톡 쏘는 복분자 막걸리").price(BigDecimal.valueOf(1800)).quantity(100L).alcohol(6D).ingredient("쌀, 정제수, 쌀입국, 복분자원액, 효모 등").sweet(5L).sour(1L).cool(3L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("가평 우리술").get()).distributionPrice(BigDecimal.valueOf(1980.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("톡 쏘는 알밤동동").price(BigDecimal.valueOf(1300)).quantity(100L).alcohol(6D).ingredient("쌀, 정제수, 입국, 밤 농축액, 밤 추출물 등").sweet(4L).sour(1L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("가평 우리술").get()).distributionPrice(BigDecimal.valueOf(1430.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("톡 한잔 골드").price(BigDecimal.valueOf(49000)).quantity(100L).alcohol(43D).ingredient("찰보리 90%, 쌀 10%, 민들레분말, 볶음보리").sweet(3L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("농업회사법인(유)대마주조").get()).distributionPrice(BigDecimal.valueOf(53900.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("톡 한잔 소주").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(30D).ingredient("찰보리 90%, 쌀 10%").sweet(2L).sour(0L).cool(0L).body(3L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("농업회사법인(유)대마주조").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("티나").price(BigDecimal.valueOf(54000)).quantity(100L).alcohol(16D).ingredient("딸기추출물, 죽력, 정제수, 주정, 액상과당(포도당), 구연산, 딸기향, 망고향").sweet(0L).sour(0L).cool(0L).body(5L).balance(0L).incense(4L).throat(4L).maker(makerRepository.findByName("추성고을").get()).distributionPrice(BigDecimal.valueOf(59400.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("펀치 쌀 바나나").price(BigDecimal.valueOf(2000)).quantity(100L).alcohol(4D).ingredient("쌀(국내산), 바나나농축액, 효모, 종곡, 정제수, 합성착향료, 합성감미료").sweet(3L).sour(1L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("내변산(동진주조)").get()).distributionPrice(BigDecimal.valueOf(2200.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("편백숲 산소막걸리").price(BigDecimal.valueOf(1900)).quantity(100L).alcohol(5.2D).ingredient("멥쌀, 올리고당, 사과농축액, 누룩, 아스파탐").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)청산녹수").get()).distributionPrice(BigDecimal.valueOf(2090.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("편백숲 산소막걸리 딸기스파클링").price(BigDecimal.valueOf(41000)).quantity(100L).alcohol(6.8D).ingredient("멥쌀, 찹쌀, 누룩, 딸기, 올리고당").sweet(3L).sour(2L).cool(5L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)청산녹수").get()).distributionPrice(BigDecimal.valueOf(45100.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("편백숲 산소막걸리 순수령").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(5.8D).ingredient("멥쌀, 찹쌀, 누룩").sweet(3L).sour(1L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 (주)청산녹수").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("평창 오디주").price(BigDecimal.valueOf(19500)).quantity(100L).alcohol(16D).ingredient("국내산 오디").sweet(1L).sour(3L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)홍지원").get()).distributionPrice(BigDecimal.valueOf(21450.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("평창머루주").price(BigDecimal.valueOf(19500)).quantity(100L).alcohol(16D).ingredient("국내산 산머루").sweet(1L).sour(3L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)홍지원").get()).distributionPrice(BigDecimal.valueOf(21450.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("포엠 레드 드라이와인").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(12D).ingredient("포도(국내산_MBA), 머루(국내산)").sweet(2L).sour(3L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("갈기산포도농원 (주)농업회사법인").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("포엠 레드 스위트와인").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(12D).ingredient("포도(국내산_캠벨얼리, MBA)").sweet(4L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("갈기산포도농원 (주)농업회사법인").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("포엠 로제와인").price(BigDecimal.valueOf(35000)).quantity(100L).alcohol(12D).ingredient("포도(킹데라웨어)").sweet(4L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("갈기산포도농원 (주)농업회사법인").get()).distributionPrice(BigDecimal.valueOf(38500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("포엠 화이트와인").price(BigDecimal.valueOf(35000)).quantity(100L).alcohol(12D).ingredient("청포도(청수)").sweet(4L).sour(4L).cool(4L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("갈기산포도농원 (주)농업회사법인").get()).distributionPrice(BigDecimal.valueOf(38500.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("풍남문").price(BigDecimal.valueOf(27000)).quantity(100L).alcohol(5D).ingredient("보리(국내산), 맥아(국내산), 호프펠렛, 효모, 정제효소제, 정제수").sweet(2L).sour(3L).cool(4L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인 동문거리양조장(주) (전주술로시티)").get()).distributionPrice(BigDecimal.valueOf(29700.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("풍정사계 동").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(42D).ingredient("국내산찹살, 향온곡").sweet(2L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(0L).maker(makerRepository.findByName("농업회사법인(유)화양").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("풍정사계 추").price(BigDecimal.valueOf(15000)).quantity(100L).alcohol(12D).ingredient("국내산찹살, 향온곡").sweet(1L).sour(2L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(유)화양").get()).distributionPrice(BigDecimal.valueOf(16500.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("풍정사계 춘").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(15D).ingredient("국내산찹살, 향온곡").sweet(2L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(유)화양").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("풍정사계 하").price(BigDecimal.valueOf(35000)).quantity(100L).alcohol(18D).ingredient("국내산찹살, 향온곡").sweet(4L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(유)화양").get()).distributionPrice(BigDecimal.valueOf(38500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("필 FEEL").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(40D).ingredient("백미(국내산), 누룩, 효모, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(4L).maker(makerRepository.findByName("농업회사법인 명품안동소주 (주)").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("하향주").price(BigDecimal.valueOf(45000)).quantity(100L).alcohol(17D).ingredient("국내산 찹쌀, 누룩, 정제수").sweet(3L).sour(3L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("하향주가 영농조합법인").get()).distributionPrice(BigDecimal.valueOf(49500.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("하향주 증류주").price(BigDecimal.valueOf(70000)).quantity(100L).alcohol(45D).ingredient("국내산 찹쌀, 누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(3L).throat(3L).maker(makerRepository.findByName("하향주가 영농조합법인").get()).distributionPrice(BigDecimal.valueOf(77000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("한비 동충하초술").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(35D).ingredient("국내산 쌀, 누룩, 가시오가피 뿌리, 동충하초, 정제수").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(4L).throat(1L).maker(makerRepository.findByName("제천한약영농조합법인").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("한비 무병장수술").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(35D).ingredient("국내산쌀, 흑삼, 인삼, 오가피, 오미자, 구기자, 복분자, 차전자, 토사자, 산수유").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(5L).throat(2L).maker(makerRepository.findByName("제천한약영농조합법인").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("한비 쌀소주").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(40D).ingredient("국내산 쌀, 누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(2L).throat(3L).maker(makerRepository.findByName("제천한약영농조합법인").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("한비 오가피술").price(BigDecimal.valueOf(30000)).quantity(100L).alcohol(35D).ingredient("국내산 쌀, 누룩, 가시오가피 뿌리, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(2L).throat(2L).maker(makerRepository.findByName("제천한약영농조합법인").get()).distributionPrice(BigDecimal.valueOf(33000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("한산소곡주").price(BigDecimal.valueOf(6500)).quantity(100L).alcohol(18D).ingredient("찹쌀, 누룩, 백미, 정제수, 야국, 메주콩, 생강, 홍고추").sweet(3L).sour(1L).cool(0L).body(4L).balance(0L).incense(0L).throat(4L).maker(makerRepository.findByName("한산소곡주").get()).distributionPrice(BigDecimal.valueOf(7150.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("한산소곡주(살균주)").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(16D).ingredient("찹쌀, 누룩, 백미, 정제수").sweet(4L).sour(1L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("녹천주조장").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("한산소곡주_생주").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(16D).ingredient("찹쌀, 누룩, 백미, 정제수").sweet(4L).sour(1L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("녹천주조장").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("한스오차드 사과와인").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(11D).ingredient("국산사과원액 100%").sweet(4L).sour(3L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("(주)한국애플리즈").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("한시울").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(40D).ingredient("국내산 쌀, 누룩, 효모, 구연산, 정제수").sweet(0L).sour(0L).cool(0L).body(4L).balance(0L).incense(4L).throat(3L).maker(makerRepository.findByName("농업회사법인 명세주가(주)").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("한주").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(35D).ingredient("국내산 쌀, 밀누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(3L).maker(makerRepository.findByName("한주양조").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("해미읍성 딸기와인").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("해미딸기(99.99%), 아황산염, 소르빈산염").sweet(3L).sour(2L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인해미읍성딸기와인(주)").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("해미읍성 매실와인").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("매실(80%), 아황산염, 소르빈산염").sweet(5L).sour(1L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인해미읍성딸기와인(주)").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("해미읍성 모과와인").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("모과(80%), 아황산염, 소르빈산염").sweet(3L).sour(2L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인해미읍성딸기와인(주)").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("해미읍성 살구와인").price(BigDecimal.valueOf(20000)).quantity(100L).alcohol(12D).ingredient("살구(80%), 아황산염, 소르빈산염").sweet(3L).sour(2L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인해미읍성딸기와인(주)").get()).distributionPrice(BigDecimal.valueOf(22000.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("해방주 18.8도").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(18.8D).ingredient("쌀(국내산), 해방풍(국내산), 조효소제, 효모, 젖산, 정세효소제, 구연산").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(2L).throat(2L).maker(makerRepository.findByName("농업회사법인(주)영덕주조").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("해방주 38도").price(BigDecimal.valueOf(45000)).quantity(100L).alcohol(38D).ingredient("쌀(국내산), 해방풍(국내산), 조효소제, 효모, 젖산, 정제효소제, 구연산").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(3L).maker(makerRepository.findByName("농업회사법인(주)영덕주조").get()).distributionPrice(BigDecimal.valueOf(49500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("해창 생 막걸리 12도").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(12D).ingredient("햅쌀, 찹쌀, 물, 누룩").sweet(1L).sour(1L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("해창주조장").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("해창 생 막걸리 6도").price(BigDecimal.valueOf(3000)).quantity(100L).alcohol(6D).ingredient("햅쌀, 찹쌀, 물, 누룩").sweet(1L).sour(1L).cool(3L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("해창주조장").get()).distributionPrice(BigDecimal.valueOf(3300.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("해창 생 막걸리 9도").price(BigDecimal.valueOf(6000)).quantity(100L).alcohol(9D).ingredient("햅쌀, 찹쌀, 물, 누룩").sweet(1L).sour(1L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("해창주조장").get()).distributionPrice(BigDecimal.valueOf(6600.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("해파랑").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(13D).ingredient("쌀(국내산), 해방풍(국내산), 계량누룩, 젖산, 이소말토올리고당, 정제수").sweet(3L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)영덕주조").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("햇찹쌀이 하늘수").price(BigDecimal.valueOf(1100)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 찹쌀(국내산), 전통누룩, 정제수").sweet(3L).sour(3L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("안양주조장").get()).distributionPrice(BigDecimal.valueOf(1210.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("행운 막걸리").price(BigDecimal.valueOf(1100)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 소맥분(미국산), 전분당, 정제수, 정제효소, 종국, 효모, 젖산, 아스파탐").sweet(3L).sour(1L).cool(1L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("성포양조장").get()).distributionPrice(BigDecimal.valueOf(1210.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("행운주").price(BigDecimal.valueOf(3500)).quantity(100L).alcohol(12D).ingredient("백미(국내산), 밀누룩(국내산), 정제수, 종국, 효모, 아스파탐").sweet(2L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("성포양조장").get()).distributionPrice(BigDecimal.valueOf(3850.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("향수 우리밀 막걸리").price(BigDecimal.valueOf(7900)).quantity(100L).alcohol(9D).ingredient("우리밀, 누룩, 정제수, 무감미료").sweet(2L).sour(3L).cool(3L).body(5L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("이원양조장").get()).distributionPrice(BigDecimal.valueOf(8690.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("허니문와인").price(BigDecimal.valueOf(35000)).quantity(100L).alcohol(10D).ingredient("국내산 벌꿀").sweet(4L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("아이비영농조합법인").get()).distributionPrice(BigDecimal.valueOf(38500.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("허니비 와인").price(BigDecimal.valueOf(35000)).quantity(100L).alcohol(8D).ingredient("국내산 벌꿀").sweet(3L).sour(1L).cool(1L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("아이비영농조합법인").get()).distributionPrice(BigDecimal.valueOf(38500.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("호담 산양산삼 막걸리").price(BigDecimal.valueOf(16000)).quantity(100L).alcohol(6D).ingredient("쌀(경기미), 입국, 산양산삼, 정제수, 아스파탐").sweet(1L).sour(3L).cool(3L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("대농바이오우리산삼").get()).distributionPrice(BigDecimal.valueOf(17600.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("호담 산양산삼주").price(BigDecimal.valueOf(4000)).quantity(100L).alcohol(13D).ingredient("산양산삼, 정제주, 주정").sweet(1L).sour(1L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("대농바이오우리산삼").get()).distributionPrice(BigDecimal.valueOf(4400.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("호담").price(BigDecimal.valueOf(18000)).quantity(100L).alcohol(20D).ingredient("산양산삼, 정제수, 주정").sweet(2L).sour(0L).cool(0L).body(2L).balance(0L).incense(2L).throat(0L).maker(makerRepository.findByName("대농바이오우리산삼").get()).distributionPrice(BigDecimal.valueOf(19800.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("호땅").price(BigDecimal.valueOf(2700)).quantity(100L).alcohol(6D).ingredient("쌀(국내산), 국, 효모, 정제수, 땅콩(국내산)").sweet(3L).sour(1L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("배혜정도가").get()).distributionPrice(BigDecimal.valueOf(2970.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("호랑이 생 막걸리").price(BigDecimal.valueOf(2200)).quantity(100L).alcohol(6D).ingredient("쌀, 정제수, 국, 효모, 젖산 등").sweet(4L).sour(1L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("배혜정 도가").get()).distributionPrice(BigDecimal.valueOf(2420.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("호모루덴스").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(12D).ingredient("쌀, 누룩, 정제수").sweet(1L).sour(2L).cool(2L).body(4L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)산수").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("혼디주").price(BigDecimal.valueOf(8000)).quantity(100L).alcohol(12D).ingredient("감귤(제주산)100%, 정제수, 백설탕, 구연산, 무수아황산").sweet(4L).sour(3L).cool(3L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(주)시트러스").get()).distributionPrice(BigDecimal.valueOf(8800.0)).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        productRepository.save(Product.builder().name("홍로").price(BigDecimal.valueOf(50000)).quantity(100L).alcohol(45D).ingredient("백련, 찹쌀, 멥쌀, 누룩, 자초").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(4L).throat(2L).maker(makerRepository.findByName("영농조합법인 석전상온전통주가").get()).distributionPrice(BigDecimal.valueOf(55000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("홍삼 인삼주").price(BigDecimal.valueOf(70000)).quantity(100L).alcohol(38D).ingredient("쌀, 정제주정, 인삼침출액, 홍삼농축액, 고과당 등").sweet(1L).sour(0L).cool(0L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("태평주가").get()).distributionPrice(BigDecimal.valueOf(77000.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("홍삼명주").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(14D).ingredient("홍삼추출액, 효모, 정백당, 정제수").sweet(1L).sour(3L).cool(1L).body(1L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("자연과 인삼").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("홍삼진심 인삼주 (1set)").price(BigDecimal.valueOf(7000)).quantity(100L).alcohol(19D).ingredient("쌀, 정제주정, 인삼침출액, 홍삼농축액, 고과당 등").sweet(1L).sour(0L).cool(0L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("태평주가").get()).distributionPrice(BigDecimal.valueOf(7700.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("홍천강 탁주").price(BigDecimal.valueOf(10000)).quantity(100L).alcohol(11D).ingredient("홍천 쌀, 정제수, 국(밀 누룩)").sweet(2L).sour(3L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("예술").get()).distributionPrice(BigDecimal.valueOf(11000.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("화주").price(BigDecimal.valueOf(13000)).quantity(100L).alcohol(25D).ingredient("국내산 쌀, 홍삼농축액, 정제수").sweet(0L).sour(0L).cool(0L).body(1L).balance(0L).incense(2L).throat(3L).maker(makerRepository.findByName("내국양조").get()).distributionPrice(BigDecimal.valueOf(14300.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("황금보리소주17").price(BigDecimal.valueOf(25000)).quantity(100L).alcohol(17D).ingredient("보리, 누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(2L).throat(2L).maker(makerRepository.findByName("황금보리(유)농업회사법인").get()).distributionPrice(BigDecimal.valueOf(27500.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("황금보리소주25").price(BigDecimal.valueOf(42500)).quantity(100L).alcohol(25D).ingredient("보리, 누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(3L).throat(2L).maker(makerRepository.findByName("황금보리(유)농업회사법인").get()).distributionPrice(BigDecimal.valueOf(46750.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("황금보리소주40").price(BigDecimal.valueOf(78500)).quantity(100L).alcohol(40D).ingredient("보리, 누룩, 정제수").sweet(0L).sour(0L).cool(0L).body(3L).balance(0L).incense(3L).throat(3L).maker(makerRepository.findByName("황금보리(유)농업회사법인").get()).distributionPrice(BigDecimal.valueOf(86350.0)).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        productRepository.save(Product.builder().name("황진이").price(BigDecimal.valueOf(3500)).quantity(100L).alcohol(12D).ingredient("쌀, 오미자, 산수유").sweet(3L).sour(2L).cool(1L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("농업회사법인(유)술소리").get()).distributionPrice(BigDecimal.valueOf(3850.0)).category(categoryRepository.findByLastName("약주/청주").get()).build());
        productRepository.save(Product.builder().name("황칠주").price(BigDecimal.valueOf(9900)).quantity(100L).alcohol(16D).ingredient("황칠나무잎(제주산), 정제수, 포도당, 효모").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(2L).throat(3L).maker(makerRepository.findByName("왕지케양조장 (제주본초협동조합)").get()).distributionPrice(BigDecimal.valueOf(10890.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("회곡 생 동동주").price(BigDecimal.valueOf(1300)).quantity(100L).alcohol(7D).ingredient("쌀, 입국, 누룩, 아스파탐, 효모, 정제수, 아세설팜칼륨").sweet(3L).sour(2L).cool(3L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("회곡양조장").get()).distributionPrice(BigDecimal.valueOf(1430.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("회곡 생 막걸리").price(BigDecimal.valueOf(1300)).quantity(100L).alcohol(6D).ingredient("쌀, 입국, 누룩, 아스파탐, 효모, 정제수, 아세설팜칼륨").sweet(2L).sour(2L).cool(2L).body(2L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("회곡양조장").get()).distributionPrice(BigDecimal.valueOf(1430.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("흑돈주").price(BigDecimal.valueOf(12000)).quantity(100L).alcohol(16D).ingredient("황칠나무(제주산), 정제수, 포도당, 효모").sweet(0L).sour(0L).cool(0L).body(2L).balance(0L).incense(2L).throat(3L).maker(makerRepository.findByName("왕지케양조장 (제주본초협동조합)").get()).distributionPrice(BigDecimal.valueOf(13200.0)).category(categoryRepository.findByLastName("기타주류").get()).build());
        productRepository.save(Product.builder().name("희양산막걸리 15도").price(BigDecimal.valueOf(9500)).quantity(100L).alcohol(15D).ingredient("쌀(국내산), 누룩, 정제수").sweet(3L).sour(4L).cool(1L).body(5L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("두술도가").get()).distributionPrice(BigDecimal.valueOf(10450.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        productRepository.save(Product.builder().name("희양산막걸리 9도").price(BigDecimal.valueOf(8000)).quantity(100L).alcohol(9D).ingredient("쌀(국내산), 누룩, 정제수").sweet(2L).sour(3L).cool(2L).body(3L).balance(0L).incense(0L).throat(0L).maker(makerRepository.findByName("두술도가").get()).distributionPrice(BigDecimal.valueOf(8800.0)).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
    }

    public void initCategory() {
        CategoryClass categoryClass = categoryClassRepository.save(CategoryClass.builder().firstName("전통주").build());
        categoryRepository.save(Category.builder().categoryClass(categoryClass).lastName("탁주/막걸리").build());
        categoryRepository.save(Category.builder().categoryClass(categoryClass).lastName("약주/청주").build());
        categoryRepository.save(Category.builder().categoryClass(categoryClass).lastName("과실주/와인").build());
        categoryRepository.save(Category.builder().categoryClass(categoryClass).lastName("증류주/소주/리큐르").build());
        categoryRepository.save(Category.builder().categoryClass(categoryClass).lastName("기타주류").build());
    }

    public void initItem() {
        itemRepository.save(Item.builder().name("1000억 막걸리 프리바이오 3개입").price(BigDecimal.valueOf(11550.000)).info("1000억 막걸리 프리바이오").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("1000억 유산균막걸리 3개입").price(BigDecimal.valueOf(10560.000)).info("1000억 유산균막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("1932 새싹땅콩 햅쌀막걸리 3개입").price(BigDecimal.valueOf(49500.000)).info("1932 새싹땅콩 햅쌀막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("1932 새싹땅콩 흑미막걸리 3개입").price(BigDecimal.valueOf(49500.000)).info("1932 새싹땅콩 흑미막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("33JU 3개입").price(BigDecimal.valueOf(161700.000)).info("33JU").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("52C 3개입").price(BigDecimal.valueOf(33000.000)).info("52C").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("DMZ 240km 3개입").price(BigDecimal.valueOf(26400.000)).info("DMZ 240km").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("G12 골디락스 3개입").price(BigDecimal.valueOf(39600.000)).info("G12 골디락스").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("The 찾을수록 피치 3개입").price(BigDecimal.valueOf(29700.000)).info("The 찾을수록 피치").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("The 찾을수록 모스카토 3개입").price(BigDecimal.valueOf(29700.000)).info("The 찾을수록 모스카토").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("The 찾을수록 애플 3개입").price(BigDecimal.valueOf(29700.000)).info("The 찾을수록 애플").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("The 찾을수록 감귤 3개입").price(BigDecimal.valueOf(29700.000)).info("The 찾을수록 감귤").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("The 찾을수록 생강 3개입").price(BigDecimal.valueOf(29700.000)).info("The 찾을수록 생강").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("가덕 순쌀 막걸리 3개입").price(BigDecimal.valueOf(44550.000)).info("가덕 순쌀 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("가을빛 레드와인 3개입").price(BigDecimal.valueOf(115500.000)).info("가을빛 레드와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("가평 잣 막걸리 3개입").price(BigDecimal.valueOf(4785.000)).info("가평 잣 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("감 보드카 3개입").price(BigDecimal.valueOf(46200.000)).info("감 보드카").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("감그린 레귤러 3개입").price(BigDecimal.valueOf(59400.000)).info("감그린 레귤러").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("감그린 스페셜 3개입").price(BigDecimal.valueOf(82500.000)).info("감그린 스페셜").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("감그린 아이스와인 3개입").price(BigDecimal.valueOf(293700.000)).info("감그린 아이스와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("감사 3개입").price(BigDecimal.valueOf(49500.000)).info("감사").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("감아락 25도 3개입").price(BigDecimal.valueOf(85800.000)).info("감아락 25도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("감악산 머루주 3개입").price(BigDecimal.valueOf(92400.000)).info("감악산 머루주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("감이슬 3개입").price(BigDecimal.valueOf(33000.000)).info("감이슬").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("감자술 13도 3개입").price(BigDecimal.valueOf(46200.000)).info("감자술 13도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("감홍로 백자 3개입").price(BigDecimal.valueOf(247500.000)).info("감홍로 백자").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("감홍로 청자 3개입").price(BigDecimal.valueOf(297000.000)).info("감홍로 청자").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("강소주 3개입").price(BigDecimal.valueOf(36300.000)).info("강소주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("강쇠 3개입").price(BigDecimal.valueOf(8250.000)).info("강쇠").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("걍즐겨 3개입").price(BigDecimal.valueOf(19800.000)).info("걍즐겨").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("겨울소주 25도 3개입").price(BigDecimal.valueOf(33000.000)).info("겨울소주 25도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("경기전 3개입").price(BigDecimal.valueOf(89100.000)).info("경기전").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("계룡백일주 12년 3개입").price(BigDecimal.valueOf(495000.000)).info("계룡백일주 12년").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("계룡백일주 16도 3개입").price(BigDecimal.valueOf(122100.000)).info("계룡백일주 16도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("계룡백일주 30도 3개입").price(BigDecimal.valueOf(132000.000)).info("계룡백일주 30도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("계룡백일주 40도 3개입").price(BigDecimal.valueOf(264000.000)).info("계룡백일주 40도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("계룡산 산삼주 금수강산 21도 3개입").price(BigDecimal.valueOf(363000.000)).info("계룡산 산삼주 금수강산 21도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("계룡산 산삼주 금수강산 40도 3개입").price(BigDecimal.valueOf(495000.000)).info("계룡산 산삼주 금수강산 40도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("고구마 아락 3개입").price(BigDecimal.valueOf(82500.000)).info("고구마 아락").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("고도리 레드와인 스위트 3개입").price(BigDecimal.valueOf(72600.000)).info("고도리 레드와인 스위트").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("고도리 복숭아와인 3개입").price(BigDecimal.valueOf(125400.000)).info("고도리 복숭아와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("고도리 화이트와인 드라이 3개입").price(BigDecimal.valueOf(72600.000)).info("고도리 화이트와인 드라이").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("고도리 화이트와인 스위트 3개입").price(BigDecimal.valueOf(72600.000)).info("고도리 화이트와인 스위트").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("고소리 술 3개입").price(BigDecimal.valueOf(148500.000)).info("고소리 술").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("고소리술 3개입").price(BigDecimal.valueOf(105600.000)).info("고소리술").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("고운달 백자 3개입").price(BigDecimal.valueOf(1188000.000)).info("고운달 백자").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("고운달 오크 3개입").price(BigDecimal.valueOf(1188000.000)).info("고운달 오크").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("고창복분자주 3개입").price(BigDecimal.valueOf(8250.000)).info("고창복분자주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("고창선운산 땡큐블루베리주 3개입").price(BigDecimal.valueOf(198000.000)).info("고창선운산 땡큐블루베리주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("공주애 오디와인 3개입").price(BigDecimal.valueOf(19800.000)).info("공주애 오디와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("구기홍주 14도 3개입").price(BigDecimal.valueOf(33000.000)).info("구기홍주 14도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("구름을 벗삼아 3개입").price(BigDecimal.valueOf(4950.000)).info("구름을 벗삼아").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("귀감 3개입").price(BigDecimal.valueOf(82500.000)).info("귀감").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("그랑꼬또 M56 3개입").price(BigDecimal.valueOf(69300.000)).info("그랑꼬또 M56").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("그랑꼬또 M5610 3개입").price(BigDecimal.valueOf(184800.000)).info("그랑꼬또 M5610").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("그랑꼬또 레드와인 3개입").price(BigDecimal.valueOf(115500.000)).info("그랑꼬또 레드와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("그랑꼬또 로제와인 3개입").price(BigDecimal.valueOf(69300.000)).info("그랑꼬또 로제와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("그랑꼬또 청수 3개입").price(BigDecimal.valueOf(242550.000)).info("그랑꼬또 청수").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("그랑꼬또 화이트와인 3개입").price(BigDecimal.valueOf(132000.000)).info("그랑꼬또 화이트와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("그랑티 그르 S1974 3개입").price(BigDecimal.valueOf(132000.000)).info("그랑티 그르 S1974").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("그랑티그르CE2002 3개입").price(BigDecimal.valueOf(132000.000)).info("그랑티그르CE2002").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("그랑티그르M1988 3개입").price(BigDecimal.valueOf(132000.000)).info("그랑티그르M1988").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("금산인삼주 3개입").price(BigDecimal.valueOf(39600.000)).info("금산인삼주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("금정산성 막걸리 3개입").price(BigDecimal.valueOf(62700.000)).info("금정산성 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("기다림 16도 3개입").price(BigDecimal.valueOf(36300.000)).info("기다림 16도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("기다림 25도 3개입").price(BigDecimal.valueOf(32670.000)).info("기다림 25도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("기다림 34도 3개입").price(BigDecimal.valueOf(49500.000)).info("기다림 34도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("기다림 맑은술 3개입").price(BigDecimal.valueOf(82500.000)).info("기다림 맑은술").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("김천 과하주 23도 3개입").price(BigDecimal.valueOf(72600.000)).info("김천 과하주 23도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("김천과하주 16도 3개입").price(BigDecimal.valueOf(66000.000)).info("김천과하주 16도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("김포 막걸리 3개입").price(BigDecimal.valueOf(3960.000)).info("김포 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("김포별주 3개입").price(BigDecimal.valueOf(13200.000)).info("김포별주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("김포약주 3개입").price(BigDecimal.valueOf(33000.000)).info("김포약주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("김포예주 프리미엄 3개입").price(BigDecimal.valueOf(59400.000)).info("김포예주 프리미엄").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("김포특주 3개입").price(BigDecimal.valueOf(9900.000)).info("김포특주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("까메오 막걸리 3개입").price(BigDecimal.valueOf(16500.000)).info("까메오 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("나루 생막걸리 11.5도 3개입").price(BigDecimal.valueOf(36300.000)).info("나루 생막걸리 11.5도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("나루 생막걸리 6도 3개입").price(BigDecimal.valueOf(23100.000)).info("나루 생막걸리 6도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("남산애 레드와인 3개입").price(BigDecimal.valueOf(148500.000)).info("남산애 레드와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("남산애 포트와인 3개입").price(BigDecimal.valueOf(181500.000)).info("남산애 포트와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("내장산 복분자주 지통1호 3개입").price(BigDecimal.valueOf(59400.000)).info("내장산 복분자주 지통1호").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("녹고의눈물 3개입").price(BigDecimal.valueOf(75900.000)).info("녹고의눈물").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("녹파주 3개입").price(BigDecimal.valueOf(115500.000)).info("녹파주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("뉴트로 3개입").price(BigDecimal.valueOf(19800.000)).info("뉴트로").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("느낌 19.8도 3개입").price(BigDecimal.valueOf(13200.000)).info("느낌 19.8도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("느낌 30도 3개입").price(BigDecimal.valueOf(21450.000)).info("느낌 30도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("느린마을 막걸리 3개입").price(BigDecimal.valueOf(11880.000)).info("느린마을 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("능이주 3개입").price(BigDecimal.valueOf(39600.000)).info("능이주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("니모메 3개입").price(BigDecimal.valueOf(108900.000)).info("니모메").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("다래와인 3004 3개입").price(BigDecimal.valueOf(33000.000)).info("다래와인 3004").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("다래와인 7004D 3개입").price(BigDecimal.valueOf(92400.000)).info("다래와인 7004D").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("다래와인 7004S 3개입").price(BigDecimal.valueOf(59400.000)).info("다래와인 7004S").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("다랭이팜 생 막걸리 (백미) 3개입").price(BigDecimal.valueOf(13200.000)).info("다랭이팜 생 막걸리 (백미)").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("다랭이팜 생 막걸리 (흑미) 3개입").price(BigDecimal.valueOf(13200.000)).info("다랭이팜 생 막걸리 (흑미)").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("다랭이팜 유자 막걸리 3개입").price(BigDecimal.valueOf(13200.000)).info("다랭이팜 유자 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("담솔 40도 3개입").price(BigDecimal.valueOf(72600.000)).info("담솔 40도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("담양죽력고 3개입").price(BigDecimal.valueOf(42900.000)).info("담양죽력고").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("담은 3개입").price(BigDecimal.valueOf(108900.000)).info("담은").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("담향 대대포 블루 3개입").price(BigDecimal.valueOf(13200.000)).info("담향 대대포 블루").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("당당하리 3개입").price(BigDecimal.valueOf(52800.000)).info("당당하리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("대관령 복분자주 3개입").price(BigDecimal.valueOf(42900.000)).info("대관령 복분자주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("대윤 가야곡 왕주 3개입").price(BigDecimal.valueOf(13200.000)).info("대윤 가야곡 왕주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("대잎 생동동주 3개입").price(BigDecimal.valueOf(8250.000)).info("대잎 생동동주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("대작 생막걸리 3개입").price(BigDecimal.valueOf(6600.000)).info("대작 생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("대통대잎술 십오야 3개입").price(BigDecimal.valueOf(52800.000)).info("대통대잎술 십오야").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("도구 막걸리 3개입").price(BigDecimal.valueOf(49500.000)).info("도구 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("도깨비술 11도 3개입").price(BigDecimal.valueOf(39600.000)).info("도깨비술 11도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("도깨비술 7도 3개입").price(BigDecimal.valueOf(26400.000)).info("도깨비술 7도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("도깨비술 9도 3개입").price(BigDecimal.valueOf(33000.000)).info("도깨비술 9도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("도로시 머루주 3개입").price(BigDecimal.valueOf(82500.000)).info("도로시 머루주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("도문대작 생막걸리 3개입").price(BigDecimal.valueOf(9900.000)).info("도문대작 생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("독산 53도 3개입").price(BigDecimal.valueOf(82500.000)).info("독산 53도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("동강더덕주 3개입").price(BigDecimal.valueOf(11550.000)).info("동강더덕주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("동몽 3개입").price(BigDecimal.valueOf(99000.000)).info("동몽").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("동정춘 3개입").price(BigDecimal.valueOf(59400.000)).info("동정춘").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("동학 1957 3개입").price(BigDecimal.valueOf(11550.000)).info("동학 1957").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("동해 동동주 3개입").price(BigDecimal.valueOf(49500.000)).info("동해 동동주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("두레앙 22도 3개입").price(BigDecimal.valueOf(16500.000)).info("두레앙 22도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("두레앙 브랜디 3개입").price(BigDecimal.valueOf(231000.000)).info("두레앙 브랜디").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("두레앙 와인 3개입").price(BigDecimal.valueOf(49500.000)).info("두레앙 와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("두레앙 증류주 3개입").price(BigDecimal.valueOf(115500.000)).info("두레앙 증류주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("두리향 3개입").price(BigDecimal.valueOf(118800.000)).info("두리향").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("두유노 3개입").price(BigDecimal.valueOf(19800.000)).info("두유노").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("라이스퐁당 13도 3개입").price(BigDecimal.valueOf(49500.000)).info("라이스퐁당 13도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("라이스퐁당 17도 3개입").price(BigDecimal.valueOf(59400.000)).info("라이스퐁당 17도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("레돔 내추럴 스파클링 로제와인 3개입").price(BigDecimal.valueOf(125400.000)).info("레돔 내추럴 스파클링 로제와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("레돔 시드르 3개입").price(BigDecimal.valueOf(105600.000)).info("레돔 시드르").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("려(驪)고구마증류소주 25도 3개입").price(BigDecimal.valueOf(0.000)).info("려(驪)고구마증류소주 25도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("려(驪)고구마증류소주 40도 3개입").price(BigDecimal.valueOf(0.000)).info("려(驪)고구마증류소주 40도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("려(驪)증류소주 25도 3개입").price(BigDecimal.valueOf(99000.000)).info("려(驪)증류소주 25도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("로얄 안동소주 18년 3개입").price(BigDecimal.valueOf(237600.000)).info("로얄 안동소주 18년").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("르깔롱 3개입").price(BigDecimal.valueOf(115500.000)).info("르깔롱").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("마셔블랑 3개입").price(BigDecimal.valueOf(66000.000)).info("마셔블랑").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("마주 소곡주 3개입").price(BigDecimal.valueOf(56100.000)).info("마주 소곡주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("마주 소화곡주 3개입").price(BigDecimal.valueOf(82500.000)).info("마주 소화곡주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("막시모40 3개입").price(BigDecimal.valueOf(161700.000)).info("막시모40").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("만강에 비친 달 3개입").price(BigDecimal.valueOf(39600.000)).info("만강에 비친 달").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("맑은 문희주 3개입").price(BigDecimal.valueOf(118800.000)).info("맑은 문희주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("맑은내일 WINery 단감명작 3개입").price(BigDecimal.valueOf(66000.000)).info("맑은내일 WINery 단감명작").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("맑은내일 발효막걸리 3개입").price(BigDecimal.valueOf(7260.000)).info("맑은내일 발효막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("맑은내일 우포 3개입").price(BigDecimal.valueOf(16500.000)).info("맑은내일 우포").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("맑은술 해밀 3개입").price(BigDecimal.valueOf(82500.000)).info("맑은술 해밀").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("매실 막걸리 3개입").price(BigDecimal.valueOf(11550.000)).info("매실 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("매실원주 15도 3개입").price(BigDecimal.valueOf(19800.000)).info("매실원주 15도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("매실향기 담은 술 3개입").price(BigDecimal.valueOf(19800.000)).info("매실향기 담은 술").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("머루 이야기 3개입").price(BigDecimal.valueOf(19800.000)).info("머루 이야기").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("머르드 서 드라이 3개입").price(BigDecimal.valueOf(115500.000)).info("머르드 서 드라이").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("머르드 서 스위트 3개입").price(BigDecimal.valueOf(99000.000)).info("머르드 서 스위트").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("메로니아 3개입").price(BigDecimal.valueOf(6600.000)).info("메로니아").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("메밀로 3개입").price(BigDecimal.valueOf(495000.000)).info("메밀로").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("면천두견주 3개입").price(BigDecimal.valueOf(105600.000)).info("면천두견주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("명가원 복분자술 3개입").price(BigDecimal.valueOf(66000.000)).info("명가원 복분자술").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("명술 3개입").price(BigDecimal.valueOf(99000.000)).info("명술").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("명인 홍삼주 3개입").price(BigDecimal.valueOf(39600.000)).info("명인 홍삼주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("명작복분자 3개입").price(BigDecimal.valueOf(257400.000)).info("명작복분자").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("명품 진도홍주 3개입").price(BigDecimal.valueOf(66000.000)).info("명품 진도홍주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("모월 로 3개입").price(BigDecimal.valueOf(82500.000)).info("모월 로").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("모월 연 3개입").price(BigDecimal.valueOf(59400.000)).info("모월 연").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("모월 인 3개입").price(BigDecimal.valueOf(132000.000)).info("모월 인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("모월 청 3개입").price(BigDecimal.valueOf(69300.000)).info("모월 청").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("모을동주 소주 3개입").price(BigDecimal.valueOf(49500.000)).info("모을동주 소주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("모을동주 약주 3개입").price(BigDecimal.valueOf(42900.000)).info("모을동주 약주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("무주 구천동 머루와인 3개입").price(BigDecimal.valueOf(82500.000)).info("무주 구천동 머루와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("무주 구천동 산머루주 3개입").price(BigDecimal.valueOf(49500.000)).info("무주 구천동 산머루주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("문경바람 백자 25도 3개입").price(BigDecimal.valueOf(99000.000)).info("문경바람 백자 25도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("문경바람 백자 40도 3개입").price(BigDecimal.valueOf(132000.000)).info("문경바람 백자 40도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("문경바람 오크 40도 3개입").price(BigDecimal.valueOf(145200.000)).info("문경바람 오크 40도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("문배술 헤리티지 23도 3개입").price(BigDecimal.valueOf(165000.000)).info("문배술 헤리티지 23도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("문배술 헤리티지 40도 3개입").price(BigDecimal.valueOf(158400.000)).info("문배술 헤리티지 40도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("문배술헤리티지25 3개입").price(BigDecimal.valueOf(181500.000)).info("문배술헤리티지25").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("문경오미자 수제 전통주 3개입").price(BigDecimal.valueOf(69300.000)).info("문경오미자 수제 전통주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("햇찹쌀 수제 전통주 3개입").price(BigDecimal.valueOf(59400.000)).info("햇찹쌀 수제 전통주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("미르25 3개입").price(BigDecimal.valueOf(59400.000)).info("미르25").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("미르40 3개입").price(BigDecimal.valueOf(75900.000)).info("미르40").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("미생 막걸리 3개입").price(BigDecimal.valueOf(3630.000)).info("미생 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("미소 생막걸리 3개입").price(BigDecimal.valueOf(4950.000)).info("미소 생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("미소 아이스 3개입").price(BigDecimal.valueOf(132000.000)).info("미소 아이스").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("미인약주 3개입").price(BigDecimal.valueOf(82500.000)).info("미인약주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("미인탁주 3개입").price(BigDecimal.valueOf(49500.000)).info("미인탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("민속주 안동소주 3개입").price(BigDecimal.valueOf(92400.000)).info("민속주 안동소주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("민속주안동소주 3개입").price(BigDecimal.valueOf(92400.000)).info("민속주안동소주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("바나나 주 3개입").price(BigDecimal.valueOf(5610.000)).info("바나나 주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("바랑 탁 3개입").price(BigDecimal.valueOf(59400.000)).info("바랑 탁").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("밤꽃향기 3개입").price(BigDecimal.valueOf(13200.000)).info("밤꽃향기").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("방문주 약주 3개입").price(BigDecimal.valueOf(23100.000)).info("방문주 약주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("방문주 탁주 3개입").price(BigDecimal.valueOf(19800.000)).info("방문주 탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("배꽃담은 연 생막걸리 3개입").price(BigDecimal.valueOf(66000.000)).info("배꽃담은 연 생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("배도가 로아 19 레드 3개입").price(BigDecimal.valueOf(33000.000)).info("배도가 로아 19 레드").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("배도가 로아 40도 옐로우 3개입").price(BigDecimal.valueOf(66000.000)).info("배도가 로아 40도 옐로우").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("백년향 3개입").price(BigDecimal.valueOf(108900.000)).info("백년향").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("백련 맑은술 3개입").price(BigDecimal.valueOf(23100.000)).info("백련 맑은술").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("백련 생막걸리 Misty 3개입").price(BigDecimal.valueOf(9900.000)).info("백련 생막걸리 Misty").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("백련 생막걸리 snow 3개입").price(BigDecimal.valueOf(5280.000)).info("백련 생막걸리 snow").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("백운 복분자 와인 3개입").price(BigDecimal.valueOf(23100.000)).info("백운 복분자 와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("백운 복분자주 3개입").price(BigDecimal.valueOf(23100.000)).info("백운 복분자주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("백이주 3개입").price(BigDecimal.valueOf(99000.000)).info("백이주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("백자주 3개입").price(BigDecimal.valueOf(59400.000)).info("백자주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("뱅꼬레레드 3개입").price(BigDecimal.valueOf(82500.000)).info("뱅꼬레레드").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("뱅꼬레로제 3개입").price(BigDecimal.valueOf(75900.000)).info("뱅꼬레로제").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("뱅꼬레아이스 3개입").price(BigDecimal.valueOf(297000.000)).info("뱅꼬레아이스").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("뱅꼬레화이트 3개입").price(BigDecimal.valueOf(75900.000)).info("뱅꼬레화이트").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("베베마루 캠벨로제 스위트 3개입").price(BigDecimal.valueOf(66000.000)).info("베베마루 캠벨로제 스위트").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("베베마루 캠벨로제 3개입").price(BigDecimal.valueOf(66000.000)).info("베베마루 캠벨로제").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("별바랑 3개입").price(BigDecimal.valueOf(89100.000)).info("별바랑").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("병영설성 동동주 3개입").price(BigDecimal.valueOf(8250.000)).info("병영설성 동동주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("병영설성 생막걸리 3개입").price(BigDecimal.valueOf(11550.000)).info("병영설성 생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("병영설성사또 3개입").price(BigDecimal.valueOf(132000.000)).info("병영설성사또").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("병영소주 3개입").price(BigDecimal.valueOf(196020.000)).info("병영소주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("복분자 아락 3개입").price(BigDecimal.valueOf(132000.000)).info("복분자 아락").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("복분자음 3개입").price(BigDecimal.valueOf(19800.000)).info("복분자음").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("복분자주 360 3개입").price(BigDecimal.valueOf(19800.000)).info("복분자주 360").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("복순도가 손 막걸리 3개입").price(BigDecimal.valueOf(39600.000)).info("복순도가 손 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("볼빨간막걸리 10 3개입").price(BigDecimal.valueOf(23100.000)).info("볼빨간막걸리 10").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("볼빨간막걸리 7 3개입").price(BigDecimal.valueOf(16500.000)).info("볼빨간막걸리 7").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("봉하쌀 생막걸리 3개입").price(BigDecimal.valueOf(6600.000)).info("봉하쌀 생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("부안 참뽕 막걸리 3개입").price(BigDecimal.valueOf(6600.000)).info("부안 참뽕 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("부안 참뽕 와인 3개입").price(BigDecimal.valueOf(59400.000)).info("부안 참뽕 와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("부자 10 3개입").price(BigDecimal.valueOf(16500.000)).info("부자 10").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("불소곡주 3개입").price(BigDecimal.valueOf(99000.000)).info("불소곡주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("붉은 원숭이 3개입").price(BigDecimal.valueOf(23100.000)).info("붉은 원숭이").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("블루베리 이야기 3개입").price(BigDecimal.valueOf(19800.000)).info("블루베리 이야기").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("산내울 복분자주 3개입").price(BigDecimal.valueOf(66000.000)).info("산내울 복분자주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("산내울 사과애주 3개입").price(BigDecimal.valueOf(46200.000)).info("산내울 사과애주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("산내울 오미자주 3개입").price(BigDecimal.valueOf(66000.000)).info("산내울 오미자주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("산막 생유 막걸리 3개입").price(BigDecimal.valueOf(3960.000)).info("산막 생유 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("산막대덕주 3개입").price(BigDecimal.valueOf(66000.000)).info("산막대덕주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("산정호수 동정춘막걸리 3개입").price(BigDecimal.valueOf(66000.000)).info("산정호수 동정춘막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("삼선 3개입").price(BigDecimal.valueOf(49500.000)).info("삼선").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("삼양춘 생약주 3개입").price(BigDecimal.valueOf(66000.000)).info("삼양춘 생약주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("삼양춘 생탁주 3개입").price(BigDecimal.valueOf(39600.000)).info("삼양춘 생탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("삼양춘 청주 3개입").price(BigDecimal.valueOf(55440.000)).info("삼양춘 청주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("생 청주 막걸리 3개입").price(BigDecimal.valueOf(4950.000)).info("생 청주 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("샤토미소 랑 3개입").price(BigDecimal.valueOf(66000.000)).info("샤토미소 랑").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("샤토미소 레드 프리미엄 드라이 3개입").price(BigDecimal.valueOf(132000.000)).info("샤토미소 레드 프리미엄 드라이").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("샤토미소 스위트 3개입").price(BigDecimal.valueOf(66000.000)).info("샤토미소 스위트").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("샤토미소 스위트 로제 3개입").price(BigDecimal.valueOf(66000.000)).info("샤토미소 스위트 로제").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("샤토미소 영동 3개입").price(BigDecimal.valueOf(99000.000)).info("샤토미소 영동").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("샹스프랑보아즈 3개입").price(BigDecimal.valueOf(495000.000)).info("샹스프랑보아즈").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("서울의 밤 3개입").price(BigDecimal.valueOf(24750.000)).info("서울의 밤").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("서주 16도 3개입").price(BigDecimal.valueOf(148500.000)).info("서주 16도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("석로주 3개입").price(BigDecimal.valueOf(0.000)).info("석로주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("석탄주 약주 3개입").price(BigDecimal.valueOf(23100.000)).info("석탄주 약주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("석탄주 탁주 3개입").price(BigDecimal.valueOf(19800.000)).info("석탄주 탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("선운산 복분자와인 3개입").price(BigDecimal.valueOf(19800.000)).info("선운산 복분자와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("선운산 복분자주 3개입").price(BigDecimal.valueOf(82500.000)).info("선운산 복분자주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("선운산 복분자주 프리미엄 3개입").price(BigDecimal.valueOf(132000.000)).info("선운산 복분자주 프리미엄").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("선운산의 아침 복분자막걸리 3개입").price(BigDecimal.valueOf(92400.000)).info("선운산의 아침 복분자막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("선호 생막걸리 3개입").price(BigDecimal.valueOf(5610.000)).info("선호 생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("설궁 3개입").price(BigDecimal.valueOf(0.000)).info("설궁").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("설레온 3개입").price(BigDecimal.valueOf(66000.000)).info("설레온").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("설련주 3개입").price(BigDecimal.valueOf(115500.000)).info("설련주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("설성 만월 막걸리 3개입").price(BigDecimal.valueOf(13200.000)).info("설성 만월 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("설하담 3개입").price(BigDecimal.valueOf(24420.000)).info("설하담").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("성포 생막걸리 3개입").price(BigDecimal.valueOf(3630.000)).info("성포 생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("세우리 3개입").price(BigDecimal.valueOf(825000.000)).info("세우리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("세종 쌀 막걸리 3개입").price(BigDecimal.valueOf(4950.000)).info("세종 쌀 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("세종 알밤주 3개입").price(BigDecimal.valueOf(4950.000)).info("세종 알밤주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("세종 오가닉 3개입").price(BigDecimal.valueOf(29700.000)).info("세종 오가닉").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("세종대왕어주 약주 3개입").price(BigDecimal.valueOf(85470.000)).info("세종대왕어주 약주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("세종대왕어주 탁주 3개입").price(BigDecimal.valueOf(55770.000)).info("세종대왕어주 탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("소곡화주 3개입").price(BigDecimal.valueOf(148500.000)).info("소곡화주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("소나무와 학 3개입").price(BigDecimal.valueOf(128700.000)).info("소나무와 학").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("소백산 검은콩 막걸리 3개입").price(BigDecimal.valueOf(9900.000)).info("소백산 검은콩 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("소백산 생 막걸리 3개입").price(BigDecimal.valueOf(6534.000)).info("소백산 생 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("소백산 생 만찬주 3개입").price(BigDecimal.valueOf(3960.000)).info("소백산 생 만찬주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("소백산 청 동동주 3개입").price(BigDecimal.valueOf(9900.000)).info("소백산 청 동동주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("소양강 생 막걸리 3개입").price(BigDecimal.valueOf(3960.000)).info("소양강 생 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("솔송주 3개입").price(BigDecimal.valueOf(23100.000)).info("솔송주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("송명섭 막걸리 3개입").price(BigDecimal.valueOf(9900.000)).info("송명섭 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("송이주 3개입").price(BigDecimal.valueOf(39600.000)).info("송이주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("송화백일주 3개입").price(BigDecimal.valueOf(148500.000)).info("송화백일주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("수삼단본 23도 3개입").price(BigDecimal.valueOf(105600.000)).info("수삼단본 23도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("수삼단본 43도 3개입").price(BigDecimal.valueOf(138600.000)).info("수삼단본 43도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("순향주 3개입").price(BigDecimal.valueOf(184800.000)).info("순향주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("술공방 9.0 생막걸리 3개입").price(BigDecimal.valueOf(16500.000)).info("술공방 9.0 생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("술그리다 생탁주 3개입").price(BigDecimal.valueOf(29700.000)).info("술그리다 생탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("술샘 이화주 3개입").price(BigDecimal.valueOf(25080.000)).info("술샘 이화주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("술아 국화주 3개입").price(BigDecimal.valueOf(118800.000)).info("술아 국화주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("술아 막걸리 3개입").price(BigDecimal.valueOf(69300.000)).info("술아 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("술아 매화주 3개입").price(BigDecimal.valueOf(118800.000)).info("술아 매화주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("술아 순곡주 3개입").price(BigDecimal.valueOf(118800.000)).info("술아 순곡주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("술아 연화주 3개입").price(BigDecimal.valueOf(118800.000)).info("술아 연화주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("술예쁘다 생탁주 3개입").price(BigDecimal.valueOf(59400.000)).info("술예쁘다 생탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("술취한 원숭이 3개입").price(BigDecimal.valueOf(23100.000)).info("술취한 원숭이").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("술헤는밤 3개입").price(BigDecimal.valueOf(19470.000)).info("술헤는밤").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("스타베리오디 3개입").price(BigDecimal.valueOf(92400.000)).info("스타베리오디").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("시나브로 드 글로리아 3개입").price(BigDecimal.valueOf(82500.000)).info("시나브로 드 글로리아").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("시나브로 레드 드라이 3개입").price(BigDecimal.valueOf(82500.000)).info("시나브로 레드 드라이").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("시나브로 레드 스위트 3개입").price(BigDecimal.valueOf(82500.000)).info("시나브로 레드 스위트").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("시나브로 로제와인 3개입").price(BigDecimal.valueOf(99000.000)).info("시나브로 로제와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("시나브로 에뚜왈 로제 스파클링 3개입").price(BigDecimal.valueOf(99000.000)).info("시나브로 에뚜왈 로제 스파클링").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("시나브로 에뚜왈 스파클링와인 3개입").price(BigDecimal.valueOf(99000.000)).info("시나브로 에뚜왈 스파클링와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("시나브로 화이트와인 3개입").price(BigDecimal.valueOf(99000.000)).info("시나브로 화이트와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("시인의 마을 우리쌀 막걸리 3개입").price(BigDecimal.valueOf(26070.000)).info("시인의 마을 우리쌀 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("신례명주 3개입").price(BigDecimal.valueOf(326700.000)).info("신례명주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("신선주 백주 3개입").price(BigDecimal.valueOf(49500.000)).info("신선주 백주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("신선주 약주 3개입").price(BigDecimal.valueOf(82500.000)).info("신선주 약주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("신선주 증류주 3개입").price(BigDecimal.valueOf(198000.000)).info("신선주 증류주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("신선주 3개입").price(BigDecimal.valueOf(62700.000)).info("신선주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("심플리 애플 3개입").price(BigDecimal.valueOf(29700.000)).info("심플리 애플").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("아이싱 자몽(iCing Grapefruit) 3개입").price(BigDecimal.valueOf(4290.000)).info("아이싱 자몽(iCing Grapefruit)").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("아이원 막걸리 3개입").price(BigDecimal.valueOf(3300.000)).info("아이원 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("아황주 3개입").price(BigDecimal.valueOf(75900.000)).info("아황주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("안동소주 22도 3개입").price(BigDecimal.valueOf(89100.000)).info("안동소주 22도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("안동소주 양반탈 3개입").price(BigDecimal.valueOf(115500.000)).info("안동소주 양반탈").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("안동소주 일품 17도 3개입").price(BigDecimal.valueOf(39600.000)).info("안동소주 일품 17도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("안동소주 일품 21도 3개입").price(BigDecimal.valueOf(44550.000)).info("안동소주 일품 21도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("안동소주 일품 40도 골드 3개입").price(BigDecimal.valueOf(59400.000)).info("안동소주 일품 40도 골드").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("안동소주 호리병 3개입").price(BigDecimal.valueOf(99000.000)).info("안동소주 호리병").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("안성마춤 생막걸리 3개입").price(BigDecimal.valueOf(6600.000)).info("안성마춤 생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("안양 동동주 3개입").price(BigDecimal.valueOf(3630.000)).info("안양 동동주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("애석 3개입").price(BigDecimal.valueOf(99000.000)).info("애석").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("애피소드 상그리아 3개입").price(BigDecimal.valueOf(69300.000)).info("애피소드 상그리아").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("애피소드 애플 3개입").price(BigDecimal.valueOf(69300.000)).info("애피소드 애플").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("애피소드 호프 3개입").price(BigDecimal.valueOf(69300.000)).info("애피소드 호프").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("야관문 쌀 막걸리 3개입").price(BigDecimal.valueOf(4950.000)).info("야관문 쌀 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("양촌 생 동동주 3개입").price(BigDecimal.valueOf(118800.000)).info("양촌 생 동동주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("양촌 생 막걸리 3개입").price(BigDecimal.valueOf(99000.000)).info("양촌 생 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("양촌 우렁이쌀 손 막걸리 3개입").price(BigDecimal.valueOf(128700.000)).info("양촌 우렁이쌀 손 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("어우야 3개입").price(BigDecimal.valueOf(32670.000)).info("어우야").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("여강 3개입").price(BigDecimal.valueOf(66000.000)).info("여강").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("여포의 꿈 (레드 드라이) 3개입").price(BigDecimal.valueOf(66000.000)).info("여포의 꿈 (레드 드라이)").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("여포의 꿈(레드스위트) 3개입").price(BigDecimal.valueOf(62700.000)).info("여포의 꿈(레드스위트)").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("여포의 꿈(화이트) 3개입").price(BigDecimal.valueOf(66000.000)).info("여포의 꿈(화이트)").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("연천 아주 3개입").price(BigDecimal.valueOf(19800.000)).info("연천 아주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("연천 연주 3개입").price(BigDecimal.valueOf(49500.000)).info("연천 연주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("연천 우주 3개입").price(BigDecimal.valueOf(28050.000)).info("연천 우주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("영일만친구 막걸리 3개입").price(BigDecimal.valueOf(49500.000)).info("영일만친구 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("예담은 한산소곡주 3개입").price(BigDecimal.valueOf(39600.000)).info("예담은 한산소곡주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("예담은 한산소곡화주 3개입").price(BigDecimal.valueOf(99000.000)).info("예담은 한산소곡화주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("예밀와인 레드 드라이 3개입").price(BigDecimal.valueOf(66000.000)).info("예밀와인 레드 드라이").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("예밀와인 레드 스위트 3개입").price(BigDecimal.valueOf(66000.000)).info("예밀와인 레드 스위트").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("예밀와인 로제 3개입").price(BigDecimal.valueOf(66000.000)).info("예밀와인 로제").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("예주 3개입").price(BigDecimal.valueOf(95700.000)).info("예주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("예천주 사월24 3개입").price(BigDecimal.valueOf(72600.000)).info("예천주 사월24").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("예천주 사월365 3개입").price(BigDecimal.valueOf(95700.000)).info("예천주 사월365").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("예천주복 만월24 3개입").price(BigDecimal.valueOf(42240.000)).info("예천주복 만월24").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("예천주복 만월40 3개입").price(BigDecimal.valueOf(63360.000)).info("예천주복 만월40").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("예화 3개입").price(BigDecimal.valueOf(33000.000)).info("예화").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("옛날 막걸리 古 3개입").price(BigDecimal.valueOf(8910.000)).info("옛날 막걸리 古").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("오곡 진상주 3개입").price(BigDecimal.valueOf(0.000)).info("오곡 진상주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("오디랑 3개입").price(BigDecimal.valueOf(13200.000)).info("오디랑").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("오매락퍽 3개입").price(BigDecimal.valueOf(171600.000)).info("오매락퍽").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("오매백주 3개입").price(BigDecimal.valueOf(16500.000)).info("오매백주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("오메기 맑은술 3개입").price(BigDecimal.valueOf(99000.000)).info("오메기 맑은술").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("오목대 3개입").price(BigDecimal.valueOf(89100.000)).info("오목대").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("오미로제 프리미어와인 3개입").price(BigDecimal.valueOf(128700.000)).info("오미로제 프리미어와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("오미시앙 스페셜 3개입").price(BigDecimal.valueOf(33000.000)).info("오미시앙 스페셜").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("오미자 생막걸리 3개입").price(BigDecimal.valueOf(8250.000)).info("오미자 생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("오산막걸리 3개입").price(BigDecimal.valueOf(9900.000)).info("오산막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("오희 스파클링 막걸리 3개입").price(BigDecimal.valueOf(118800.000)).info("오희 스파클링 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("왕율주 3개입").price(BigDecimal.valueOf(26400.000)).info("왕율주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("왕피천을 품은 미소생막걸리 3개입").price(BigDecimal.valueOf(3960.000)).info("왕피천을 품은 미소생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("우곡생주 3개입").price(BigDecimal.valueOf(21450.000)).info("우곡생주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("우도 땅콩 전통주 3개입").price(BigDecimal.valueOf(13200.000)).info("우도 땅콩 전통주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("운암1945 3개입").price(BigDecimal.valueOf(92400.000)).info("운암1945").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("원매 프리미엄 3개입").price(BigDecimal.valueOf(148500.000)).info("원매 프리미엄").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("원매 3개입").price(BigDecimal.valueOf(115500.000)).info("원매").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("원조 한산소곡주 3개입").price(BigDecimal.valueOf(39600.000)).info("원조 한산소곡주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("원조소곡화주 3개입").price(BigDecimal.valueOf(46200.000)).info("원조소곡화주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("월매 쌀막걸리 3개입").price(BigDecimal.valueOf(3960.000)).info("월매 쌀막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("유기농 이도 42 3개입").price(BigDecimal.valueOf(138600.000)).info("유기농 이도 42").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("유기농 이도14 3개입").price(BigDecimal.valueOf(66000.000)).info("유기농 이도14").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("유자 동동주 3개입").price(BigDecimal.valueOf(3630.000)).info("유자 동동주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("유자 생 막걸리 3개입").price(BigDecimal.valueOf(5940.000)).info("유자 생 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("율무 동동주 3개입").price(BigDecimal.valueOf(46200.000)).info("율무 동동주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("은자골 곶감 생 탁배기 3개입").price(BigDecimal.valueOf(4950.000)).info("은자골 곶감 생 탁배기").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("은자골 생 탁배기 3개입").price(BigDecimal.valueOf(4950.000)).info("은자골 생 탁배기").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("이강주 3개입").price(BigDecimal.valueOf(19140.000)).info("이강주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("이강주 2호 3개입").price(BigDecimal.valueOf(92400.000)).info("이강주 2호").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("이강주 특7호 3개입").price(BigDecimal.valueOf(165000.000)).info("이강주 특7호").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("이도 32 3개입").price(BigDecimal.valueOf(122100.000)).info("이도 32").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("이동 생 쌀 막걸리 3개입").price(BigDecimal.valueOf(4290.000)).info("이동 생 쌀 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("이동 쌀 막걸리 3개입").price(BigDecimal.valueOf(5280.000)).info("이동 쌀 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("이상헌 약주 3개입").price(BigDecimal.valueOf(148500.000)).info("이상헌 약주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("이상헌 탁주 3개입").price(BigDecimal.valueOf(82500.000)).info("이상헌 탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("이화백주 3개입").price(BigDecimal.valueOf(39600.000)).info("이화백주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("인천 생 소성주 3개입").price(BigDecimal.valueOf(3960.000)).info("인천 생 소성주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("입장탁주 3개입").price(BigDecimal.valueOf(3960.000)).info("입장탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("자두와인 레드 3개입").price(BigDecimal.valueOf(72600.000)).info("자두와인 레드").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("자두와인 화이트 3개입").price(BigDecimal.valueOf(72600.000)).info("자두와인 화이트").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("자연담은 복분자막걸리 3개입").price(BigDecimal.valueOf(184800.000)).info("자연담은 복분자막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("자연송이주 3개입").price(BigDecimal.valueOf(0.000)).info("자연송이주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("자희향 3개입").price(BigDecimal.valueOf(52800.000)).info("자희향").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("자희향 국화주 3개입").price(BigDecimal.valueOf(66000.000)).info("자희향 국화주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("자희향 나비 3개입").price(BigDecimal.valueOf(26400.000)).info("자희향 나비").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("장수 생 막걸리 3개입").price(BigDecimal.valueOf(3960.000)).info("장수 생 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("장수 오미자주 3개입").price(BigDecimal.valueOf(17820.000)).info("장수 오미자주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("장홍삼 장수 막걸리 3개입").price(BigDecimal.valueOf(6600.000)).info("장홍삼 장수 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("정고집 나주배 약주 15도 3개입").price(BigDecimal.valueOf(66000.000)).info("정고집 나주배 약주 15도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("정고집 나주배 약주 9도 3개입").price(BigDecimal.valueOf(59400.000)).info("정고집 나주배 약주 9도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("정고집 나주쌀 생막걸리 3개입").price(BigDecimal.valueOf(39600.000)).info("정고집 나주쌀 생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("정고집 옛날 생동동주 3개입").price(BigDecimal.valueOf(59400.000)).info("정고집 옛날 생동동주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("제주 고소리술 3개입").price(BigDecimal.valueOf(148500.000)).info("제주 고소리술").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("제주샘주 오메기술 3개입").price(BigDecimal.valueOf(25740.000)).info("제주샘주 오메기술").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("젤코바 스페셜와인 3개입").price(BigDecimal.valueOf(56100.000)).info("젤코바 스페셜와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("젤코바 캠벨와인 3개입").price(BigDecimal.valueOf(206250.000)).info("젤코바 캠벨와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("젤코바 프리미엄와인 3개입").price(BigDecimal.valueOf(108900.000)).info("젤코바 프리미엄와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("조선주조사 3개입").price(BigDecimal.valueOf(13200.000)).info("조선주조사").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("주몽 복분자주 3개입").price(BigDecimal.valueOf(16500.000)).info("주몽 복분자주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("주산지 막걸리 3개입").price(BigDecimal.valueOf(3960.000)).info("주산지 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("죽력고 3개입").price(BigDecimal.valueOf(198000.000)).info("죽력고").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("죽향 생막걸리 3개입").price(BigDecimal.valueOf(6600.000)).info("죽향 생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("줄포 생 막걸리 3개입").price(BigDecimal.valueOf(3960.000)).info("줄포 생 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("지란지교 무화과 탁주 3개입").price(BigDecimal.valueOf(99000.000)).info("지란지교 무화과 탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("지란지교 약주 3개입").price(BigDecimal.valueOf(66000.000)).info("지란지교 약주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("지란지교 탁주 3개입").price(BigDecimal.valueOf(99000.000)).info("지란지교 탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("지리산 허브잎 술 3개입").price(BigDecimal.valueOf(4950.000)).info("지리산 허브잎 술").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("지리산정담생쌀 막걸리 3개입").price(BigDecimal.valueOf(4950.000)).info("지리산정담생쌀 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("지장수 생막걸리 3개입").price(BigDecimal.valueOf(4290.000)).info("지장수 생막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("지장수 호박 막걸리 3개입").price(BigDecimal.valueOf(16500.000)).info("지장수 호박 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("지장수 호박 생 막걸리 3개입").price(BigDecimal.valueOf(4620.000)).info("지장수 호박 생 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("지평 생 쌀막걸리 3개입").price(BigDecimal.valueOf(8910.000)).info("지평 생 쌀막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("지평 생 옛막걸리 3개입").price(BigDecimal.valueOf(8250.000)).info("지평 생 옛막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("진도홍주 루비콘 3개입").price(BigDecimal.valueOf(33000.000)).info("진도홍주 루비콘").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("진맥소주 22도 3개입").price(BigDecimal.valueOf(72600.000)).info("진맥소주 22도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("진맥소주 40도 3개입").price(BigDecimal.valueOf(72600.000)).info("진맥소주 40도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("진맥소주 53도 3개입").price(BigDecimal.valueOf(128700.000)).info("진맥소주 53도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("진심 홍삼주 19도 3개입").price(BigDecimal.valueOf(9900.000)).info("진심 홍삼주 19도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("진쾌남 3개입").price(BigDecimal.valueOf(28050.000)).info("진쾌남").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("찰막걸리 3개입").price(BigDecimal.valueOf(0.000)).info("찰막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("창원 생탁주 3개입").price(BigDecimal.valueOf(3300.000)).info("창원 생탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("천년담주 3개입").price(BigDecimal.valueOf(33000.000)).info("천년담주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("천년전주 생 막걸리 3개입").price(BigDecimal.valueOf(4290.000)).info("천년전주 생 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("천년주 3개입").price(BigDecimal.valueOf(49500.000)).info("천년주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("천등산 차례주 3개입").price(BigDecimal.valueOf(19470.000)).info("천등산 차례주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("천마 이야기 3개입").price(BigDecimal.valueOf(4950.000)).info("천마 이야기").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("천마몽 3개입").price(BigDecimal.valueOf(49500.000)).info("천마몽").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("천매 3개입").price(BigDecimal.valueOf(429000.000)).info("천매").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("천비향 약주 3개입").price(BigDecimal.valueOf(135300.000)).info("천비향 약주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("천비향 오양주 탁주 3개입").price(BigDecimal.valueOf(59400.000)).info("천비향 오양주 탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("천비향 화주 3개입").price(BigDecimal.valueOf(165000.000)).info("천비향 화주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("천안 연미주 3개입").price(BigDecimal.valueOf(16500.000)).info("천안 연미주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("천지주가 생 막걸리 3개입").price(BigDecimal.valueOf(4620.000)).info("천지주가 생 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("청남대 블루베리 막걸리 3개입").price(BigDecimal.valueOf(82500.000)).info("청남대 블루베리 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("청명주 500 3개입").price(BigDecimal.valueOf(75900.000)).info("청명주 500").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("청명주 750 3개입").price(BigDecimal.valueOf(118800.000)).info("청명주 750").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("청산녹수 꿀막걸리 3개입").price(BigDecimal.valueOf(59400.000)).info("청산녹수 꿀막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("청산녹수 사미인주 3개입").price(BigDecimal.valueOf(105600.000)).info("청산녹수 사미인주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("청산녹수 생탁주 3개입").price(BigDecimal.valueOf(39600.000)).info("청산녹수 생탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("청세주 3개입").price(BigDecimal.valueOf(13200.000)).info("청세주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("청송 얼음골 동동주 3개입").price(BigDecimal.valueOf(5940.000)).info("청송 얼음골 동동주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("청송 주왕 사과막걸리 3개입").price(BigDecimal.valueOf(4950.000)).info("청송 주왕 사과막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("청양 둔송 구기주 3개입").price(BigDecimal.valueOf(75900.000)).info("청양 둔송 구기주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("청진주 3개입").price(BigDecimal.valueOf(99000.000)).info("청진주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("청춘 3개입").price(BigDecimal.valueOf(66000.000)).info("청춘").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("초선의 꿈 (로제) 3개입").price(BigDecimal.valueOf(66000.000)).info("초선의 꿈 (로제)").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("추사 로제 3개입").price(BigDecimal.valueOf(66000.000)).info("추사 로제").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("추사 애플와인 3개입").price(BigDecimal.valueOf(66000.000)).info("추사 애플와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("추사40 3개입").price(BigDecimal.valueOf(198000.000)).info("추사40").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("추사백25 3개입").price(BigDecimal.valueOf(39600.000)).info("추사백25").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("추사블루 3개입").price(BigDecimal.valueOf(66000.000)).info("추사블루").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("추성주 3개입").price(BigDecimal.valueOf(264000.000)).info("추성주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("추시와인 3개입").price(BigDecimal.valueOf(52800.000)).info("추시와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("충주 백주 3개입").price(BigDecimal.valueOf(25740.000)).info("충주 백주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("컨츄리 산머루 와인 (드라이) 3개입").price(BigDecimal.valueOf(66000.000)).info("컨츄리 산머루 와인 (드라이)").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("컨츄리 산머루 와인 (스위트) 3개입").price(BigDecimal.valueOf(66000.000)).info("컨츄리 산머루 와인 (스위트)").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("컨츄리캠벨 (스위트) 3개입").price(BigDecimal.valueOf(49500.000)).info("컨츄리캠벨 (스위트)").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("코이버펑크, 머스캣 베일리 에이 3개입").price(BigDecimal.valueOf(214500.000)).info("코이버펑크, 머스캣 베일리 에이").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("코이버펑크, 샤르도네 세미용 블렌드 3개입").price(BigDecimal.valueOf(214500.000)).info("코이버펑크, 샤르도네 세미용 블렌드").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("코이버펑크, 카베르네 소비뇽 3개입").price(BigDecimal.valueOf(214500.000)).info("코이버펑크, 카베르네 소비뇽").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("쿨샷7.5 3개입").price(BigDecimal.valueOf(198000.000)).info("쿨샷7.5").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("크라테 레드와인 드라이 3개입").price(BigDecimal.valueOf(158400.000)).info("크라테 레드와인 드라이").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("크라테 레드와인 스위트 3개입").price(BigDecimal.valueOf(158400.000)).info("크라테 레드와인 스위트").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("크라테 로제와인 3개입").price(BigDecimal.valueOf(59400.000)).info("크라테 로제와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("타미앙스 3개입").price(BigDecimal.valueOf(165000.000)).info("타미앙스").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("톡 쏘는 복분자 막걸리 3개입").price(BigDecimal.valueOf(5940.000)).info("톡 쏘는 복분자 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("톡 쏘는 알밤동동 3개입").price(BigDecimal.valueOf(4290.000)).info("톡 쏘는 알밤동동").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("톡 한잔 골드 3개입").price(BigDecimal.valueOf(161700.000)).info("톡 한잔 골드").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("톡 한잔 소주 3개입").price(BigDecimal.valueOf(33000.000)).info("톡 한잔 소주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("티나 3개입").price(BigDecimal.valueOf(178200.000)).info("티나").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("펀치 쌀 바나나 3개입").price(BigDecimal.valueOf(6600.000)).info("펀치 쌀 바나나").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("편백숲 산소막걸리 3개입").price(BigDecimal.valueOf(6270.000)).info("편백숲 산소막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("편백숲 산소막걸리 딸기스파클링 3개입").price(BigDecimal.valueOf(135300.000)).info("편백숲 산소막걸리 딸기스파클링").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("편백숲 산소막걸리 순수령 3개입").price(BigDecimal.valueOf(13200.000)).info("편백숲 산소막걸리 순수령").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("평창 오디주 3개입").price(BigDecimal.valueOf(64350.000)).info("평창 오디주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("평창머루주 3개입").price(BigDecimal.valueOf(64350.000)).info("평창머루주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("포엠 레드 드라이와인 3개입").price(BigDecimal.valueOf(82500.000)).info("포엠 레드 드라이와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("포엠 레드 스위트와인 3개입").price(BigDecimal.valueOf(82500.000)).info("포엠 레드 스위트와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("포엠 로제와인 3개입").price(BigDecimal.valueOf(115500.000)).info("포엠 로제와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("포엠 화이트와인 3개입").price(BigDecimal.valueOf(115500.000)).info("포엠 화이트와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("풍남문 3개입").price(BigDecimal.valueOf(89100.000)).info("풍남문").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("풍정사계 동 3개입").price(BigDecimal.valueOf(82500.000)).info("풍정사계 동").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("풍정사계 추 3개입").price(BigDecimal.valueOf(49500.000)).info("풍정사계 추").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("풍정사계 춘 3개입").price(BigDecimal.valueOf(99000.000)).info("풍정사계 춘").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("풍정사계 하 3개입").price(BigDecimal.valueOf(115500.000)).info("풍정사계 하").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("필 FEEL 3개입").price(BigDecimal.valueOf(82500.000)).info("필 FEEL").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("하향주 3개입").price(BigDecimal.valueOf(148500.000)).info("하향주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("하향주 증류주 3개입").price(BigDecimal.valueOf(231000.000)).info("하향주 증류주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("한비 동충하초술 3개입").price(BigDecimal.valueOf(99000.000)).info("한비 동충하초술").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("한비 무병장수술 3개입").price(BigDecimal.valueOf(99000.000)).info("한비 무병장수술").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("한비 쌀소주 3개입").price(BigDecimal.valueOf(99000.000)).info("한비 쌀소주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("한비 오가피술 3개입").price(BigDecimal.valueOf(99000.000)).info("한비 오가피술").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("한산소곡주 3개입").price(BigDecimal.valueOf(21450.000)).info("한산소곡주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("한산소곡주(살균주) 3개입").price(BigDecimal.valueOf(39600.000)).info("한산소곡주(살균주)").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("한산소곡주_생주 3개입").price(BigDecimal.valueOf(39600.000)).info("한산소곡주_생주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("한스오차드 사과와인 3개입").price(BigDecimal.valueOf(66000.000)).info("한스오차드 사과와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("한시울 3개입").price(BigDecimal.valueOf(59400.000)).info("한시울").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("한주 3개입").price(BigDecimal.valueOf(39600.000)).info("한주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("해미읍성 딸기와인 3개입").price(BigDecimal.valueOf(66000.000)).info("해미읍성 딸기와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("해미읍성 매실와인 3개입").price(BigDecimal.valueOf(66000.000)).info("해미읍성 매실와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("해미읍성 모과와인 3개입").price(BigDecimal.valueOf(66000.000)).info("해미읍성 모과와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("해미읍성 살구와인 3개입").price(BigDecimal.valueOf(66000.000)).info("해미읍성 살구와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("해방주 18.8도 3개입").price(BigDecimal.valueOf(39600.000)).info("해방주 18.8도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("해방주 38도 3개입").price(BigDecimal.valueOf(148500.000)).info("해방주 38도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("해창 생 막걸리 12도 3개입").price(BigDecimal.valueOf(33000.000)).info("해창 생 막걸리 12도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("해창 생 막걸리 6도 3개입").price(BigDecimal.valueOf(9900.000)).info("해창 생 막걸리 6도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("해창 생 막걸리 9도 3개입").price(BigDecimal.valueOf(19800.000)).info("해창 생 막걸리 9도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("해파랑 3개입").price(BigDecimal.valueOf(33000.000)).info("해파랑").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("햇찹쌀이 하늘수 3개입").price(BigDecimal.valueOf(3630.000)).info("햇찹쌀이 하늘수").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("행운 막걸리 3개입").price(BigDecimal.valueOf(3630.000)).info("행운 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("행운주 3개입").price(BigDecimal.valueOf(11550.000)).info("행운주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("향수 우리밀 막걸리 3개입").price(BigDecimal.valueOf(26070.000)).info("향수 우리밀 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("허니문와인 3개입").price(BigDecimal.valueOf(115500.000)).info("허니문와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("허니비 와인 3개입").price(BigDecimal.valueOf(115500.000)).info("허니비 와인").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("호담 산양산삼 막걸리 3개입").price(BigDecimal.valueOf(52800.000)).info("호담 산양산삼 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("호담 산양산삼주 3개입").price(BigDecimal.valueOf(13200.000)).info("호담 산양산삼주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("호담 3개입").price(BigDecimal.valueOf(59400.000)).info("호담").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("호땅 3개입").price(BigDecimal.valueOf(8910.000)).info("호땅").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("호랑이 생 막걸리 3개입").price(BigDecimal.valueOf(7260.000)).info("호랑이 생 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("호모루덴스 3개입").price(BigDecimal.valueOf(39600.000)).info("호모루덴스").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("혼디주 3개입").price(BigDecimal.valueOf(26400.000)).info("혼디주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("과실주/와인").get()).build());
        itemRepository.save(Item.builder().name("홍로 3개입").price(BigDecimal.valueOf(165000.000)).info("홍로").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("홍삼 인삼주 3개입").price(BigDecimal.valueOf(231000.000)).info("홍삼 인삼주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("홍삼명주 3개입").price(BigDecimal.valueOf(39600.000)).info("홍삼명주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("홍삼진심 인삼주 (1set) 3개입").price(BigDecimal.valueOf(23100.000)).info("홍삼진심 인삼주 (1set)").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("홍천강 탁주 3개입").price(BigDecimal.valueOf(33000.000)).info("홍천강 탁주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("화주 3개입").price(BigDecimal.valueOf(42900.000)).info("화주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("황금보리소주17 3개입").price(BigDecimal.valueOf(82500.000)).info("황금보리소주17").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("황금보리소주25 3개입").price(BigDecimal.valueOf(140250.000)).info("황금보리소주25").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("황금보리소주40 3개입").price(BigDecimal.valueOf(259050.000)).info("황금보리소주40").type(ItemType.REGULAR).category(categoryRepository.findByLastName("증류주/소주/리큐르").get()).build());
        itemRepository.save(Item.builder().name("황진이 3개입").price(BigDecimal.valueOf(11550.000)).info("황진이").type(ItemType.REGULAR).category(categoryRepository.findByLastName("약주/청주").get()).build());
        itemRepository.save(Item.builder().name("황칠주 3개입").price(BigDecimal.valueOf(32670.000)).info("황칠주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("회곡 생 동동주 3개입").price(BigDecimal.valueOf(4290.000)).info("회곡 생 동동주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("회곡 생 막걸리 3개입").price(BigDecimal.valueOf(4290.000)).info("회곡 생 막걸리").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("흑돈주 3개입").price(BigDecimal.valueOf(39600.000)).info("흑돈주").type(ItemType.REGULAR).category(categoryRepository.findByLastName("기타주류").get()).build());
        itemRepository.save(Item.builder().name("희양산막걸리 15도 3개입").price(BigDecimal.valueOf(31350.000)).info("희양산막걸리 15도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
        itemRepository.save(Item.builder().name("희양산막걸리 9도 3개입").price(BigDecimal.valueOf(26400.000)).info("희양산막걸리 9도").type(ItemType.REGULAR).category(categoryRepository.findByLastName("탁주/막걸리").get()).build());
    }

    public void initItemProduct() {
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("1000억 막걸리 프리바이오").get()).product(productRepository.findByName("1000억 막걸리 프리바이오").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("1000억 유산균막걸리").get()).product(productRepository.findByName("1000억 유산균막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("1932 새싹땅콩 햅쌀막걸리").get()).product(productRepository.findByName("1932 새싹땅콩 햅쌀막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("1932 새싹땅콩 흑미막걸리").get()).product(productRepository.findByName("1932 새싹땅콩 흑미막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("33JU").get()).product(productRepository.findByName("33JU").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("52C").get()).product(productRepository.findByName("52C").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("DMZ 240km").get()).product(productRepository.findByName("DMZ 240km").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("G12 골디락스").get()).product(productRepository.findByName("G12 골디락스").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("The 찾을수록 피치").get()).product(productRepository.findByName("The 찾을수록 피치").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("The 찾을수록 모스카토").get()).product(productRepository.findByName("The 찾을수록 모스카토").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("The 찾을수록 애플").get()).product(productRepository.findByName("The 찾을수록 애플").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("The 찾을수록 감귤").get()).product(productRepository.findByName("The 찾을수록 감귤").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("The 찾을수록 생강").get()).product(productRepository.findByName("The 찾을수록 생강").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("가덕 순쌀 막걸리").get()).product(productRepository.findByName("가덕 순쌀 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("가을빛 레드와인").get()).product(productRepository.findByName("가을빛 레드와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("가평 잣 막걸리").get()).product(productRepository.findByName("가평 잣 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("감 보드카").get()).product(productRepository.findByName("감 보드카").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("감그린 레귤러").get()).product(productRepository.findByName("감그린 레귤러").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("감그린 스페셜").get()).product(productRepository.findByName("감그린 스페셜").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("감그린 아이스와인").get()).product(productRepository.findByName("감그린 아이스와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("감사").get()).product(productRepository.findByName("감사").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("감아락 25도").get()).product(productRepository.findByName("감아락 25도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("감악산 머루주").get()).product(productRepository.findByName("감악산 머루주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("감이슬").get()).product(productRepository.findByName("감이슬").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("감자술 13도").get()).product(productRepository.findByName("감자술 13도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("감홍로 백자").get()).product(productRepository.findByName("감홍로 백자").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("감홍로 청자").get()).product(productRepository.findByName("감홍로 청자").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("강소주").get()).product(productRepository.findByName("강소주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("강쇠").get()).product(productRepository.findByName("강쇠").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("걍즐겨").get()).product(productRepository.findByName("걍즐겨").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("겨울소주 25도").get()).product(productRepository.findByName("겨울소주 25도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("경기전").get()).product(productRepository.findByName("경기전").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("계룡백일주 12년").get()).product(productRepository.findByName("계룡백일주 12년").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("계룡백일주 16도").get()).product(productRepository.findByName("계룡백일주 16도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("계룡백일주 30도").get()).product(productRepository.findByName("계룡백일주 30도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("계룡백일주 40도").get()).product(productRepository.findByName("계룡백일주 40도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("계룡산 산삼주 금수강산 21도").get()).product(productRepository.findByName("계룡산 산삼주 금수강산 21도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("계룡산 산삼주 금수강산 40도").get()).product(productRepository.findByName("계룡산 산삼주 금수강산 40도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("고구마 아락").get()).product(productRepository.findByName("고구마 아락").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("고도리 레드와인 스위트").get()).product(productRepository.findByName("고도리 레드와인 스위트").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("고도리 복숭아와인").get()).product(productRepository.findByName("고도리 복숭아와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("고도리 화이트와인 드라이").get()).product(productRepository.findByName("고도리 화이트와인 드라이").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("고도리 화이트와인 스위트").get()).product(productRepository.findByName("고도리 화이트와인 스위트").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("고소리 술").get()).product(productRepository.findByName("고소리 술").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("고소리술").get()).product(productRepository.findByName("고소리술").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("고운달 백자").get()).product(productRepository.findByName("고운달 백자").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("고운달 오크").get()).product(productRepository.findByName("고운달 오크").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("고창복분자주").get()).product(productRepository.findByName("고창복분자주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("고창선운산 땡큐블루베리주").get()).product(productRepository.findByName("고창선운산 땡큐블루베리주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("공주애 오디와인").get()).product(productRepository.findByName("공주애 오디와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("구기홍주 14도").get()).product(productRepository.findByName("구기홍주 14도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("구름을 벗삼아").get()).product(productRepository.findByName("구름을 벗삼아").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("귀감").get()).product(productRepository.findByName("귀감").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("그랑꼬또 M56").get()).product(productRepository.findByName("그랑꼬또 M56").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("그랑꼬또 M5610").get()).product(productRepository.findByName("그랑꼬또 M5610").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("그랑꼬또 레드와인").get()).product(productRepository.findByName("그랑꼬또 레드와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("그랑꼬또 로제와인").get()).product(productRepository.findByName("그랑꼬또 로제와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("그랑꼬또 청수").get()).product(productRepository.findByName("그랑꼬또 청수").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("그랑꼬또 화이트와인").get()).product(productRepository.findByName("그랑꼬또 화이트와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("그랑티 그르 S1974").get()).product(productRepository.findByName("그랑티 그르 S1974").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("그랑티그르CE2002").get()).product(productRepository.findByName("그랑티그르CE2002").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("그랑티그르M1988").get()).product(productRepository.findByName("그랑티그르M1988").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("금산인삼주").get()).product(productRepository.findByName("금산인삼주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("금정산성 막걸리").get()).product(productRepository.findByName("금정산성 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("기다림 16도").get()).product(productRepository.findByName("기다림 16도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("기다림 25도").get()).product(productRepository.findByName("기다림 25도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("기다림 34도").get()).product(productRepository.findByName("기다림 34도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("기다림 맑은술").get()).product(productRepository.findByName("기다림 맑은술").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("김천 과하주 23도").get()).product(productRepository.findByName("김천 과하주 23도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("김천과하주 16도").get()).product(productRepository.findByName("김천과하주 16도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("김포 막걸리").get()).product(productRepository.findByName("김포 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("김포별주").get()).product(productRepository.findByName("김포별주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("김포약주").get()).product(productRepository.findByName("김포약주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("김포예주 프리미엄").get()).product(productRepository.findByName("김포예주 프리미엄").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("김포특주").get()).product(productRepository.findByName("김포특주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("까메오 막걸리").get()).product(productRepository.findByName("까메오 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("나루 생막걸리 11.5도").get()).product(productRepository.findByName("나루 생막걸리 11.5도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("나루 생막걸리 6도").get()).product(productRepository.findByName("나루 생막걸리 6도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("남산애 레드와인").get()).product(productRepository.findByName("남산애 레드와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("남산애 포트와인").get()).product(productRepository.findByName("남산애 포트와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("내장산 복분자주 지통1호").get()).product(productRepository.findByName("내장산 복분자주 지통1호").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("녹고의눈물").get()).product(productRepository.findByName("녹고의눈물").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("녹파주").get()).product(productRepository.findByName("녹파주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("뉴트로").get()).product(productRepository.findByName("뉴트로").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("느낌 19.8도").get()).product(productRepository.findByName("느낌 19.8도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("느낌 30도").get()).product(productRepository.findByName("느낌 30도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("느린마을 막걸리").get()).product(productRepository.findByName("느린마을 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("능이주").get()).product(productRepository.findByName("능이주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("니모메").get()).product(productRepository.findByName("니모메").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("다래와인 3004").get()).product(productRepository.findByName("다래와인 3004").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("다래와인 7004D").get()).product(productRepository.findByName("다래와인 7004D").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("다래와인 7004S").get()).product(productRepository.findByName("다래와인 7004S").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("다랭이팜 생 막걸리 (백미)").get()).product(productRepository.findByName("다랭이팜 생 막걸리 (백미)").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("다랭이팜 생 막걸리 (흑미)").get()).product(productRepository.findByName("다랭이팜 생 막걸리 (흑미)").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("다랭이팜 유자 막걸리").get()).product(productRepository.findByName("다랭이팜 유자 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("담솔 40도").get()).product(productRepository.findByName("담솔 40도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("담양죽력고").get()).product(productRepository.findByName("담양죽력고").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("담은").get()).product(productRepository.findByName("담은").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("담향 대대포 블루").get()).product(productRepository.findByName("담향 대대포 블루").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("당당하리").get()).product(productRepository.findByName("당당하리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("대관령 복분자주").get()).product(productRepository.findByName("대관령 복분자주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("대윤 가야곡 왕주").get()).product(productRepository.findByName("대윤 가야곡 왕주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("대잎 생동동주").get()).product(productRepository.findByName("대잎 생동동주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("대작 생막걸리").get()).product(productRepository.findByName("대작 생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("대통대잎술 십오야").get()).product(productRepository.findByName("대통대잎술 십오야").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("도구 막걸리").get()).product(productRepository.findByName("도구 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("도깨비술 11도").get()).product(productRepository.findByName("도깨비술 11도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("도깨비술 7도").get()).product(productRepository.findByName("도깨비술 7도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("도깨비술 9도").get()).product(productRepository.findByName("도깨비술 9도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("도로시 머루주").get()).product(productRepository.findByName("도로시 머루주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("도문대작 생막걸리").get()).product(productRepository.findByName("도문대작 생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("독산 53도").get()).product(productRepository.findByName("독산 53도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("동강더덕주").get()).product(productRepository.findByName("동강더덕주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("동몽").get()).product(productRepository.findByName("동몽").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("동정춘").get()).product(productRepository.findByName("동정춘").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("동학 1957").get()).product(productRepository.findByName("동학 1957").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("동해 동동주").get()).product(productRepository.findByName("동해 동동주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("두레앙 22도").get()).product(productRepository.findByName("두레앙 22도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("두레앙 브랜디").get()).product(productRepository.findByName("두레앙 브랜디").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("두레앙 와인").get()).product(productRepository.findByName("두레앙 와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("두레앙 증류주").get()).product(productRepository.findByName("두레앙 증류주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("두리향").get()).product(productRepository.findByName("두리향").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("두유노").get()).product(productRepository.findByName("두유노").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("라이스퐁당 13도").get()).product(productRepository.findByName("라이스퐁당 13도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("라이스퐁당 17도").get()).product(productRepository.findByName("라이스퐁당 17도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("레돔 내추럴 스파클링 로제와인").get()).product(productRepository.findByName("레돔 내추럴 스파클링 로제와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("레돔 시드르").get()).product(productRepository.findByName("레돔 시드르").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("려(驪)고구마증류소주 25도").get()).product(productRepository.findByName("려(驪)고구마증류소주 25도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("려(驪)고구마증류소주 40도").get()).product(productRepository.findByName("려(驪)고구마증류소주 40도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("려(驪)증류소주 25도").get()).product(productRepository.findByName("려(驪)증류소주 25도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("로얄 안동소주 18년").get()).product(productRepository.findByName("로얄 안동소주 18년").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("르깔롱").get()).product(productRepository.findByName("르깔롱").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("마셔블랑").get()).product(productRepository.findByName("마셔블랑").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("마주 소곡주").get()).product(productRepository.findByName("마주 소곡주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("마주 소화곡주").get()).product(productRepository.findByName("마주 소화곡주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("막시모40").get()).product(productRepository.findByName("막시모40").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("만강에 비친 달").get()).product(productRepository.findByName("만강에 비친 달").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("맑은 문희주").get()).product(productRepository.findByName("맑은 문희주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("맑은내일 WINery 단감명작").get()).product(productRepository.findByName("맑은내일 WINery 단감명작").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("맑은내일 발효막걸리").get()).product(productRepository.findByName("맑은내일 발효막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("맑은내일 우포").get()).product(productRepository.findByName("맑은내일 우포").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("맑은술 해밀").get()).product(productRepository.findByName("맑은술 해밀").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("매실 막걸리").get()).product(productRepository.findByName("매실 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("매실원주 15도").get()).product(productRepository.findByName("매실원주 15도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("매실향기 담은 술").get()).product(productRepository.findByName("매실향기 담은 술").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("머루 이야기").get()).product(productRepository.findByName("머루 이야기").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("머르드 서 드라이").get()).product(productRepository.findByName("머르드 서 드라이").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("머르드 서 스위트").get()).product(productRepository.findByName("머르드 서 스위트").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("메로니아").get()).product(productRepository.findByName("메로니아").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("메밀로").get()).product(productRepository.findByName("메밀로").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("면천두견주").get()).product(productRepository.findByName("면천두견주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("명가원 복분자술").get()).product(productRepository.findByName("명가원 복분자술").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("명술").get()).product(productRepository.findByName("명술").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("명인 홍삼주").get()).product(productRepository.findByName("명인 홍삼주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("명작복분자").get()).product(productRepository.findByName("명작복분자").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("명품 진도홍주").get()).product(productRepository.findByName("명품 진도홍주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("모월 로").get()).product(productRepository.findByName("모월 로").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("모월 연").get()).product(productRepository.findByName("모월 연").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("모월 인").get()).product(productRepository.findByName("모월 인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("모월 청").get()).product(productRepository.findByName("모월 청").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("모을동주 소주").get()).product(productRepository.findByName("모을동주 소주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("모을동주 약주").get()).product(productRepository.findByName("모을동주 약주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("무주 구천동 머루와인").get()).product(productRepository.findByName("무주 구천동 머루와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("무주 구천동 산머루주").get()).product(productRepository.findByName("무주 구천동 산머루주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("문경바람 백자 25도").get()).product(productRepository.findByName("문경바람 백자 25도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("문경바람 백자 40도").get()).product(productRepository.findByName("문경바람 백자 40도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("문경바람 오크 40도").get()).product(productRepository.findByName("문경바람 오크 40도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("문배술 헤리티지 23도").get()).product(productRepository.findByName("문배술 헤리티지 23도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("문배술 헤리티지 40도").get()).product(productRepository.findByName("문배술 헤리티지 40도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("문배술헤리티지25").get()).product(productRepository.findByName("문배술헤리티지25").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("문경오미자 수제 전통주").get()).product(productRepository.findByName("문경오미자 수제 전통주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("햇찹쌀 수제 전통주").get()).product(productRepository.findByName("햇찹쌀 수제 전통주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("미르25").get()).product(productRepository.findByName("미르25").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("미르40").get()).product(productRepository.findByName("미르40").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("미생 막걸리").get()).product(productRepository.findByName("미생 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("미소 생막걸리").get()).product(productRepository.findByName("미소 생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("미소 아이스").get()).product(productRepository.findByName("미소 아이스").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("미인약주").get()).product(productRepository.findByName("미인약주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("미인탁주").get()).product(productRepository.findByName("미인탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("민속주 안동소주").get()).product(productRepository.findByName("민속주 안동소주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("민속주안동소주").get()).product(productRepository.findByName("민속주안동소주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("바나나 주").get()).product(productRepository.findByName("바나나 주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("바랑 탁").get()).product(productRepository.findByName("바랑 탁").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("밤꽃향기").get()).product(productRepository.findByName("밤꽃향기").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("방문주 약주").get()).product(productRepository.findByName("방문주 약주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("방문주 탁주").get()).product(productRepository.findByName("방문주 탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("배꽃담은 연 생막걸리").get()).product(productRepository.findByName("배꽃담은 연 생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("배도가 로아 19 레드").get()).product(productRepository.findByName("배도가 로아 19 레드").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("배도가 로아 40도 옐로우").get()).product(productRepository.findByName("배도가 로아 40도 옐로우").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("백년향").get()).product(productRepository.findByName("백년향").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("백련 맑은술").get()).product(productRepository.findByName("백련 맑은술").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("백련 생막걸리 Misty").get()).product(productRepository.findByName("백련 생막걸리 Misty").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("백련 생막걸리 snow").get()).product(productRepository.findByName("백련 생막걸리 snow").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("백운 복분자 와인").get()).product(productRepository.findByName("백운 복분자 와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("백운 복분자주").get()).product(productRepository.findByName("백운 복분자주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("백이주").get()).product(productRepository.findByName("백이주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("백자주").get()).product(productRepository.findByName("백자주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("뱅꼬레레드").get()).product(productRepository.findByName("뱅꼬레레드").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("뱅꼬레로제").get()).product(productRepository.findByName("뱅꼬레로제").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("뱅꼬레아이스").get()).product(productRepository.findByName("뱅꼬레아이스").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("뱅꼬레화이트").get()).product(productRepository.findByName("뱅꼬레화이트").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("베베마루 캠벨로제 스위트").get()).product(productRepository.findByName("베베마루 캠벨로제 스위트").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("베베마루 캠벨로제").get()).product(productRepository.findByName("베베마루 캠벨로제").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("별바랑").get()).product(productRepository.findByName("별바랑").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("병영설성 동동주").get()).product(productRepository.findByName("병영설성 동동주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("병영설성 생막걸리").get()).product(productRepository.findByName("병영설성 생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("병영설성사또").get()).product(productRepository.findByName("병영설성사또").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("병영소주").get()).product(productRepository.findByName("병영소주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("복분자 아락").get()).product(productRepository.findByName("복분자 아락").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("복분자음").get()).product(productRepository.findByName("복분자음").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("복분자주 360").get()).product(productRepository.findByName("복분자주 360").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("복순도가 손 막걸리").get()).product(productRepository.findByName("복순도가 손 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("볼빨간막걸리 10").get()).product(productRepository.findByName("볼빨간막걸리 10").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("볼빨간막걸리 7").get()).product(productRepository.findByName("볼빨간막걸리 7").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("봉하쌀 생막걸리").get()).product(productRepository.findByName("봉하쌀 생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("부안 참뽕 막걸리").get()).product(productRepository.findByName("부안 참뽕 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("부안 참뽕 와인").get()).product(productRepository.findByName("부안 참뽕 와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("부자 10").get()).product(productRepository.findByName("부자 10").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("불소곡주").get()).product(productRepository.findByName("불소곡주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("붉은 원숭이").get()).product(productRepository.findByName("붉은 원숭이").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("블루베리 이야기").get()).product(productRepository.findByName("블루베리 이야기").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("산내울 복분자주").get()).product(productRepository.findByName("산내울 복분자주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("산내울 사과애주").get()).product(productRepository.findByName("산내울 사과애주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("산내울 오미자주").get()).product(productRepository.findByName("산내울 오미자주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("산막 생유 막걸리").get()).product(productRepository.findByName("산막 생유 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("산막대덕주").get()).product(productRepository.findByName("산막대덕주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("산정호수 동정춘막걸리").get()).product(productRepository.findByName("산정호수 동정춘막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("삼선").get()).product(productRepository.findByName("삼선").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("삼양춘 생약주").get()).product(productRepository.findByName("삼양춘 생약주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("삼양춘 생탁주").get()).product(productRepository.findByName("삼양춘 생탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("삼양춘 청주").get()).product(productRepository.findByName("삼양춘 청주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("생 청주 막걸리").get()).product(productRepository.findByName("생 청주 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("샤토미소 랑").get()).product(productRepository.findByName("샤토미소 랑").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("샤토미소 레드 프리미엄 드라이").get()).product(productRepository.findByName("샤토미소 레드 프리미엄 드라이").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("샤토미소 스위트").get()).product(productRepository.findByName("샤토미소 스위트").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("샤토미소 스위트 로제").get()).product(productRepository.findByName("샤토미소 스위트 로제").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("샤토미소 영동").get()).product(productRepository.findByName("샤토미소 영동").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("샹스프랑보아즈").get()).product(productRepository.findByName("샹스프랑보아즈").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("서울의 밤").get()).product(productRepository.findByName("서울의 밤").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("서주 16도").get()).product(productRepository.findByName("서주 16도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("석로주").get()).product(productRepository.findByName("석로주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("석탄주 약주").get()).product(productRepository.findByName("석탄주 약주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("석탄주 탁주").get()).product(productRepository.findByName("석탄주 탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("선운산 복분자와인").get()).product(productRepository.findByName("선운산 복분자와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("선운산 복분자주").get()).product(productRepository.findByName("선운산 복분자주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("선운산 복분자주 프리미엄").get()).product(productRepository.findByName("선운산 복분자주 프리미엄").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("선운산의 아침 복분자막걸리").get()).product(productRepository.findByName("선운산의 아침 복분자막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("선호 생막걸리").get()).product(productRepository.findByName("선호 생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("설궁").get()).product(productRepository.findByName("설궁").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("설레온").get()).product(productRepository.findByName("설레온").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("설련주").get()).product(productRepository.findByName("설련주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("설성 만월 막걸리").get()).product(productRepository.findByName("설성 만월 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("설하담").get()).product(productRepository.findByName("설하담").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("성포 생막걸리").get()).product(productRepository.findByName("성포 생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("세우리").get()).product(productRepository.findByName("세우리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("세종 쌀 막걸리").get()).product(productRepository.findByName("세종 쌀 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("세종 알밤주").get()).product(productRepository.findByName("세종 알밤주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("세종 오가닉").get()).product(productRepository.findByName("세종 오가닉").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("세종대왕어주 약주").get()).product(productRepository.findByName("세종대왕어주 약주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("세종대왕어주 탁주").get()).product(productRepository.findByName("세종대왕어주 탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("소곡화주").get()).product(productRepository.findByName("소곡화주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("소나무와 학").get()).product(productRepository.findByName("소나무와 학").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("소백산 검은콩 막걸리").get()).product(productRepository.findByName("소백산 검은콩 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("소백산 생 막걸리").get()).product(productRepository.findByName("소백산 생 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("소백산 생 만찬주").get()).product(productRepository.findByName("소백산 생 만찬주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("소백산 청 동동주").get()).product(productRepository.findByName("소백산 청 동동주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("소양강 생 막걸리").get()).product(productRepository.findByName("소양강 생 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("솔송주").get()).product(productRepository.findByName("솔송주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("송명섭 막걸리").get()).product(productRepository.findByName("송명섭 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("송이주").get()).product(productRepository.findByName("송이주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("송화백일주").get()).product(productRepository.findByName("송화백일주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("수삼단본 23도").get()).product(productRepository.findByName("수삼단본 23도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("수삼단본 43도").get()).product(productRepository.findByName("수삼단본 43도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("순향주").get()).product(productRepository.findByName("순향주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("술공방 9.0 생막걸리").get()).product(productRepository.findByName("술공방 9.0 생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("술그리다 생탁주").get()).product(productRepository.findByName("술그리다 생탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("술샘 이화주").get()).product(productRepository.findByName("술샘 이화주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("술아 국화주").get()).product(productRepository.findByName("술아 국화주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("술아 막걸리").get()).product(productRepository.findByName("술아 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("술아 매화주").get()).product(productRepository.findByName("술아 매화주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("술아 순곡주").get()).product(productRepository.findByName("술아 순곡주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("술아 연화주").get()).product(productRepository.findByName("술아 연화주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("술예쁘다 생탁주").get()).product(productRepository.findByName("술예쁘다 생탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("술취한 원숭이").get()).product(productRepository.findByName("술취한 원숭이").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("술헤는밤").get()).product(productRepository.findByName("술헤는밤").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("스타베리오디").get()).product(productRepository.findByName("스타베리오디").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("시나브로 드 글로리아").get()).product(productRepository.findByName("시나브로 드 글로리아").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("시나브로 레드 드라이").get()).product(productRepository.findByName("시나브로 레드 드라이").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("시나브로 레드 스위트").get()).product(productRepository.findByName("시나브로 레드 스위트").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("시나브로 로제와인").get()).product(productRepository.findByName("시나브로 로제와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("시나브로 에뚜왈 로제 스파클링").get()).product(productRepository.findByName("시나브로 에뚜왈 로제 스파클링").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("시나브로 에뚜왈 스파클링와인").get()).product(productRepository.findByName("시나브로 에뚜왈 스파클링와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("시나브로 화이트와인").get()).product(productRepository.findByName("시나브로 화이트와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("시인의 마을 우리쌀 막걸리").get()).product(productRepository.findByName("시인의 마을 우리쌀 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("신례명주").get()).product(productRepository.findByName("신례명주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("신선주 백주").get()).product(productRepository.findByName("신선주 백주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("신선주 약주").get()).product(productRepository.findByName("신선주 약주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("신선주 증류주").get()).product(productRepository.findByName("신선주 증류주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("신선주").get()).product(productRepository.findByName("신선주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("심플리 애플").get()).product(productRepository.findByName("심플리 애플").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("아이싱 자몽(iCing Grapefruit)").get()).product(productRepository.findByName("아이싱 자몽(iCing Grapefruit)").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("아이원 막걸리").get()).product(productRepository.findByName("아이원 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("아황주").get()).product(productRepository.findByName("아황주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("안동소주 22도").get()).product(productRepository.findByName("안동소주 22도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("안동소주 양반탈").get()).product(productRepository.findByName("안동소주 양반탈").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("안동소주 일품 17도").get()).product(productRepository.findByName("안동소주 일품 17도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("안동소주 일품 21도").get()).product(productRepository.findByName("안동소주 일품 21도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("안동소주 일품 40도 골드").get()).product(productRepository.findByName("안동소주 일품 40도 골드").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("안동소주 호리병").get()).product(productRepository.findByName("안동소주 호리병").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("안성마춤 생막걸리").get()).product(productRepository.findByName("안성마춤 생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("안양 동동주").get()).product(productRepository.findByName("안양 동동주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("애석").get()).product(productRepository.findByName("애석").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("애피소드 상그리아").get()).product(productRepository.findByName("애피소드 상그리아").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("애피소드 애플").get()).product(productRepository.findByName("애피소드 애플").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("애피소드 호프").get()).product(productRepository.findByName("애피소드 호프").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("야관문 쌀 막걸리").get()).product(productRepository.findByName("야관문 쌀 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("양촌 생 동동주").get()).product(productRepository.findByName("양촌 생 동동주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("양촌 생 막걸리").get()).product(productRepository.findByName("양촌 생 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("양촌 우렁이쌀 손 막걸리").get()).product(productRepository.findByName("양촌 우렁이쌀 손 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("어우야").get()).product(productRepository.findByName("어우야").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("여강").get()).product(productRepository.findByName("여강").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("여포의 꿈 (레드 드라이)").get()).product(productRepository.findByName("여포의 꿈 (레드 드라이)").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("여포의 꿈(레드스위트)").get()).product(productRepository.findByName("여포의 꿈(레드스위트)").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("여포의 꿈(화이트)").get()).product(productRepository.findByName("여포의 꿈(화이트)").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("연천 아주").get()).product(productRepository.findByName("연천 아주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("연천 연주").get()).product(productRepository.findByName("연천 연주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("연천 우주").get()).product(productRepository.findByName("연천 우주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("영일만친구 막걸리").get()).product(productRepository.findByName("영일만친구 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("예담은 한산소곡주").get()).product(productRepository.findByName("예담은 한산소곡주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("예담은 한산소곡화주").get()).product(productRepository.findByName("예담은 한산소곡화주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("예밀와인 레드 드라이").get()).product(productRepository.findByName("예밀와인 레드 드라이").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("예밀와인 레드 스위트").get()).product(productRepository.findByName("예밀와인 레드 스위트").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("예밀와인 로제").get()).product(productRepository.findByName("예밀와인 로제").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("예주").get()).product(productRepository.findByName("예주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("예천주 사월24").get()).product(productRepository.findByName("예천주 사월24").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("예천주 사월365").get()).product(productRepository.findByName("예천주 사월365").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("예천주복 만월24").get()).product(productRepository.findByName("예천주복 만월24").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("예천주복 만월40").get()).product(productRepository.findByName("예천주복 만월40").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("예화").get()).product(productRepository.findByName("예화").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("옛날 막걸리 古").get()).product(productRepository.findByName("옛날 막걸리 古").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("오곡 진상주").get()).product(productRepository.findByName("오곡 진상주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("오디랑").get()).product(productRepository.findByName("오디랑").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("오매락퍽").get()).product(productRepository.findByName("오매락퍽").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("오매백주").get()).product(productRepository.findByName("오매백주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("오메기 맑은술").get()).product(productRepository.findByName("오메기 맑은술").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("오목대").get()).product(productRepository.findByName("오목대").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("오미로제 프리미어와인").get()).product(productRepository.findByName("오미로제 프리미어와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("오미시앙 스페셜").get()).product(productRepository.findByName("오미시앙 스페셜").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("오미자 생막걸리").get()).product(productRepository.findByName("오미자 생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("오산막걸리").get()).product(productRepository.findByName("오산막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("오희 스파클링 막걸리").get()).product(productRepository.findByName("오희 스파클링 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("왕율주").get()).product(productRepository.findByName("왕율주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("왕피천을 품은 미소생막걸리").get()).product(productRepository.findByName("왕피천을 품은 미소생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("우곡생주").get()).product(productRepository.findByName("우곡생주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("우도 땅콩 전통주").get()).product(productRepository.findByName("우도 땅콩 전통주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("운암1945").get()).product(productRepository.findByName("운암1945").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("원매 프리미엄").get()).product(productRepository.findByName("원매 프리미엄").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("원매").get()).product(productRepository.findByName("원매").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("원조 한산소곡주").get()).product(productRepository.findByName("원조 한산소곡주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("원조소곡화주").get()).product(productRepository.findByName("원조소곡화주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("월매 쌀막걸리").get()).product(productRepository.findByName("월매 쌀막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("유기농 이도 42").get()).product(productRepository.findByName("유기농 이도 42").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("유기농 이도14").get()).product(productRepository.findByName("유기농 이도14").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("유자 동동주").get()).product(productRepository.findByName("유자 동동주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("유자 생 막걸리").get()).product(productRepository.findByName("유자 생 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("율무 동동주").get()).product(productRepository.findByName("율무 동동주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("은자골 곶감 생 탁배기").get()).product(productRepository.findByName("은자골 곶감 생 탁배기").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("은자골 생 탁배기").get()).product(productRepository.findByName("은자골 생 탁배기").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("이강주").get()).product(productRepository.findByName("이강주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("이강주 2호").get()).product(productRepository.findByName("이강주 2호").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("이강주 특7호").get()).product(productRepository.findByName("이강주 특7호").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("이도 32").get()).product(productRepository.findByName("이도 32").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("이동 생 쌀 막걸리").get()).product(productRepository.findByName("이동 생 쌀 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("이동 쌀 막걸리").get()).product(productRepository.findByName("이동 쌀 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("이상헌 약주").get()).product(productRepository.findByName("이상헌 약주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("이상헌 탁주").get()).product(productRepository.findByName("이상헌 탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("이화백주").get()).product(productRepository.findByName("이화백주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("인천 생 소성주").get()).product(productRepository.findByName("인천 생 소성주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("입장탁주").get()).product(productRepository.findByName("입장탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("자두와인 레드").get()).product(productRepository.findByName("자두와인 레드").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("자두와인 화이트").get()).product(productRepository.findByName("자두와인 화이트").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("자연담은 복분자막걸리").get()).product(productRepository.findByName("자연담은 복분자막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("자연송이주").get()).product(productRepository.findByName("자연송이주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("자희향").get()).product(productRepository.findByName("자희향").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("자희향 국화주").get()).product(productRepository.findByName("자희향 국화주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("자희향 나비").get()).product(productRepository.findByName("자희향 나비").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("장수 생 막걸리").get()).product(productRepository.findByName("장수 생 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("장수 오미자주").get()).product(productRepository.findByName("장수 오미자주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("장홍삼 장수 막걸리").get()).product(productRepository.findByName("장홍삼 장수 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("정고집 나주배 약주 15도").get()).product(productRepository.findByName("정고집 나주배 약주 15도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("정고집 나주배 약주 9도").get()).product(productRepository.findByName("정고집 나주배 약주 9도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("정고집 나주쌀 생막걸리").get()).product(productRepository.findByName("정고집 나주쌀 생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("정고집 옛날 생동동주").get()).product(productRepository.findByName("정고집 옛날 생동동주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("제주 고소리술").get()).product(productRepository.findByName("제주 고소리술").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("제주샘주 오메기술").get()).product(productRepository.findByName("제주샘주 오메기술").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("젤코바 스페셜와인").get()).product(productRepository.findByName("젤코바 스페셜와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("젤코바 캠벨와인").get()).product(productRepository.findByName("젤코바 캠벨와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("젤코바 프리미엄와인").get()).product(productRepository.findByName("젤코바 프리미엄와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("조선주조사").get()).product(productRepository.findByName("조선주조사").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("주몽 복분자주").get()).product(productRepository.findByName("주몽 복분자주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("주산지 막걸리").get()).product(productRepository.findByName("주산지 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("죽력고").get()).product(productRepository.findByName("죽력고").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("죽향 생막걸리").get()).product(productRepository.findByName("죽향 생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("줄포 생 막걸리").get()).product(productRepository.findByName("줄포 생 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("지란지교 무화과 탁주").get()).product(productRepository.findByName("지란지교 무화과 탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("지란지교 약주").get()).product(productRepository.findByName("지란지교 약주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("지란지교 탁주").get()).product(productRepository.findByName("지란지교 탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("지리산 허브잎 술").get()).product(productRepository.findByName("지리산 허브잎 술").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("지리산정담생쌀 막걸리").get()).product(productRepository.findByName("지리산정담생쌀 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("지장수 생막걸리").get()).product(productRepository.findByName("지장수 생막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("지장수 호박 막걸리").get()).product(productRepository.findByName("지장수 호박 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("지장수 호박 생 막걸리").get()).product(productRepository.findByName("지장수 호박 생 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("지평 생 쌀막걸리").get()).product(productRepository.findByName("지평 생 쌀막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("지평 생 옛막걸리").get()).product(productRepository.findByName("지평 생 옛막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("진도홍주 루비콘").get()).product(productRepository.findByName("진도홍주 루비콘").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("진맥소주 22도").get()).product(productRepository.findByName("진맥소주 22도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("진맥소주 40도").get()).product(productRepository.findByName("진맥소주 40도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("진맥소주 53도").get()).product(productRepository.findByName("진맥소주 53도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("진심 홍삼주 19도").get()).product(productRepository.findByName("진심 홍삼주 19도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("진쾌남").get()).product(productRepository.findByName("진쾌남").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("찰막걸리").get()).product(productRepository.findByName("찰막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("창원 생탁주").get()).product(productRepository.findByName("창원 생탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("천년담주").get()).product(productRepository.findByName("천년담주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("천년전주 생 막걸리").get()).product(productRepository.findByName("천년전주 생 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("천년주").get()).product(productRepository.findByName("천년주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("천등산 차례주").get()).product(productRepository.findByName("천등산 차례주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("천마 이야기").get()).product(productRepository.findByName("천마 이야기").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("천마몽").get()).product(productRepository.findByName("천마몽").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("천매").get()).product(productRepository.findByName("천매").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("천비향 약주").get()).product(productRepository.findByName("천비향 약주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("천비향 오양주 탁주").get()).product(productRepository.findByName("천비향 오양주 탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("천비향 화주").get()).product(productRepository.findByName("천비향 화주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("천안 연미주").get()).product(productRepository.findByName("천안 연미주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("천지주가 생 막걸리").get()).product(productRepository.findByName("천지주가 생 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("청남대 블루베리 막걸리").get()).product(productRepository.findByName("청남대 블루베리 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("청명주 500").get()).product(productRepository.findByName("청명주 500").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("청명주 750").get()).product(productRepository.findByName("청명주 750").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("청산녹수 꿀막걸리").get()).product(productRepository.findByName("청산녹수 꿀막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("청산녹수 사미인주").get()).product(productRepository.findByName("청산녹수 사미인주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("청산녹수 생탁주").get()).product(productRepository.findByName("청산녹수 생탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("청세주").get()).product(productRepository.findByName("청세주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("청송 얼음골 동동주").get()).product(productRepository.findByName("청송 얼음골 동동주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("청송 주왕 사과막걸리").get()).product(productRepository.findByName("청송 주왕 사과막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("청양 둔송 구기주").get()).product(productRepository.findByName("청양 둔송 구기주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("청진주").get()).product(productRepository.findByName("청진주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("청춘").get()).product(productRepository.findByName("청춘").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("초선의 꿈 (로제)").get()).product(productRepository.findByName("초선의 꿈 (로제)").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("추사 로제").get()).product(productRepository.findByName("추사 로제").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("추사 애플와인").get()).product(productRepository.findByName("추사 애플와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("추사40").get()).product(productRepository.findByName("추사40").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("추사백25").get()).product(productRepository.findByName("추사백25").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("추사블루").get()).product(productRepository.findByName("추사블루").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("추성주").get()).product(productRepository.findByName("추성주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("추시와인").get()).product(productRepository.findByName("추시와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("충주 백주").get()).product(productRepository.findByName("충주 백주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("컨츄리 산머루 와인 (드라이)").get()).product(productRepository.findByName("컨츄리 산머루 와인 (드라이)").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("컨츄리 산머루 와인 (스위트)").get()).product(productRepository.findByName("컨츄리 산머루 와인 (스위트)").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("컨츄리캠벨 (스위트)").get()).product(productRepository.findByName("컨츄리캠벨 (스위트)").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("코이버펑크, 머스캣 베일리 에이").get()).product(productRepository.findByName("코이버펑크, 머스캣 베일리 에이").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("코이버펑크, 샤르도네 세미용 블렌드").get()).product(productRepository.findByName("코이버펑크, 샤르도네 세미용 블렌드").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("코이버펑크, 카베르네 소비뇽").get()).product(productRepository.findByName("코이버펑크, 카베르네 소비뇽").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("쿨샷7.5").get()).product(productRepository.findByName("쿨샷7.5").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("크라테 레드와인 드라이").get()).product(productRepository.findByName("크라테 레드와인 드라이").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("크라테 레드와인 스위트").get()).product(productRepository.findByName("크라테 레드와인 스위트").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("크라테 로제와인").get()).product(productRepository.findByName("크라테 로제와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("타미앙스").get()).product(productRepository.findByName("타미앙스").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("톡 쏘는 복분자 막걸리").get()).product(productRepository.findByName("톡 쏘는 복분자 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("톡 쏘는 알밤동동").get()).product(productRepository.findByName("톡 쏘는 알밤동동").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("톡 한잔 골드").get()).product(productRepository.findByName("톡 한잔 골드").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("톡 한잔 소주").get()).product(productRepository.findByName("톡 한잔 소주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("티나").get()).product(productRepository.findByName("티나").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("펀치 쌀 바나나").get()).product(productRepository.findByName("펀치 쌀 바나나").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("편백숲 산소막걸리").get()).product(productRepository.findByName("편백숲 산소막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("편백숲 산소막걸리 딸기스파클링").get()).product(productRepository.findByName("편백숲 산소막걸리 딸기스파클링").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("편백숲 산소막걸리 순수령").get()).product(productRepository.findByName("편백숲 산소막걸리 순수령").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("평창 오디주").get()).product(productRepository.findByName("평창 오디주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("평창머루주").get()).product(productRepository.findByName("평창머루주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("포엠 레드 드라이와인").get()).product(productRepository.findByName("포엠 레드 드라이와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("포엠 레드 스위트와인").get()).product(productRepository.findByName("포엠 레드 스위트와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("포엠 로제와인").get()).product(productRepository.findByName("포엠 로제와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("포엠 화이트와인").get()).product(productRepository.findByName("포엠 화이트와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("풍남문").get()).product(productRepository.findByName("풍남문").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("풍정사계 동").get()).product(productRepository.findByName("풍정사계 동").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("풍정사계 추").get()).product(productRepository.findByName("풍정사계 추").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("풍정사계 춘").get()).product(productRepository.findByName("풍정사계 춘").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("풍정사계 하").get()).product(productRepository.findByName("풍정사계 하").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("필 FEEL").get()).product(productRepository.findByName("필 FEEL").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("하향주").get()).product(productRepository.findByName("하향주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("하향주 증류주").get()).product(productRepository.findByName("하향주 증류주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("한비 동충하초술").get()).product(productRepository.findByName("한비 동충하초술").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("한비 무병장수술").get()).product(productRepository.findByName("한비 무병장수술").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("한비 쌀소주").get()).product(productRepository.findByName("한비 쌀소주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("한비 오가피술").get()).product(productRepository.findByName("한비 오가피술").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("한산소곡주").get()).product(productRepository.findByName("한산소곡주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("한산소곡주(살균주)").get()).product(productRepository.findByName("한산소곡주(살균주)").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("한산소곡주_생주").get()).product(productRepository.findByName("한산소곡주_생주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("한스오차드 사과와인").get()).product(productRepository.findByName("한스오차드 사과와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("한시울").get()).product(productRepository.findByName("한시울").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("한주").get()).product(productRepository.findByName("한주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("해미읍성 딸기와인").get()).product(productRepository.findByName("해미읍성 딸기와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("해미읍성 매실와인").get()).product(productRepository.findByName("해미읍성 매실와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("해미읍성 모과와인").get()).product(productRepository.findByName("해미읍성 모과와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("해미읍성 살구와인").get()).product(productRepository.findByName("해미읍성 살구와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("해방주 18.8도").get()).product(productRepository.findByName("해방주 18.8도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("해방주 38도").get()).product(productRepository.findByName("해방주 38도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("해창 생 막걸리 12도").get()).product(productRepository.findByName("해창 생 막걸리 12도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("해창 생 막걸리 6도").get()).product(productRepository.findByName("해창 생 막걸리 6도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("해창 생 막걸리 9도").get()).product(productRepository.findByName("해창 생 막걸리 9도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("해파랑").get()).product(productRepository.findByName("해파랑").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("햇찹쌀이 하늘수").get()).product(productRepository.findByName("햇찹쌀이 하늘수").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("행운 막걸리").get()).product(productRepository.findByName("행운 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("행운주").get()).product(productRepository.findByName("행운주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("향수 우리밀 막걸리").get()).product(productRepository.findByName("향수 우리밀 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("허니문와인").get()).product(productRepository.findByName("허니문와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("허니비 와인").get()).product(productRepository.findByName("허니비 와인").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("호담 산양산삼 막걸리").get()).product(productRepository.findByName("호담 산양산삼 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("호담 산양산삼주").get()).product(productRepository.findByName("호담 산양산삼주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("호담").get()).product(productRepository.findByName("호담").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("호땅").get()).product(productRepository.findByName("호땅").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("호랑이 생 막걸리").get()).product(productRepository.findByName("호랑이 생 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("호모루덴스").get()).product(productRepository.findByName("호모루덴스").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("혼디주").get()).product(productRepository.findByName("혼디주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("홍로").get()).product(productRepository.findByName("홍로").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("홍삼 인삼주").get()).product(productRepository.findByName("홍삼 인삼주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("홍삼명주").get()).product(productRepository.findByName("홍삼명주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("홍삼진심 인삼주 (1set)").get()).product(productRepository.findByName("홍삼진심 인삼주 (1set)").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("홍천강 탁주").get()).product(productRepository.findByName("홍천강 탁주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("화주").get()).product(productRepository.findByName("화주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("황금보리소주17").get()).product(productRepository.findByName("황금보리소주17").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("황금보리소주25").get()).product(productRepository.findByName("황금보리소주25").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("황금보리소주40").get()).product(productRepository.findByName("황금보리소주40").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("황진이").get()).product(productRepository.findByName("황진이").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("황칠주").get()).product(productRepository.findByName("황칠주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("회곡 생 동동주").get()).product(productRepository.findByName("회곡 생 동동주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("회곡 생 막걸리").get()).product(productRepository.findByName("회곡 생 막걸리").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("흑돈주").get()).product(productRepository.findByName("흑돈주").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("희양산막걸리 15도").get()).product(productRepository.findByName("희양산막걸리 15도").get()).quantity(3L).build());
        itemProductRepository.save(ItemProduct.builder().item(itemRepository.findByInfo("희양산막걸리 9도").get()).product(productRepository.findByName("희양산막걸리 9도").get()).quantity(3L).build());
    }

    void initAdmin() {
        memberRepository.save(Member.builder().email("smileby95@nate.com").provider(ProviderType.KAKAO).name("김태섭").nickname("seop").role(MemberRole.ADMIN).phone(1041932693L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("hjs7949@naver.com").provider(ProviderType.KAKAO).name("황중석").nickname("황중석").role(MemberRole.ADMIN).phone(1012345678L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("ekslws123@nate.com").provider(ProviderType.KAKAO).name("유민석").nickname("유민석").role(MemberRole.ADMIN).phone(1012345678L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("cheek0805@naver.com").provider(ProviderType.KAKAO).name("최동철").nickname("최동철").role(MemberRole.ADMIN).phone(1012345678L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("arong16@naver.com").provider(ProviderType.KAKAO).name("이아영").nickname("아롱사태").role(MemberRole.ADMIN).phone(1012345678L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
    }

    void initMember() {
        memberRepository.save(Member.builder().email("storeManager1@af.shop").provider(ProviderType.KAKAO).name("storeManager1").nickname("storeManager1").role(MemberRole.STORE_MANAGER).phone(1012345678L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("storeManager2@af.shop").provider(ProviderType.KAKAO).name("storeManager2").nickname("storeManager2").role(MemberRole.STORE_MANAGER).phone(1012345679L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("storeManager3@af.shop").provider(ProviderType.KAKAO).name("storeManager3").nickname("storeManager3").role(MemberRole.STORE_MANAGER).phone(1012345680L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("storeManager4@af.shop").provider(ProviderType.KAKAO).name("storeManager4").nickname("storeManager4").role(MemberRole.STORE_MANAGER).phone(1012345681L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("storeManager5@af.shop").provider(ProviderType.KAKAO).name("storeManager5").nickname("storeManager5").role(MemberRole.STORE_MANAGER).phone(1012345682L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("storeManager6@af.shop").provider(ProviderType.KAKAO).name("storeManager6").nickname("storeManager6").role(MemberRole.STORE_MANAGER).phone(1012345683L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("storeManager7@af.shop").provider(ProviderType.KAKAO).name("storeManager7").nickname("storeManager7").role(MemberRole.STORE_MANAGER).phone(1012345684L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("storeManager8@af.shop").provider(ProviderType.KAKAO).name("storeManager8").nickname("storeManager8").role(MemberRole.STORE_MANAGER).phone(1012345685L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("storeManager9@af.shop").provider(ProviderType.KAKAO).name("storeManager9").nickname("storeManager9").role(MemberRole.STORE_MANAGER).phone(1012345686L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("storeManager10@af.shop").provider(ProviderType.KAKAO).name("storeManager10").nickname("storeManager10").role(MemberRole.STORE_MANAGER).phone(1012345687L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner1@af.shop").provider(ProviderType.KAKAO).name("owner1").nickname("owner1").role(MemberRole.OWNER).phone(1012345687L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner2@af.shop").provider(ProviderType.KAKAO).name("owner2").nickname("owner2").role(MemberRole.OWNER).phone(1012345688L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner3@af.shop").provider(ProviderType.KAKAO).name("owner3").nickname("owner3").role(MemberRole.OWNER).phone(1012345689L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner4@af.shop").provider(ProviderType.KAKAO).name("owner4").nickname("owner4").role(MemberRole.OWNER).phone(1012345690L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner5@af.shop").provider(ProviderType.KAKAO).name("owner5").nickname("owner5").role(MemberRole.OWNER).phone(1012345691L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner6@af.shop").provider(ProviderType.KAKAO).name("owner6").nickname("owner6").role(MemberRole.OWNER).phone(1012345692L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner7@af.shop").provider(ProviderType.KAKAO).name("owner7").nickname("owner7").role(MemberRole.OWNER).phone(1012345693L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner8@af.shop").provider(ProviderType.KAKAO).name("owner8").nickname("owner8").role(MemberRole.OWNER).phone(1012345694L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner9@af.shop").provider(ProviderType.KAKAO).name("owner9").nickname("owner9").role(MemberRole.OWNER).phone(1012345695L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner10@af.shop").provider(ProviderType.KAKAO).name("owner10").nickname("owner10").role(MemberRole.OWNER).phone(1012345696L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner11@af.shop").provider(ProviderType.KAKAO).name("owner11").nickname("owner11").role(MemberRole.OWNER).phone(1012345697L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner12@af.shop").provider(ProviderType.KAKAO).name("owner12").nickname("owner12").role(MemberRole.OWNER).phone(1012345698L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner13@af.shop").provider(ProviderType.KAKAO).name("owner13").nickname("owner13").role(MemberRole.OWNER).phone(1012345699L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner14@af.shop").provider(ProviderType.KAKAO).name("owner14").nickname("owner14").role(MemberRole.OWNER).phone(1012345700L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner15@af.shop").provider(ProviderType.KAKAO).name("owner15").nickname("owner15").role(MemberRole.OWNER).phone(1012345701L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner16@af.shop").provider(ProviderType.KAKAO).name("owner16").nickname("owner16").role(MemberRole.OWNER).phone(1012345702L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner17@af.shop").provider(ProviderType.KAKAO).name("owner17").nickname("owner17").role(MemberRole.OWNER).phone(1012345703L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner18@af.shop").provider(ProviderType.KAKAO).name("owner18").nickname("owner18").role(MemberRole.OWNER).phone(1012345704L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner19@af.shop").provider(ProviderType.KAKAO).name("owner19").nickname("owner19").role(MemberRole.OWNER).phone(1012345705L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner20@af.shop").provider(ProviderType.KAKAO).name("owner20").nickname("owner20").role(MemberRole.OWNER).phone(1012345706L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner21@af.shop").provider(ProviderType.KAKAO).name("owner21").nickname("owner21").role(MemberRole.OWNER).phone(1012345707L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner22@af.shop").provider(ProviderType.KAKAO).name("owner22").nickname("owner22").role(MemberRole.OWNER).phone(1012345708L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner23@af.shop").provider(ProviderType.KAKAO).name("owner23").nickname("owner23").role(MemberRole.OWNER).phone(1012345709L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner24@af.shop").provider(ProviderType.KAKAO).name("owner24").nickname("owner24").role(MemberRole.OWNER).phone(1012345710L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner25@af.shop").provider(ProviderType.KAKAO).name("owner25").nickname("owner25").role(MemberRole.OWNER).phone(1012345711L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner26@af.shop").provider(ProviderType.KAKAO).name("owner26").nickname("owner26").role(MemberRole.OWNER).phone(1012345712L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner27@af.shop").provider(ProviderType.KAKAO).name("owner27").nickname("owner27").role(MemberRole.OWNER).phone(1012345713L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner28@af.shop").provider(ProviderType.KAKAO).name("owner28").nickname("owner28").role(MemberRole.OWNER).phone(1012345714L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner29@af.shop").provider(ProviderType.KAKAO).name("owner29").nickname("owner29").role(MemberRole.OWNER).phone(1012345715L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner30@af.shop").provider(ProviderType.KAKAO).name("owner30").nickname("owner30").role(MemberRole.OWNER).phone(1012345716L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner31@af.shop").provider(ProviderType.KAKAO).name("owner31").nickname("owner31").role(MemberRole.OWNER).phone(1012345717L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner32@af.shop").provider(ProviderType.KAKAO).name("owner32").nickname("owner32").role(MemberRole.OWNER).phone(1012345718L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner33@af.shop").provider(ProviderType.KAKAO).name("owner33").nickname("owner33").role(MemberRole.OWNER).phone(1012345719L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner34@af.shop").provider(ProviderType.KAKAO).name("owner34").nickname("owner34").role(MemberRole.OWNER).phone(1012345720L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner35@af.shop").provider(ProviderType.KAKAO).name("owner35").nickname("owner35").role(MemberRole.OWNER).phone(1012345721L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner36@af.shop").provider(ProviderType.KAKAO).name("owner36").nickname("owner36").role(MemberRole.OWNER).phone(1012345722L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner37@af.shop").provider(ProviderType.KAKAO).name("owner37").nickname("owner37").role(MemberRole.OWNER).phone(1012345723L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner38@af.shop").provider(ProviderType.KAKAO).name("owner38").nickname("owner38").role(MemberRole.OWNER).phone(1012345724L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner39@af.shop").provider(ProviderType.KAKAO).name("owner39").nickname("owner39").role(MemberRole.OWNER).phone(1012345725L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner40@af.shop").provider(ProviderType.KAKAO).name("owner40").nickname("owner40").role(MemberRole.OWNER).phone(1012345726L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner41@af.shop").provider(ProviderType.KAKAO).name("owner41").nickname("owner41").role(MemberRole.OWNER).phone(1012345727L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner42@af.shop").provider(ProviderType.KAKAO).name("owner42").nickname("owner42").role(MemberRole.OWNER).phone(1012345728L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner43@af.shop").provider(ProviderType.KAKAO).name("owner43").nickname("owner43").role(MemberRole.OWNER).phone(1012345729L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner44@af.shop").provider(ProviderType.KAKAO).name("owner44").nickname("owner44").role(MemberRole.OWNER).phone(1012345730L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner45@af.shop").provider(ProviderType.KAKAO).name("owner45").nickname("owner45").role(MemberRole.OWNER).phone(1012345731L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner46@af.shop").provider(ProviderType.KAKAO).name("owner46").nickname("owner46").role(MemberRole.OWNER).phone(1012345732L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner47@af.shop").provider(ProviderType.KAKAO).name("owner47").nickname("owner47").role(MemberRole.OWNER).phone(1012345733L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner48@af.shop").provider(ProviderType.KAKAO).name("owner48").nickname("owner48").role(MemberRole.OWNER).phone(1012345734L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner49@af.shop").provider(ProviderType.KAKAO).name("owner49").nickname("owner49").role(MemberRole.OWNER).phone(1012345735L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner50@af.shop").provider(ProviderType.KAKAO).name("owner50").nickname("owner50").role(MemberRole.OWNER).phone(1012345736L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner51@af.shop").provider(ProviderType.KAKAO).name("owner51").nickname("owner51").role(MemberRole.OWNER).phone(1012345737L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner52@af.shop").provider(ProviderType.KAKAO).name("owner52").nickname("owner52").role(MemberRole.OWNER).phone(1012345738L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner53@af.shop").provider(ProviderType.KAKAO).name("owner53").nickname("owner53").role(MemberRole.OWNER).phone(1012345739L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner54@af.shop").provider(ProviderType.KAKAO).name("owner54").nickname("owner54").role(MemberRole.OWNER).phone(1012345740L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner55@af.shop").provider(ProviderType.KAKAO).name("owner55").nickname("owner55").role(MemberRole.OWNER).phone(1012345741L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner56@af.shop").provider(ProviderType.KAKAO).name("owner56").nickname("owner56").role(MemberRole.OWNER).phone(1012345742L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner57@af.shop").provider(ProviderType.KAKAO).name("owner57").nickname("owner57").role(MemberRole.OWNER).phone(1012345743L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner58@af.shop").provider(ProviderType.KAKAO).name("owner58").nickname("owner58").role(MemberRole.OWNER).phone(1012345744L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner59@af.shop").provider(ProviderType.KAKAO).name("owner59").nickname("owner59").role(MemberRole.OWNER).phone(1012345745L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner60@af.shop").provider(ProviderType.KAKAO).name("owner60").nickname("owner60").role(MemberRole.OWNER).phone(1012345746L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner61@af.shop").provider(ProviderType.KAKAO).name("owner61").nickname("owner61").role(MemberRole.OWNER).phone(1012345747L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner62@af.shop").provider(ProviderType.KAKAO).name("owner62").nickname("owner62").role(MemberRole.OWNER).phone(1012345748L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner63@af.shop").provider(ProviderType.KAKAO).name("owner63").nickname("owner63").role(MemberRole.OWNER).phone(1012345749L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner64@af.shop").provider(ProviderType.KAKAO).name("owner64").nickname("owner64").role(MemberRole.OWNER).phone(1012345750L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner65@af.shop").provider(ProviderType.KAKAO).name("owner65").nickname("owner65").role(MemberRole.OWNER).phone(1012345751L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner66@af.shop").provider(ProviderType.KAKAO).name("owner66").nickname("owner66").role(MemberRole.OWNER).phone(1012345752L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner67@af.shop").provider(ProviderType.KAKAO).name("owner67").nickname("owner67").role(MemberRole.OWNER).phone(1012345753L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner68@af.shop").provider(ProviderType.KAKAO).name("owner68").nickname("owner68").role(MemberRole.OWNER).phone(1012345754L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner69@af.shop").provider(ProviderType.KAKAO).name("owner69").nickname("owner69").role(MemberRole.OWNER).phone(1012345755L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner70@af.shop").provider(ProviderType.KAKAO).name("owner70").nickname("owner70").role(MemberRole.OWNER).phone(1012345756L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner71@af.shop").provider(ProviderType.KAKAO).name("owner71").nickname("owner71").role(MemberRole.OWNER).phone(1012345757L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner72@af.shop").provider(ProviderType.KAKAO).name("owner72").nickname("owner72").role(MemberRole.OWNER).phone(1012345758L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner73@af.shop").provider(ProviderType.KAKAO).name("owner73").nickname("owner73").role(MemberRole.OWNER).phone(1012345759L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner74@af.shop").provider(ProviderType.KAKAO).name("owner74").nickname("owner74").role(MemberRole.OWNER).phone(1012345760L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner75@af.shop").provider(ProviderType.KAKAO).name("owner75").nickname("owner75").role(MemberRole.OWNER).phone(1012345761L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner76@af.shop").provider(ProviderType.KAKAO).name("owner76").nickname("owner76").role(MemberRole.OWNER).phone(1012345762L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner77@af.shop").provider(ProviderType.KAKAO).name("owner77").nickname("owner77").role(MemberRole.OWNER).phone(1012345763L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner78@af.shop").provider(ProviderType.KAKAO).name("owner78").nickname("owner78").role(MemberRole.OWNER).phone(1012345764L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner79@af.shop").provider(ProviderType.KAKAO).name("owner79").nickname("owner79").role(MemberRole.OWNER).phone(1012345765L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner80@af.shop").provider(ProviderType.KAKAO).name("owner80").nickname("owner80").role(MemberRole.OWNER).phone(1012345766L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner81@af.shop").provider(ProviderType.KAKAO).name("owner81").nickname("owner81").role(MemberRole.OWNER).phone(1012345767L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner82@af.shop").provider(ProviderType.KAKAO).name("owner82").nickname("owner82").role(MemberRole.OWNER).phone(1012345768L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner83@af.shop").provider(ProviderType.KAKAO).name("owner83").nickname("owner83").role(MemberRole.OWNER).phone(1012345769L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner84@af.shop").provider(ProviderType.KAKAO).name("owner84").nickname("owner84").role(MemberRole.OWNER).phone(1012345770L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner85@af.shop").provider(ProviderType.KAKAO).name("owner85").nickname("owner85").role(MemberRole.OWNER).phone(1012345771L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner86@af.shop").provider(ProviderType.KAKAO).name("owner86").nickname("owner86").role(MemberRole.OWNER).phone(1012345772L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner87@af.shop").provider(ProviderType.KAKAO).name("owner87").nickname("owner87").role(MemberRole.OWNER).phone(1012345773L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner88@af.shop").provider(ProviderType.KAKAO).name("owner88").nickname("owner88").role(MemberRole.OWNER).phone(1012345774L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner89@af.shop").provider(ProviderType.KAKAO).name("owner89").nickname("owner89").role(MemberRole.OWNER).phone(1012345775L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner90@af.shop").provider(ProviderType.KAKAO).name("owner90").nickname("owner90").role(MemberRole.OWNER).phone(1012345776L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner91@af.shop").provider(ProviderType.KAKAO).name("owner91").nickname("owner91").role(MemberRole.OWNER).phone(1012345777L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner92@af.shop").provider(ProviderType.KAKAO).name("owner92").nickname("owner92").role(MemberRole.OWNER).phone(1012345778L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner93@af.shop").provider(ProviderType.KAKAO).name("owner93").nickname("owner93").role(MemberRole.OWNER).phone(1012345779L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner94@af.shop").provider(ProviderType.KAKAO).name("owner94").nickname("owner94").role(MemberRole.OWNER).phone(1012345780L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner95@af.shop").provider(ProviderType.KAKAO).name("owner95").nickname("owner95").role(MemberRole.OWNER).phone(1012345781L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner96@af.shop").provider(ProviderType.KAKAO).name("owner96").nickname("owner96").role(MemberRole.OWNER).phone(1012345782L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner97@af.shop").provider(ProviderType.KAKAO).name("owner97").nickname("owner97").role(MemberRole.OWNER).phone(1012345783L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner98@af.shop").provider(ProviderType.KAKAO).name("owner98").nickname("owner98").role(MemberRole.OWNER).phone(1012345784L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner99@af.shop").provider(ProviderType.KAKAO).name("owner99").nickname("owner99").role(MemberRole.OWNER).phone(1012345785L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("owner100@af.shop").provider(ProviderType.KAKAO).name("owner100").nickname("owner100").role(MemberRole.OWNER).phone(1012345786L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member1@af.shop").provider(ProviderType.KAKAO).name("member1").nickname("member1").role(MemberRole.MEMBER).phone(1012345786L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member2@af.shop").provider(ProviderType.KAKAO).name("member2").nickname("member2").role(MemberRole.MEMBER).phone(1012345787L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member3@af.shop").provider(ProviderType.KAKAO).name("member3").nickname("member3").role(MemberRole.MEMBER).phone(1012345788L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member4@af.shop").provider(ProviderType.KAKAO).name("member4").nickname("member4").role(MemberRole.MEMBER).phone(1012345789L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member5@af.shop").provider(ProviderType.KAKAO).name("member5").nickname("member5").role(MemberRole.MEMBER).phone(1012345790L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member6@af.shop").provider(ProviderType.KAKAO).name("member6").nickname("member6").role(MemberRole.MEMBER).phone(1012345791L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member7@af.shop").provider(ProviderType.KAKAO).name("member7").nickname("member7").role(MemberRole.MEMBER).phone(1012345792L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member8@af.shop").provider(ProviderType.KAKAO).name("member8").nickname("member8").role(MemberRole.MEMBER).phone(1012345793L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member9@af.shop").provider(ProviderType.KAKAO).name("member9").nickname("member9").role(MemberRole.MEMBER).phone(1012345794L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member10@af.shop").provider(ProviderType.KAKAO).name("member10").nickname("member10").role(MemberRole.MEMBER).phone(1012345795L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member11@af.shop").provider(ProviderType.KAKAO).name("member11").nickname("member11").role(MemberRole.MEMBER).phone(1012345796L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member12@af.shop").provider(ProviderType.KAKAO).name("member12").nickname("member12").role(MemberRole.MEMBER).phone(1012345797L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member13@af.shop").provider(ProviderType.KAKAO).name("member13").nickname("member13").role(MemberRole.MEMBER).phone(1012345798L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member14@af.shop").provider(ProviderType.KAKAO).name("member14").nickname("member14").role(MemberRole.MEMBER).phone(1012345799L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member15@af.shop").provider(ProviderType.KAKAO).name("member15").nickname("member15").role(MemberRole.MEMBER).phone(1012345800L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member16@af.shop").provider(ProviderType.KAKAO).name("member16").nickname("member16").role(MemberRole.MEMBER).phone(1012345801L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member17@af.shop").provider(ProviderType.KAKAO).name("member17").nickname("member17").role(MemberRole.MEMBER).phone(1012345802L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member18@af.shop").provider(ProviderType.KAKAO).name("member18").nickname("member18").role(MemberRole.MEMBER).phone(1012345803L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member19@af.shop").provider(ProviderType.KAKAO).name("member19").nickname("member19").role(MemberRole.MEMBER).phone(1012345804L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member20@af.shop").provider(ProviderType.KAKAO).name("member20").nickname("member20").role(MemberRole.MEMBER).phone(1012345805L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member21@af.shop").provider(ProviderType.KAKAO).name("member21").nickname("member21").role(MemberRole.MEMBER).phone(1012345806L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member22@af.shop").provider(ProviderType.KAKAO).name("member22").nickname("member22").role(MemberRole.MEMBER).phone(1012345807L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member23@af.shop").provider(ProviderType.KAKAO).name("member23").nickname("member23").role(MemberRole.MEMBER).phone(1012345808L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member24@af.shop").provider(ProviderType.KAKAO).name("member24").nickname("member24").role(MemberRole.MEMBER).phone(1012345809L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member25@af.shop").provider(ProviderType.KAKAO).name("member25").nickname("member25").role(MemberRole.MEMBER).phone(1012345810L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member26@af.shop").provider(ProviderType.KAKAO).name("member26").nickname("member26").role(MemberRole.MEMBER).phone(1012345811L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member27@af.shop").provider(ProviderType.KAKAO).name("member27").nickname("member27").role(MemberRole.MEMBER).phone(1012345812L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member28@af.shop").provider(ProviderType.KAKAO).name("member28").nickname("member28").role(MemberRole.MEMBER).phone(1012345813L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member29@af.shop").provider(ProviderType.KAKAO).name("member29").nickname("member29").role(MemberRole.MEMBER).phone(1012345814L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member30@af.shop").provider(ProviderType.KAKAO).name("member30").nickname("member30").role(MemberRole.MEMBER).phone(1012345815L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member31@af.shop").provider(ProviderType.KAKAO).name("member31").nickname("member31").role(MemberRole.MEMBER).phone(1012345816L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member32@af.shop").provider(ProviderType.KAKAO).name("member32").nickname("member32").role(MemberRole.MEMBER).phone(1012345817L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member33@af.shop").provider(ProviderType.KAKAO).name("member33").nickname("member33").role(MemberRole.MEMBER).phone(1012345818L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member34@af.shop").provider(ProviderType.KAKAO).name("member34").nickname("member34").role(MemberRole.MEMBER).phone(1012345819L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member35@af.shop").provider(ProviderType.KAKAO).name("member35").nickname("member35").role(MemberRole.MEMBER).phone(1012345820L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member36@af.shop").provider(ProviderType.KAKAO).name("member36").nickname("member36").role(MemberRole.MEMBER).phone(1012345821L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member37@af.shop").provider(ProviderType.KAKAO).name("member37").nickname("member37").role(MemberRole.MEMBER).phone(1012345822L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member38@af.shop").provider(ProviderType.KAKAO).name("member38").nickname("member38").role(MemberRole.MEMBER).phone(1012345823L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member39@af.shop").provider(ProviderType.KAKAO).name("member39").nickname("member39").role(MemberRole.MEMBER).phone(1012345824L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member40@af.shop").provider(ProviderType.KAKAO).name("member40").nickname("member40").role(MemberRole.MEMBER).phone(1012345825L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member41@af.shop").provider(ProviderType.KAKAO).name("member41").nickname("member41").role(MemberRole.MEMBER).phone(1012345826L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member42@af.shop").provider(ProviderType.KAKAO).name("member42").nickname("member42").role(MemberRole.MEMBER).phone(1012345827L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member43@af.shop").provider(ProviderType.KAKAO).name("member43").nickname("member43").role(MemberRole.MEMBER).phone(1012345828L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member44@af.shop").provider(ProviderType.KAKAO).name("member44").nickname("member44").role(MemberRole.MEMBER).phone(1012345829L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member45@af.shop").provider(ProviderType.KAKAO).name("member45").nickname("member45").role(MemberRole.MEMBER).phone(1012345830L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member46@af.shop").provider(ProviderType.KAKAO).name("member46").nickname("member46").role(MemberRole.MEMBER).phone(1012345831L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member47@af.shop").provider(ProviderType.KAKAO).name("member47").nickname("member47").role(MemberRole.MEMBER).phone(1012345832L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member48@af.shop").provider(ProviderType.KAKAO).name("member48").nickname("member48").role(MemberRole.MEMBER).phone(1012345833L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member49@af.shop").provider(ProviderType.KAKAO).name("member49").nickname("member49").role(MemberRole.MEMBER).phone(1012345834L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member50@af.shop").provider(ProviderType.KAKAO).name("member50").nickname("member50").role(MemberRole.MEMBER).phone(1012345835L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member51@af.shop").provider(ProviderType.KAKAO).name("member51").nickname("member51").role(MemberRole.MEMBER).phone(1012345836L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member52@af.shop").provider(ProviderType.KAKAO).name("member52").nickname("member52").role(MemberRole.MEMBER).phone(1012345837L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member53@af.shop").provider(ProviderType.KAKAO).name("member53").nickname("member53").role(MemberRole.MEMBER).phone(1012345838L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member54@af.shop").provider(ProviderType.KAKAO).name("member54").nickname("member54").role(MemberRole.MEMBER).phone(1012345839L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member55@af.shop").provider(ProviderType.KAKAO).name("member55").nickname("member55").role(MemberRole.MEMBER).phone(1012345840L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member56@af.shop").provider(ProviderType.KAKAO).name("member56").nickname("member56").role(MemberRole.MEMBER).phone(1012345841L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member57@af.shop").provider(ProviderType.KAKAO).name("member57").nickname("member57").role(MemberRole.MEMBER).phone(1012345842L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member58@af.shop").provider(ProviderType.KAKAO).name("member58").nickname("member58").role(MemberRole.MEMBER).phone(1012345843L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member59@af.shop").provider(ProviderType.KAKAO).name("member59").nickname("member59").role(MemberRole.MEMBER).phone(1012345844L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member60@af.shop").provider(ProviderType.KAKAO).name("member60").nickname("member60").role(MemberRole.MEMBER).phone(1012345845L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member61@af.shop").provider(ProviderType.KAKAO).name("member61").nickname("member61").role(MemberRole.MEMBER).phone(1012345846L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member62@af.shop").provider(ProviderType.KAKAO).name("member62").nickname("member62").role(MemberRole.MEMBER).phone(1012345847L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member63@af.shop").provider(ProviderType.KAKAO).name("member63").nickname("member63").role(MemberRole.MEMBER).phone(1012345848L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member64@af.shop").provider(ProviderType.KAKAO).name("member64").nickname("member64").role(MemberRole.MEMBER).phone(1012345849L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member65@af.shop").provider(ProviderType.KAKAO).name("member65").nickname("member65").role(MemberRole.MEMBER).phone(1012345850L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member66@af.shop").provider(ProviderType.KAKAO).name("member66").nickname("member66").role(MemberRole.MEMBER).phone(1012345851L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member67@af.shop").provider(ProviderType.KAKAO).name("member67").nickname("member67").role(MemberRole.MEMBER).phone(1012345852L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member68@af.shop").provider(ProviderType.KAKAO).name("member68").nickname("member68").role(MemberRole.MEMBER).phone(1012345853L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member69@af.shop").provider(ProviderType.KAKAO).name("member69").nickname("member69").role(MemberRole.MEMBER).phone(1012345854L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member70@af.shop").provider(ProviderType.KAKAO).name("member70").nickname("member70").role(MemberRole.MEMBER).phone(1012345855L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member71@af.shop").provider(ProviderType.KAKAO).name("member71").nickname("member71").role(MemberRole.MEMBER).phone(1012345856L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member72@af.shop").provider(ProviderType.KAKAO).name("member72").nickname("member72").role(MemberRole.MEMBER).phone(1012345857L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member73@af.shop").provider(ProviderType.KAKAO).name("member73").nickname("member73").role(MemberRole.MEMBER).phone(1012345858L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member74@af.shop").provider(ProviderType.KAKAO).name("member74").nickname("member74").role(MemberRole.MEMBER).phone(1012345859L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member75@af.shop").provider(ProviderType.KAKAO).name("member75").nickname("member75").role(MemberRole.MEMBER).phone(1012345860L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member76@af.shop").provider(ProviderType.KAKAO).name("member76").nickname("member76").role(MemberRole.MEMBER).phone(1012345861L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member77@af.shop").provider(ProviderType.KAKAO).name("member77").nickname("member77").role(MemberRole.MEMBER).phone(1012345862L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member78@af.shop").provider(ProviderType.KAKAO).name("member78").nickname("member78").role(MemberRole.MEMBER).phone(1012345863L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member79@af.shop").provider(ProviderType.KAKAO).name("member79").nickname("member79").role(MemberRole.MEMBER).phone(1012345864L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member80@af.shop").provider(ProviderType.KAKAO).name("member80").nickname("member80").role(MemberRole.MEMBER).phone(1012345865L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member81@af.shop").provider(ProviderType.KAKAO).name("member81").nickname("member81").role(MemberRole.MEMBER).phone(1012345866L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member82@af.shop").provider(ProviderType.KAKAO).name("member82").nickname("member82").role(MemberRole.MEMBER).phone(1012345867L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member83@af.shop").provider(ProviderType.KAKAO).name("member83").nickname("member83").role(MemberRole.MEMBER).phone(1012345868L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member84@af.shop").provider(ProviderType.KAKAO).name("member84").nickname("member84").role(MemberRole.MEMBER).phone(1012345869L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member85@af.shop").provider(ProviderType.KAKAO).name("member85").nickname("member85").role(MemberRole.MEMBER).phone(1012345870L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member86@af.shop").provider(ProviderType.KAKAO).name("member86").nickname("member86").role(MemberRole.MEMBER).phone(1012345871L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member87@af.shop").provider(ProviderType.KAKAO).name("member87").nickname("member87").role(MemberRole.MEMBER).phone(1012345872L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member88@af.shop").provider(ProviderType.KAKAO).name("member88").nickname("member88").role(MemberRole.MEMBER).phone(1012345873L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member89@af.shop").provider(ProviderType.KAKAO).name("member89").nickname("member89").role(MemberRole.MEMBER).phone(1012345874L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member90@af.shop").provider(ProviderType.KAKAO).name("member90").nickname("member90").role(MemberRole.MEMBER).phone(1012345875L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member91@af.shop").provider(ProviderType.KAKAO).name("member91").nickname("member91").role(MemberRole.MEMBER).phone(1012345876L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member92@af.shop").provider(ProviderType.KAKAO).name("member92").nickname("member92").role(MemberRole.MEMBER).phone(1012345877L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member93@af.shop").provider(ProviderType.KAKAO).name("member93").nickname("member93").role(MemberRole.MEMBER).phone(1012345878L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member94@af.shop").provider(ProviderType.KAKAO).name("member94").nickname("member94").role(MemberRole.MEMBER).phone(1012345879L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member95@af.shop").provider(ProviderType.KAKAO).name("member95").nickname("member95").role(MemberRole.MEMBER).phone(1012345880L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member96@af.shop").provider(ProviderType.KAKAO).name("member96").nickname("member96").role(MemberRole.MEMBER).phone(1012345881L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member97@af.shop").provider(ProviderType.KAKAO).name("member97").nickname("member97").role(MemberRole.MEMBER).phone(1012345882L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member98@af.shop").provider(ProviderType.KAKAO).name("member98").nickname("member98").role(MemberRole.MEMBER).phone(1012345883L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member99@af.shop").provider(ProviderType.KAKAO).name("member99").nickname("member99").role(MemberRole.MEMBER).phone(1012345884L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member100@af.shop").provider(ProviderType.KAKAO).name("member100").nickname("member100").role(MemberRole.MEMBER).phone(1012345885L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member101@af.shop").provider(ProviderType.KAKAO).name("member101").nickname("member101").role(MemberRole.MEMBER).phone(1012345886L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member102@af.shop").provider(ProviderType.KAKAO).name("member102").nickname("member102").role(MemberRole.MEMBER).phone(1012345887L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member103@af.shop").provider(ProviderType.KAKAO).name("member103").nickname("member103").role(MemberRole.MEMBER).phone(1012345888L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member104@af.shop").provider(ProviderType.KAKAO).name("member104").nickname("member104").role(MemberRole.MEMBER).phone(1012345889L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member105@af.shop").provider(ProviderType.KAKAO).name("member105").nickname("member105").role(MemberRole.MEMBER).phone(1012345890L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member106@af.shop").provider(ProviderType.KAKAO).name("member106").nickname("member106").role(MemberRole.MEMBER).phone(1012345891L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member107@af.shop").provider(ProviderType.KAKAO).name("member107").nickname("member107").role(MemberRole.MEMBER).phone(1012345892L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member108@af.shop").provider(ProviderType.KAKAO).name("member108").nickname("member108").role(MemberRole.MEMBER).phone(1012345893L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member109@af.shop").provider(ProviderType.KAKAO).name("member109").nickname("member109").role(MemberRole.MEMBER).phone(1012345894L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member110@af.shop").provider(ProviderType.KAKAO).name("member110").nickname("member110").role(MemberRole.MEMBER).phone(1012345895L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member111@af.shop").provider(ProviderType.KAKAO).name("member111").nickname("member111").role(MemberRole.MEMBER).phone(1012345896L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member112@af.shop").provider(ProviderType.KAKAO).name("member112").nickname("member112").role(MemberRole.MEMBER).phone(1012345897L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member113@af.shop").provider(ProviderType.KAKAO).name("member113").nickname("member113").role(MemberRole.MEMBER).phone(1012345898L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member114@af.shop").provider(ProviderType.KAKAO).name("member114").nickname("member114").role(MemberRole.MEMBER).phone(1012345899L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member115@af.shop").provider(ProviderType.KAKAO).name("member115").nickname("member115").role(MemberRole.MEMBER).phone(1012345900L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member116@af.shop").provider(ProviderType.KAKAO).name("member116").nickname("member116").role(MemberRole.MEMBER).phone(1012345901L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member117@af.shop").provider(ProviderType.KAKAO).name("member117").nickname("member117").role(MemberRole.MEMBER).phone(1012345902L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member118@af.shop").provider(ProviderType.KAKAO).name("member118").nickname("member118").role(MemberRole.MEMBER).phone(1012345903L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member119@af.shop").provider(ProviderType.KAKAO).name("member119").nickname("member119").role(MemberRole.MEMBER).phone(1012345904L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member120@af.shop").provider(ProviderType.KAKAO).name("member120").nickname("member120").role(MemberRole.MEMBER).phone(1012345905L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member121@af.shop").provider(ProviderType.KAKAO).name("member121").nickname("member121").role(MemberRole.MEMBER).phone(1012345906L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member122@af.shop").provider(ProviderType.KAKAO).name("member122").nickname("member122").role(MemberRole.MEMBER).phone(1012345907L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member123@af.shop").provider(ProviderType.KAKAO).name("member123").nickname("member123").role(MemberRole.MEMBER).phone(1012345908L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member124@af.shop").provider(ProviderType.KAKAO).name("member124").nickname("member124").role(MemberRole.MEMBER).phone(1012345909L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member125@af.shop").provider(ProviderType.KAKAO).name("member125").nickname("member125").role(MemberRole.MEMBER).phone(1012345910L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member126@af.shop").provider(ProviderType.KAKAO).name("member126").nickname("member126").role(MemberRole.MEMBER).phone(1012345911L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member127@af.shop").provider(ProviderType.KAKAO).name("member127").nickname("member127").role(MemberRole.MEMBER).phone(1012345912L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member128@af.shop").provider(ProviderType.KAKAO).name("member128").nickname("member128").role(MemberRole.MEMBER).phone(1012345913L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member129@af.shop").provider(ProviderType.KAKAO).name("member129").nickname("member129").role(MemberRole.MEMBER).phone(1012345914L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member130@af.shop").provider(ProviderType.KAKAO).name("member130").nickname("member130").role(MemberRole.MEMBER).phone(1012345915L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member131@af.shop").provider(ProviderType.KAKAO).name("member131").nickname("member131").role(MemberRole.MEMBER).phone(1012345916L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member132@af.shop").provider(ProviderType.KAKAO).name("member132").nickname("member132").role(MemberRole.MEMBER).phone(1012345917L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member133@af.shop").provider(ProviderType.KAKAO).name("member133").nickname("member133").role(MemberRole.MEMBER).phone(1012345918L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member134@af.shop").provider(ProviderType.KAKAO).name("member134").nickname("member134").role(MemberRole.MEMBER).phone(1012345919L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member135@af.shop").provider(ProviderType.KAKAO).name("member135").nickname("member135").role(MemberRole.MEMBER).phone(1012345920L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member136@af.shop").provider(ProviderType.KAKAO).name("member136").nickname("member136").role(MemberRole.MEMBER).phone(1012345921L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member137@af.shop").provider(ProviderType.KAKAO).name("member137").nickname("member137").role(MemberRole.MEMBER).phone(1012345922L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member138@af.shop").provider(ProviderType.KAKAO).name("member138").nickname("member138").role(MemberRole.MEMBER).phone(1012345923L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member139@af.shop").provider(ProviderType.KAKAO).name("member139").nickname("member139").role(MemberRole.MEMBER).phone(1012345924L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member140@af.shop").provider(ProviderType.KAKAO).name("member140").nickname("member140").role(MemberRole.MEMBER).phone(1012345925L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member141@af.shop").provider(ProviderType.KAKAO).name("member141").nickname("member141").role(MemberRole.MEMBER).phone(1012345926L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member142@af.shop").provider(ProviderType.KAKAO).name("member142").nickname("member142").role(MemberRole.MEMBER).phone(1012345927L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member143@af.shop").provider(ProviderType.KAKAO).name("member143").nickname("member143").role(MemberRole.MEMBER).phone(1012345928L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member144@af.shop").provider(ProviderType.KAKAO).name("member144").nickname("member144").role(MemberRole.MEMBER).phone(1012345929L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member145@af.shop").provider(ProviderType.KAKAO).name("member145").nickname("member145").role(MemberRole.MEMBER).phone(1012345930L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member146@af.shop").provider(ProviderType.KAKAO).name("member146").nickname("member146").role(MemberRole.MEMBER).phone(1012345931L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member147@af.shop").provider(ProviderType.KAKAO).name("member147").nickname("member147").role(MemberRole.MEMBER).phone(1012345932L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member148@af.shop").provider(ProviderType.KAKAO).name("member148").nickname("member148").role(MemberRole.MEMBER).phone(1012345933L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member149@af.shop").provider(ProviderType.KAKAO).name("member149").nickname("member149").role(MemberRole.MEMBER).phone(1012345934L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member150@af.shop").provider(ProviderType.KAKAO).name("member150").nickname("member150").role(MemberRole.MEMBER).phone(1012345935L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member151@af.shop").provider(ProviderType.KAKAO).name("member151").nickname("member151").role(MemberRole.MEMBER).phone(1012345936L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member152@af.shop").provider(ProviderType.KAKAO).name("member152").nickname("member152").role(MemberRole.MEMBER).phone(1012345937L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member153@af.shop").provider(ProviderType.KAKAO).name("member153").nickname("member153").role(MemberRole.MEMBER).phone(1012345938L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member154@af.shop").provider(ProviderType.KAKAO).name("member154").nickname("member154").role(MemberRole.MEMBER).phone(1012345939L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member155@af.shop").provider(ProviderType.KAKAO).name("member155").nickname("member155").role(MemberRole.MEMBER).phone(1012345940L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member156@af.shop").provider(ProviderType.KAKAO).name("member156").nickname("member156").role(MemberRole.MEMBER).phone(1012345941L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member157@af.shop").provider(ProviderType.KAKAO).name("member157").nickname("member157").role(MemberRole.MEMBER).phone(1012345942L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member158@af.shop").provider(ProviderType.KAKAO).name("member158").nickname("member158").role(MemberRole.MEMBER).phone(1012345943L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member159@af.shop").provider(ProviderType.KAKAO).name("member159").nickname("member159").role(MemberRole.MEMBER).phone(1012345944L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member160@af.shop").provider(ProviderType.KAKAO).name("member160").nickname("member160").role(MemberRole.MEMBER).phone(1012345945L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member161@af.shop").provider(ProviderType.KAKAO).name("member161").nickname("member161").role(MemberRole.MEMBER).phone(1012345946L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member162@af.shop").provider(ProviderType.KAKAO).name("member162").nickname("member162").role(MemberRole.MEMBER).phone(1012345947L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member163@af.shop").provider(ProviderType.KAKAO).name("member163").nickname("member163").role(MemberRole.MEMBER).phone(1012345948L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member164@af.shop").provider(ProviderType.KAKAO).name("member164").nickname("member164").role(MemberRole.MEMBER).phone(1012345949L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member165@af.shop").provider(ProviderType.KAKAO).name("member165").nickname("member165").role(MemberRole.MEMBER).phone(1012345950L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member166@af.shop").provider(ProviderType.KAKAO).name("member166").nickname("member166").role(MemberRole.MEMBER).phone(1012345951L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member167@af.shop").provider(ProviderType.KAKAO).name("member167").nickname("member167").role(MemberRole.MEMBER).phone(1012345952L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member168@af.shop").provider(ProviderType.KAKAO).name("member168").nickname("member168").role(MemberRole.MEMBER).phone(1012345953L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member169@af.shop").provider(ProviderType.KAKAO).name("member169").nickname("member169").role(MemberRole.MEMBER).phone(1012345954L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member170@af.shop").provider(ProviderType.KAKAO).name("member170").nickname("member170").role(MemberRole.MEMBER).phone(1012345955L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member171@af.shop").provider(ProviderType.KAKAO).name("member171").nickname("member171").role(MemberRole.MEMBER).phone(1012345956L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member172@af.shop").provider(ProviderType.KAKAO).name("member172").nickname("member172").role(MemberRole.MEMBER).phone(1012345957L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member173@af.shop").provider(ProviderType.KAKAO).name("member173").nickname("member173").role(MemberRole.MEMBER).phone(1012345958L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member174@af.shop").provider(ProviderType.KAKAO).name("member174").nickname("member174").role(MemberRole.MEMBER).phone(1012345959L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member175@af.shop").provider(ProviderType.KAKAO).name("member175").nickname("member175").role(MemberRole.MEMBER).phone(1012345960L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member176@af.shop").provider(ProviderType.KAKAO).name("member176").nickname("member176").role(MemberRole.MEMBER).phone(1012345961L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member177@af.shop").provider(ProviderType.KAKAO).name("member177").nickname("member177").role(MemberRole.MEMBER).phone(1012345962L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member178@af.shop").provider(ProviderType.KAKAO).name("member178").nickname("member178").role(MemberRole.MEMBER).phone(1012345963L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member179@af.shop").provider(ProviderType.KAKAO).name("member179").nickname("member179").role(MemberRole.MEMBER).phone(1012345964L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member180@af.shop").provider(ProviderType.KAKAO).name("member180").nickname("member180").role(MemberRole.MEMBER).phone(1012345965L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member181@af.shop").provider(ProviderType.KAKAO).name("member181").nickname("member181").role(MemberRole.MEMBER).phone(1012345966L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member182@af.shop").provider(ProviderType.KAKAO).name("member182").nickname("member182").role(MemberRole.MEMBER).phone(1012345967L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member183@af.shop").provider(ProviderType.KAKAO).name("member183").nickname("member183").role(MemberRole.MEMBER).phone(1012345968L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member184@af.shop").provider(ProviderType.KAKAO).name("member184").nickname("member184").role(MemberRole.MEMBER).phone(1012345969L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member185@af.shop").provider(ProviderType.KAKAO).name("member185").nickname("member185").role(MemberRole.MEMBER).phone(1012345970L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member186@af.shop").provider(ProviderType.KAKAO).name("member186").nickname("member186").role(MemberRole.MEMBER).phone(1012345971L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member187@af.shop").provider(ProviderType.KAKAO).name("member187").nickname("member187").role(MemberRole.MEMBER).phone(1012345972L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member188@af.shop").provider(ProviderType.KAKAO).name("member188").nickname("member188").role(MemberRole.MEMBER).phone(1012345973L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member189@af.shop").provider(ProviderType.KAKAO).name("member189").nickname("member189").role(MemberRole.MEMBER).phone(1012345974L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member190@af.shop").provider(ProviderType.KAKAO).name("member190").nickname("member190").role(MemberRole.MEMBER).phone(1012345975L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member191@af.shop").provider(ProviderType.KAKAO).name("member191").nickname("member191").role(MemberRole.MEMBER).phone(1012345976L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member192@af.shop").provider(ProviderType.KAKAO).name("member192").nickname("member192").role(MemberRole.MEMBER).phone(1012345977L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member193@af.shop").provider(ProviderType.KAKAO).name("member193").nickname("member193").role(MemberRole.MEMBER).phone(1012345978L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member194@af.shop").provider(ProviderType.KAKAO).name("member194").nickname("member194").role(MemberRole.MEMBER).phone(1012345979L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member195@af.shop").provider(ProviderType.KAKAO).name("member195").nickname("member195").role(MemberRole.MEMBER).phone(1012345980L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member196@af.shop").provider(ProviderType.KAKAO).name("member196").nickname("member196").role(MemberRole.MEMBER).phone(1012345981L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member197@af.shop").provider(ProviderType.KAKAO).name("member197").nickname("member197").role(MemberRole.MEMBER).phone(1012345982L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member198@af.shop").provider(ProviderType.KAKAO).name("member198").nickname("member198").role(MemberRole.MEMBER).phone(1012345983L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member199@af.shop").provider(ProviderType.KAKAO).name("member199").nickname("member199").role(MemberRole.MEMBER).phone(1012345984L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member200@af.shop").provider(ProviderType.KAKAO).name("member200").nickname("member200").role(MemberRole.MEMBER).phone(1012345985L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor1@af.shop").provider(ProviderType.KAKAO).name("superVisor1").nickname("superVisor1").role(MemberRole.SUPER_VISOR).phone(1012345985L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor2@af.shop").provider(ProviderType.KAKAO).name("superVisor2").nickname("superVisor2").role(MemberRole.SUPER_VISOR).phone(1012345986L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor3@af.shop").provider(ProviderType.KAKAO).name("superVisor3").nickname("superVisor3").role(MemberRole.SUPER_VISOR).phone(1012345987L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor4@af.shop").provider(ProviderType.KAKAO).name("superVisor4").nickname("superVisor4").role(MemberRole.SUPER_VISOR).phone(1012345988L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor5@af.shop").provider(ProviderType.KAKAO).name("superVisor5").nickname("superVisor5").role(MemberRole.SUPER_VISOR).phone(1012345989L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor6@af.shop").provider(ProviderType.KAKAO).name("superVisor6").nickname("superVisor6").role(MemberRole.SUPER_VISOR).phone(1012345990L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor7@af.shop").provider(ProviderType.KAKAO).name("superVisor7").nickname("superVisor7").role(MemberRole.SUPER_VISOR).phone(1012345991L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor8@af.shop").provider(ProviderType.KAKAO).name("superVisor8").nickname("superVisor8").role(MemberRole.SUPER_VISOR).phone(1012345992L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor9@af.shop").provider(ProviderType.KAKAO).name("superVisor9").nickname("superVisor9").role(MemberRole.SUPER_VISOR).phone(1012345993L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor10@af.shop").provider(ProviderType.KAKAO).name("superVisor10").nickname("superVisor10").role(MemberRole.SUPER_VISOR).phone(1012345994L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor11@af.shop").provider(ProviderType.KAKAO).name("superVisor11").nickname("superVisor11").role(MemberRole.SUPER_VISOR).phone(1012345995L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor12@af.shop").provider(ProviderType.KAKAO).name("superVisor12").nickname("superVisor12").role(MemberRole.SUPER_VISOR).phone(1012345996L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor13@af.shop").provider(ProviderType.KAKAO).name("superVisor13").nickname("superVisor13").role(MemberRole.SUPER_VISOR).phone(1012345997L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor14@af.shop").provider(ProviderType.KAKAO).name("superVisor14").nickname("superVisor14").role(MemberRole.SUPER_VISOR).phone(1012345998L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor15@af.shop").provider(ProviderType.KAKAO).name("superVisor15").nickname("superVisor15").role(MemberRole.SUPER_VISOR).phone(1012345999L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor16@af.shop").provider(ProviderType.KAKAO).name("superVisor16").nickname("superVisor16").role(MemberRole.SUPER_VISOR).phone(1012346000L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor17@af.shop").provider(ProviderType.KAKAO).name("superVisor17").nickname("superVisor17").role(MemberRole.SUPER_VISOR).phone(1012346001L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor18@af.shop").provider(ProviderType.KAKAO).name("superVisor18").nickname("superVisor18").role(MemberRole.SUPER_VISOR).phone(1012346002L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor19@af.shop").provider(ProviderType.KAKAO).name("superVisor19").nickname("superVisor19").role(MemberRole.SUPER_VISOR).phone(1012346003L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor20@af.shop").provider(ProviderType.KAKAO).name("superVisor20").nickname("superVisor20").role(MemberRole.SUPER_VISOR).phone(1012346004L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor21@af.shop").provider(ProviderType.KAKAO).name("superVisor21").nickname("superVisor21").role(MemberRole.SUPER_VISOR).phone(1012346005L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor22@af.shop").provider(ProviderType.KAKAO).name("superVisor22").nickname("superVisor22").role(MemberRole.SUPER_VISOR).phone(1012346006L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor23@af.shop").provider(ProviderType.KAKAO).name("superVisor23").nickname("superVisor23").role(MemberRole.SUPER_VISOR).phone(1012346007L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor24@af.shop").provider(ProviderType.KAKAO).name("superVisor24").nickname("superVisor24").role(MemberRole.SUPER_VISOR).phone(1012346008L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor25@af.shop").provider(ProviderType.KAKAO).name("superVisor25").nickname("superVisor25").role(MemberRole.SUPER_VISOR).phone(1012346009L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor26@af.shop").provider(ProviderType.KAKAO).name("superVisor26").nickname("superVisor26").role(MemberRole.SUPER_VISOR).phone(1012346010L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor27@af.shop").provider(ProviderType.KAKAO).name("superVisor27").nickname("superVisor27").role(MemberRole.SUPER_VISOR).phone(1012346011L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor28@af.shop").provider(ProviderType.KAKAO).name("superVisor28").nickname("superVisor28").role(MemberRole.SUPER_VISOR).phone(1012346012L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor29@af.shop").provider(ProviderType.KAKAO).name("superVisor29").nickname("superVisor29").role(MemberRole.SUPER_VISOR).phone(1012346013L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor30@af.shop").provider(ProviderType.KAKAO).name("superVisor30").nickname("superVisor30").role(MemberRole.SUPER_VISOR).phone(1012346014L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor31@af.shop").provider(ProviderType.KAKAO).name("superVisor31").nickname("superVisor31").role(MemberRole.SUPER_VISOR).phone(1012346015L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor32@af.shop").provider(ProviderType.KAKAO).name("superVisor32").nickname("superVisor32").role(MemberRole.SUPER_VISOR).phone(1012346016L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor33@af.shop").provider(ProviderType.KAKAO).name("superVisor33").nickname("superVisor33").role(MemberRole.SUPER_VISOR).phone(1012346017L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor34@af.shop").provider(ProviderType.KAKAO).name("superVisor34").nickname("superVisor34").role(MemberRole.SUPER_VISOR).phone(1012346018L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor35@af.shop").provider(ProviderType.KAKAO).name("superVisor35").nickname("superVisor35").role(MemberRole.SUPER_VISOR).phone(1012346019L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor36@af.shop").provider(ProviderType.KAKAO).name("superVisor36").nickname("superVisor36").role(MemberRole.SUPER_VISOR).phone(1012346020L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor37@af.shop").provider(ProviderType.KAKAO).name("superVisor37").nickname("superVisor37").role(MemberRole.SUPER_VISOR).phone(1012346021L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor38@af.shop").provider(ProviderType.KAKAO).name("superVisor38").nickname("superVisor38").role(MemberRole.SUPER_VISOR).phone(1012346022L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor39@af.shop").provider(ProviderType.KAKAO).name("superVisor39").nickname("superVisor39").role(MemberRole.SUPER_VISOR).phone(1012346023L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor40@af.shop").provider(ProviderType.KAKAO).name("superVisor40").nickname("superVisor40").role(MemberRole.SUPER_VISOR).phone(1012346024L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor41@af.shop").provider(ProviderType.KAKAO).name("superVisor41").nickname("superVisor41").role(MemberRole.SUPER_VISOR).phone(1012346025L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor42@af.shop").provider(ProviderType.KAKAO).name("superVisor42").nickname("superVisor42").role(MemberRole.SUPER_VISOR).phone(1012346026L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor43@af.shop").provider(ProviderType.KAKAO).name("superVisor43").nickname("superVisor43").role(MemberRole.SUPER_VISOR).phone(1012346027L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor44@af.shop").provider(ProviderType.KAKAO).name("superVisor44").nickname("superVisor44").role(MemberRole.SUPER_VISOR).phone(1012346028L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor45@af.shop").provider(ProviderType.KAKAO).name("superVisor45").nickname("superVisor45").role(MemberRole.SUPER_VISOR).phone(1012346029L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor46@af.shop").provider(ProviderType.KAKAO).name("superVisor46").nickname("superVisor46").role(MemberRole.SUPER_VISOR).phone(1012346030L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor47@af.shop").provider(ProviderType.KAKAO).name("superVisor47").nickname("superVisor47").role(MemberRole.SUPER_VISOR).phone(1012346031L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor48@af.shop").provider(ProviderType.KAKAO).name("superVisor48").nickname("superVisor48").role(MemberRole.SUPER_VISOR).phone(1012346032L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor49@af.shop").provider(ProviderType.KAKAO).name("superVisor49").nickname("superVisor49").role(MemberRole.SUPER_VISOR).phone(1012346033L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("superVisor50@af.shop").provider(ProviderType.KAKAO).name("superVisor50").nickname("superVisor50").role(MemberRole.SUPER_VISOR).phone(1012346034L).certifyAt(LocalDate.now()).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member201@af.shop").provider(ProviderType.KAKAO).name("member201").nickname("member201").role(MemberRole.MEMBER).phone(1012346034L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member202@af.shop").provider(ProviderType.KAKAO).name("member202").nickname("member202").role(MemberRole.MEMBER).phone(1012346035L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member203@af.shop").provider(ProviderType.KAKAO).name("member203").nickname("member203").role(MemberRole.MEMBER).phone(1012346036L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member204@af.shop").provider(ProviderType.KAKAO).name("member204").nickname("member204").role(MemberRole.MEMBER).phone(1012346037L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member205@af.shop").provider(ProviderType.KAKAO).name("member205").nickname("member205").role(MemberRole.MEMBER).phone(1012346038L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member206@af.shop").provider(ProviderType.KAKAO).name("member206").nickname("member206").role(MemberRole.MEMBER).phone(1012346039L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member207@af.shop").provider(ProviderType.KAKAO).name("member207").nickname("member207").role(MemberRole.MEMBER).phone(1012346040L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member208@af.shop").provider(ProviderType.KAKAO).name("member208").nickname("member208").role(MemberRole.MEMBER).phone(1012346041L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member209@af.shop").provider(ProviderType.KAKAO).name("member209").nickname("member209").role(MemberRole.MEMBER).phone(1012346042L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member210@af.shop").provider(ProviderType.KAKAO).name("member210").nickname("member210").role(MemberRole.MEMBER).phone(1012346043L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member211@af.shop").provider(ProviderType.KAKAO).name("member211").nickname("member211").role(MemberRole.MEMBER).phone(1012346044L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member212@af.shop").provider(ProviderType.KAKAO).name("member212").nickname("member212").role(MemberRole.MEMBER).phone(1012346045L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member213@af.shop").provider(ProviderType.KAKAO).name("member213").nickname("member213").role(MemberRole.MEMBER).phone(1012346046L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member214@af.shop").provider(ProviderType.KAKAO).name("member214").nickname("member214").role(MemberRole.MEMBER).phone(1012346047L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member215@af.shop").provider(ProviderType.KAKAO).name("member215").nickname("member215").role(MemberRole.MEMBER).phone(1012346048L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member216@af.shop").provider(ProviderType.KAKAO).name("member216").nickname("member216").role(MemberRole.MEMBER).phone(1012346049L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member217@af.shop").provider(ProviderType.KAKAO).name("member217").nickname("member217").role(MemberRole.MEMBER).phone(1012346050L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member218@af.shop").provider(ProviderType.KAKAO).name("member218").nickname("member218").role(MemberRole.MEMBER).phone(1012346051L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member219@af.shop").provider(ProviderType.KAKAO).name("member219").nickname("member219").role(MemberRole.MEMBER).phone(1012346052L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member220@af.shop").provider(ProviderType.KAKAO).name("member220").nickname("member220").role(MemberRole.MEMBER).phone(1012346053L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member221@af.shop").provider(ProviderType.KAKAO).name("member221").nickname("member221").role(MemberRole.MEMBER).phone(1012346054L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member222@af.shop").provider(ProviderType.KAKAO).name("member222").nickname("member222").role(MemberRole.MEMBER).phone(1012346055L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member223@af.shop").provider(ProviderType.KAKAO).name("member223").nickname("member223").role(MemberRole.MEMBER).phone(1012346056L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member224@af.shop").provider(ProviderType.KAKAO).name("member224").nickname("member224").role(MemberRole.MEMBER).phone(1012346057L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member225@af.shop").provider(ProviderType.KAKAO).name("member225").nickname("member225").role(MemberRole.MEMBER).phone(1012346058L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member226@af.shop").provider(ProviderType.KAKAO).name("member226").nickname("member226").role(MemberRole.MEMBER).phone(1012346059L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member227@af.shop").provider(ProviderType.KAKAO).name("member227").nickname("member227").role(MemberRole.MEMBER).phone(1012346060L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member228@af.shop").provider(ProviderType.KAKAO).name("member228").nickname("member228").role(MemberRole.MEMBER).phone(1012346061L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member229@af.shop").provider(ProviderType.KAKAO).name("member229").nickname("member229").role(MemberRole.MEMBER).phone(1012346062L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member230@af.shop").provider(ProviderType.KAKAO).name("member230").nickname("member230").role(MemberRole.MEMBER).phone(1012346063L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member231@af.shop").provider(ProviderType.KAKAO).name("member231").nickname("member231").role(MemberRole.MEMBER).phone(1012346064L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member232@af.shop").provider(ProviderType.KAKAO).name("member232").nickname("member232").role(MemberRole.MEMBER).phone(1012346065L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member233@af.shop").provider(ProviderType.KAKAO).name("member233").nickname("member233").role(MemberRole.MEMBER).phone(1012346066L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member234@af.shop").provider(ProviderType.KAKAO).name("member234").nickname("member234").role(MemberRole.MEMBER).phone(1012346067L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member235@af.shop").provider(ProviderType.KAKAO).name("member235").nickname("member235").role(MemberRole.MEMBER).phone(1012346068L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member236@af.shop").provider(ProviderType.KAKAO).name("member236").nickname("member236").role(MemberRole.MEMBER).phone(1012346069L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member237@af.shop").provider(ProviderType.KAKAO).name("member237").nickname("member237").role(MemberRole.MEMBER).phone(1012346070L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member238@af.shop").provider(ProviderType.KAKAO).name("member238").nickname("member238").role(MemberRole.MEMBER).phone(1012346071L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member239@af.shop").provider(ProviderType.KAKAO).name("member239").nickname("member239").role(MemberRole.MEMBER).phone(1012346072L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member240@af.shop").provider(ProviderType.KAKAO).name("member240").nickname("member240").role(MemberRole.MEMBER).phone(1012346073L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member241@af.shop").provider(ProviderType.KAKAO).name("member241").nickname("member241").role(MemberRole.MEMBER).phone(1012346074L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member242@af.shop").provider(ProviderType.KAKAO).name("member242").nickname("member242").role(MemberRole.MEMBER).phone(1012346075L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member243@af.shop").provider(ProviderType.KAKAO).name("member243").nickname("member243").role(MemberRole.MEMBER).phone(1012346076L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member244@af.shop").provider(ProviderType.KAKAO).name("member244").nickname("member244").role(MemberRole.MEMBER).phone(1012346077L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member245@af.shop").provider(ProviderType.KAKAO).name("member245").nickname("member245").role(MemberRole.MEMBER).phone(1012346078L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member246@af.shop").provider(ProviderType.KAKAO).name("member246").nickname("member246").role(MemberRole.MEMBER).phone(1012346079L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member247@af.shop").provider(ProviderType.KAKAO).name("member247").nickname("member247").role(MemberRole.MEMBER).phone(1012346080L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member248@af.shop").provider(ProviderType.KAKAO).name("member248").nickname("member248").role(MemberRole.MEMBER).phone(1012346081L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member249@af.shop").provider(ProviderType.KAKAO).name("member249").nickname("member249").role(MemberRole.MEMBER).phone(1012346082L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member250@af.shop").provider(ProviderType.KAKAO).name("member250").nickname("member250").role(MemberRole.MEMBER).phone(1012346083L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member251@af.shop").provider(ProviderType.KAKAO).name("member251").nickname("member251").role(MemberRole.MEMBER).phone(1012346084L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member252@af.shop").provider(ProviderType.KAKAO).name("member252").nickname("member252").role(MemberRole.MEMBER).phone(1012346085L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member253@af.shop").provider(ProviderType.KAKAO).name("member253").nickname("member253").role(MemberRole.MEMBER).phone(1012346086L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member254@af.shop").provider(ProviderType.KAKAO).name("member254").nickname("member254").role(MemberRole.MEMBER).phone(1012346087L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member255@af.shop").provider(ProviderType.KAKAO).name("member255").nickname("member255").role(MemberRole.MEMBER).phone(1012346088L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member256@af.shop").provider(ProviderType.KAKAO).name("member256").nickname("member256").role(MemberRole.MEMBER).phone(1012346089L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member257@af.shop").provider(ProviderType.KAKAO).name("member257").nickname("member257").role(MemberRole.MEMBER).phone(1012346090L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member258@af.shop").provider(ProviderType.KAKAO).name("member258").nickname("member258").role(MemberRole.MEMBER).phone(1012346091L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member259@af.shop").provider(ProviderType.KAKAO).name("member259").nickname("member259").role(MemberRole.MEMBER).phone(1012346092L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member260@af.shop").provider(ProviderType.KAKAO).name("member260").nickname("member260").role(MemberRole.MEMBER).phone(1012346093L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member261@af.shop").provider(ProviderType.KAKAO).name("member261").nickname("member261").role(MemberRole.MEMBER).phone(1012346094L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member262@af.shop").provider(ProviderType.KAKAO).name("member262").nickname("member262").role(MemberRole.MEMBER).phone(1012346095L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member263@af.shop").provider(ProviderType.KAKAO).name("member263").nickname("member263").role(MemberRole.MEMBER).phone(1012346096L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member264@af.shop").provider(ProviderType.KAKAO).name("member264").nickname("member264").role(MemberRole.MEMBER).phone(1012346097L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member265@af.shop").provider(ProviderType.KAKAO).name("member265").nickname("member265").role(MemberRole.MEMBER).phone(1012346098L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member266@af.shop").provider(ProviderType.KAKAO).name("member266").nickname("member266").role(MemberRole.MEMBER).phone(1012346099L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member267@af.shop").provider(ProviderType.KAKAO).name("member267").nickname("member267").role(MemberRole.MEMBER).phone(1012346100L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member268@af.shop").provider(ProviderType.KAKAO).name("member268").nickname("member268").role(MemberRole.MEMBER).phone(1012346101L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member269@af.shop").provider(ProviderType.KAKAO).name("member269").nickname("member269").role(MemberRole.MEMBER).phone(1012346102L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member270@af.shop").provider(ProviderType.KAKAO).name("member270").nickname("member270").role(MemberRole.MEMBER).phone(1012346103L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member271@af.shop").provider(ProviderType.KAKAO).name("member271").nickname("member271").role(MemberRole.MEMBER).phone(1012346104L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member272@af.shop").provider(ProviderType.KAKAO).name("member272").nickname("member272").role(MemberRole.MEMBER).phone(1012346105L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member273@af.shop").provider(ProviderType.KAKAO).name("member273").nickname("member273").role(MemberRole.MEMBER).phone(1012346106L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member274@af.shop").provider(ProviderType.KAKAO).name("member274").nickname("member274").role(MemberRole.MEMBER).phone(1012346107L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member275@af.shop").provider(ProviderType.KAKAO).name("member275").nickname("member275").role(MemberRole.MEMBER).phone(1012346108L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member276@af.shop").provider(ProviderType.KAKAO).name("member276").nickname("member276").role(MemberRole.MEMBER).phone(1012346109L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member277@af.shop").provider(ProviderType.KAKAO).name("member277").nickname("member277").role(MemberRole.MEMBER).phone(1012346110L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member278@af.shop").provider(ProviderType.KAKAO).name("member278").nickname("member278").role(MemberRole.MEMBER).phone(1012346111L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member279@af.shop").provider(ProviderType.KAKAO).name("member279").nickname("member279").role(MemberRole.MEMBER).phone(1012346112L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member280@af.shop").provider(ProviderType.KAKAO).name("member280").nickname("member280").role(MemberRole.MEMBER).phone(1012346113L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member281@af.shop").provider(ProviderType.KAKAO).name("member281").nickname("member281").role(MemberRole.MEMBER).phone(1012346114L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member282@af.shop").provider(ProviderType.KAKAO).name("member282").nickname("member282").role(MemberRole.MEMBER).phone(1012346115L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member283@af.shop").provider(ProviderType.KAKAO).name("member283").nickname("member283").role(MemberRole.MEMBER).phone(1012346116L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member284@af.shop").provider(ProviderType.KAKAO).name("member284").nickname("member284").role(MemberRole.MEMBER).phone(1012346117L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member285@af.shop").provider(ProviderType.KAKAO).name("member285").nickname("member285").role(MemberRole.MEMBER).phone(1012346118L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member286@af.shop").provider(ProviderType.KAKAO).name("member286").nickname("member286").role(MemberRole.MEMBER).phone(1012346119L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member287@af.shop").provider(ProviderType.KAKAO).name("member287").nickname("member287").role(MemberRole.MEMBER).phone(1012346120L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member288@af.shop").provider(ProviderType.KAKAO).name("member288").nickname("member288").role(MemberRole.MEMBER).phone(1012346121L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member289@af.shop").provider(ProviderType.KAKAO).name("member289").nickname("member289").role(MemberRole.MEMBER).phone(1012346122L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member290@af.shop").provider(ProviderType.KAKAO).name("member290").nickname("member290").role(MemberRole.MEMBER).phone(1012346123L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member291@af.shop").provider(ProviderType.KAKAO).name("member291").nickname("member291").role(MemberRole.MEMBER).phone(1012346124L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member292@af.shop").provider(ProviderType.KAKAO).name("member292").nickname("member292").role(MemberRole.MEMBER).phone(1012346125L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member293@af.shop").provider(ProviderType.KAKAO).name("member293").nickname("member293").role(MemberRole.MEMBER).phone(1012346126L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member294@af.shop").provider(ProviderType.KAKAO).name("member294").nickname("member294").role(MemberRole.MEMBER).phone(1012346127L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member295@af.shop").provider(ProviderType.KAKAO).name("member295").nickname("member295").role(MemberRole.MEMBER).phone(1012346128L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member296@af.shop").provider(ProviderType.KAKAO).name("member296").nickname("member296").role(MemberRole.MEMBER).phone(1012346129L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member297@af.shop").provider(ProviderType.KAKAO).name("member297").nickname("member297").role(MemberRole.MEMBER).phone(1012346130L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member298@af.shop").provider(ProviderType.KAKAO).name("member298").nickname("member298").role(MemberRole.MEMBER).phone(1012346131L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member299@af.shop").provider(ProviderType.KAKAO).name("member299").nickname("member299").role(MemberRole.MEMBER).phone(1012346132L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
        memberRepository.save(Member.builder().email("member300@af.shop").provider(ProviderType.KAKAO).name("member300").nickname("member300").role(MemberRole.MEMBER).phone(1012346133L).agreedToServiceUse(true).agreedToServicePolicy(true).agreedToServicePolicyUse(true).build());
    }

    void initRestaurant() {
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner1").get()).category("음식점").name("레스쁘아").address("서울특별시 종로구 종로8길 16").location(geometryFactory.createPoint(new Coordinate(126.983857,37.569343))).contact(212345678L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7000)).time(getTimeTest()).provision(getProvisionTest()).businessName("레스쁘아").businessNumber("101-10-10001").addressDetail("101").postcode("00001").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner2").get()).category("음식점").name("쵸이닷").address("서울 중구 다동 155").location(geometryFactory.createPoint(new Coordinate(37.5524974676472,126.84755554291))).contact(212345679L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7001)).time(getTimeTest()).provision(getProvisionTest()).businessName("쵸이닷").businessNumber("101-10-10002").addressDetail("101").postcode("00002").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner3").get()).category("음식점").name("육품").address("서울특별시 종로구 종로34길 4").location(geometryFactory.createPoint(new Coordinate(37.5706373145871,127.002643134522))).contact(212345680L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7002)).time(getTimeTest()).provision(getProvisionTest()).businessName("육품").businessNumber("101-10-10003").addressDetail("101").postcode("00003").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner4").get()).category("음식점").name("뽕족").address("서울 중구 주교동 2-2").location(geometryFactory.createPoint(new Coordinate(37.5692317883749,127.000831977459))).contact(212345681L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7003)).time(getTimeTest()).provision(getProvisionTest()).businessName("뽕족").businessNumber("101-10-10004").addressDetail("101").postcode("00004").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner5").get()).category("음식점").name("아방궁").address("서울 종로구 낙원동 211").location(geometryFactory.createPoint(new Coordinate(37.5715738680808,126.989014157724))).contact(212345682L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7004)).time(getTimeTest()).provision(getProvisionTest()).businessName("아방궁").businessNumber("101-10-10005").addressDetail("101").postcode("00005").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner6").get()).category("음식점").name("한방삼계탕").address("서울특별시 종로구 종로11길 11").location(geometryFactory.createPoint(new Coordinate(37.5708526792624,126.98539197039))).contact(212345683L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7005)).time(getTimeTest()).provision(getProvisionTest()).businessName("한방삼계탕").businessNumber("101-10-10006").addressDetail("101").postcode("00006").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner7").get()).category("음식점").name("등촌샤브칼국수").address("서울 중구 수하동 67").location(geometryFactory.createPoint(new Coordinate(37.5673567129708,126.98457767524))).contact(212345684L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7006)).time(getTimeTest()).provision(getProvisionTest()).businessName("등촌샤브칼국수").businessNumber("101-10-10007").addressDetail("101").postcode("00007").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner8").get()).category("음식점").name("한성양꼬치").address("서울특별시 중구 을지로9길 28").location(geometryFactory.createPoint(new Coordinate(37.5671049133941,126.988833708488))).contact(212345685L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7007)).time(getTimeTest()).provision(getProvisionTest()).businessName("한성양꼬치").businessNumber("101-10-10008").addressDetail("101").postcode("00008").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner9").get()).category("음식점").name("왓쇼이켄").address("서울 중구 을지로3가 206").location(geometryFactory.createPoint(new Coordinate(37.5673935683471,126.99327076946))).contact(212345686L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7008)).time(getTimeTest()).provision(getProvisionTest()).businessName("왓쇼이켄").businessNumber("101-10-10009").addressDetail("101").postcode("00009").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner10").get()).category("음식점").name("을밀대").address("서울특별시 중구 동호로33길 24").location(geometryFactory.createPoint(new Coordinate(37.5656638467782,127.0005150091))).contact(212345687L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7009)).time(getTimeTest()).provision(getProvisionTest()).businessName("을밀대").businessNumber("101-10-10010").addressDetail("101").postcode("00010").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner11").get()).category("음식점").name("나이티지").address("서울특별시 중구 마장로1길 21").location(geometryFactory.createPoint(new Coordinate(37.5687987157341,127.011879663767))).contact(212345688L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7010)).time(getTimeTest()).provision(getProvisionTest()).businessName("나이티지").businessNumber("101-10-10011").addressDetail("101").postcode("00011").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner12").get()).category("음식점").name("456포차").address("서울 중구 황학동 1503").location(geometryFactory.createPoint(new Coordinate(37.5691217426477,127.021342737183))).contact(212345689L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7011)).time(getTimeTest()).provision(getProvisionTest()).businessName("456포차").businessNumber("101-10-10012").addressDetail("101").postcode("00012").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner13").get()).category("음식점").name("서강쇠떡볶이").address("서울특별시 종로구 청계천로 159").location(geometryFactory.createPoint(new Coordinate(37.569231694439,126.995217544541))).contact(212345690L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7012)).time(getTimeTest()).provision(getProvisionTest()).businessName("서강쇠떡볶이").businessNumber("101-10-10013").addressDetail("101").postcode("00013").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner14").get()).category("음식점").name("시소").address("서울 중구 충무로5가 79-8").location(geometryFactory.createPoint(new Coordinate(37.5611588499963,126.99807024694))).contact(212345691L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7013)).time(getTimeTest()).provision(getProvisionTest()).businessName("시소").businessNumber("101-10-10014").addressDetail("101").postcode("00014").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner15").get()).category("음식점").name("육전식당").address("서울특별시 중구 한강대로 416").location(geometryFactory.createPoint(new Coordinate(37.5556057872953,126.973670162537))).contact(212345692L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7014)).time(getTimeTest()).provision(getProvisionTest()).businessName("육전식당").businessNumber("101-10-10015").addressDetail("101").postcode("00015").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner16").get()).category("음식점").name("신동궁감자탕").address("서울특별시 용산구 한강대로 372").location(geometryFactory.createPoint(new Coordinate(37.5514250554899,126.973218964231))).contact(212345693L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7015)).time(getTimeTest()).provision(getProvisionTest()).businessName("신동궁감자탕").businessNumber("101-10-10016").addressDetail("101").postcode("00016").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner17").get()).category("음식점").name("땀땀").address("서울특별시 용산구 청파로85가길 10-4").location(geometryFactory.createPoint(new Coordinate(37.5523607364709,126.967786532423))).contact(212345694L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7016)).time(getTimeTest()).provision(getProvisionTest()).businessName("땀땀").businessNumber("101-10-10017").addressDetail("101").postcode("00017").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner18").get()).category("음식점").name("자매수산").address("서울 마포구 아현동 737-9").location(geometryFactory.createPoint(new Coordinate(37.5530419979629,126.95683141077))).contact(212345695L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7017)).time(getTimeTest()).provision(getProvisionTest()).businessName("자매수산").businessNumber("101-10-10018").addressDetail("101").postcode("00018").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner19").get()).category("음식점").name("혜장국").address("서울특별시 마포구 마포대로 183").location(geometryFactory.createPoint(new Coordinate(37.5505903296222,126.954297906268))).contact(212345696L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7018)).time(getTimeTest()).provision(getProvisionTest()).businessName("혜장국").businessNumber("101-10-10019").addressDetail("101").postcode("00019").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner20").get()).category("음식점").name("미분당").address("서울특별시 마포구 마포대로 109").location(geometryFactory.createPoint(new Coordinate(37.5445702966909,126.950906874391))).contact(212345697L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7019)).time(getTimeTest()).provision(getProvisionTest()).businessName("미분당").businessNumber("101-10-10020").addressDetail("101").postcode("00020").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner21").get()).category("음식점").name("황해도왕족발찹쌀순대").address("서울특별시 마포구 백범로15길 11").location(geometryFactory.createPoint(new Coordinate(37.5479545363328,126.943073843388))).contact(212345698L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7020)).time(getTimeTest()).provision(getProvisionTest()).businessName("황해도왕족발찹쌀순대").businessNumber("101-10-10021").addressDetail("101").postcode("00021").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner22").get()).category("음식점").name("봉피양").address("서울특별시 마포구 백범로21길 12").location(geometryFactory.createPoint(new Coordinate(37.5470903945387,126.944794543316))).contact(212345699L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7021)).time(getTimeTest()).provision(getProvisionTest()).businessName("봉피양").businessNumber("101-10-10022").addressDetail("101").postcode("00022").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner23").get()).category("음식점").name("보슬보슬").address("서울 서대문구 창천동 18-54").location(geometryFactory.createPoint(new Coordinate(37.55602482712,126.937816421245))).contact(212345700L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7022)).time(getTimeTest()).provision(getProvisionTest()).businessName("보슬보슬").businessNumber("101-10-10023").addressDetail("101").postcode("00023").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner24").get()).category("음식점").name("강남진해장").address("서울특별시 서대문구 신촌로 87-4").location(geometryFactory.createPoint(new Coordinate(37.5557717273062,126.936277467446))).contact(212345701L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7023)).time(getTimeTest()).provision(getProvisionTest()).businessName("강남진해장").businessNumber("101-10-10024").addressDetail("101").postcode("00024").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner25").get()).category("음식점").name("백억하누").address("서울 마포구 노고산동 57-56").location(geometryFactory.createPoint(new Coordinate(37.5548701637016,126.935237048419))).contact(212345702L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7024)).time(getTimeTest()).provision(getProvisionTest()).businessName("백억하누").businessNumber("101-10-10025").addressDetail("101").postcode("00025").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner26").get()).category("음식점").name("봉우화로").address("서울특별시 마포구 백범로4길 25").location(geometryFactory.createPoint(new Coordinate(37.5523117262428,126.935963541347))).contact(212345703L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7025)).time(getTimeTest()).provision(getProvisionTest()).businessName("봉우화로").businessNumber("101-10-10026").addressDetail("101").postcode("00026").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner27").get()).category("음식점").name("프리모바치오바치").address("서울특별시 마포구 서강로9길 6").location(geometryFactory.createPoint(new Coordinate(37.5530307889389,126.932839442791))).contact(212345704L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7026)).time(getTimeTest()).provision(getProvisionTest()).businessName("프리모바치오바치").businessNumber("101-10-10027").addressDetail("101").postcode("00027").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner28").get()).category("음식점").name("낙원타코").address("서울 마포구 동교동 166-20").location(geometryFactory.createPoint(new Coordinate(37.5571347069803,126.925139799306))).contact(212345705L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7027)).time(getTimeTest()).provision(getProvisionTest()).businessName("낙원타코").businessNumber("101-10-10028").addressDetail("101").postcode("00028").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner29").get()).category("음식점").name("더플라잉팬레드").address("서울 마포구 동교동 159-6").location(geometryFactory.createPoint(new Coordinate(37.556809009517,126.923057697907))).contact(212345706L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7028)).time(getTimeTest()).provision(getProvisionTest()).businessName("더플라잉팬레드").businessNumber("101-10-10029").addressDetail("101").postcode("00029").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner30").get()).category("음식점").name("장원김밥").address("서울특별시 마포구 동교로 280").location(geometryFactory.createPoint(new Coordinate(37.5640913347204,126.926626899359))).contact(212345707L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7029)).time(getTimeTest()).provision(getProvisionTest()).businessName("장원김밥").businessNumber("101-10-10030").addressDetail("101").postcode("00030").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner31").get()).category("음식점").name("나에코").address("서울 서대문구 연희동 339-94").location(geometryFactory.createPoint(new Coordinate(37.5639868812959,126.932784334013))).contact(212345708L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7030)).time(getTimeTest()).provision(getProvisionTest()).businessName("나에코").businessNumber("101-10-10031").addressDetail("101").postcode("00031").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner32").get()).category("음식점").name("미엔아이").address("서울특별시 마포구 마포대로 25").location(geometryFactory.createPoint(new Coordinate(37.5394139456682,126.944935982299))).contact(212345709L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7031)).time(getTimeTest()).provision(getProvisionTest()).businessName("미엔아이").businessNumber("101-10-10032").addressDetail("101").postcode("00032").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner33").get()).category("음식점").name("삼겹살전문점대통령").address("서울특별시 용산구 이촌로65가길 91").location(geometryFactory.createPoint(new Coordinate(37.5215483623951,126.975446840412))).contact(212345710L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7032)).time(getTimeTest()).provision(getProvisionTest()).businessName("삼겹살전문점대통령").businessNumber("101-10-10033").addressDetail("101").postcode("00033").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner34").get()).category("음식점").name("까사생갈비").address("서울 강남구 논현동 1").location(geometryFactory.createPoint(new Coordinate(37.5158007675788,127.020309521728))).contact(212345711L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7033)).time(getTimeTest()).provision(getProvisionTest()).businessName("까사생갈비").businessNumber("101-10-10034").addressDetail("101").postcode("00034").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner35").get()).category("음식점").name("둥지식당").address("서울 서초구 잠원동 28-1").location(geometryFactory.createPoint(new Coordinate(37.5138006726124,127.01951720665))).contact(212345712L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7034)).time(getTimeTest()).provision(getProvisionTest()).businessName("둥지식당").businessNumber("101-10-10035").addressDetail("101").postcode("00035").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner36").get()).category("음식점").name("이자카야").address("서울 강남구 논현동 280-4").location(geometryFactory.createPoint(new Coordinate(37.5129534807308,127.020964783306))).contact(212345713L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7035)).time(getTimeTest()).provision(getProvisionTest()).businessName("이자카야").businessNumber("101-10-10036").addressDetail("101").postcode("00036").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner37").get()).category("음식점").name("무등산수만리염소탕").address("서울 강남구 논현동 280-6").location(geometryFactory.createPoint(new Coordinate(37.5118000229402,127.021914563011))).contact(212345714L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7036)).time(getTimeTest()).provision(getProvisionTest()).businessName("무등산수만리염소탕").businessNumber("101-10-10037").addressDetail("101").postcode("00037").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner38").get()).category("음식점").name("청류벽").address("서울 강남구 논현동 56-10").location(geometryFactory.createPoint(new Coordinate(37.5131146881689,127.025873776539))).contact(212345715L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7037)).time(getTimeTest()).provision(getProvisionTest()).businessName("청류벽").businessNumber("101-10-10038").addressDetail("101").postcode("00038").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner39").get()).category("음식점").name("에도긴").address("서울특별시 강남구 도산대로28길 45").location(geometryFactory.createPoint(new Coordinate(37.5163935889236,127.029109979012))).contact(212345716L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7038)).time(getTimeTest()).provision(getProvisionTest()).businessName("에도긴").businessNumber("101-10-10039").addressDetail("101").postcode("00039").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner40").get()).category("음식점").name("장서는날").address("서울특별시 강남구 학동로 206").location(geometryFactory.createPoint(new Coordinate(37.5139782716713,127.031552232116))).contact(212345717L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7039)).time(getTimeTest()).provision(getProvisionTest()).businessName("장서는날").businessNumber("101-10-10040").addressDetail("101").postcode("00040").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner41").get()).category("음식점").name("고래불").address("서울 강남구 논현동 279-142").location(geometryFactory.createPoint(new Coordinate(37.5113834101658,127.031438032992))).contact(212345718L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7040)).time(getTimeTest()).provision(getProvisionTest()).businessName("고래불").businessNumber("101-10-10041").addressDetail("101").postcode("00041").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner42").get()).category("음식점").name("스시려").address("서울 강남구 논현동 173-14").location(geometryFactory.createPoint(new Coordinate(37.5097619036998,127.03028368862))).contact(212345719L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7041)).time(getTimeTest()).provision(getProvisionTest()).businessName("스시려").businessNumber("101-10-10042").addressDetail("101").postcode("00042").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner43").get()).category("음식점").name("동경전통육개장").address("서울특별시 강남구 논현로111길 7").location(geometryFactory.createPoint(new Coordinate(37.5075447177585,127.032951976467))).contact(212345720L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7042)).time(getTimeTest()).provision(getProvisionTest()).businessName("동경전통육개장").businessNumber("101-10-10043").addressDetail("101").postcode("00043").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner44").get()).category("음식점").name("원가바").address("서울특별시 종로구 율곡로22나길 14").location(geometryFactory.createPoint(new Coordinate(37.5740790461061,127.0048393662))).contact(212345721L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7043)).time(getTimeTest()).provision(getProvisionTest()).businessName("원가바").businessNumber("101-10-10044").addressDetail("101").postcode("00044").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner45").get()).category("음식점").name("장꼬방").address("서울특별시 종로구 율곡로29길 16").location(geometryFactory.createPoint(new Coordinate(37.5740428534294,127.007714681796))).contact(212345722L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7044)).time(getTimeTest()).provision(getProvisionTest()).businessName("장꼬방").businessNumber("101-10-10045").addressDetail("101").postcode("00045").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner46").get()).category("음식점").name("시골야채된장").address("서울특별시 종로구 창신길 15-4").location(geometryFactory.createPoint(new Coordinate(37.5724208497763,127.010476571015))).contact(212345723L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7045)).time(getTimeTest()).provision(getProvisionTest()).businessName("시골야채된장").businessNumber("101-10-10046").addressDetail("101").postcode("00046").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner47").get()).category("음식점").name("바다수퍼해물천하조개구이").address("서울특별시 종로구 종로50다길 36").location(geometryFactory.createPoint(new Coordinate(37.5703125109217,127.01058947154))).contact(212345724L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7046)).time(getTimeTest()).provision(getProvisionTest()).businessName("바다수퍼해물천하조개구이").businessNumber("101-10-10047").addressDetail("101").postcode("00047").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner48").get()).category("음식점").name("나이쏘이").address("서울특별시 종로구 종로56길 42-8").location(geometryFactory.createPoint(new Coordinate(37.5718976160357,127.016272247913))).contact(212345725L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7047)).time(getTimeTest()).provision(getProvisionTest()).businessName("나이쏘이").businessNumber("101-10-10048").addressDetail("101").postcode("00048").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner49").get()).category("음식점").name("호미호식").address("서울 종로구 숭인동 239-9").location(geometryFactory.createPoint(new Coordinate(37.5725100291218,127.018083567915))).contact(212345726L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7048)).time(getTimeTest()).provision(getProvisionTest()).businessName("호미호식").businessNumber("101-10-10049").addressDetail("101").postcode("00049").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner50").get()).category("음식점").name("천진영감").address("서울특별시 중구 다산로 255").location(geometryFactory.createPoint(new Coordinate(37.5658069445578,127.015840804658))).contact(212345727L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7049)).time(getTimeTest()).provision(getProvisionTest()).businessName("천진영감").businessNumber("101-10-10050").addressDetail("101").postcode("00050").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner51").get()).category("음식점").name("정돈").address("서울특별시 중구 퇴계로78길 17").location(geometryFactory.createPoint(new Coordinate(37.5645814325455,127.016972416902))).contact(212345728L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7050)).time(getTimeTest()).provision(getProvisionTest()).businessName("정돈").businessNumber("101-10-10051").addressDetail("101").postcode("00051").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner52").get()).category("음식점").name("무공돈까스").address("서울 중구 신당동 296-9").location(geometryFactory.createPoint(new Coordinate(37.5606535399804,127.013462907663))).contact(212345729L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7051)).time(getTimeTest()).provision(getProvisionTest()).businessName("무공돈까스").businessNumber("101-10-10052").addressDetail("101").postcode("00052").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner53").get()).category("음식점").name("삼육가").address("서울특별시 중구 동호로24길 7").location(geometryFactory.createPoint(new Coordinate(37.5595369588036,127.005155328239))).contact(212345730L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7052)).time(getTimeTest()).provision(getProvisionTest()).businessName("삼육가").businessNumber("101-10-10053").addressDetail("101").postcode("00053").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner54").get()).category("음식점").name("멘야산다이메").address("서울특별시 중구 퇴계로 197").location(geometryFactory.createPoint(new Coordinate(37.5613569206478,126.993769314538))).contact(212345731L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7053)).time(getTimeTest()).provision(getProvisionTest()).businessName("멘야산다이메").businessNumber("101-10-10054").addressDetail("101").postcode("00054").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner55").get()).category("음식점").name("영동그집").address("서울특별시 중구 퇴계로 131").location(geometryFactory.createPoint(new Coordinate(37.5613923299875,126.986299276465))).contact(212345732L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7054)).time(getTimeTest()).provision(getProvisionTest()).businessName("영동그집").businessNumber("101-10-10055").addressDetail("101").postcode("00055").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner56").get()).category("음식점").name("심야식당모모").address("서울 중구 남산동1가 7-1").location(geometryFactory.createPoint(new Coordinate(37.5604370934934,126.984828099617))).contact(212345733L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7055)).time(getTimeTest()).provision(getProvisionTest()).businessName("심야식당모모").businessNumber("101-10-10056").addressDetail("101").postcode("00056").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner57").get()).category("음식점").name("함지곱창").address("서울특별시 중구 소공로 46").location(geometryFactory.createPoint(new Coordinate(37.5594097363199,126.983198525283))).contact(212345734L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7056)).time(getTimeTest()).provision(getProvisionTest()).businessName("함지곱창").businessNumber("101-10-10057").addressDetail("101").postcode("00057").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner58").get()).category("음식점").name("황소곱창").address("서울 중구 남산동2가 26-8").location(geometryFactory.createPoint(new Coordinate(37.5574459392619,126.986096281561))).contact(212345735L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7057)).time(getTimeTest()).provision(getProvisionTest()).businessName("황소곱창").businessNumber("101-10-10058").addressDetail("101").postcode("00058").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner59").get()).category("음식점").name("장생건강원").address("서울특별시 중구 퇴계로12길 68").location(geometryFactory.createPoint(new Coordinate(37.5566794539079,126.981456239908))).contact(212345736L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7058)).time(getTimeTest()).provision(getProvisionTest()).businessName("장생건강원").businessNumber("101-10-10059").addressDetail("101").postcode("00059").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner60").get()).category("음식점").name("더바른정육식당").address("서울 용산구 후암동 446-12").location(geometryFactory.createPoint(new Coordinate(37.5538586190544,126.977371467418))).contact(212345737L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7059)).time(getTimeTest()).provision(getProvisionTest()).businessName("더바른정육식당").businessNumber("101-10-10060").addressDetail("101").postcode("00060").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner61").get()).category("음식점").name("하남돼지집").address("서울 종로구 세종로 178").location(geometryFactory.createPoint(new Coordinate(37.5707610731508,126.976143832196))).contact(212345738L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7060)).time(getTimeTest()).provision(getProvisionTest()).businessName("하남돼지집").businessNumber("101-10-10061").addressDetail("101").postcode("00061").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner62").get()).category("음식점").name("쿠시텐").address("서울 종로구 신문로1가 116").location(geometryFactory.createPoint(new Coordinate(37.5698236384534,126.974242453425))).contact(212345739L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7061)).time(getTimeTest()).provision(getProvisionTest()).businessName("쿠시텐").businessNumber("101-10-10062").addressDetail("101").postcode("00062").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner63").get()).category("음식점").name("유로포차").address("서울특별시 종로구 새문안로 75").location(geometryFactory.createPoint(new Coordinate(37.5704540231803,126.972849924814))).contact(212345740L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7062)).time(getTimeTest()).provision(getProvisionTest()).businessName("유로포차").businessNumber("101-10-10063").addressDetail("101").postcode("00063").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner64").get()).category("음식점").name("용용선생").address("서울특별시 종로구 새문안로 68").location(geometryFactory.createPoint(new Coordinate(37.5697330954228,126.972284211665))).contact(212345741L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7063)).time(getTimeTest()).provision(getProvisionTest()).businessName("용용선생").businessNumber("101-10-10064").addressDetail("101").postcode("00064").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner65").get()).category("음식점").name("장미술상").address("서울특별시 종로구 새문안로3길 15").location(geometryFactory.createPoint(new Coordinate(37.5717964035902,126.97240796497))).contact(212345742L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7064)).time(getTimeTest()).provision(getProvisionTest()).businessName("장미술상").businessNumber("101-10-10065").addressDetail("101").postcode("00065").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner66").get()).category("음식점").name("대도식당").address("서울특별시 종로구 사직로 130").location(geometryFactory.createPoint(new Coordinate(37.5754726319021,126.973142432366))).contact(212345743L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7065)).time(getTimeTest()).provision(getProvisionTest()).businessName("대도식당").businessNumber("101-10-10066").addressDetail("101").postcode("00066").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner67").get()).category("음식점").name("김선생조개찜").address("서울특별시 종로구 사직로12길 8").location(geometryFactory.createPoint(new Coordinate(37.5756252641524,126.970878299834))).contact(212345744L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7066)).time(getTimeTest()).provision(getProvisionTest()).businessName("김선생조개찜").businessNumber("101-10-10067").addressDetail("101").postcode("00067").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner68").get()).category("음식점").name("노들강본채").address("서울특별시 종로구 자하문로6길 6").location(geometryFactory.createPoint(new Coordinate(37.5780042719962,126.972473598898))).contact(212345745L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7067)).time(getTimeTest()).provision(getProvisionTest()).businessName("노들강본채").businessNumber("101-10-10068").addressDetail("101").postcode("00068").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner69").get()).category("음식점").name("송씨해물점").address("서울특별시 종로구 필운대로 34-16").location(geometryFactory.createPoint(new Coordinate(37.5789495192632,126.969246796754))).contact(212345746L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7068)).time(getTimeTest()).provision(getProvisionTest()).businessName("송씨해물점").businessNumber("101-10-10069").addressDetail("101").postcode("00069").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner70").get()).category("음식점").name("보물섬").address("서울 종로구 체부동 85-1").location(geometryFactory.createPoint(new Coordinate(37.5776977029656,126.971500131354))).contact(212345747L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7069)).time(getTimeTest()).provision(getProvisionTest()).businessName("보물섬").businessNumber("101-10-10070").addressDetail("101").postcode("00070").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner71").get()).category("음식점").name("솔밭삼겹살").address("서울 종로구 효자동 164-9").location(geometryFactory.createPoint(new Coordinate(37.5821578822613,126.972596604842))).contact(212345748L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7070)).time(getTimeTest()).provision(getProvisionTest()).businessName("솔밭삼겹살").businessNumber("101-10-10071").addressDetail("101").postcode("00071").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner72").get()).category("음식점").name("금강바베큐").address("서울 종로구 옥인동 45-30").location(geometryFactory.createPoint(new Coordinate(37.5817426115402,126.969290933151))).contact(212345749L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7071)).time(getTimeTest()).provision(getProvisionTest()).businessName("금강바베큐").businessNumber("101-10-10072").addressDetail("101").postcode("00072").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner73").get()).category("음식점").name("멘야시노기").address("서울특별시 종로구 자하문로15길 18").location(geometryFactory.createPoint(new Coordinate(37.5807787116492,126.969925314509))).contact(212345750L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7072)).time(getTimeTest()).provision(getProvisionTest()).businessName("멘야시노기").businessNumber("101-10-10073").addressDetail("101").postcode("00073").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner74").get()).category("음식점").name("멘카오리").address("서울특별시 종로구 통일로 134").location(geometryFactory.createPoint(new Coordinate(37.5664700079089,126.966558005239))).contact(212345751L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7073)).time(getTimeTest()).provision(getProvisionTest()).businessName("멘카오리").businessNumber("101-10-10074").addressDetail("101").postcode("00074").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner75").get()).category("음식점").name("장쌈").address("서울 서대문구 충정로3가 58-6").location(geometryFactory.createPoint(new Coordinate(37.5604864174929,126.963278431543))).contact(212345752L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7074)).time(getTimeTest()).provision(getProvisionTest()).businessName("장쌈").businessNumber("101-10-10075").addressDetail("101").postcode("00075").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner76").get()).category("음식점").name("상석").address("서울 서대문구 현저동 102-49").location(geometryFactory.createPoint(new Coordinate(37.57380151076,126.95838160606))).contact(212345753L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7075)).time(getTimeTest()).provision(getProvisionTest()).businessName("상석").businessNumber("101-10-10076").addressDetail("101").postcode("00076").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner77").get()).category("음식점").name("밤을걷는선비").address("서울 종로구 소격동 48").location(geometryFactory.createPoint(new Coordinate(37.5806908772236,126.980771016881))).contact(212345754L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7076)).time(getTimeTest()).provision(getProvisionTest()).businessName("밤을걷는선비").businessNumber("101-10-10077").addressDetail("101").postcode("00077").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner78").get()).category("음식점").name("우기식당").address("서울특별시 종로구 북촌로 94").location(geometryFactory.createPoint(new Coordinate(37.5851244324664,126.985434469285))).contact(212345755L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7077)).time(getTimeTest()).provision(getProvisionTest()).businessName("우기식당").businessNumber("101-10-10078").addressDetail("101").postcode("00078").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner79").get()).category("음식점").name("루위").address("서울특별시 종로구 대학로 116").location(geometryFactory.createPoint(new Coordinate(37.5814672736936,127.002394449326))).contact(212345756L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7078)).time(getTimeTest()).provision(getProvisionTest()).businessName("루위").businessNumber("101-10-10079").addressDetail("101").postcode("00079").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner80").get()).category("음식점").name("연타발").address("서울특별시 종로구 대학로5가길 5").location(geometryFactory.createPoint(new Coordinate(37.5786201450159,127.001703786768))).contact(212345757L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7079)).time(getTimeTest()).provision(getProvisionTest()).businessName("연타발").businessNumber("101-10-10080").addressDetail("101").postcode("00080").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner81").get()).category("음식점").name("주방류").address("서울특별시 종로구 율곡로 191-1").location(geometryFactory.createPoint(new Coordinate(37.5763316318463,127.000039621735))).contact(212345758L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7080)).time(getTimeTest()).provision(getProvisionTest()).businessName("주방류").businessNumber("101-10-10081").addressDetail("101").postcode("00081").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner82").get()).category("음식점").name("북해도목장").address("서울특별시 종로구 율곡로 190").location(geometryFactory.createPoint(new Coordinate(37.5756468760201,126.999949058235))).contact(212345759L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7081)).time(getTimeTest()).provision(getProvisionTest()).businessName("북해도목장").businessNumber("101-10-10082").addressDetail("101").postcode("00082").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner83").get()).category("음식점").name("반피차이").address("서울특별시 종로구 김상옥로 37").location(geometryFactory.createPoint(new Coordinate(37.5734754651188,127.001794230064))).contact(212345760L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7082)).time(getTimeTest()).provision(getProvisionTest()).businessName("반피차이").businessNumber("101-10-10083").addressDetail("101").postcode("00083").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner84").get()).category("음식점").name("성천막국수").address("서울특별시 용산구 회나무로13길 52").location(geometryFactory.createPoint(new Coordinate(37.5416338130701,126.990036924504))).contact(212345761L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7083)).time(getTimeTest()).provision(getProvisionTest()).businessName("성천막국수").businessNumber("101-10-10084").addressDetail("101").postcode("00084").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner85").get()).category("음식점").name("유나기").address("서울특별시 용산구 녹사평대로 245").location(geometryFactory.createPoint(new Coordinate(37.5394350735276,126.986959560113))).contact(212345762L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7084)).time(getTimeTest()).provision(getProvisionTest()).businessName("유나기").businessNumber("101-10-10085").addressDetail("101").postcode("00085").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner86").get()).category("음식점").name("라멘모토").address("서울 용산구 이태원동 36-85").location(geometryFactory.createPoint(new Coordinate(37.5301371551045,126.991441329202))).contact(212345763L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7085)).time(getTimeTest()).provision(getProvisionTest()).businessName("라멘모토").businessNumber("101-10-10086").addressDetail("101").postcode("00086").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner87").get()).category("음식점").name("박경자식당").address("서울 용산구 동빙고동 7-43").location(geometryFactory.createPoint(new Coordinate(37.5251636926283,126.992437420246))).contact(212345764L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7086)).time(getTimeTest()).provision(getProvisionTest()).businessName("박경자식당").businessNumber("101-10-10087").addressDetail("101").postcode("00087").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner88").get()).category("음식점").name("무한쌈밥집").address("서울 용산구 보광동 80-21").location(geometryFactory.createPoint(new Coordinate(37.5263892904957,127.001306645104))).contact(212345765L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7087)).time(getTimeTest()).provision(getProvisionTest()).businessName("무한쌈밥집").businessNumber("101-10-10088").addressDetail("101").postcode("00088").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner89").get()).category("음식점").name("평양면옥").address("서울 용산구 한남동 399-8").location(geometryFactory.createPoint(new Coordinate(37.5297766753946,127.009588154119))).contact(212345766L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7088)).time(getTimeTest()).provision(getProvisionTest()).businessName("평양면옥").businessNumber("101-10-10089").addressDetail("101").postcode("00089").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner90").get()).category("음식점").name("알라프리마").address("서울특별시 용산구 한남대로21길 4").location(geometryFactory.createPoint(new Coordinate(37.5347324122491,127.006126641893))).contact(212345767L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7089)).time(getTimeTest()).provision(getProvisionTest()).businessName("알라프리마").businessNumber("101-10-10090").addressDetail("101").postcode("00090").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner91").get()).category("음식점").name("꿉당").address("서울 용산구 한남동 263-28").location(geometryFactory.createPoint(new Coordinate(37.5337591742823,127.008638283096))).contact(212345768L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7090)).time(getTimeTest()).provision(getProvisionTest()).businessName("꿉당").businessNumber("101-10-10091").addressDetail("101").postcode("00091").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner92").get()).category("음식점").name("달수네소곱창").address("서울특별시 중구 청구로 지하 77").location(geometryFactory.createPoint(new Coordinate(37.5601039163274,127.01359862525))).contact(212345769L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7091)).time(getTimeTest()).provision(getProvisionTest()).businessName("달수네소곱창").businessNumber("101-10-10092").addressDetail("101").postcode("00092").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner93").get()).category("음식점").name("김수사").address("서울특별시 중구 필동로 53").location(geometryFactory.createPoint(new Coordinate(37.556716881843,126.995987936363))).contact(212345770L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7092)).time(getTimeTest()).provision(getProvisionTest()).businessName("김수사").businessNumber("101-10-10093").addressDetail("101").postcode("00093").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner94").get()).category("음식점").name("모노로그").address("서울 종로구 경운동 90-3").location(geometryFactory.createPoint(new Coordinate(37.5760334385234,126.985707931019))).contact(212345771L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7093)).time(getTimeTest()).provision(getProvisionTest()).businessName("모노로그").businessNumber("101-10-10094").addressDetail("101").postcode("00094").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner95").get()).category("음식점").name("동인동").address("서울 서대문구 남가좌동 293-3").location(geometryFactory.createPoint(new Coordinate(37.5691921225448,126.914917623617))).contact(212345772L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7094)).time(getTimeTest()).provision(getProvisionTest()).businessName("동인동").businessNumber("101-10-10095").addressDetail("101").postcode("00095").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner96").get()).category("음식점").name("희래등").address("서울특별시 강서구 공항대로46길 89").location(geometryFactory.createPoint(new Coordinate(37.5521722622708,126.851200564219))).contact(212345773L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7095)).time(getTimeTest()).provision(getProvisionTest()).businessName("희래등").businessNumber("101-10-10096").addressDetail("101").postcode("00096").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner97").get()).category("음식점").name("미미면가").address("서울 강서구 화곡동 1159-1").location(geometryFactory.createPoint(new Coordinate(37.5488012307901,126.836586580175))).contact(212345774L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7096)).time(getTimeTest()).provision(getProvisionTest()).businessName("미미면가").businessNumber("101-10-10097").addressDetail("101").postcode("00097").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner98").get()).category("음식점").name("에뚜왈").address("서울 강서구 화곡동 1064").location(geometryFactory.createPoint(new Coordinate(37.5422833454084,126.840493282089))).contact(212345775L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7097)).time(getTimeTest()).provision(getProvisionTest()).businessName("에뚜왈").businessNumber("101-10-10098").addressDetail("101").postcode("00098").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner99").get()).category("음식점").name("칙피스").address("서울특별시 강서구 화곡로 194-9").location(geometryFactory.createPoint(new Coordinate(37.5428818201353,126.843343494169))).contact(212345776L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7098)).time(getTimeTest()).provision(getProvisionTest()).businessName("칙피스").businessNumber("101-10-10099").addressDetail("101").postcode("00099").build());
        restaurantRepository.save(Restaurant.builder().members(memberRepository.findByName("owner100").get()).category("음식점").name("코이에").address("서울 강서구 화곡동 1074-24").location(geometryFactory.createPoint(new Coordinate(37.5411286518373,126.839449089721))).contact(212345777L).menu(Map.of("메뉴1",5000,"메뉴2",6000,"메뉴3",7099)).time(getTimeTest()).provision(getProvisionTest()).businessName("코이에").businessNumber("101-10-10100").addressDetail("101").postcode("00100").build());
    }

    void initNotice() {
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 1").content("""
김태섭\n특정한 목적이 없고 그저 관심이나 주목을 받기 위해, 아니면 자신이 생각하고 있는 주제긴 하더라도 그리 진지하지 않은 마인드로 올리는 글. 한 마디로 말해 글은 글이되 내용은 없는 글을 일컫는다. 디시 갤러리 등지에서 흔히 볼 수 있는 화살표글이 대표적인 뻘글이다. 뻘글이 꾸준히 같은 패턴으로 올라오면 꾸준글이 된다.

내용의 성의성, 내용의 길이, 작성자의 의도를 기준으로 뻘글인지 아닌지를 파악할 수 있다. 일반적으로 별 의미가 없거나, 의미가 있는 듯 해도 내용이 한두줄 정도로 너무 짧거나, 내용이 있다고 해도 Ctrl CV 수준의 복사글 수십개가 동일 인물에 의해 난무하면 도배 뻘글로 간주된다.

등급이나 레벨 상승용으로 일정 숫자의 글을 작성해야 한다는 규정이 있는 사이트에서 등업글 수를 채우기 위해 빨리빨리 싸지르는 글의 대다수를 차지한다. 다만 이런 글은 등급 상승용 글로서 인정받지 못하는 사이트도 있다. 더 엄격한 사이트인 경우에는 해당 뻘글을 작성한 유저에게 불이익을 주기도 한다.

의미없는 글이긴 하지만, 의미 없는 바보짓에 매달리는 사람들도 있는 법. 꾸준글러가 바로 그런 사람들이다.

글리젠 상승의 일등 공신이기도 하다. 일부러 글리젠을 흥하게 하기 위해 게시판 유저들이 뻘글을 대량 싸기도 한다. 반대로 친목질을 방지하기 위해 게시판 주제에 상관없는 뻘글은 올리지 말라는 규정이 있는 사이트도 있다.

위키에서의 뻘글은 뻘문서 라고 한다. 위키에서의 뻘글은 제재 대상이다.

뻘글의 덧글 버전(?)으로 뻘덧글이 있다. 다만 뻘글이 그냥 큰 의미 없는 글이라는 의미로 가치판단적 의미는 덜 들어간 단어라면 뻘덧글은 부정적인 의미가 강한 단어다.

여기서 파생되어 나무위키에서 불필요한 토론을 발제하는 것을 뻘토론이라고 한다. 뻘토론은 차단 사유가 된다.

영어권 인터넷에도 뻘글에 해당되는 단어인 "shitpost"가 존재한다. shitpost와 뻘글은 둘 다 의미 없는 글을 지칭하지만 이 shitpost는 뻘글과는 달리 좀 더 유머나 밈에 가깝다.

똥글에 대한 안좋은 인식이 박힌 곳은 조금만 해도 많은 욕을 먹는 경우가 있다""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 2").content("""
김태섭\n2014년 4월 16일에 쓰인 글로, 각 갤러리가 갤러리 주제와 관련없는 뻘글로 (인한 친목질으로) 망했던 과정을 서술하고 있다. 이 글이 쓰여질 당시에 와갤과 코갤은 이미 망한 상태였고, 고갤은 망했다고는 서술되어 있으나 그나마 남아 있는 게임 떡밥으로 갤이 굴러가는 중이었다. 2014년 여름방학때에 이르면 고갤은 부흥에 성공하지만 이후 거짓말같이 2016년말~2017년초를 전후로 해서 고갤 또한 갤러리 주제와 관계없는 오덕 떡밥과 일베&역갤발 분탕질, 자유게시판화로 인해 게임 글을 쓰던 인원이 중갤로 떠나가 진짜 망해버렸다. 알바가 갤러리 주제를 통제하지 않는 디시 내 갤러리들의 흥망성쇠로 뻘글이 커뮤니티에 주는 악영향을 볼 수 있다. 그러나 이러한 형태의 자유게시판 말고, 엥간한 거대 게임 커뮤니티들은 뻘글이 없으면 떡밥이 다 떨어져 갤 상태가 시망이 되므로 성욕글이든 어떤 형태로든 뻘글이 범람하는 경우가 많다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 3").content("""
김태섭\n쿠치키 루키아에게 사신의 힘을 받아 사신대행으로서 나름대로 열심히 활동하던 주인공 쿠로사키 이치고. 그러던 어느날, 그의 앞에 소울 소사이어티에서 찾아온 루키아의 지인이자 진짜 사신인 쿠치키 뱌쿠야 & 아바라이 렌지가 나타나 대역죄인 루키아를 사신계로 대려가겠다고 으름장을 놓는다. 이에 이치고가 반발하며 렌지와 싸움을 벌이게 되고 뱌쿠야에게 일격을 당해 사신의 힘이 소실된다. 이치고는 우라하라 키스케의 조언으로 이치고는 우라하라 상점 지하 수련장에서 루키아의 것이 아닌 자신의 힘을 찾아내는 수행을 하게 된다.

그리고 우라하라에 의해 몸에서 영혼이 빠져나온 이치고는 그 상태로 지하수련장의 구덩이에 갇혀 호로가 될 위기에 처하고, 호로화를 몇 시간 앞두고[2] 사신의 힘과 참백도 참월을 얻는다. 그리고 오리히메, 우류, 차드, 인솔자 격으로 시호인 요루이치와 함께 루키아를 구하러 소울 소사이어티에 침입하게 된다.

소울 소사이어티 침입 후 지단보와 대결하여 승리하나, 3번대 대장 이치마루 긴의 난입으로 정령정에 들어가지 못하고 루콘가로 쫓겨난다. 그 후 시바 쿠우카쿠의 도움을 받아 사신에게 형이 살해당해 사신들을 증오하는 시바 간쥬와 함께 화학대포로 정령정의 차혼막을 뚫고 침입한다. 그러나 영압 조절 실패로 우류&오리히메, 이치고&간쥬, 요루이치, 차드가 네 방향으로 흩어지게 되고, 워낙 화려하게 침입한 나머지 호정 13대의 주의가 모두 현세조에게 쏠리게 된다.

5번대 대장 아이젠 소스케는 우연히 렌지를 만나게 되고, 루키아의 죄에 비해 사형선고도 너무 과하고,[3] 사형집행조차 조급했다. 이런 결정이 이상하다는 것을 이야기한다. 이어 대장회의가 열리게 되고, 이치고가 침입했다는 것을 알게 된 렌지는 루키아에게 그 소식을 전하고 그 길로 부대장 완장을 처소에 두고 이치고를 찾아나선다. 그리고 아이젠과 이치마루가 수상한 대화를 나눈다.[5] 10번대 대장 히츠가야 토시로는 이 얘기를 엿듣고 이치마루가 수상하다며 5번대 부대장 히나모리 모모에게 3번대를 조심하라 이른다.

11번대 대장 자라키 켄파치는 가장 강한 자와 싸우고싶다는 열망으로 부대장 쿠사지시 야치루와 함께 정령정의 곳곳을 쑤시며 이치고를 찾는다.

정령정 내에 잠입한 이치고는 11번대 3석 마다라메 잇카쿠, 간쥬는 5석 아야세가와 유미치카와의 싸움에서 승리하고, 서로를 찾아다니는 도중에 4번대 대원 야마다 하나타로를 만나게 된다. 하나타로는 옥중에서 루키아의 시중을 들었던 대원이라 루키아가 죽길 바라지 않았고, 하나타로의 도움을 받아 루키아가 있는 참죄궁으로 향하게 된다.

그러나 그 길을 아바라이 렌지가 가로막는다. 현세에선 완패했던 이치고지만 우라하라가 가르쳐 준 연속공격의 헛점[6]을 이용해 렌지를 이기게 되고, 렌지는 루키아를 구해다오라는 말을 남기고 쓰러진다. 그 길로 이치고는 다시 참죄궁을 향하고, 렌지는 무단으로 적과 단신으로 맞붙고 패배했다는 죄목하에 부대감옥에 갇히게 된다.

그리고 이치고 일행이 침입한지 얼마 되지 않아 5번대 대장 아이젠 소스케가 암살당한다.[7] 이에 충격받아 이성을 상실한 모모는 토시로의 조언을 떠올리고 이치마루를 공격한다. 이를 3번대 부대장 키라 이즈루가 맞받아치고 이로 인해 둘다 투옥된다. 그리고 모모는 감옥에서 10번대 부대장 마츠모토 란기쿠에게 아이젠의 유서를 받고 충격에 빠진다. 그리고 이치고 일행은 아이젠 암살의 용의자로 몰려 마침내 대장들의 전면 습격을 받게 된다.

한편 차드는 8번대 대원들을 쓰러뜨리며 루키아의 위치를 찾으려 하나, 8번대 대장 쿄라쿠 슌스이와 맞닥뜨린다. 그리고 쿄라쿠가 함께 한 시간이 얼마 되지도 않는 루키아를 왜 그렇게 구하려 하냐고 묻자, 이치고가 구하고 싶어해. 내가 목숨을 거는 데 그 이상의 이유는 필요 없어!라는 말과 함께 그대로 교전에 들어간다. 그러나 허망하게도 한 페이지만에 쓰러지게 된다. 이후 차드는 감옥에 갇힌다.

그리고 마침내 자라키 켄파치가 이치고를 발견하게 된다. 이치고는 압도적인 힘의 차이를 느끼지만 친구들이 살아있고 지금도 싸우고 있다는 현실을 곱씹고 간쥬와 하나타로를 먼저 보낸 채 켄파치와의 싸움에 들어간다. 하지만 대장에겐 상대가 될 리 없었고[8][9] 그대로 참월이 두동강나고 쓰러진다.

그 때 참월 아저씨가 나타나 이치고의 의지를 확인한 뒤 이치고의 내면 세계에서 수련을 시켜준다. 수련 상대는 색이 반전된 참월을 든 이치고 자신. 신체 능력은 똑같지만 이치고의 검은 참월도 아니고, 전투 센스에서 밀리는 이치고는 참월을 손에 넣은 것만으로 참월에 대해 이해하고 있다 생각했던 걸 반성하고, 참월은 그런 이치고에게 힘을 빌려주게 된다. 그리고 참월이 일시적으로 피를 막아주는 동안 다시 켄파치와의 전투에 들어간다. 이치고가 켄파치에게 미친 듯이 공격을 퍼붓고 우위를 점하자, 켄파치는 자신의 힘을 봉인한 안대까지 풀어 이치고와 맞서지만, 결국 힘이 당해 이치고의 출혈이 다시 터지며 이치고가 쓰러진다. 그러나 켄파치의 참백도는 부러져 있었고, 켄파치는 네가 이겼어, 바보야.라는 말과 함께 이치고와 동시에 쓰러지게 된다.[10] 이후 야치루가 켄파치를 우노하나 레츠에게 데려가고, 이치고는 요루이치가 회수해 비밀 장소로 데려간다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 4").content("""
김태섭\n간쥬와 하나타로는 참죄궁에서 루키아를 대면하나 루키아는 간쥬의 형 시바 카이엔을 죽인 사신이었다. 간쥬가 루키아라는 녀석이 이놈인줄은 몰랐다며 분노하는 도중, 쿠치키 뱌쿠야가 루키아의 상태를 확인하러 온다. 간쥬는 이치고의 부탁이기에 뱌쿠야와 맞서지만, 뱌쿠야의 참백도 천본앵에 의해 온 몸을 난도질당한다. 뱌쿠야가 간쥬와 하나타로를 확실하게 죽이려 할 때 13번대 대장 우키타케 쥬시로가 나타나 말리고, 그 직후 이치고가 요루이치의 도구를 이용해 참죄궁으로 날아온다. 이치고는 그대로 뱌쿠야와의 싸움에 들어가려 하나, 요루이치에게 마취약을 배에 주입당해 쓰러지고 간쥬와 하나타로는 쥬시로에 의해 목숨을 건져 감옥에 갇힌다. 이치고가 깨어난 후 왜 자기만 살렸냐며 노발대발하는데, 요루이치는 지금의 이치고가 대장들을 이기기엔 모자르다며 이치고에게 만해의 존재를 알려준다. 그리고 전신체를 이용해 3일간의 만해수행을 시작한다.

한편 우류와 오리히메는 잇칸자카 지로보와의 전투에서 승리하고, 지나가던 대원 두명을 기절시키고 옷을 빼앗아 사신 행세를 하며 여화 수색조에 들어간다. 그러나 옷을 뺏는 장면을 12번대 대장 쿠로츠치 마유리에게 들켰다.

이후 야밤에 12번대의 갑작스러운 자폭 테러를 당하고, 우류는 지나가던 11번대 아라마키 마키조에게 오리히메를 맡기고 마유리와의 전투에 들어간다. 독에 의해 움직이지 못하게 된 우류는 마유리의 실험으로 인한 할아버지의 처참한 시신을 보고 각성하여 반드시 마유리를 죽여버리고자 결심하고, 퀸시 렛트슈틸을 사용해 마유리를 압도하기 시작한다. 그리고 마유리는 블리치 최초로 만해, 금색소쇄지장을 선보이지만 결국 우류의 손에 패배한다.[11] 우류는 의기양양하며 루키아가 있는 참죄궁으로 향하지만, 갑자기 눈앞에 9번대 대장 토센 카나메가 나타나 두페이지만에 리타이어한다. 결국 우류도 투옥.

한편, 호정 13대의 대장들 중 쥬시로, 슌스이, 레츠는 아이젠의 죽음에 수상함을 느끼고 조사를 시작한다.

그리고 이치마루가 키라와 모모를 감옥에서 빼내고, 렌지는 탈옥하여 이치고와 함께 만해 수행에 들어간다. 토시로는 모모의 탈옥 소식을 접하고 바로 뒤쫓아가는데, 이치마루와 함께 있는 모모를 발견하자 아이젠 대장님의 원수라며 공격을 받는다. 아이젠의 유서에는 토시로가 사악한 음모를 꾸미고 있으며 아이젠이 그걸 저지하려 한다고 적혀 있었다. 결국 모모는 기절해버리고, 토시로는 이치마루와의 싸움에 들어간다. 호각으로 싸우던 중 란기쿠의 난입으로 전투는 종료. 그리고 토시로는 모모를 10번대 처소에 결계를 쳐 가둔다.

켄파치는 이치고를 돕기 위해 아라마키와 함께있던 오리히메를 데려오고, 간쥬, 우류, 차드를 모두 감옥에서 빼내버린다. 비슷한 시기에 렌지는 만해를 완성하여 뱌쿠야에게 도전한다. 만해 비비왕 사미환으로 뱌쿠야를 잠시나마 압도했지만, 뱌쿠야가 만해 천본앵경엄을 사용하자 온몸에서 피를 흘리며 쓰러진다. 그리고 이치고와 함께 맹세했단 말야..!! 반드시 구해내겠다고..!! 누구에게도 아니야... 그저 내... 영혼에게다!!!라는 명대사와 함께 뱌쿠야에게 최후의 일격을 날리나, 뱌쿠야에게 조금 상처를 입히는 선에서 그친다. 그리고 뱌쿠야는 렌지를 인정하며 자신의 은백풍화사를 덮어준다.

처형이 시작되자 토시로와 란기쿠는 어딘가로 떠나고, 렌지는 리키치가 데려온 하나타로에게 치료를 받아 쌍극으로 향한다. 켄파치는 현세조들을 이끌고 처형대로 향하는데, 이를 7번대 대장 코마무라 사진, 부대장 이바 테츠자에몽, 토센 카나메와 부대장 히사기 슈헤이가 가로막는다. 현세조들을 먼저 쌍극으로 보내고 테츠자에몽은 잇카쿠, 유미치카는 슈헤이를 맡고 켄파치는 대장 둘과 2 대 1 대결에 들어간다. 토센은 만해 청충종식 염마실솔, 코마무라는 흑승천견명왕을 사용해 켄파치를 상대하나 무승부로 끝난다.

이치고는 수련을 끝마치고 루키아가 처형당하기 직전에 쌍극을 파괴하여 루키아를 구출한다. 이 사태를 접하고 호정 13대는 양분되어 총대장 야마모토 겐류사이 시게쿠니를 우키타케와 쿄라쿠가 상대하고, 전투에 나서려는 소이퐁을 요루이치가 저지한다. 이치고는 코테츠 이사네, 사사키베 쵸지로 타다오키, 오마에다 마레치요를 주먹 한방으로 정리한다. 레츠는 부상자들을 치료하러 떠나고, 응급처치가 끝난 후 레츠와 이사네 또한 어딘가로 향한다. 그리고 이치고는 마침내 뱌쿠야와의 대결에 들어간다. 그리고 시해 상태에서 뱌쿠야의 만해까지 끌어내고, 마침내 자신의 만해, 천쇄참월을 사용한다. 허나 이치고가 만해를 실전에서 쓰기에는 상당히 빨랐고, 그 동안의 싸움으로 상처는 회복될 지언정 피로와 데미지는 축적되어 왔기에 결국 시간이 갈수록 이치고가 밀리게 된다. 이치고의 힘이 다 빠지고 죽을 위험에 처하자, 갑작스럽게 이치고가 호로화하고 뱌쿠야에게 중상을 입힌다. 하지만 이치고는 호로화 상태에서 이기고 싶지 않았고 결국 스스로 호로화를 해제하고 뱌쿠야와 맞붙어 무승부를 내게 된다.

토시로가 향한 곳은 중앙 46실이었다. 거기서 토시로는 중앙 46실이 전멸했다는 사실을 알게되고, 현장에서 이즈루를 발견한다. 토시로와 란기쿠는 이즈루를 쫓고, 모모는 결계를 빠져나간 지 오래라는 사실을 알게 되어 토시로는 모모를 쫓아간다. 모모는 이치마루와 함께 중앙46실의 거주지, 청정탑 거림에 있었고, 이치마루는 모모에게 보여주고 싶은 사람이 있다고 말한다. 그리고 그 사람은...""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 5").content("""
김태섭\n모두가 죽었다고 생각했던 아이젠 소스케였다.

사실 모든 것은 처음부터 소스케의 계획이었다. 소스케는 모모를 바로 찔러버리고, 이에 분노해 만해 대홍련빙륜환을 사용한 토시로를 가볍게 썰어버린다. 그리고 청정탑 거림을 찾아온 레츠와 이사네에게 본인의 계획에 대해 일부 설명한다. 애초에 본인은 이치마루 외의 인물을 부대장이라 생각도 해본적이 없다고. 아이젠의 시체는 아이젠의 참백도 경화수월의 능력, 완전최면으로 시체로 둔갑된 경화수월이었다. 그리고 렌지는 루키아를 데리고 도망가던 중 갑작스럽게 토센과 마주하고, 토센은 루키아와 렌지를 쌍극으로 도로 돌려보낸다. 토센도 사실 아이젠의 부하였던 것. 그리고 루키아 처형과 아이젠 암살 사건, 이치마루의 진의를 알 수 없는 여러 행동 등의 모든 미스터리가 풀리고, 호정 13대의 대장 3명이 웨코문드로 떠나 반란을 일으킨다는 충격적인 결말을 맺는다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 6").content("""
김태섭\n블리치가 원피스, 나루토랑 묶이기 시작한 에피소드이자 블리치 역사상 최고의 에피소드. 작품 내적 평가뿐만 아니라 인기 면에서도 성공하여, 전까지 하위권에서 간신히 연명하던 블리치는 이 에피소드를 기점으로 점프 3강으로 등극했다. 이 에피소드의 성공에는 여러 이유가 있지만, 먼저 시리즈 전체를 통틀어 가장 완성도가 높다.

성공한 배틀물 소년만화가 필수적으로 진행하게 되는 추격전, 속도전, 장기전, 최종결전의 뛰어난 연출, 각자의 목적에 따라 움직이는 유동적이고 생동감 있는 캐릭터, 본새나는 대사와 뛰어난 캐릭터 메이킹, 만해라는 독특하면서 멋들어진 설정 등의 매력적인 장점이 조화를 이룬 점프 배틀물 전체에서도 추천할만한 장편이라 할 수 있다. 특히, 주인공과 자라키 켄파치,쿠치키 뱌쿠야와의 대결은 이 에피소드의 최고의 대결이라고 불리며, 마지막 아이젠 소스케의 반전은 시리즈 전체를 관통하는 가장 강렬한 반전이었다고 평가받는다. 여러 음모가 뒤섞이다가 끝에 나온 이 반전은 여태까지 블리치에서 나온 반전 중에서는 가장 평가가 높다.

이 시기에도 블리치 특유의 중2병스러운 연출은 많았지만 문제가 되지 않았다. 오히려 허세가 아닌 비범한 본새라고 할 수 있었다. 그리고 이때 기점으로 작화 역시 자리 잡으면서 발전해 갔다. 이후 여백의 미라는 소리까지 들을 정도로 여백이 많은 이후 에피소드에 비하면 여백도 별로 없다. 액션 측면에서도 파워 인플레와 발전한 그림으로 멋진 장면이 많이 나와 블리치를 대표하는 에피소드 중 1개로 자리잡았다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 7").content("""
김태섭\n고속 항공모함 기동부대는 태평양 전쟁 말기 2년 동안 진행된 모든 해전의 주역이다. 기동부대를 구성하는 각 기동전대는 독립적으로 기동하거나, 연합하여 필요한 곳에 투입될 수 있었으며, 때로는 더 작은 단위로 나누어져 작은 작전에 투입되기도 했다. 이오지마 전투나 오키나와 전투 같은 때에는 고속 항공모함 기동부대를 주력으로 상륙지원부대와 포격부대, 보급부대 등이 뭉쳐 일명 "Big Blue Fleet"라고 불리는 거대한 함대로 기능하기도 했다.

윌리엄 홀시 대장의 제3함대 예하에서는 제38기동부대(Task Force 38), 레이먼드 스프루언스 대장의 제5함대 예하에서는 제58기동부대(Task Force 58)로 활동했다. 제3함대 예하에서는 존 매케인 중장[1]이, 제5함대 예하에서는 마크 미처 중장이 고속 항공모함 기동부대를 이끌었다.[2]

올림픽 작전이 개시되면 제3함대와 제5함대가 동시에 투입될 예정이었기 때문에, 고속 항공모함 기동부대 역시 제38기동부대와 제58기동부대가 동시에 투입될 예정이었다. 존 타워스 중장이 이끄는 제38기동부대가 혼슈와 홋카이도 전역을 공격하면서 규슈를 봉쇄하고, 프레드릭 셔먼 중장이 이끄는 제58기동부대가 규슈에서 상륙지원에 나설 예정이었지만[3], 히로시마·나가사키 원자폭탄 투하로 인해 일본이 항복하면서 현실화되지는 않았다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 8").content("""
김태섭\n능력자는 아니지만 제1차 세계대전에 참전했던 퇴역 장교이며, 뛰어난 사격 실력을 가지고 있고 특히 저격에서 두각을 드러낸다. 그 실력과 오랜 전쟁 경험을 바탕으로 능력자와 호각으로 승부할 정도로 무서운 인물.

전쟁에서 뛰어난 능력을 보인 카인을 정부는 특수부대에 영입한다. 카인은 자신의 뛰어난 실력을 유감없이 발휘하며 모든 걸 임무 수행에 쏟았으나, 어느 순간 살인마나 다름없는 자신의 모습을 발견하고 전쟁에 대한 깊은 후회를 하기 시작했다. 게다가 그 이후 임무에서 부대원 절반 이상을 잃으며 임무를 실패하는 사태가 벌어진다. 카인은 이를 자신의 나태함 때문이라며 심하게 자책했고, 끝내 모든 책임을 자신이 지겠다면서 퇴역을 한다.

퇴역 후 카인은 부대원들의 유가족들을 돕기 위해 의뢰를 받고 사람을 넘기는 일을 시작했다. 그리고 의뢰받은 이사벨이라는 여자를 찾아서 우드 시티를 찾아간다. 그러나 재수없게도 우연히 들른 술집에서 군인들과 이글 홀든의 불화에 휘말리는데, 카인은 그 와중 검으로 이름 높았던 홀든 가문을 상대로 호각 이상의 실력을 보여주어 그 존재를 사람들에게 각인시키는 결과를 낳았다.

두 사람의 결투는 카인이 수류탄으로 이글에게 상처를 입히고 "흥이 깨졌다"며 이글이 물러나는 것으로 마무리되었다. 참고로 이사벨과는 이 때부터 알고 지낸 듯. 이사벨은 그 '우연히 들른 술집'에서 일하고 있었고 나중에는 연인 관계로 발전하게 된다. 처음에는 의뢰 때문이었지만 점점 레나에 대한 감정이 커져버려 일을 완료하는 것을 미루고 있었던 듯하다.

하지만 사람들에게 '능력자를 이긴 비능력자'로 각인된 그의 존재는 또 문제가 되었다. 지하연합의 골칫덩어리, 흑기사 출신의 오토와 아이리쉬 갱 출신인 부처(Butcher)의 심기를 건드리게 된 것. 포트레너드의 동쪽, 지하연합의 세력 도시인 디시카는 척박하고 치안이 좋지 않은 곳이었다. 오토와 부처는 그곳에서 거리의 지배자 행세를 하며 악행을 저지르고 있었는데 어느 날 카인의 활약상이 들려오자 그로 인해 디시카의 주민들이 반기를 들까봐 걱정하게 되었다. 그래서 오토와 부처는 그렇게 되기 전에 카인을 내쫓고자 마음먹었다.

오토와 부처는 카인을 집요하게 괴롭혀왔지만 카인은 끝까지 인내했다. 하지만 어느 날 이사벨이 누군가에게 납치된다. 카인은 그것이 오토와 부처의 소행이라 생각하여 마침내 인내심이 폭발, 그들에게 맞서 싸우기로 다짐한다. 능력자와 비능력자간의 싸움에서 카인 혼자서는 승산이 희박했으므로, 그는 자신과 마찬가지로 퇴역한 전우들을 불러모아 세력을 늘렸으며 여기에 헬리오스 소속 식물 변신 능력자 드니스까지 카인을 돕게 되었다. 이때 드니스가 카인을 도왔던 이유는 불명이다. 확실한 건 그녀가 포트레너드의 안개에 대해 가장 먼저 알고 있었다는 것뿐.

한편 오토와 부처는 나이오비를 속여 아군으로 끌어들여 덤빌 테면 덤비라는 듯 희희낙락거리고 있었다. 근데 문제는 통제불능인 나이오비가 드니스의 도발에 넘어가고 그 결과 오히려 자신들의 세력권이던 디시카가 불바다로 변하고 만다. 믿는 도끼에 발등 찍힌 격이 돼버린 그들은 자신들의 수장인 흑염 하이드에게 도움을 요청했으며, 드니스 또한 포트레너드의 안개에 대한 보고를 올리고 헬리오스의 총수 명왕이 디시카에 직접 행차하기에 이른다. 덕분에 마지막에 카인이 부처의 고기칼에 다져질 뻔했지만 제때 등장한 명왕의 번개에 의해 카인은 살아남고 부처는 통구이가 되어버렸다. 오토 또한 명왕의 번개에 희생될 뻔했지만 흑염 하이드가 도착하여 목숨을 부지하게 되고 앤트워프 협약으로 인해 포트레너드 사건은 종결된다. 이 사건을 계기로 회사와 연합은 포트레너드의 안개의 비밀을 알게 되어 또 다른 갈등이 고조되었다.[2]

사건은 끝났지만 카인은 디시카에서 이사벨을 찾을 수 없었다. 사실 이사벨을 납치한 사람은 오토와 부처가 아니라 안타리우스의 광신도였고 나중에 카인과 이사벨이 다시 재회했을 때는 이사벨은 강각의 레나라는 이름의 강화인간이 되어 이사벨로서의 모든 기억과 감정이 없어진 뒤였다.

지금 그가 싸우는 이유는 밝혀지지 않았지만 정부 혹은 레나와 관련이 있을 것이라고 추정되고 있다. 카인 유니크 플레이버 텍스트에 '인간을 실험체로 사용하는 그들을 절대 용서할 수 없다. 내 시야에 들어오는 순간 고통 속에서 흔적도 없이 사라지게 만들 것이다'라는 말이 적힌 것으로 보아 그의 목적은 아마도 안타리우스 말살인 듯하다.

이후 연금술사 에밀리의 스토리에서 동료들의 모습이 등장했다. 에밀리 말고도 핸드 캐논을 사용하는 거구의 남성, 라이플을 사용하는 노년 여성과 모자를 쓴 남성이 등장했고 설정상 동료였던 인물들이 언급되긴 했지만 영상으로 등장하는 것은 이번이 처음. 카인이 싸우게 된 계기 또한 헨리 맥고윈이 과거로 돌아가 미래의 일을 누설했기 때문으로 밝혀졌다.

헨리의 말을 들은 카인은 이사벨의 흔적을 찾기 위해 전우들을 모아 루사노 수도원에 잠입한다. 의식이 진행되는 상황을 발견하고 의식을 막고자 교전에 들어가나, 나무와 풀을 조종하는 소년에 의해 가로막히고 좌절하는 것으로 끝.

따라서 이들은 벨져와 릭이 제키엘과 전투를 벌이던 그 상황과 같은 시각, 다른 장소에 있었다는 것이 된다. 물론 헨리의 개입으로 역사가 바뀌었기 때문에 명백하게 원래 역사에서는 없었던 일. 좌절하는 카인에게 에밀리는 '미래가 바뀐다는 건 현재가 바뀌고 있다는 뜻이고, 헨리의 말이 사실이라면 자신들[3]은 미래를 바꾸는 터닝 포인트가 되었다. 우리의 존재가 변화를 앞당긴 이상 우리는 언제 다가올지 모르는 위기를 대비해야 한다"며 카인을 북돋았고, 그 결과 자카리 라마레가 에밀리에 관한 기록을 이클립스에 제보하면서 요기와 브루노가 에밀리 일행을 주목하기 시작했다.

'성향상 회사측보다 연합측에 가깝지만 연합의 이글과 사이가 좋지 않은 게 문제' 라고 공식 홈페이지에 적혀있지만 성향과는 반대로 회사와 연이 더 깊다. 포트레너드 사건만 해도 드니스, 명왕 같은 회사 인물의 도움을 더 많이 받았으며 오토와 부처, 이글 등 연합측 멤버와는 적대한 적이 많다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 9").content("""
김태섭\n양손에 든 리볼버를 발사하는 좌표생성형 원거리 평타. 좌클릭을 누르고 있으면 최고 연사 속도로 발사한다. 움직이면서 사용하는 것도 가능하며 이때는 이동속도가 10% 감소한다. 매 발사마다 탄환을 한 발씩 소모하며 탄환이 다 떨어지면 재장전을 필요로 한다. 총 장탄수는 16발로 4발당 한 번씩 적을 경직 및 넉백시키고, 마지막 탄환은 두 배 가량의 대미지를 주며 더 큰 경직과 넉백을 가한다. 총알이 다 떨어지면 자동으로 장전하며 이때도 휠업을 한 것으로 간주되어 휠업 버프가 발동된다.

발당 대미지는 약하지만 연사 속도가 대단히 빨라 어지간한 딜러의 주력기와도 맞먹는 화력을 보여준다. 한 탄창을 다 비웠을 때의 대미지 공식은 대인계수를 포함하여 4.308 공격력이다. 이 화력을 3초 남짓한 순간 만에 히트스캔으로 투사할 수 있다는 걸 감안하면 실질 위력은 평타 중에서는 실로 독보적이다. 그리고 일반적으로 원캐의 언커먼 평타링은 대미지 증가량이 +30% 정도에 그치지만 카인의 평타링은 근캐와 비슷한 +45%라는 높은 수치를 가지고 있다. 덕분에 관련 장신구에 투자하면 평타 주제에 주력기인 우지에 버금가는 대미지를 뽑는 비범한 평타가 된다. 플레이어의 성향에 따라서는 류탄이나 센트리 링 대신 채용해볼 법도 하다.

또한 우클릭기인 우지와 달리 집탄율이 일정해, 거리가 멀다면 우지보다 높은 데미지를 낼 수 있다.

다만 첫 타에는 경직이 없고 경직 간격이 꽤 있어서 근캐의 일반적인 돌진기로 돌파하지 못할 수준은 아니다. 또한 사거리도 그리 길지 않아 적 원딜을 노리는 데 쓰는 건 어렵고 접근하는 적을 차단하거나 무력화된 탱커에게 지속딜을 넣기에 적합하다. 물론 돌진기나 슈퍼아머가 부족한 원딜이 이 스킬에 노출된다면 대놓고 정면에서 쏴도 경직 때문에 제대로 반격하지 못하는 걸 볼 수 있다.

카인의 1:1 대응력을 높여주는 활용도 높은 테크닉으로 '막발 우지'가 있다. 카인의 평타는 첫 타에 경직이 없기 때문에 히트스캔 평타임에도 상대 기술을 기민하게 끊는 것이 의외로 어렵다. 하지만 상술했듯이 마지막 공격은 상대의 피격 횟수와 관계 없이 즉시 경직과 넉백을 가한다. 이 점에 착안하여 미리 15발을 쏴서 마지막 한 발만을 남겨뒀다면, 막발에서 주어지는 경직을 통해 상대의 움직임을 묶(거나 스킬을 끊)고 안정적으로 우지를 연계할 수 있다. 특히 카인은 선딜 문제로 근접전이 대단히 취약한데 그 선딜을 이 막발의 경직으로 보완할 수 있어 카인의 생존에도 큰 기여를 하는 테크닉이기도 하다. 물론 긴박한 상황에서 빠르고 정확한 에이밍을 필요로 하기에 실전에서 유효하게 사용하는 건 충분한 경험이 필요하다.

여담으로, 원캐의 평타임에도 꽤 많은 변화를 겪은 기술이다. 사이퍼즈 출시 당시 카인의 평타는 지금처럼 클릭만 해도 자동으로 나가는 게 아니라 다른 원캐들의 것처럼 일일이 클릭을 해야 할 필요가 있었는데, 그 때문에 평타임에도 유저의 숙련도에 무척이나 영향받는 건 물론 실질 연사력도 떨어졌다. 그리고 다른 특징으로는 웨슬리의 것과 마찬가지로 막발이 적을 다운시켰으며, 거기에 더해 16발이 한번에 재장전되는 것이 아니라 1발부터 16발까지 빠르게 채워지는 방식이었다. 그래서 첫 발을 재장전하는 타이밍에 맞춰 다른 스킬을 사용하면 장전이 취소되면서 딱 한 발만 탄을 채울 수 있었다. 위와 같은 이유로 높은 이론상 위력에도 불구하고 유저들은 평타를 딜링기로 사용하기 꺼렸고, 그 대신 막발의 뛰어난 견제력에 주목해 막발만을 채우고 다니다가 적을 보자마자 막발 다운→우지→류탄→저격 또는 막발 다운→류탄→저격 같은 흉악한 콤보를 쉽게 넣곤 했다. 그러나 2011년 12월 8일 패치로 다운 판정이 경직 판정으로 바뀌었고, 2013년 4월 25일 웨슬리 개편 패치 때 카인도 웨슬리와 마찬가지로 탄이 한번에 재장전되도록 바뀌었다. 이후 2019년 5월 16일 패치로 자동 발사 기능이 추가되었다.

레어 영구쿨감링인 '피스톨 크로스링'에 스미스 앤 웨슨 장전시간 -11.53%가 붙어있는데, 이게 구현이 되어있는 옵션인지 아닌지에 대해 말이 많았다. 결론부터 얘기하자면 구현은 되어 있다. 장착한 영상과 장착하지 않은 영상을 각각 촬영 후 겹쳐놓고 프레임 단위로 비교해본 결과 적용이 되어있음이 확인된다. 장전 모션 속도가 빨라지고 장전 효과음이 끝나기 전에 평타가 나가며 그만큼 평타의 재사용 시간이 줄어든다. 그렇지만 숫자가 빨리 바뀐다는 것은 장전 모션 도중에 우지나 류탄을 더 빨리 쓸 수 있다는 뜻이긴 하지만 대부분은 안전한 곳에서 장전하고 사용하는지라 사실 노리고 쓰기는 힘든 편이다.
따라서 딜을 늘리고 싶다면 추가공격력 50%를 올려주는 레어 4링인 '스미스 베리드'를 채용하는 것이 낫다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 10").content("""
김태섭\n오른손으로 기관단총을 꺼내 조준한 지점으로 발사한다. 마우스 입력을 유지하면 지속적으로 사격하며 클릭 해제로 사격을 중지할 수 있다. 발사 중에는 움직일 수 없고 시점 전환이 전방 180º로 제한된다. 탄 퍼짐이 있어, 적과의 거리가 멀수록 적의 피격 수가 감소한다.

선 딜레이가 꽤 있는 편이지만 히트스캔으로 탄을 뿌리는 스킬 특성 상 거리를 두고 시전하면 어지간해선 끊기지 않고 적을 맞출 수 있다. 거리를 둔 적에게는 대놓고 써도 되는 수준이다.

연사 속도는 초당 7발 정도이며 여러 아이템을 통해 최대 28발까지 장탄수를 늘릴 수 있다.[8] 장탄수가 늘어나더라도 연사 속도는 변함이 없어 그만큼 우지 지속시간도 늘어난다. 또한 우지 임팩트의 경우 우지를 쏘는 도중에 먹으면 대미지 증가 효과는 적용되지만 발사 수 증가 효과는 적용되지 않는다.

우지는 사이퍼즈에서 손꼽힐 정도로 막강한 위력을 자랑하는 주력기로, 제대로 들어간다면 궁극기인 드라그노프 한 발보다도 훨씬 강력한 대미지를 주는 스킬이다. 이게 얼마나 강력하냐면 22발 풀히트 대인 대미지가 528 + 2.64 공격력, 28발 풀히트 대인 대미지가 무려 672 + 3.36 공격력이다. 샤드 리볼버(408 + 2.04 공격력), 최대 충전 보름달베기(374.4 + 1.872 공격력), 일렉버스트 상태의 전자기 방출(396 + 1.98 공격력) 등 어지간한 근거리 딜러의 주력기를 훨씬 뛰어넘는 수치다. 또한 매 공격마다 적을 띄우는 판정이 있는데, 많은 타격 수를 가진 스킬 특성상 피격되는 적은 점점 공중으로 떠오르게 된다. 그래서 딜링뿐만 아니라 홀딩 및 연계 면에서도 우수한 성능을 가지고 있으며 다운 대미지 감소는 거의 의미가 없다.

그러나 실전에서는 저 화력을 온전히 발휘할 상황이 많지 않다. 일단 가뜩이나 물몸에다 어그로까지 높은 카인이 긴 시간 동안 한 곳에 고정돼야 하는데다가, 적이 멀리 있을수록 타격 수가 줄어 화력이 급감한다는 치명적인 단점이 있다. 상술한 막강한 대미지는 적 코앞에서 적중시켜야만 낼 수 있으며 최대 사거리 부근의 적에게는 툴팁대로의 피해를 줄 수 없다. 그렇기 때문에 이 스킬로 딜링을 하기 위해서는 적당히 접근해서 시전해야 하는데, 카인의 취약한 근접전과 더불어 이 스킬이 다른 행동을 할 수 없는 채널링 스킬이라는 걸 감안하면 이는 너무나 위험한 행위다. 또한 전방 180도까지만 시선을 돌릴 수 있어 뒤에서 들어오는 공격에는 대응할 수 없다.

또한 저격과 센트리로 적의 진입을 애당초 차단하며 초장거리에서 공격하는 카인의 특징 상 우지의 화력을 발휘하는 건 현실적으로 어렵다. 2nd 궁극기를 들면 우지를 적극 활용할 수 있으나, 저격을 갖고 있는 카인은 사실상 우지를 생존기 수준으로 활용하게 된다.

이러한 단점 탓에 우지를 단순한 대미지 딜링기로 운용하는 건 카인의 플레이 방식과 어울리지 않는다. 중거리 히트스캔 기술임을 감안하면 적은 선딜, 모든 공격에 있는 다운 판정, 그리고 워낙 강력한 자체 화력 덕분에 거리가 좀 있더라도 평균적인 대미지는 나온다는 점 등을 고려해보면, 우지는 근접해서 딜링을 하라고 있는 기술이 아니라 접근하는 적을 중거리에서 견제하기 위해 있는 기술임을 알 수 있다. 특히 히트스캔 공격이라 맞히기 쉽고 모든 공격에 다운 판정이 있기 때문에 긴급회피와 더불어 카인의 생존에도 상당히 중요한 역할을 담당한다. 다수가 몰려오는 상황일 때 여기저기 난사하면 적을 넘어뜨려 시간을 벌 수 있고, 적에게 쫓길 때 모퉁이를 돌자마자 우지를 꺼내 적을 다운시키고 도망치거나 여건이 된다면 역관광도 노려볼 수 있다. 물론 평타 문단에서 서술한 '막발 우지'를 활용하는 것도 좋은 방법이다.

물론 그럼에도 워낙 데미지 딜링이 높기 때문에 600~800 정도의 적절한 거리에서 사용하면 적 딜러를 처치할 수도 있기에 데미지 딜링기로 사용할 가치는 충분하다.

참고로 벽에 붙어 있는 적에게는 우지가 더 많이 히트하는 현상이 있는데, 벽에 맞은 총알도 그 자리에서 공격 판정이 생기기 때문이다. 벽이 없었다면 그대로 빗나갔을 총알이 벽에 맞아 공격 범위가 생성되면서 그 안에 있던 적이 맞는 것이다. 물론 카인은 배달형 탱커가 아니므로 노리고 활용하는 건 어렵지만 우연히 상황이 맞아 떨어졌다면 보다 먼 거리에서 안정적으로 딜을 넣을 수 있다.

딜각이 좁고 후반에는 딜이 떨어지늨 저격 대신, 비교적 안정적이면서도 후반까지 높은 위력을 지니는 우지의 딜링에 주목해 우지에 집중적으로 투자하는 극 우지 세팅이 있다. 우지의 대미지를 늘릴 수 있는 장비들을 최대한 구비하면[9] 1발당 100+100+15+5.25+5.25+16+9+9=259.5%의 대미지를 가진 우지가 28발 날아가게 된다. 하지만 이러한 세팅은 저격을 통해 맵을 장악하여 스노우볼링을 굴리고 한타에도 강력한 누킹을 통해 팀에 도움을 주는 딜포터로서의 카인의 특성과는 많이 반하기도 하고, 앞서 언급된 우지의 단점들로 인해 우지를 사용하기 위해 1선에 나온다는 행위 자체가 굉장히 위험하기 때문에 무난하게 추천할 세팅은 아니다.

여담으로, 이름은 UZI이지만 생긴 건 TEC-DC9에 더 가깝다. 굳이 따지자면 마이크로 UZI나 TMP가 비슷하게 생겼다. 그리고 드라그노프의 외형을 변경하는 무기 액세서리인 '고독한 심판'을 착용하면 우지의 외형도 Vz.61 기관단총과 비슷하게 변한다.

2nd 궁극기인 샷건을 들 경우 카인의 장점인 사거리가 매우 짧아지기 때문에, 원하든 원치 않든 우지를 주력기로 활용하게 된다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 11").content("""
이아영\n통칭 센트리 혹은 디티. 현재 자신의 위치에 DT류 레이더와 동일한 외형의 레이더를 설치한다. 이 레이더는 설치된 지역의 시야를 밝혀주고 지뢰의 은신 효과를 감지하며, 일정 시간이 지나거나 공격받아 체력이 0이 되면 사라진다.

카인이 다른 원거리 딜러들과 차별화되는 큰 부분이자 카인이 전략적 가치가 높은 이유다. 직접 캐릭터가 위치하지 않아도 지속적으로 시야를 밝혀주는 레이더는 근캐의 침입과 기습 이니시를 차단해 적의 전략 구상 자체를 방해하는 데 중요한 역할을 한다. 비록 DT처럼 벽이나 안개 너머의 시야까지는 공유해주지 못하지만, 그렇다고 해도 일단은 시야를 공유해주는 점 때문에 카인의 저격과 생존을 원활하게 해주는 1등 도우미로 손꼽힌다. 여러 근딜들의 뒤치기 방지, 골목길 테러 방지 등 여러모로 유용하므로 쿨타임이 될 때마다 주요 길목 여기저기에 설치해주자. 효율적인 장소들이 따로 있긴 하지만 철거반이 지나가지 않는 동선, 혹은 탱커가 계속 보기에는 중요도가 떨어지는 곳에 까는 것만으로도 충분히 기여가 된다.

또한 스킬 설명문에는 나와 있지 않지만, 센트리 레이더에는 저격의 사거리를 늘려주는 숨겨진 효과도 있다. 연습장 기준 큰 박스 한 칸 반 정도의 사정거리를 늘려주므로 징검다리 식으로 시야가 이어지게 깔아주면 맵 끝에서 맵 끝까지 저격이 닿는 것도 가능하다. 물론 센트리의 전략적 가치를 활용하지 않는 것이기도 하고 보이면 우선적으로 파괴되는 것이 센트리이기 때문에 실전에서 활용할 수 있는 가능성은 많지 않다.

깨알같은 팁으로 이 센트리 레이더 또한 엄연한 오브젝트 판정이라, 저격하기 전 자기 앞에 깔아두면 중하단 한정으로 비관통, 스플래시 없는 적의 원거리 공격을 한 번쯤 막아주기도 한다. 초중을 노티~1티로 극복해야 하는 카인 특성상 알아두면 나쁘지 않은 팁이다.

관련 장신구를 통해 센트리의 체력을 늘리고 쿨타임을 줄일 수 있다. 다만 최대로 효과를 볼 수 있는 4레어를 착용하더라도 체력은 1040까지라 한계라 사실상 쿨타임 감소 효과를 보고 써야 하는데, 이 게임은 그렇게까지 센트리가 많이 필요할 만큼 진입 경로가 복잡하지 않으므로 센트리 쿨타임 감소의 필요성이 떨어진다. 딜링이 떨어진다는 유틸 위주 장신구의 문제도 있으므로 센트리 장신구의 채용은 추천되지 않는다.

여담으로 사이퍼즈 초창기에는 센트리의 성능이 지금보다 훨씬 우수했다. 우선 체력이 1500으로 훨씬 높았고 지속시간도 매우 긴 120초였으며 지금의 DT에 필적할 정도로 시야가 넓었던 것은 물론 지뢰처럼 자체 은신 기능도 갖추고 있었다. 또한 DT류 아이템처럼 벽이나 안개까지 뚫고 시야를 밝혔다. 그러나 2011년 9월 8일 패치로 체력, 지속시간, 시야가 감소했고 은신 기능이 삭제됐으며, 2014년 2월 13일 패치로 센트리 레이더가 벽이나 안개를 뚫고 시야를 공유해주지 못하게 되었다. 또한 시바의 플랜 디코이 전에는 시바의 은신도 감지할 수 있었지만 시바의 은신 방식이 변경된 이후 시바의 은신은 감지할 수 없게 됐다.

연금술사 에밀리의 출시 이후 이스터에그[10]가 생겼다. 센트리의 외형이 에밀리의 잡기스킬에서 나오는 머리에 한 방 뚝배기 날리는 토끼모양 센트리로 변경됐다.[11] 하지만 센트리와 DT인사이트류 아이템의 적군/아군 소유 여부가 구별하기 힘들어져 원래대로 돌려놓으라는 요구가 많았으며 그래서인지 2020년 10월 29일 패치로 센트리가 원래대로 되돌아갔다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 12").content("""
이아영\n조준한 지점에 수류탄을 던진다. 수류탄은 지형에 의해 튕겨질 수 있으며, 직격되면 바로 폭발하고 그렇지 않다면 바닥에 착탄한 후 약 1.5초 뒤에 폭발한다.

수류탄은 350 거리 미만으로 던지면 착탄 후 50 거리를 이동하고 폭발한다. 350 이상의 사거리에 던지면 착탄 후 100 거리를 이동하면서 폭발한다. 따라서 평지를 기준으로 최대 사거리는 기존 사거리 보다 100 증가한다고 보면 된다. 수류탄은 반지름 165 범위로 공격한다.

폭발에 맞은 적을 높이 띄울 수 있어 연계에 유용하다. 자주 사용되는 류탄 - 저격은 류탄 시전 후 곧바로 저격을 들어 떨어지는 적을 사격하는 콤보로, 적에게 최소한 한 번은 다운 대미지 감소 없이 공중에서 저격을 넣을 수 있다. 류탄이 사거리 안이라면 일반적으로 그냥 저격을 들기에는 다소 가까운 상황이기 때문에 류탄이라는 무력화 작업을 거치는 것. 또한 비교적 선딜이 짧고 깔아두기가 가능한 매커니즘으로 인해, 근접전 상황일 경우 생존기로 사용할 수 있는 기술이기도 하다. 적을 크게 띄운다는 특성상 적중에 성공한다면 도주할 시간을 벌 수 있다.

투사체가 지형의 영향을 받아 움직이기 때문에 벽에 튕겨 던지거나, 경사로에 떨어지게 하여 굴러 내려가게 하는 등 다양한 응용법이 있다. 던지는 거리, 땅에 닿아서 굴러가는 거리, 폭발 범위를 감안하면 연습장 기준 7칸보다 약간 긴 정도로 긴 사거리를 가졌지만, 투사체가 날아가는 시간이 있기에 사거리를 살려 견제를 넣는 건 어렵고 지형을 넘겨 던지는 등의 테크닉이 필요하다.

평타, 우지, 저격만으로도 카인의 딜은 충분히 완성할 수 있기 때문에 류탄은 상대적으로 딜 중요도가 떨어진다. 그래서 긴급회피 장신구와 자주 교체되기도 하지만 조금씩 상향이 되면서 다운기 중에서 최상위권의 피해량이 되었기 때문에, 제대로 투자를 해주면 괜찮은 대미지가 뽑히니 링을 사용하는 것도 좋은 선택지가 되었다.

만약 작정하고 류탄 링에 임팩트를 더하면 적 딜러에게 2000 이상의 데미지를 띄울 수도 있다. 유틸을 떠나 데미지만 보면 대인 별점 3개가 아깝지 않은 다운기인 셈이다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 13").content("""
이아영\n통칭 긴회. 무적 상태가 되면서 지정한 방향으로 구른다. 전후좌우 모든 방향으로 구를 수 있으며, 이동키 입력이 없다면 전방으로 구른다. 라이트닝 스텝처럼 대각선 방향으로는 구를 수 없다. 옆이나 뒤로 굴렀을 때는 앞으로 굴렀을 때보다 딜레이가 약간 길어진다. 뒤가 제일 멀리 구르고 딜레이도 제일 길다.

즉시 무적 회피기라 카인의 생존에 큰 공헌을 하는 기술이며, 동시에 근접해서 카인을 노리는 적에게 대항할 기회를 제공해주기도 하는 기술이다. 막발을 남겨 놓은 상태라면 회피 이후 선딜레이가 없는 막발로 경직을 준 다음에 바로 우지를 사용해서 역전의 기회를 잡을 수 있다. 뒤도 돌아보지 않고 도주해야 하는 상황이 아니라면 적과의 대치 상태에서는 틈을 내주는 것보다는 반격의 기회를 노리는 것이 생존에 더 도움이 된다.

보기에는 그렇게 안 보이지만 스킬 시작 시 짧은 시간 동안에는 무적 상태가 아닌 슈퍼아머 상태이다. 평범한 경직이라면 별 상관 없지만, 상태이상을 동반한 공격을 피하려고 할 때 무턱대고 스페이스를 연타했다간 가끔씩 긴급회피가 캔슬되는 불상사가 생길 수 있으니 주의하도록 하자. 여담으로 예전 시절에는 이 시작 부분의 슈퍼아머가 없었기에 적의 공격에 너무 딱 맞춰서 긴급회피를 쓰면 긴급회피가 캔슬되는 사태가 종종 발생했으며, 이는 버그로 판명되어 지금처럼 변경되었다.

대부분의 회피기들이 그렇지만 관련 장신구를 착용하면 성능이 크게 향상된다. 언커먼 링은 3.3초 정도, 레어 링은 4.1초 정도 쿨타임이 감소하며 레어에는 긴급회피 이동 거리 증가 옵션도 있어 어지간한 방어 아이템 하나 이상의 생존력 향상을 기대할 수 있다. 특히 50코인 비싼 대신 우지 추가 공격력 15%가 붙은 커맨더-긴급회피는 사실상 유니크나 다름없는 취급을 받으며 채용률이 매우 높다. 긴급회피-커맨더 링 적용 시 앞 560(+50/45/45) 옆 600(+50/55/50) 뒤 630(+55/60/55)거리를 이동할 수 있게 된다.

여담으로 보이스 박스에는 적혀 있지 않지만 앞으로 긴회를 쓸 때와 뒤로 긴회를 쓸 때 보이스가 다르다. 같은 총캐인 웨슬리의 긴회 보이스는 앞으로 구르거나 뒤로 굴러도 같은 것과는 조금 다른 차이점.

카인의 두 번째 궁극기는 발포 시 장전 시간이 있어 스킬이 봉인되는데 유일하게 긴급회피는 사용할 수 있다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 14").content("""
이아영\n스미스 앤 웨슨을 재장전한다. 버프인 치명타 증가 효과가 걸림과 동시에 스미스 앤 웨슨의 탄이 최대치인 16발로 충전된다. 웨슬리와 더불어 휠업 스킬에 버프 외의 다른 기능이 있는 둘뿐인 경우이다. 총알이 다 떨어져 자동으로 장전할 때도 퍼스널 액션을 사용한 것으로 간주되어 버프가 적용된다.

기본공격을 사용하려면 필수적으로 사용해야하는 휠업이지만, 휠업의 탄피 떨어지는 소리가 저격 최대 사거리와 맞먹을만큼 멀리까지 시끄럽게 잘 들리기 때문에 적에게 위치를 알려주고 싶은게 아니면 필요할 때만 사용하는 습관을 들여야한다.

여담으로 장전할 때 잘 보면 탄피가 6개밖에 나오지 않는다. 거너 J가 권총을 4발 쏘고 장전시에 4발 빼내는 세심함에 비해 대조되는 부분. 이는 8발을 장전하는 웨슬리도 마찬가지다. 장전 모션 자체는 현실에서도 가능하긴 하지만 이 양반은 권총 두 자루를 한 자루만 장전하는 모션으로 16발을 채워버린다. 웨슬리와 장전 모션을 공유하기 때문으로 보인다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 15").content("""
이아영\n두 궁극기 공통적으로 디시카에서 전사한 카인의 전우와 관련이 있다.

1st : 드라그노프 - 바실리의 유품
2nd : E.D 트렌치 건 - 카인의 전우인 에드워드 데이의 딸 연금술사 에밀리가 제작한 산탄총.

여담이지만 궁극기로 사용하는 무기들이 꽤나 강렬하다보니 유저들 사이에서 1차 궁극기는 저격카인, 2차 궁극기는 샷건카인으로 불린다. 적이든 아군이든 카인이 있다면 궁극기 구별이 빠르기에 꽤나 좋은 장점.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 16").content("""
이아영\n등 뒤에 접혀 있던 저격총을 꺼내들어 저격 태세로 돌입한다. 이 상태에서는 시야가 대폭 증가하므로 일반시야로는 볼 수 없는 거리까지 훤히 볼 수 있으며 안개 너머도 볼 수 있다. 그러나 이동 불가, 미니맵 확인 불가, 시점이 좁은 1인칭 시점으로 전환되며, 소리까지 차단되는 등 극도로 무방비한 상태가 된다. 마우스 우클릭을 하면 조준경 배율 확대/축소를 하고 좌클릭으로 탄환 하나를 소모해 발사한다. 탄환은 최대 5발(S 목 유니크 효과 적용 시 6발)까지 저장할 수 있으며 저격 시전 중에는 쿨타임이 돌아가지 않는다. 스킬을 재시전하면 저격 태세를 해제할 수 있다. 맞출 수 있는 대상이 있으면 크로스헤어가 좁아지며 하얗게 변한다. 저격 명중률을 높이고 싶다면 크로스헤어에 집중해보는 것이 좋다.

치명적인 단점으로는 저격 모드 개시 시 충전되고 있던 탄환이 사격 여부를 떠나 다시 처음부터 돌아간다는 것이다. 즉 탄환이 쏘지도 않았는데 저격총을 드는 순간 없어지는 것이다. 때문에 마음껏 들었다 놨다 하기보단 꼭 필요한 순간에 들어야 한다. 숙련된 카인 유저는 탄환 쿨타임 낭비를 방지하기 위해 아군에게 일단 적극적으로 싸우지 말라고 권하곤 한다. 게다가 유독 시전음이 우렁차기 때문에 발동만 하면 게임 플레이어 10명이 다 알아채고, 본인은 벗어날 수단을 당분간 잃는데다 미니맵도 못 보는 패널티까지 가져 최중요 타겟이 된다. 저격수의 재능이 없을지도 모른다 게임 밸런스를 위한 어쩔 수 없는 조치인 것이 만약 정말 저격수처럼 은밀하게 발동해 원거리에서 적을 마음대로 사살할 수 있으면 사운드플레이가 핵심인 게임 밸런스 자체가 무너지기 때문이다. 기존에는 사격 후 궤적 표시가 없었는데 이것도 게임 초기 카인이 워낙에 밸런스를 붕괴시켜 의도적으로 넣어 약점을 부여한 패널티다.

여담으로 카인 설정화엔 이런 접이식 저격총을 두고(말도 안 됨)이라는 각주가 붙어 있다. 다른 총도 아니고 정밀함이 중요한 저격총의 총열을 접고 편다는 건 물론 말도 안 되는 설계이긴 하다. 게임적 허용으로 넘어간 듯.

카인의 성능적 정체성이라고 말할 수 있는 매우 중요한 기술로, 궁극기를 제외한 모든 기술은 카인의 보조기에 지나지 않는다. 산술적 데미지가 높은 우지가 주력기인가 싶겠지만 근접전 최약체인 카인이 적에게 근접해서 오랜 시간 적 하나를 붙들고 우지를 쏘는 것은 현실적으로 매우 어렵다.

위치가 고정되고 시야가 극도로 좁아지기에 신중한 위치 선정을 필요로 하며 적을 정확히 조준해야만 적중시킬 수 있는 고난도 기술이지만, 익숙해지면 시야를 훨씬 넘어서는 먼 거리에서 클릭 몇 번으로 적 딜러를 순식간에 없앨 수 있는 저격은 분명한 카인의 핵심 스킬이다. 조작 방법은 FPS 게임에서 등장하는 저격총류 무기와 유사하기에 FPS 경험이 있다면 어느 정도 도움이 된다.

사실 지원폭격 / 별똥별 등 저격보다 더 긴 사거리를 가진 스킬이 없는 것도 아니고 아예 글로벌 궁극기인 용성락 / 비행 같은 것도 있으니 사거리가 길다고 하기엔 무리 아닌가 할 수도 있다. 그럼에도 불구하고 저격이 초장거리 공격의 대명사가 된 이유는 이 스킬이 히트스캔 판정이기 때문이다. 적이 사선에 들어왔을 때 공격키 입력과 동시에 공격 판정이 발생하기 때문에 장거리 킬 결정력과 전선 장악에 대해선 다른 원거리 스킬이 따라오기 힘들 만큼 강력함을 보여준다. 원거리 딜러들은 대체로 자신의 공격은 닿고 적의 공격은 닿지 않는 거리를 유지함으로써 안전을 확보하는데, 저격은 그런 싸움이 통하지 않을 만큼 매우 긴 사거리를 갖고 있다. 원딜들은 정면 돌파를 할 수단도 부족하고 카인을 측면에서 기습하는 것도 어려우니 자연히 지형 너머로 몸을 피할 수밖에 없고 이는 적에게 큰 압박으로 작용한다. 때문에 카인은 대부분의 원거리 딜러를 상대로 상성상 우위를 점한다.

저격을 사용할 때의 유용한 팁이 있다. 일단 저격을 준비하는 중 에임 전환이 자유롭다. 또한 저격 준비 완료 시 에임이 위치한 곳을 기준으로 저격 조준이 시작된다. 즉, 저격을 준비하는 선딜레이를 그냥 선딜레이로 칠 것이 아니라 적을 조준하기 위한 준비 시간으로 치면 더욱 신속한 저격이 가능하다. 그러니 저격을 시전할 때 그냥 선딜레이라며 에임을 가만히 두지 말고, 최대한 에임을 적에게 따라가며 시전하도록 하자. 신이여를 외치자마자 적에게 저격을 먹여줄 수 있다. 이 팁을 숙지하는 것만으로도 게임 기여도가 확연히 달라지며 카인의 진입장벽이 대폭 낮아진다.

그리고 헐 다운, 소위 '빼꼼샷' 이 가능하다. 저격의 발사 지점이 카인의 머리 쪽에 있기 때문에, 언덕 지형에 걸터서서 머리만 살짝 내놓은 채로 적들을 사격할 수 있다. 미러픽에서 안정성을 상승시켜주고 적들의 견제 사격을 보다 덜 받을 수 있다. 묘하게 고증에 충실하다

창발적 테크닉이 있는데 아군의 박스를 뚫고 적을 사격할 수 있다. 타워 박스 근처에서 농성을 벌이는 일이 잦은 카인에게 유용한 팁. 적이 박스 언저리에서 대항할 때 저격으로 적의 머리를 날려줄 수 있다.

하지만 저격 중에는 미니맵 확인이 안 되고 소음, 특히 적 궁극기 시전 소리도 잘 들리지 않게 되어 주위 공격에 극도로 무방비해진다. 팀에 카인이 있는데 상대편이 비행이나 용성락 등의 궁극기를 사용했다면 카인의 위치에 위험핑을 여러번 찍어서 위기상황임을 알려주는 것이 좋다. 또한 여타 궁극기가 그렇듯 시전 음성이 크고 탄환의 궤적이 적에게도 보이기 때문에 정말로 현실의 저격수처럼 적을 은밀하게 암살하는 것은 어렵다. 그러므로 주위 상황을 파악하고 신중하게 자리를 잡는 것이 중요하며 저격 상태를 너무 오래 유지하는 것은 피하는 게 좋다. 당연하다면 당연하지만 관통 기능도 없기 때문에 나이오비 / 린 / 토마스 등의 장벽형 스킬이나 레오노르 / 휴톤 등 방어스킬로 막는 탱커, 타워를 관통할 수 없다.

원거리 공격이라는 특성상 다운된 적에게도 적중시킬 수 있으므로, 한 번이라도 맞혔다면 사거리에서 벗어날 때까지는 계속해서 추가로 맞힐 수 있다. 다운된 적은 그 자리에 정지해 있는 상태이니 적중 난이도도 크게 낮아진다. 다만 이러한 점을 감안했는지 드라그노프는 다운 대미지 감소율이 30%로 유독 크며, 같은 적에게 연이어 맞힐 때마다 대미지가 5%씩, 최대 15%까지 감소하는 페널티도 있다. 이글의 뇌안도나 제레온의 로열 가드로 막는 것 역시 맞은 것으로 간주되어 다음 타격의 대미지는 감소된 대미지가 들어간다. 두 페널티는 복리로 적용되므로, 다운된 상태에서 4발 이상을 맞을 경우 마지막 공격은 0.7x0.85=0.595로 40.5%의 대미지가 감소한다. 이를 고려했을 때 단일 대상에게 5발을 전탄 명중시켰을 경우의 대미지는 대인 기준으로 약 836 + 5.85 공격력이다.

한편 설명문에 명시되지 않은 세 가지 효과가 존재한다. 첫 번째로 저격 상태에서는 안개 속을 꿰뚫어 볼 수 있다. 그래서 시야를 확보해야 하는데 진입하기는 불안하다면 저격을 잠깐 켜서 안을 확인할 수 있다.
두 번째로는 저격 상태에서의 시야는 벽을 뚫고 적을 쳐다보는 것이 가능하다. 원래 시야가 확보되지 않은 위치에 적이 있으면 벽에 있는 틈새로도 적이 보이지 않고 아군이나 아군 오브젝트로 시야가 확보된 적이여야만 벽의 틈새를 통해서 벽 너머에 있는 적의 모습을 볼 수 있는데 저격 상태에서는 이 조건을 무시하고 벽의 틈새로 적의 모습을 보는 것이 가능하다. 또한 맵 양끝에 있는 통로의 경우 통로에 최대한 붙은 상태로 저격을 쓰면 마찬가지로 해당 통로 벽 너머에 있는 적의 모습을 볼 수 있다. 단, 이렇게 보이는 적의 모습은 카인만 확인 가능하며 다른 아군에게는 보이지 않는 판정으로 당연히 미니맵 상으로도 드러나지 않고 저격으로 맞추는 것도 불가능하다. 이는 특히 매트로폴리스 같은 안개맵에서는 전방 사이드 타워쪽에서 중앙으로 빠져나오는 안개 골목을 저격으로 확인이 가능해지는 등 유용하게 사용할 수 있다.
세 번째로 저격의 최대 사거리 근처에 있는 센트리 레이더는 저격의 사거리를 증가시킨다. 센트리의 시야 안에 있는 적이라면 다 맞힐 수 있을 정도로 증가하며, 실용성은 없지만 센트리 여러 개를 연달아 설치하면 그만큼 사거리를 더 늘리는 것도 일단은 가능하다. 해당 지점에 센트리를 미리 깔아둬야 하는데다가 센트리는 보이자마자 우선적으로 파괴되는 경우가 잦으므로 자주 쓸 수는 없는 방법이지만 센트리 근처에서 운 좋게 한타가 일어났을 때 활용할 수 있다.

또한 드라그노프 시전 중에는 상하 에임 제한이 사라진다. 그래서 사거리와 조준 실력만 된다면 하늘로 날아오른 트리비아, 카를로스, 빅터, 마를렌, 탄야 등을 격추시키는 것도 가능하다. 물론 저격 중인 카인 역시 공격에 취약한 상태이므로 무턱대고 노릴 수는 없지만 성공했다면 팀에게는 명사수라는 찬사를 받고 적에게는 굉장한 굴욕을 선사할 수 있다.[19]

레벨대에 맞게 착실히 공격 아이템과 저격 링에 투자한다면 초반 적 딜러를 1~2발에 즉사시킬 수 있기에, 타워 싸움에서 승리하여 중앙을 확보하고 나면 이러한 대미지와 긴 사거리를 통해서 적들의 성장에 엄청난 압박을 줄 수 있다. 이때 최대한 적들의 동선을 막고 아군의 성장을 도모해서 격차를 벌리는 것이 초반 카인 운영의 핵심으로 이 때 이득을 취하지 못하여 미처 성장하기도 전에 적들이 방템을 구비하기 시작하면 게임이 급격하게 어려워진다. 이렇게 어느 정도 이득을 취하고 딜러들까지 방템을 구비하여 적들이 저격을 맞고도 살아남을 가능성이 높아지기 시작하면 저격 사용에 신중한 판단이 요구된다.

이때부터는 본격적으로 딜포터의 역할이 중점이 되는 시기인데, 드라그노프의 단일 대상에게 명중했을 시 대미지 감소라는 패널티를 최대한 덜어내고 적들에게 높은 딜을 누적시키기 위해서 확정 킬을 내기보다는 누킹을 중점으로 하는 것이 중요해진다. 또한 저격은 넉백 거리와 다운되는 시간이 길어서 적에게 딜로스를 유발하기도 적합한데 이점을 감안하여 아군을 노리는 근거리 딜러나 탱커들을 저격하여 눕히거나 후방에서 백업을 오는 딜러들에게 큰 대미지를 줌으로써 한타에 참여하기 어렵게 만드는 것이 주요 관건이 된다. 그 외에도 사거리가 긴 만큼 도망치는 적들을 노리기에도 적합한데 도망치는 중이거나 생존해나갈 가능성이 있는 적들을 저격하여 킬캐치를 하는 것 역시 가능하다.

물론 게임에 큰 영향을 끼치는 1순위로 제거해야할 적이 있다면 5발을 다 사용하는 것이 좋을 수 있지만 이렇게 되면 저격을 통한 맵 장악과 여러 대상에 대한 누킹은 포기해야 됨은 물론이고 대미지 감소로 인해서 탄약 소비에 비해 효율도 굉장히 떨어지기 때문에 킬 욕심을 내는 것은 지양해야 된다. 카인의 현재 역할은 단순한 딜러가 아닌 딜포터로서의 정체성이 강하다는 점을 기억하자.

다만 이러한 이점을 활용하려면 일단 대상을 맞춰야하기 때문에 FPS에 익숙하여 저격을 활용하는 방법을 충분히 숙지한 사람이라면 그만큼 효과를 보기도 쉽지만, 그렇지 않은 유저라면 다른 캐릭터와 다른 조작감으로 인해서 적응하기 어려운 스킬이라는 점을 유념해야 한다. 또한 헤드샷 판정이 없고 FPS와는 다르게 엄폐와 이동이 수월하지 않으며 탄도나 탄속이 적용되지 않고 발사하는 즉시 명중하는 히트스캔 방식이기 때문에 상대적으로 저격의 난이도는 낮은 편에 속하지만 사이퍼즈 내에서도 에임의 영향이 독보적으로 크기 때문에 다루기 쉽지 않다. 게다가 탄수는 한타에서 많이 쏴봐야 6 ~ 7발 정도밖에 사용하지 못하기 때문에 한 발이 빗나갔을 때의 영향은 굉장히 크다. 그렇기 때문에 카인을 운영하기에 앞서 에임을 연습하는 것 외에도 저격을 성공시키기 위한 테크닉이나 콤보 등의 요령을 알아둘 필요가 있다.

우선 저격을 하기 전에 위치를 선정하는 것이 가장 중요하다. 카인이 활약하기에 가장 좋은 위치는 장애물 없이 일자로 뻗어있는 라인에서 아군 후방 지점이다. 이러한 장소에서 한타를 시작해야 긴 사거리의 이점을 활용할 수 있음은 물론이고 최후방에 서서 저격을 하기 때문에 적들을 한 눈에 파악하기도 쉬우면서 동시에 안전을 확보할 수 있다. 그 밖에도 고저차가 있는 언덕에서 저격을 하는 것도 좋은 선택이 될 수 있는데 일직선으로 맞히고자 하는 목표를 가로막는 대상이 있다면 그대로 목표를 저격하는 것을 포기해야되는 평상시와는 달리 고저차가 생기면서 포괄적으로 조준을 해낼 수 있기 때문에 원하는 대상을 맞히기에도 적합하다.

이러한 위치선정 외에도 우선적으로 저격을 하고자 하는 타겟을 정해두는 것도 중요한데, 우선 카인을 의식하는 캐릭터들의 경우 무빙을 통해 저격을 회피할 가능성이 높기 때문에 방심하고 카인을 의식하지 않으며 다른 아군에게 초점이 맞춰져있을 때를 노려서 저격해야 명중률을 높일 수 있다. 또한 빠르게 이동할 수 있는 기술이 존재하는 적들 보다는 기동성이 약한 뚜벅이 캐릭터를 먼저 노리는 것이 좋다. 물론 경우에 따라 최우선으로 저격해야할 대상이 바뀌는 경우가 상황에 따라 항상 존재하지만 이러한 우선순위를 두는 것 역시 저격의 성공에 큰 기여를 함으로 잘 숙지해둘 필요가 있다.

그리고 이러한 위치확보와 목표를 선정하는 것 외에도 콤보나 아군과의 연계를 통해 저격을 명중시키는 방법이 존재한다. 카인의 저격은 광역으로 홀딩 및 메즈를 겸하는 아군의 기술들과의 궁합이 좋은 편에 속하기 때문에 이러한 기술을 지닌 아군과의 팀업을 통해 저격을 명중시키는 것도 가능하며 아군이 마킹하며 다운시키는 적을 연계를 통해 저격하는 것도 가능하다. 다만 어떠한 경우에서든 다운 상태에 돌입한 적을 공격하는 것은 35%라는 무시못할 대미지 감소가 있기 때문에 마냥 저격의 대미지를 100% 발휘하려면 공중에 떴을 때를 노리는 것이 좋다.

또한 카인의 류탄은 스탠딩과 다운 여부에 상관없이 높이 띄우기 때문에 아군과의 연계나 우지 및 잡기를 통해 카인이 직접 다운시킨 경우에도 류탄을 사용하여 공중에 띄우고 저격으로 온전한 대미지를 입힐 수 있다. 다만 이러한 아군과의 연계에서 주의할 점은 저격은 명중하면 적을 뒤로 멀리 밀어내기 때문에 제대로 킬을 내지 못하고 방생하는 경우가 발생할 수 있다는 것이다. 이렇게 방생하였을 경우 한타에 악영향을 미칠 가능성 역시 존재하니 경우에 따라 저격을 삼가야하는 때도 있음을 알아두어야 한다.

그 외에도 FPS에서 저격총을 사용할 때 사용하는 테크닉인 소위 말하는 '패줌'을 통해 저격을 사용하는 방법도 있는데, 카인의 저격은 저격을 사용할 때 카인이 조준점을 두었던 방향으로 조준을 시작하는 점을 이용한 테크닉으로 저격을 켜고 조준경을 통해 적에게 에임을 맞추고 저격을 하는 것이 아니라 저격을 켜기 이전에 맞히고자 하는 대상에게 에임을 맞춰둔 뒤에 저격을 사용하고 즉시 저격총을 발사하는 것이다. 히트박스가 큰 편에 속하고 스킬로 인한 선후딜의 존재로 인해 여느 FPS 처럼 무빙에 그다지 특화되어있지 않은 사이퍼즈의 특성상 다른 곳을 마킹하고 있는 적이라면 정교하고도 신속하게 저격에 성공할 수 있으며 이동기나 회피기가 있는 일부 캐릭터가 아닌 이상 정면에서 조차 피해내기 어렵다. 오히려 저격을 켜둔 채로 계속해서 조준을 하는 것 보다 명중률이 높다.

큰 영향을 끼치는 기능은 아니지만 드라그노프에는 적을 맞출 수 있는 상황이면 가운데의 조준점이 좁혀지는 기능이 있는데, 시야를 벗어나서 적 캐릭터가 보이지 않더라도 조준경의 조준점이 좁혀지면 거기에 타격 가능한 무언가가 있다는 뜻이므로 적이 시야에 보이지 않더라도 이 경우 저격이 가능하다.

사실상 카인 운영의 주축이기도 하고 그로 인해 템세팅 역시 저격을 우선적으로 투자하여 대미지를 극대화하는 것에 초점이 맞춰져 있는데, 그로 인해 저격의 대미지와 사거리를 늘려주는 저격 맥시머의 효용성은 매우 크다. 맥시머의 유무에 따라 유통기한도 길어지고 킬 결정력 또한 상승하기 때문에 저격의 사거리를 늘려주는 발터펠트 아우프와 더불어 카인의 필수템으로 인정받고 있다. 참고로 대미지 증가 옵션은 실시간 적용이기 때문에 저격을 켠 상태에서도 사용하면 대미지가 증가되지만 사정거리 증가 옵션은 맥시머를 사용한 후 저격을 다시 들어야 적용된다. 참고로 이 사정거리 증가는 확보되는 시야거리또한 증가가 된다.

또한 카인 미러전이라면 저격을 쓰고 있는 카인의 히트박스가 애매해진다는 점이 중요하다. 카인이 저격 모드로 들어가면 자신이 서 있는 위치에서 바라보고 있는 방향으로 발을 앞으로 내딛는 자세를 취하는데,(_/ 요런 자세다)[20] 저격을 쓰고 있는 카인을 정면으로 바라보고 있다면 상관 없는 부분이지만 자신이 카인이고 저격을 쓰는 카인을 측면에서 바라보고 있다면 정직하게 저격을 카인 몸체에 박아버리면 빗나가는 경우가 발생한다. 따라서 저격을 쓰고 있는 카인을 측면에서 제대로 저격으로 맞추기 위해서는 카인 몸체가 아닌 카인 몸체 뒤쪽을 쏴야 제대로 적중한다.[21] 이 점을 모르는 초심자들이 몰래 옆에서 쐈는데 빗나가서 당황하는 경우가 있다.

여담으로 저격할 때 꺼내드는 총은 드라그노프인데 실상 생김새는 진짜 SVD와는 전혀 닮은 구석이 없다. 총구 및 소염기 부분은 바렛, 총신은 MSG 90, 개머리판 부분은 짐 스나이퍼 II 화이트 딩고 사양의 저격 빔 라이플을 닮았다. 또한 반으로 접혀있는 상태로 휴대하고 있다가 결합하여 사용하는 방식인데, 당연히 현실에서 이런 구조의 저격소총은 없다.[22]

격발 사운드를 들어보면 시원하게 폭발음이 들리고 땡그렁하는 제법 큰 탄피가 떨어지는 소리가 들리는데 ,다음 탄환을 장전하는 노리쇠가 움직이는 소리가 들릴 때도 있고 안 들릴 때도 있으며 이 효과음은 격발 후 정확히 50% 확률로 랜덤으로 들린다. 카인이 저격하는 모션을 보면 반자동 소총인게 확실해 보이는데 노리쇠 소리는 왜 설정했는지 의문.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 17").content("""
이아영\n높은 화력
카인은 대미지 공식이 어지간한 근딜과 비교해도 밀리지 않을 수준인데다 모든 스킬의 대인 계수가 1.2로 설정되어 있어서, 공격 기술이 적음에도 불구하고 화력이 강하다. 평타, 우지, 트렌치건 모두 제대로 들어가면 동급 스킬 중에서는 견줄 대상이 없을 정도로 막강한 대미지를 보여주며, 저격 역시 딜러를 상대로는 치명적인 피해를 가할 수 있다.
센트리 레이더와 저격이 결합된 탈수기 운영
승기를 잡은 카인은 적을 서서히 말려죽일 수 있다. 센트리 레이더는 설치된 곳의 시야를 지속적으로 밝히는 스킬로, 사이퍼즈에서 시야의 중요성을 감안하면 딜링기 하나 이상의 가치를 갖는 훌륭한 스킬이다. 카인은 후방에서 이 센트리를 부지런히 까는 것만으로도 근거리 캐릭터들의 기습 및 암살 시도를 효과적으로 억제할 수 있다. 적의 시야를 피해 역전의 기회를 노려야 하는 입장에서 카인의 이러한 능력은 큰 장애물로 작용하기에, 카인은 초반에 얻은 이득을 바탕으로 게임의 승기를 굳히기에 적합하다. 이 장점은 엄청난 사거리로 뛰어난 맵 장악력을 보여주는 드라구노프 카인일 때 극대화된다.
초장거리 원거리 전투력 (드라그노프 한정)
드라그노프를 들면 가용 전투범위가 무려 1800까지 늘어난다. 이는 대다수 원거리 캐릭터들의 사거리는 물론 시야까지 아득하게 뛰어넘는다. 이 정도의 사거리를 지닌 스킬이 히트스캔으로 5발이나 날아들어오며, 피해량도 낮지 않아 초중반에는 몸 약한 딜러들을 한두 발에 빈사 혹은 사망에 이르게 한다. 이런 특징 때문에 카인은 저격을 드는 것만으로도 적 원딜들에게 큰 심리적 압박을 가할 수 있어, 이들이 필연적으로 몸을 사리게 만든다. 또한 사거리가 길고 조준 중에는 앙각 제한이 사라진다는 점 덕분에, 저격 카인은 피격 판정이 공중에 떠 대부분의 공격을 받지 않는 일부 캐릭터들의 효과적인 카운터가 되기도 한다.
극단적으로 강력한 순간 화력 (E.D 트렌치건 한정)
트렌치건은 너무나도 협소한 딜각과 없다시피한 근접 선공권을 가졌지만, 그 단점에 대한 보상으로 어마어마한 순간 화력을 뿜어낸다. 적정 사거리에서 3발을 꽂아넣기만 해도 웬만한 근거리 딜러 궁극기 수준의 폭딜이 나오는데, 상황에 따라서는 평타와 우지를 섞으며 이걸 한 번 더 넣을 수도 있다. 이런 엄청난 순간 화력 덕분에 트렌치건 카인은 딜각만 주어진다면 마치 딜러 암살하듯 탱커를 지워버리며, 한정된 시간 안에 트루퍼나 수호자를 제거하는 데에도 탁월한 모습을 보인다. 제 아무리 화력으로 정평이 난 캐릭터라도 트렌치건 6발만큼의 딜을 이런 짧은 시간 안에 쏟아낼 수 없다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 18").content("""
이아영\n다수 공격 능력 부족
카인의 스킬들은 1:1에 철저히 특화되어 있어 다수 공격 능력이 없다시피 하다. 평타는 범위가 매우 좁아 사실상 한 명에게만 딜을 넣을 수 있고, 우지는 다수를 공격하려면 탄환을 흩뿌려야 하므로 딜링기로서의 역할을 포기해야 하며, 트렌치건도 범위 공격 판정이 아니라 탄환 하나 하나가 비관통 투사체로 나가기에 다수의 적에게는 그 위력을 발휘할 수 없다. 심지어 저격은 여럿을 동시에 공격하는 것이 원천적으로 불가능하다. 그나마 이론상 정상적인 다수 공격이 가능한 류탄 역시 범위가 평범해 광역기로 보기는 어렵다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 19").content("""
이아영\n센트리 레이더와 저격이 결합된 탈수기 운영
승기를 잡은 카인은 적을 서서히 말려죽일 수 있다. 센트리 레이더는 설치된 곳의 시야를 지속적으로 밝히는 스킬로, 사이퍼즈에서 시야의 중요성을 감안하면 딜링기 하나 이상의 가치를 갖는 훌륭한 스킬이다. 카인은 후방에서 이 센트리를 부지런히 까는 것만으로도 근거리 캐릭터들의 기습 및 암살 시도를 효과적으로 억제할 수 있다. 적의 시야를 피해 역전의 기회를 노려야 하는 입장에서 카인의 이러한 능력은 큰 장애물로 작용하기에, 카인은 초반에 얻은 이득을 바탕으로 게임의 승기를 굳히기에 적합하다. 이 장점은 엄청난 사거리로 뛰어난 맵 장악력을 보여주는 드라구노프 카인일 때 극대화된다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 20").content("""
이아영\n초장거리 원거리 전투력 (드라그노프 한정)
드라그노프를 들면 가용 전투범위가 무려 1800까지 늘어난다. 이는 대다수 원거리 캐릭터들의 사거리는 물론 시야까지 아득하게 뛰어넘는다. 이 정도의 사거리를 지닌 스킬이 히트스캔으로 5발이나 날아들어오며, 피해량도 낮지 않아 초중반에는 몸 약한 딜러들을 한두 발에 빈사 혹은 사망에 이르게 한다. 이런 특징 때문에 카인은 저격을 드는 것만으로도 적 원딜들에게 큰 심리적 압박을 가할 수 있어, 이들이 필연적으로 몸을 사리게 만든다. 또한 사거리가 길고 조준 중에는 앙각 제한이 사라진다는 점 덕분에, 저격 카인은 피격 판정이 공중에 떠 대부분의 공격을 받지 않는 일부 캐릭터들의 효과적인 카운터가 되기도 한다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 21").content("""
유민석\n극단적으로 강력한 순간 화력 (E.D 트렌치건 한정)
트렌치건은 너무나도 협소한 딜각과 없다시피한 근접 선공권을 가졌지만, 그 단점에 대한 보상으로 어마어마한 순간 화력을 뿜어낸다. 적정 사거리에서 3발을 꽂아넣기만 해도 웬만한 근거리 딜러 궁극기 수준의 폭딜이 나오는데, 상황에 따라서는 평타와 우지를 섞으며 이걸 한 번 더 넣을 수도 있다. 이런 엄청난 순간 화력 덕분에 트렌치건 카인은 딜각만 주어진다면 마치 딜러 암살하듯 탱커를 지워버리며, 한정된 시간 안에 트루퍼나 수호자를 제거하는 데에도 탁월한 모습을 보인다. 제 아무리 화력으로 정평이 난 캐릭터라도 트렌치건 6발만큼의 딜을 이런 짧은 시간 안에 쏟아낼 수 없다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 22").content("""
유민석\n다수 공격 능력 부족
카인의 스킬들은 1:1에 철저히 특화되어 있어 다수 공격 능력이 없다시피 하다. 평타는 범위가 매우 좁아 사실상 한 명에게만 딜을 넣을 수 있고, 우지는 다수를 공격하려면 탄환을 흩뿌려야 하므로 딜링기로서의 역할을 포기해야 하며, 트렌치건도 범위 공격 판정이 아니라 탄환 하나 하나가 비관통 투사체로 나가기에 다수의 적에게는 그 위력을 발휘할 수 없다. 심지어 저격은 여럿을 동시에 공격하는 것이 원천적으로 불가능하다. 그나마 이론상 정상적인 다수 공격이 가능한 류탄 역시 범위가 평범해 광역기로 보기는 어렵다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 23").content("""
유민석\n낮은 공성력
카인의 대부분의 스킬은 대인계수가 1.2인 반면 공성계수는 0.8에 불과하다. 건물을 공격할 때는 대인전 대비 40%의 손해를 본다는 뜻이다. 스킬 구성이 타워링에 적합하지 않은 것도 있지만 이 낮은 공성 대미지 탓에 카인의 공성 효율은 전 캐릭터 중에도 최악이다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 24").content("""
유민석\n어려운 조준 난이도
카인은 FPS의 요소가 극대화된 캐릭터로, 좁은 범위의 히트스캔 공격 위주로 스킬이 구성되어 있어 사이퍼즈의 원거리 딜러 중에도 유별나게 정확한 조준을 요구한다. 특히 드라그노프는 FPS 게임에서 저격총을 잡아봤다면 그 조준 난이도를 알 수 있는데, 공격범위가 아예 없어 빗나가면 문자 그대로 탄환 한 발만 날리고 게임에 영향을 전혀 끼칠 수 없다. 트렌치건을 선택하면 이 난점이 조금 해소되긴 하나, 그 트렌치건도 조준이 마냥 편한 스킬이 아닌데다가 팀이 트렌치건 조준을 항상 배려하며 협공할 수도 없는 노릇이라 결국 일정 수준의 조준 실력은 있어야 한다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 25").content("""
유민석\n최악의 근접전 능력 (드라그노프 한정)
베테랑 군인이라는 설정이 무색하게도 저격 카인은 근접전이 매우 취약하다. 버트 스트로크는 카인이 근접전에서 능동적으로 내지를 수 있는 사실상 유일한 스킬인데, 바꿔 말해 버트 스트로크가 없는 저격 카인은 근캐의 접근을 허용했다면 긴급회피로 도망가거나 그나마 선딜이 짧은 류탄을 근처에 던지는 것 말고는 대처법이 없다. 후반이 되어 딜러의 콤보 한 바퀴는 버틸 만한 맷집이 갖춰졌다 해도, 이 처참한 근접전 능력 탓에 저격 카인은 근캐에게 습격당할 경우 팀의 지원이 없다면 죽는 건 시간 문제라 봐도 무방하다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 26").content("""
유민석\n저격 카인은 이기고 있을 때는 승기를 유지하기 쉽지만 반대로 초반부터 팀이 밀린다면 역전하기가 힘들다. 일단 기지 안에 고립된 상황에서는 센트리도 원활히 깔 수 없고 저격도 딜각이 좁아지니 저격 카인 특유의 맵 장악력이 상당 부분 약화된다. 만약 게임 중반부까지 전세를 뒤집지 못했다면 성장 우위를 내준 채로 적 원딜이 서서히 방템을 올리기 시작하는데, 이러한 상황에서 저격 카인은 원딜을 확실히 따지도 못하고, 탱커를 빠르게 녹이지도 못하는 그야말로 무능한 잉여가 돼버린다. 그렇다고 성장력이 좋아서 립을 꾸역꾸역 먹어 후반을 도모하거나 궁 대박으로 일발 역전을 노릴 수 있는 것도 아니다. 결국 저격 카인 플레이어는 초반부터 반드시 승기를 잡아야 한다는 압박감에 눌리며 캐릭터를 운용할 수밖에 없다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 27").content("""
유민석\n극히 짧은 사거리 (E.D 트렌치건 한정)
트렌치건 카인은 과장 좀 보태서 팔 긴 근거리 딜러나 다름없을 정도로 원거리 딜러 중 교전 거리가 극히 짧다. 우지와 트렌치건은 원거리 스킬임에도 근캐의 주력기가 닿는 수준으로 붙어야 제 위력이 나오며, 평타와 류탄 또한 사거리가 길다고는 볼 수 없는 스킬이다. 이 때문에 초장거리 히트스캔 공격으로 뭇 원딜들의 최상위 포식자로 군림하는 저격 카인과 대조적이게도, 트렌치건 카인은 사거리 긴 원딜 대부분에게 만만한 사냥감이 돼버린다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 28").content("""
유민석\n극심한 아군 의존도 (E.D 트렌치건 한정)
상술했듯 트렌치건 카인은 사거리가 워낙 짧다 보니 필연적으로 적 근거리 캐릭터들과 힘싸움을 벌이게 된다. 하지만 어쨌든 트렌치건 카인은 원거리 캐릭터인지라, 사거리를 희생했음에도 근접전에서 근캐들과 대등하게 맞설 정도의 근접 전투력을 가지고 있는 건 아니다. 결국 사거리 긴 스킬이 없고 근접전도 확실하게 내세울 수 없는 트렌치건 카인은 딜각을 능동적으로 만드는 것이 거의 불가능해, 팀의 철저한 보호를 받으며 움직일 수밖에 없다. 탱커나 서포터가 거의 디코이 이전 브루스 수준으로 돌보며 어떻게든 딜각을 만들어줘야 정상적인 플레이가 가능할 지경이다""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 29").content("""
유민석\n따로 노는 캐릭터 설계 (E.D 트렌치건 한정)
기존의 카인은 초창기에 사기로 군림하던 시절 부터 오랜 시간에 걸쳐 어중간한 스킬셋과 스탯으로 드라그노프라는 강력한 영향력을 줄 수 있는 스킬에 의존하는 모양새를 띄던 캐릭터이다. 적의 시야에 포착되지 않는 사거리에서 저격으로 높은 데미지를 줄 수 있는 드라그노프를 지닌 대신 기술 전반적으로 긴 딜타임과 원딜치고는 짧은 사거리, 그리고 부족한 근거리 대처능력을 지니고 있으며 이러한 단점을 메우기 위해 접근을 방해하는 센트리와 위험한 기술을 피할 수 있는 긴급 회피가 존재하는 것이다. 하지만 트렌치건 카인의 경우에는 기존에 드라그노프에 맞춰 디메리트를 크게 물려준 스킬셋을 그대로 가지고서 드라그노프를 포기한 형태를 띄고 있다. 사거리가 짧아서 근거리에서 사격해야 함에도 불구하고 여전히 근거리 대처력은 좋지 않으며 기동력은 원딜 중에서도 최하위권이라 적에게 접근하기도 역으로 도주를 하기도 쉽지 않은데 설상가상으로 이러한 기동성으로 적의 강력한 기술에 대처할 수 있는 게 긴급회피 하나 뿐이다. 그나마 근접전에서 쓰라고 버트 스트로크가 주어진다고는 하지만 엄연히 쿨타임 7초 짜리의 스킬에 짧은 범위와 사거리를 지녀 완전히 근거리에서만 사용할 수 있는데도 선딜이 존재하다 보니 접근전에서는 빠르게 평타로 치고 들어오는 근캐들 상대로는 역부족이다. 이로 인해 원딜러 중에서도 최상급의 순간화력을 지닌 트렌치건이지만 현실적으로 카인의 스킬셋 자체가 그 트렌치건의 발목을 잡는 부분이 매우 많아 드라그노프라는 선택지를 희생하고서 고를 만큼의 메리트가 나오지 못하는 것이다. 때문에 카인과 반대로 하자가 있던 궁극기에 강력한 유틸기들로 무장한 같은 총티어 캐릭인 웨슬리가 샷건을 받았다면 다르지 않았을까 하는 의견 또한 있었는데, 실제로 추후 웨슬리 역시 2차 궁극기를 받으면서 궁극기를 발동하면 이동속도가 증가하고 중원거리에서도 화력을 낼 수 있는 자동 사격이 주어지면서 카인의 사례에서 어느 정도 개선된 모습을 보여주었다는 것이 아이러니.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 30").content("""
유민석\n센트리를 이용한 정찰은 물론이고 저격을 이용한 주변 탐색과 아군 엄호, 한타시 빠질 수 없는 우지의 강력한 화력 지원 등등 그야말로 팀의 레인저라고 할 수 있는 캐릭터다. 장거리에서 주요 목표를 단숨에 제거할 수 있는 저격, 시야를 지속적으로 제공하는 센트리 레이더 등 전반적으로 스킬들의 전략적 가치가 높으며, 그러한 스킬들을 통해 맵을 장악하여 자신을 드러내지 않고서도 적들을 지속적으로 압박할 수 있다. 그래서 마치 시바가 그러하듯이 존재 자체만으로도 적의 행동에 많은 제약을 준다. 카인이 초반에 주도권을 잡으면 게임 구도가 경직되어 재미가 없어진다는 말이 나올 정도다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 31").content("""
최동철\n하지만 캐릭터의 장점만큼이나 단점 또한 명확할뿐더러, 사이퍼즈에서 손꼽힐 정도로 이질적이면서도 어려운 운영법을 가지고 있다. 그래서 진입장벽이 높은 것은 물론 캐릭터 자체적으로 가진 리스크도 크다는 것을 염두에 두어야 한다. 대부분의 원거리 딜러들은 주력기를 쓴 뒤에도 평타를 통해 어느 정도 지속적인 화력 투사가 가능하며, 일부 캐릭터는 평타를 직접적으로 강화하는 스킬도 보유하고 있다. 하지만 카인의 평타는 저지력이 지나치게 떨어지고 저격은 시전을 위해 안전한 위치를 확보해야 하기에, 두 스킬 모두 적과 대면한 상황에서는 사용하기 곤란한 경우가 많다. 그리고 센트리 레이더라는 차별화된 유틸기의 존재는 분명한 장점이지만, 그 대가로 원거리 딜러라면 일반적으로 가져야 할 딜링용 스킬 하나를 잃었다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 32").content("""
최동철\n즉, 카인은 한타에서 적에게 내밀 카드가 많지 않다. 안정적으로 사용할 수 있는 주력기는 쿨타임 10초의 우지밖에 없다고 봐야 한다. 그리고 스킬의 공백 사이에 생기는 한타 기여의 부재는 센트리의 시야 확보 능력과 저격의 견제 능력으로 메꿔야 한다. 이 점 때문에 카인의 운영이 이질적이면서도 어려운 것이다. 요컨대 스킬을 사용하기에 적절한 타이밍을 재는 것이 다른 원딜보다 까다롭다. 이 공백을 최소화하기 위해서는 적 원거리 딜러를 저격할 수 있으면서 동시에 자신을 노리는 적들로부터 안전한 위치를 확보할 필요가 있는데, 변화무쌍한 한타 속에서 이를 매번 고려하고 움직이는 것은 유저의 판단력 면에서든, 카인의 기동성 면에서든 정말로 쉽지 않다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 33").content("""
최동철\n카인의 위치는 다른 원거리 딜러들과 마찬가지로 아군 최후방이다. 적 근캐들과 안전거리를 둘 수 있도록 항상 자리를 신경써야 한다. 저격의 장점을 십분 발휘할 수 있는 시야 밖의 장거리가 이상적이지만, 우지와 류탄도 카인의 엄연한 딜링기이므로 상황에 따라서는 최대 시야보다 약간 짧은 중거리를 유지하는 것도 나쁘지 않다. 막발 - 우지라는 사기급 테크닉 덕분에 막발이 준비되어 있다면 적과 1:1로 마주쳤을 때 높은 확률로 선공을 빼앗을 수 있다. 순간 화력이 강력한 카인 특성상 선타의 확보는 곧 킬로 이어지기 때문에 딜러와의 1:1에서 강한 모습을 보여준다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 34").content("""
최동철\n그러나 막발을 제외한 나머지 스킬들의 선딜은 긴 편이라 막발을 준비하지 못했다면 드렉슬러 같은 즉발성 스킬을 가지고 있는 원거리 캐릭터와의 싸움에서도 밀릴 수 있으므로 지나친 단독 행동은 금물이다. 그리고 카인은 어그로를 엄청나게 끄는 캐릭터라 카인 유저의 실력이 좋을수록 적 다수로부터 집중적인 마크를 당하는 경우가 잦다. 그러니 아군을 지원하면서 동시에 아군에게 보호받을 필요도 있으므로, 혼자 다니면서 킬만 노리는 것보단 빠른 한타 참여로 후방 지원을 해주는 것이 팀의 승리에 더 도움이 된다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 35").content("""
최동철\n당연하지만 근접전은 닥치고 무조건 피해야만 한다. 카인은 웨슬리처럼 지뢰가 있는 것도 아니고 막발도 강경직이라 맞고 스킬을 내지를 근캐들이 많은데다가 대부분의 스킬들이 선 딜레이가 있어 근접한 적에게 대응하는 능력이 극히 떨어진다. 거기에 체력까지 최하위권이므로 근접전에서 공격을 허용했다면 그대로 전광판으로 직행하는 경우가 대부분이다. 상술한 막발 - 우지 테크닉으로 이 단점을 어느 정도 보완할 수는 있지만, 근접전에 강한 캐릭터라면 막발과 우지 사이에 충분히 근접 평타를 욱여넣을 수 있어서 완전한 대책은 되지 못한다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 36").content("""
최동철\n캐릭터 특성상 승기를 잡은 판에서 강한 모습을 보인다. 지고 있는 쪽 입장에서는 불리한 한타 유발을 피하면서 어떻게든 립을 먹어 격차를 좁혀야 하는데 카인이 중앙에서 저격 키고 있으면 그것조차도 난감해지기 때문이다. 무리해서 나갔다가 한두 명 따이기라도 하면 격차는 더욱 벌어진다. 게다가 중앙을 장악하고 있으니 센트리 역시 훨씬 전방에 깔 수 있게 되고, 이에 따라 적들은 한타는커녕 기본적인 성장조차 힘들어지는 판이 지속되어 굉장히 답답해진다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 37").content("""
최동철\n하지만 반대로 밀리고 있는 판에서 카인은 정말 도움이 안 된다. 우선 본진에 고립된 상황일 테니 센트리를 설치하러 나가기 어렵고, 상대 딜러가 잘 커서 방어 아이템을 구입하기 시작하면 저격의 영향력도 급격히 감소하는데, 설상가상으로 웨슬리마냥 궁 대박으로 한타 역전을 노릴 수 있는 것도 아니다. 따라서 카인을 팀에 기용했다면 반드시 초반 한타 및 라인전에서 우위를 가져올 필요가 있다. 이 시기는 원거리 딜러들이 대부분 방템을 두르지 않았을 때이니 저격의 위력에는 큰 문제가 없을 것이다. 어떻게든 초반 한타에서 승리하여 분위기를 유리하게 이끌었다면 그 다음부터는 운영이 비교적 수월해진다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 38").content("""
최동철\n또한 높은 대인 공격력을 자랑하긴 하지만 주요 기술인 우지와 저격이 고정된 상태로 한 명에게 화력을 집중해야만 강력한 기술이기 때문에 1명에게 가하는 데미지는 매우 강력하나 안정적인 전선이 없고 화력을 집중하기 힘든 난전에서는 상당히 취약한 모습을 보인다. 한타가 중요한 AOS, 사이퍼즈인 만큼 어찌 보면 상당히 치명적인 약점. 특히나 아군에 마땅한 탱커가 없거나 적진에 돌파력이 뛰어난 캐릭터가 있어 안정적인 전선을 갖추고 싸우기 힘들 경우 마치 스타크래프트의 공성 전차처럼 '고정 터렛' 성격이 강한 카인이 활약하기가 매우 힘들어진다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 39").content("""
최동철\n따라서 아군과 상대방의 팀 조합의 영향을 가장 크게 받는 캐릭터 중 하나이다. 그래서 일반 공방에서 카인 셀렉러는 상당한 실력이 요구된다. 물론 우리 팀 조합뿐만 아니라 상대 팀 조합에도 큰 영향을 받는다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 40").content("""
최동철\n지형의 영향을 많이 받는 캐릭터이기도 하다. 따라서 아군에 카인이 있을 때 절대 소홀히 해서는 안 되는 것이 바로 카인이 활약하기 좋은 지형에서 이니시에이팅을 하는 것. 카인이 불리한 위치에서 한타를 벌이게 되면 카인은 정말 힘을 못 쓴다. 카인에게 불리한 위치는 길목이 많거나 장애물이 많은 구간. 가장 대표적으로 양 팀 2번 타워 라인 한복판의 양쪽의 2단 언덕을 들 수 있는데 대체로 근캐나 낙궁캐들은 이 언덕을 오르락내리락 하면서 싸운다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 41").content("""
황중석\n그런데 이 지형이 카인한테는 지옥이다. 특히 공방의 경우 파티보다 팀워크가 상대적으로 부족하기 때문에 근캐들이 먼저 우르르 달려가 한타를 일으키고 이속 느린 카인이 뒤늦게 합류하는 상황이 흔하게 벌어진다. 이럴 경우 카인은 스킬이 난무하는 언덕에 뛰어들어 싸울 수도 없는 노릇이기 때문에 보통 언덕 아래쪽에서 깔짝거리게 된다. 그런데 이 위치가 우지나 류탄 맞추기도 애매하고 무엇보다 저격이 원천 봉쇄되는 위치기 때문에 카인의 한타 기여도가 말 그대로 폭락한다. 상대방도 언덕을 오르락내리락 하기 때문에 저격 맞추기 어렵고 맞춘다고 해도 언덕 아래로 떨어져버리기 때문에 공중에서 한 번 더 총알을 꽂지 않는 이상 후속타를 맞추기는 불가능하다. 더구나 트루퍼 리젠 위치가 바로 2단 언덕 옆쪽이니...""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 42").content("""
황중석\n이렇듯 불리한 위치에선 정말 힘 못 쓰는 게 카인이다. 그러니까 아군에 카인이 있다면 꼭 위치를 봐가면서 한타하자. 물론 반대로 말하면 적군 입장에서는 최대한 카인이 불리한 곳에서 한타를 일으켜야 한다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 43").content("""
황중석\n장비 세팅은 보통 공격력+치명타+이속 극공으로 가는 경우가 많다. 방어력은 포기하는 경우가 많은데, 카인은 방어템을 사서 얻는 이득이 완전히 없다고 봐도 된다. 거기에 저격으로 적 딜러를 순식간에 없애버릴 수 있으니 공격 템트리를 갈 수밖에 없다. 카인의 회피기인 긴급회피는 시전 도중 무적 판정을 받기 때문에 적의 한 방 기술을 피할 수 있기 때문이다. 방세팅을 해도 워낙에 물몸이라 효율이 안 나온다는 것이 더 큰 이유이긴 하지만 만약 적이 극공을 탔거나 전세가 어느정도 밀렸을 경우 자신을 암살할 수 있는 여건을 가진 근딜이 있거나, 원딜의 짧은 대치상황에도 스킬, 혹은 연계를 버티지 못하고 죽는다고 한다면 1티 → 1바지로 차근차근 구입하는 것이 좋다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 44").content("""
황중석\n그리고 저격 링은 구입할 수 있는 레벨에 맞춰 최적의 루트로 템 트리를 타서 빠르게 구하는 것이 좋다. 어찌되었건 카인의 주딜은 저격이기 때문.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 45").content("""
황중석\n또한 우지 링과 류탄 링은 자신의 세팅과 상황에 따라 차근차근 사는 것이 좋다. 류탄 링은 주로 라인을 밀거나 센티넬, 철거반 등을 제거하여 립을 회수하는데에 유용하여 구입되고, 우지는 현재 구입 시 순간적이게 데미지를 올릴 수 있는 버프를 가진 '연사의 파이프', 혹은 4링이 사용되는데, 이는 한타가 시작할 때 여유가 되는대로 구입하는 것이 좋다. 우지의 데미지가 훌륭하다는 점은 있지만 주딜은 엄연히 저격이며, 우지의 긴 사용시간 특성상 위험성을 부담하고 있기 때문에 아군의 백업을 받기 전 까지 적을 묶으며 생존하거나, 아군의 후방에서 적을 묶어두며 백업을 하는 용도가 더 크다는 것을 숙지하기를 바란다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 46").content("""
황중석\n우지→류탄→저격: 가장 기본적인 콤보. 이 콤보는 즉결심판 후에도 가능하므로 만약 잡기에 성공한다면 그야말로 일발역전의 기회를 마련할 수 있다. 류탄 에 맞은적이 땅에 닿기전에 공중저격을 명중 시키는 테크닉은 그야말로 필수 테크닉이다. 연습장에서는 힘들다. 다리 유니크가 있다면 막발→우지가 부드럽게 이어진다. 류탄 후 저격을 맞히는 것을 보다 안정적으로 하고 싶다면 류탄을 적에게 직격시키는 것이 아니라 옆으로 던져서 시간차로 폭발을 일으키는 것이 좋다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 47").content("""
황중석\n우지→저격: 류탄을 쓸 수 없는 상황일 경우. 일반적으로 이 콤보를 쓰는 경우는 적이 멀어 류탄을 명중시키기 힘든 경우이다. 이 콤보를 성공시키려면 우지는 적당히 쏜 뒤 취소하고 바로 저격을 하는 게 좋다. 우지를 너무 오랫동안 쏠 경우 끝에 잠깐동안 멍때리게 되기 때문에 저격이 연계되지 않는 경우가 종종 발생하기 때문. 화면 오른쪽의 흰색 게이지를 잘 보고 연계해야 한다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 48").content("""
황중석\n류탄→우지→류탄→저격: 가장 강력한 콤보. 이 콤보의 포인트는 첫번째 류탄 후 우지를 최대한 늦게 쏘는 것. 그래야만 다음 류탄을 던질 쿨타임을 벌 수 있다. 평타를 활용해 적이 공중에 떠있는 시간을 조금이라도 늘려주면 콤보 잇기에 좋다. 그리고 두번째 류탄의 경우엔 적을 직접 맞추지 말고 적의 살짝 앞쪽에 터뜨리는 것이 저격 연계가 좀 더 수월하다. 타이밍이 상당히 빠듯하므로 연습이 조금 필요한 콤보. 모자 유니크나 우지 임팩트가 있으면 우지로 적을 더 오래 공중에 붙잡아둘 수 있기 때문에 콤보 넣기가 쉬워진다. 거리가 가깝다면 첫 류탄 후 즉결심판→우지→류탄→저격으로도 연계가 가능하다. 또는 레어 아이템인 '류탄 디바이스' 를 착용하면 30초 동안 쿨타임이 34% 감소하는 효과가 있어서 저 빡빡한 콤보가 부드럽게 이어진다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 49").content("""
황중석\n센트리를 자주 설치하는 습관을 들이면 적의 동태를 파악하는데 큰 도움이 된다. 열심히 깔자. 우선 팀이 라인을 얼마나 밀었느냐에 따라 정해진 만큼만 나아가서 센트리를 설치하도록 하고, 센트리를 설치하러 가기 전에 막발을 장전해두어 적과 마주쳤을시 막발로 경직을 먹이고 구르기로 제빨리 도망가도록 한다. 다만 앞서 말했듯이 팀원들이 라인을 밀어준 정도에 맞춰서 일정 거리를 유지하고 깔아야 팀원들과 빠르게 합류 할 수 있다는 점을 숙지해야 한다. 센트리를 설치할 장소를 핑을 찍어 확인을 시켜주는 것도 좋은 방법이다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 50").content("""
황중석\n원거리 누커 특성상, 타라와 마찬가지로 공성전이 장기전이 되고 적이 전원 방셋을 적절히 맞추었다면 힘들어진다. 적보다 압도적으로 높은 공격력과 레벨차를 유지하면서 속전속결로 끝내는 것이 최선의 상황이다. 이 때문에 초반에 자주 죽지 않는 것이 중요하다. 그나마 타라는 테러로 계속 성장할 수 있지만 카인은 정말 열심히 아군을 도우며 적군을 처치하고 다녀야 한다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 51").content("""
김태섭\n특정한 목적이 없고 그저 관심이나 주목을 받기 위해, 아니면 자신이 생각하고 있는 주제긴 하더라도 그리 진지하지 않은 마인드로 올리는 글. 한 마디로 말해 글은 글이되 내용은 없는 글을 일컫는다. 디시 갤러리 등지에서 흔히 볼 수 있는 화살표글이 대표적인 뻘글이다. 뻘글이 꾸준히 같은 패턴으로 올라오면 꾸준글이 된다.

내용의 성의성, 내용의 길이, 작성자의 의도를 기준으로 뻘글인지 아닌지를 파악할 수 있다. 일반적으로 별 의미가 없거나, 의미가 있는 듯 해도 내용이 한두줄 정도로 너무 짧거나, 내용이 있다고 해도 Ctrl CV 수준의 복사글 수십개가 동일 인물에 의해 난무하면 도배 뻘글로 간주된다.

등급이나 레벨 상승용으로 일정 숫자의 글을 작성해야 한다는 규정이 있는 사이트에서 등업글 수를 채우기 위해 빨리빨리 싸지르는 글의 대다수를 차지한다. 다만 이런 글은 등급 상승용 글로서 인정받지 못하는 사이트도 있다. 더 엄격한 사이트인 경우에는 해당 뻘글을 작성한 유저에게 불이익을 주기도 한다.

의미없는 글이긴 하지만, 의미 없는 바보짓에 매달리는 사람들도 있는 법. 꾸준글러가 바로 그런 사람들이다.

글리젠 상승의 일등 공신이기도 하다. 일부러 글리젠을 흥하게 하기 위해 게시판 유저들이 뻘글을 대량 싸기도 한다. 반대로 친목질을 방지하기 위해 게시판 주제에 상관없는 뻘글은 올리지 말라는 규정이 있는 사이트도 있다.

위키에서의 뻘글은 뻘문서 라고 한다. 위키에서의 뻘글은 제재 대상이다.

뻘글의 덧글 버전(?)으로 뻘덧글이 있다. 다만 뻘글이 그냥 큰 의미 없는 글이라는 의미로 가치판단적 의미는 덜 들어간 단어라면 뻘덧글은 부정적인 의미가 강한 단어다.

여기서 파생되어 나무위키에서 불필요한 토론을 발제하는 것을 뻘토론이라고 한다. 뻘토론은 차단 사유가 된다.

영어권 인터넷에도 뻘글에 해당되는 단어인 "shitpost"가 존재한다. shitpost와 뻘글은 둘 다 의미 없는 글을 지칭하지만 이 shitpost는 뻘글과는 달리 좀 더 유머나 밈에 가깝다.

똥글에 대한 안좋은 인식이 박힌 곳은 조금만 해도 많은 욕을 먹는 경우가 있다""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 52").content("""
이아영\n2014년 4월 16일에 쓰인 글로, 각 갤러리가 갤러리 주제와 관련없는 뻘글로 (인한 친목질으로) 망했던 과정을 서술하고 있다. 이 글이 쓰여질 당시에 와갤과 코갤은 이미 망한 상태였고, 고갤은 망했다고는 서술되어 있으나 그나마 남아 있는 게임 떡밥으로 갤이 굴러가는 중이었다. 2014년 여름방학때에 이르면 고갤은 부흥에 성공하지만 이후 거짓말같이 2016년말~2017년초를 전후로 해서 고갤 또한 갤러리 주제와 관계없는 오덕 떡밥과 일베&역갤발 분탕질, 자유게시판화로 인해 게임 글을 쓰던 인원이 중갤로 떠나가 진짜 망해버렸다. 알바가 갤러리 주제를 통제하지 않는 디시 내 갤러리들의 흥망성쇠로 뻘글이 커뮤니티에 주는 악영향을 볼 수 있다. 그러나 이러한 형태의 자유게시판 말고, 엥간한 거대 게임 커뮤니티들은 뻘글이 없으면 떡밥이 다 떨어져 갤 상태가 시망이 되므로 성욕글이든 어떤 형태로든 뻘글이 범람하는 경우가 많다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 53").content("""
유민석\n쿠치키 루키아에게 사신의 힘을 받아 사신대행으로서 나름대로 열심히 활동하던 주인공 쿠로사키 이치고. 그러던 어느날, 그의 앞에 소울 소사이어티에서 찾아온 루키아의 지인이자 진짜 사신인 쿠치키 뱌쿠야 & 아바라이 렌지가 나타나 대역죄인 루키아를 사신계로 대려가겠다고 으름장을 놓는다. 이에 이치고가 반발하며 렌지와 싸움을 벌이게 되고 뱌쿠야에게 일격을 당해 사신의 힘이 소실된다. 이치고는 우라하라 키스케의 조언으로 이치고는 우라하라 상점 지하 수련장에서 루키아의 것이 아닌 자신의 힘을 찾아내는 수행을 하게 된다.

그리고 우라하라에 의해 몸에서 영혼이 빠져나온 이치고는 그 상태로 지하수련장의 구덩이에 갇혀 호로가 될 위기에 처하고, 호로화를 몇 시간 앞두고[2] 사신의 힘과 참백도 참월을 얻는다. 그리고 오리히메, 우류, 차드, 인솔자 격으로 시호인 요루이치와 함께 루키아를 구하러 소울 소사이어티에 침입하게 된다.

소울 소사이어티 침입 후 지단보와 대결하여 승리하나, 3번대 대장 이치마루 긴의 난입으로 정령정에 들어가지 못하고 루콘가로 쫓겨난다. 그 후 시바 쿠우카쿠의 도움을 받아 사신에게 형이 살해당해 사신들을 증오하는 시바 간쥬와 함께 화학대포로 정령정의 차혼막을 뚫고 침입한다. 그러나 영압 조절 실패로 우류&오리히메, 이치고&간쥬, 요루이치, 차드가 네 방향으로 흩어지게 되고, 워낙 화려하게 침입한 나머지 호정 13대의 주의가 모두 현세조에게 쏠리게 된다.

5번대 대장 아이젠 소스케는 우연히 렌지를 만나게 되고, 루키아의 죄에 비해 사형선고도 너무 과하고,[3] 사형집행조차 조급했다. 이런 결정이 이상하다는 것을 이야기한다. 이어 대장회의가 열리게 되고, 이치고가 침입했다는 것을 알게 된 렌지는 루키아에게 그 소식을 전하고 그 길로 부대장 완장을 처소에 두고 이치고를 찾아나선다. 그리고 아이젠과 이치마루가 수상한 대화를 나눈다.[5] 10번대 대장 히츠가야 토시로는 이 얘기를 엿듣고 이치마루가 수상하다며 5번대 부대장 히나모리 모모에게 3번대를 조심하라 이른다.

11번대 대장 자라키 켄파치는 가장 강한 자와 싸우고싶다는 열망으로 부대장 쿠사지시 야치루와 함께 정령정의 곳곳을 쑤시며 이치고를 찾는다.

정령정 내에 잠입한 이치고는 11번대 3석 마다라메 잇카쿠, 간쥬는 5석 아야세가와 유미치카와의 싸움에서 승리하고, 서로를 찾아다니는 도중에 4번대 대원 야마다 하나타로를 만나게 된다. 하나타로는 옥중에서 루키아의 시중을 들었던 대원이라 루키아가 죽길 바라지 않았고, 하나타로의 도움을 받아 루키아가 있는 참죄궁으로 향하게 된다.

그러나 그 길을 아바라이 렌지가 가로막는다. 현세에선 완패했던 이치고지만 우라하라가 가르쳐 준 연속공격의 헛점[6]을 이용해 렌지를 이기게 되고, 렌지는 루키아를 구해다오라는 말을 남기고 쓰러진다. 그 길로 이치고는 다시 참죄궁을 향하고, 렌지는 무단으로 적과 단신으로 맞붙고 패배했다는 죄목하에 부대감옥에 갇히게 된다.

그리고 이치고 일행이 침입한지 얼마 되지 않아 5번대 대장 아이젠 소스케가 암살당한다.[7] 이에 충격받아 이성을 상실한 모모는 토시로의 조언을 떠올리고 이치마루를 공격한다. 이를 3번대 부대장 키라 이즈루가 맞받아치고 이로 인해 둘다 투옥된다. 그리고 모모는 감옥에서 10번대 부대장 마츠모토 란기쿠에게 아이젠의 유서를 받고 충격에 빠진다. 그리고 이치고 일행은 아이젠 암살의 용의자로 몰려 마침내 대장들의 전면 습격을 받게 된다.

한편 차드는 8번대 대원들을 쓰러뜨리며 루키아의 위치를 찾으려 하나, 8번대 대장 쿄라쿠 슌스이와 맞닥뜨린다. 그리고 쿄라쿠가 함께 한 시간이 얼마 되지도 않는 루키아를 왜 그렇게 구하려 하냐고 묻자, 이치고가 구하고 싶어해. 내가 목숨을 거는 데 그 이상의 이유는 필요 없어!라는 말과 함께 그대로 교전에 들어간다. 그러나 허망하게도 한 페이지만에 쓰러지게 된다. 이후 차드는 감옥에 갇힌다.

그리고 마침내 자라키 켄파치가 이치고를 발견하게 된다. 이치고는 압도적인 힘의 차이를 느끼지만 친구들이 살아있고 지금도 싸우고 있다는 현실을 곱씹고 간쥬와 하나타로를 먼저 보낸 채 켄파치와의 싸움에 들어간다. 하지만 대장에겐 상대가 될 리 없었고[8][9] 그대로 참월이 두동강나고 쓰러진다.

그 때 참월 아저씨가 나타나 이치고의 의지를 확인한 뒤 이치고의 내면 세계에서 수련을 시켜준다. 수련 상대는 색이 반전된 참월을 든 이치고 자신. 신체 능력은 똑같지만 이치고의 검은 참월도 아니고, 전투 센스에서 밀리는 이치고는 참월을 손에 넣은 것만으로 참월에 대해 이해하고 있다 생각했던 걸 반성하고, 참월은 그런 이치고에게 힘을 빌려주게 된다. 그리고 참월이 일시적으로 피를 막아주는 동안 다시 켄파치와의 전투에 들어간다. 이치고가 켄파치에게 미친 듯이 공격을 퍼붓고 우위를 점하자, 켄파치는 자신의 힘을 봉인한 안대까지 풀어 이치고와 맞서지만, 결국 힘이 당해 이치고의 출혈이 다시 터지며 이치고가 쓰러진다. 그러나 켄파치의 참백도는 부러져 있었고, 켄파치는 네가 이겼어, 바보야.라는 말과 함께 이치고와 동시에 쓰러지게 된다.[10] 이후 야치루가 켄파치를 우노하나 레츠에게 데려가고, 이치고는 요루이치가 회수해 비밀 장소로 데려간다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 54").content("""
최동철\n간쥬와 하나타로는 참죄궁에서 루키아를 대면하나 루키아는 간쥬의 형 시바 카이엔을 죽인 사신이었다. 간쥬가 루키아라는 녀석이 이놈인줄은 몰랐다며 분노하는 도중, 쿠치키 뱌쿠야가 루키아의 상태를 확인하러 온다. 간쥬는 이치고의 부탁이기에 뱌쿠야와 맞서지만, 뱌쿠야의 참백도 천본앵에 의해 온 몸을 난도질당한다. 뱌쿠야가 간쥬와 하나타로를 확실하게 죽이려 할 때 13번대 대장 우키타케 쥬시로가 나타나 말리고, 그 직후 이치고가 요루이치의 도구를 이용해 참죄궁으로 날아온다. 이치고는 그대로 뱌쿠야와의 싸움에 들어가려 하나, 요루이치에게 마취약을 배에 주입당해 쓰러지고 간쥬와 하나타로는 쥬시로에 의해 목숨을 건져 감옥에 갇힌다. 이치고가 깨어난 후 왜 자기만 살렸냐며 노발대발하는데, 요루이치는 지금의 이치고가 대장들을 이기기엔 모자르다며 이치고에게 만해의 존재를 알려준다. 그리고 전신체를 이용해 3일간의 만해수행을 시작한다.

한편 우류와 오리히메는 잇칸자카 지로보와의 전투에서 승리하고, 지나가던 대원 두명을 기절시키고 옷을 빼앗아 사신 행세를 하며 여화 수색조에 들어간다. 그러나 옷을 뺏는 장면을 12번대 대장 쿠로츠치 마유리에게 들켰다.

이후 야밤에 12번대의 갑작스러운 자폭 테러를 당하고, 우류는 지나가던 11번대 아라마키 마키조에게 오리히메를 맡기고 마유리와의 전투에 들어간다. 독에 의해 움직이지 못하게 된 우류는 마유리의 실험으로 인한 할아버지의 처참한 시신을 보고 각성하여 반드시 마유리를 죽여버리고자 결심하고, 퀸시 렛트슈틸을 사용해 마유리를 압도하기 시작한다. 그리고 마유리는 블리치 최초로 만해, 금색소쇄지장을 선보이지만 결국 우류의 손에 패배한다.[11] 우류는 의기양양하며 루키아가 있는 참죄궁으로 향하지만, 갑자기 눈앞에 9번대 대장 토센 카나메가 나타나 두페이지만에 리타이어한다. 결국 우류도 투옥.

한편, 호정 13대의 대장들 중 쥬시로, 슌스이, 레츠는 아이젠의 죽음에 수상함을 느끼고 조사를 시작한다.

그리고 이치마루가 키라와 모모를 감옥에서 빼내고, 렌지는 탈옥하여 이치고와 함께 만해 수행에 들어간다. 토시로는 모모의 탈옥 소식을 접하고 바로 뒤쫓아가는데, 이치마루와 함께 있는 모모를 발견하자 아이젠 대장님의 원수라며 공격을 받는다. 아이젠의 유서에는 토시로가 사악한 음모를 꾸미고 있으며 아이젠이 그걸 저지하려 한다고 적혀 있었다. 결국 모모는 기절해버리고, 토시로는 이치마루와의 싸움에 들어간다. 호각으로 싸우던 중 란기쿠의 난입으로 전투는 종료. 그리고 토시로는 모모를 10번대 처소에 결계를 쳐 가둔다.

켄파치는 이치고를 돕기 위해 아라마키와 함께있던 오리히메를 데려오고, 간쥬, 우류, 차드를 모두 감옥에서 빼내버린다. 비슷한 시기에 렌지는 만해를 완성하여 뱌쿠야에게 도전한다. 만해 비비왕 사미환으로 뱌쿠야를 잠시나마 압도했지만, 뱌쿠야가 만해 천본앵경엄을 사용하자 온몸에서 피를 흘리며 쓰러진다. 그리고 이치고와 함께 맹세했단 말야..!! 반드시 구해내겠다고..!! 누구에게도 아니야... 그저 내... 영혼에게다!!!라는 명대사와 함께 뱌쿠야에게 최후의 일격을 날리나, 뱌쿠야에게 조금 상처를 입히는 선에서 그친다. 그리고 뱌쿠야는 렌지를 인정하며 자신의 은백풍화사를 덮어준다.

처형이 시작되자 토시로와 란기쿠는 어딘가로 떠나고, 렌지는 리키치가 데려온 하나타로에게 치료를 받아 쌍극으로 향한다. 켄파치는 현세조들을 이끌고 처형대로 향하는데, 이를 7번대 대장 코마무라 사진, 부대장 이바 테츠자에몽, 토센 카나메와 부대장 히사기 슈헤이가 가로막는다. 현세조들을 먼저 쌍극으로 보내고 테츠자에몽은 잇카쿠, 유미치카는 슈헤이를 맡고 켄파치는 대장 둘과 2 대 1 대결에 들어간다. 토센은 만해 청충종식 염마실솔, 코마무라는 흑승천견명왕을 사용해 켄파치를 상대하나 무승부로 끝난다.

이치고는 수련을 끝마치고 루키아가 처형당하기 직전에 쌍극을 파괴하여 루키아를 구출한다. 이 사태를 접하고 호정 13대는 양분되어 총대장 야마모토 겐류사이 시게쿠니를 우키타케와 쿄라쿠가 상대하고, 전투에 나서려는 소이퐁을 요루이치가 저지한다. 이치고는 코테츠 이사네, 사사키베 쵸지로 타다오키, 오마에다 마레치요를 주먹 한방으로 정리한다. 레츠는 부상자들을 치료하러 떠나고, 응급처치가 끝난 후 레츠와 이사네 또한 어딘가로 향한다. 그리고 이치고는 마침내 뱌쿠야와의 대결에 들어간다. 그리고 시해 상태에서 뱌쿠야의 만해까지 끌어내고, 마침내 자신의 만해, 천쇄참월을 사용한다. 허나 이치고가 만해를 실전에서 쓰기에는 상당히 빨랐고, 그 동안의 싸움으로 상처는 회복될 지언정 피로와 데미지는 축적되어 왔기에 결국 시간이 갈수록 이치고가 밀리게 된다. 이치고의 힘이 다 빠지고 죽을 위험에 처하자, 갑작스럽게 이치고가 호로화하고 뱌쿠야에게 중상을 입힌다. 하지만 이치고는 호로화 상태에서 이기고 싶지 않았고 결국 스스로 호로화를 해제하고 뱌쿠야와 맞붙어 무승부를 내게 된다.

토시로가 향한 곳은 중앙 46실이었다. 거기서 토시로는 중앙 46실이 전멸했다는 사실을 알게되고, 현장에서 이즈루를 발견한다. 토시로와 란기쿠는 이즈루를 쫓고, 모모는 결계를 빠져나간 지 오래라는 사실을 알게 되어 토시로는 모모를 쫓아간다. 모모는 이치마루와 함께 중앙46실의 거주지, 청정탑 거림에 있었고, 이치마루는 모모에게 보여주고 싶은 사람이 있다고 말한다. 그리고 그 사람은...""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 55").content("""
황중석\n모두가 죽었다고 생각했던 아이젠 소스케였다.

사실 모든 것은 처음부터 소스케의 계획이었다. 소스케는 모모를 바로 찔러버리고, 이에 분노해 만해 대홍련빙륜환을 사용한 토시로를 가볍게 썰어버린다. 그리고 청정탑 거림을 찾아온 레츠와 이사네에게 본인의 계획에 대해 일부 설명한다. 애초에 본인은 이치마루 외의 인물을 부대장이라 생각도 해본적이 없다고. 아이젠의 시체는 아이젠의 참백도 경화수월의 능력, 완전최면으로 시체로 둔갑된 경화수월이었다. 그리고 렌지는 루키아를 데리고 도망가던 중 갑작스럽게 토센과 마주하고, 토센은 루키아와 렌지를 쌍극으로 도로 돌려보낸다. 토센도 사실 아이젠의 부하였던 것. 그리고 루키아 처형과 아이젠 암살 사건, 이치마루의 진의를 알 수 없는 여러 행동 등의 모든 미스터리가 풀리고, 호정 13대의 대장 3명이 웨코문드로 떠나 반란을 일으킨다는 충격적인 결말을 맺는다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 56").content("""
김태섭\n블리치가 원피스, 나루토랑 묶이기 시작한 에피소드이자 블리치 역사상 최고의 에피소드. 작품 내적 평가뿐만 아니라 인기 면에서도 성공하여, 전까지 하위권에서 간신히 연명하던 블리치는 이 에피소드를 기점으로 점프 3강으로 등극했다. 이 에피소드의 성공에는 여러 이유가 있지만, 먼저 시리즈 전체를 통틀어 가장 완성도가 높다.

성공한 배틀물 소년만화가 필수적으로 진행하게 되는 추격전, 속도전, 장기전, 최종결전의 뛰어난 연출, 각자의 목적에 따라 움직이는 유동적이고 생동감 있는 캐릭터, 본새나는 대사와 뛰어난 캐릭터 메이킹, 만해라는 독특하면서 멋들어진 설정 등의 매력적인 장점이 조화를 이룬 점프 배틀물 전체에서도 추천할만한 장편이라 할 수 있다. 특히, 주인공과 자라키 켄파치,쿠치키 뱌쿠야와의 대결은 이 에피소드의 최고의 대결이라고 불리며, 마지막 아이젠 소스케의 반전은 시리즈 전체를 관통하는 가장 강렬한 반전이었다고 평가받는다. 여러 음모가 뒤섞이다가 끝에 나온 이 반전은 여태까지 블리치에서 나온 반전 중에서는 가장 평가가 높다.

이 시기에도 블리치 특유의 중2병스러운 연출은 많았지만 문제가 되지 않았다. 오히려 허세가 아닌 비범한 본새라고 할 수 있었다. 그리고 이때 기점으로 작화 역시 자리 잡으면서 발전해 갔다. 이후 여백의 미라는 소리까지 들을 정도로 여백이 많은 이후 에피소드에 비하면 여백도 별로 없다. 액션 측면에서도 파워 인플레와 발전한 그림으로 멋진 장면이 많이 나와 블리치를 대표하는 에피소드 중 1개로 자리잡았다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 57").content("""
이아영\n고속 항공모함 기동부대는 태평양 전쟁 말기 2년 동안 진행된 모든 해전의 주역이다. 기동부대를 구성하는 각 기동전대는 독립적으로 기동하거나, 연합하여 필요한 곳에 투입될 수 있었으며, 때로는 더 작은 단위로 나누어져 작은 작전에 투입되기도 했다. 이오지마 전투나 오키나와 전투 같은 때에는 고속 항공모함 기동부대를 주력으로 상륙지원부대와 포격부대, 보급부대 등이 뭉쳐 일명 "Big Blue Fleet"라고 불리는 거대한 함대로 기능하기도 했다.

윌리엄 홀시 대장의 제3함대 예하에서는 제38기동부대(Task Force 38), 레이먼드 스프루언스 대장의 제5함대 예하에서는 제58기동부대(Task Force 58)로 활동했다. 제3함대 예하에서는 존 매케인 중장[1]이, 제5함대 예하에서는 마크 미처 중장이 고속 항공모함 기동부대를 이끌었다.[2]

올림픽 작전이 개시되면 제3함대와 제5함대가 동시에 투입될 예정이었기 때문에, 고속 항공모함 기동부대 역시 제38기동부대와 제58기동부대가 동시에 투입될 예정이었다. 존 타워스 중장이 이끄는 제38기동부대가 혼슈와 홋카이도 전역을 공격하면서 규슈를 봉쇄하고, 프레드릭 셔먼 중장이 이끄는 제58기동부대가 규슈에서 상륙지원에 나설 예정이었지만[3], 히로시마·나가사키 원자폭탄 투하로 인해 일본이 항복하면서 현실화되지는 않았다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 58").content("""
유민석\n능력자는 아니지만 제1차 세계대전에 참전했던 퇴역 장교이며, 뛰어난 사격 실력을 가지고 있고 특히 저격에서 두각을 드러낸다. 그 실력과 오랜 전쟁 경험을 바탕으로 능력자와 호각으로 승부할 정도로 무서운 인물.

전쟁에서 뛰어난 능력을 보인 카인을 정부는 특수부대에 영입한다. 카인은 자신의 뛰어난 실력을 유감없이 발휘하며 모든 걸 임무 수행에 쏟았으나, 어느 순간 살인마나 다름없는 자신의 모습을 발견하고 전쟁에 대한 깊은 후회를 하기 시작했다. 게다가 그 이후 임무에서 부대원 절반 이상을 잃으며 임무를 실패하는 사태가 벌어진다. 카인은 이를 자신의 나태함 때문이라며 심하게 자책했고, 끝내 모든 책임을 자신이 지겠다면서 퇴역을 한다.

퇴역 후 카인은 부대원들의 유가족들을 돕기 위해 의뢰를 받고 사람을 넘기는 일을 시작했다. 그리고 의뢰받은 이사벨이라는 여자를 찾아서 우드 시티를 찾아간다. 그러나 재수없게도 우연히 들른 술집에서 군인들과 이글 홀든의 불화에 휘말리는데, 카인은 그 와중 검으로 이름 높았던 홀든 가문을 상대로 호각 이상의 실력을 보여주어 그 존재를 사람들에게 각인시키는 결과를 낳았다.

두 사람의 결투는 카인이 수류탄으로 이글에게 상처를 입히고 "흥이 깨졌다"며 이글이 물러나는 것으로 마무리되었다. 참고로 이사벨과는 이 때부터 알고 지낸 듯. 이사벨은 그 '우연히 들른 술집'에서 일하고 있었고 나중에는 연인 관계로 발전하게 된다. 처음에는 의뢰 때문이었지만 점점 레나에 대한 감정이 커져버려 일을 완료하는 것을 미루고 있었던 듯하다.

하지만 사람들에게 '능력자를 이긴 비능력자'로 각인된 그의 존재는 또 문제가 되었다. 지하연합의 골칫덩어리, 흑기사 출신의 오토와 아이리쉬 갱 출신인 부처(Butcher)의 심기를 건드리게 된 것. 포트레너드의 동쪽, 지하연합의 세력 도시인 디시카는 척박하고 치안이 좋지 않은 곳이었다. 오토와 부처는 그곳에서 거리의 지배자 행세를 하며 악행을 저지르고 있었는데 어느 날 카인의 활약상이 들려오자 그로 인해 디시카의 주민들이 반기를 들까봐 걱정하게 되었다. 그래서 오토와 부처는 그렇게 되기 전에 카인을 내쫓고자 마음먹었다.

오토와 부처는 카인을 집요하게 괴롭혀왔지만 카인은 끝까지 인내했다. 하지만 어느 날 이사벨이 누군가에게 납치된다. 카인은 그것이 오토와 부처의 소행이라 생각하여 마침내 인내심이 폭발, 그들에게 맞서 싸우기로 다짐한다. 능력자와 비능력자간의 싸움에서 카인 혼자서는 승산이 희박했으므로, 그는 자신과 마찬가지로 퇴역한 전우들을 불러모아 세력을 늘렸으며 여기에 헬리오스 소속 식물 변신 능력자 드니스까지 카인을 돕게 되었다. 이때 드니스가 카인을 도왔던 이유는 불명이다. 확실한 건 그녀가 포트레너드의 안개에 대해 가장 먼저 알고 있었다는 것뿐.

한편 오토와 부처는 나이오비를 속여 아군으로 끌어들여 덤빌 테면 덤비라는 듯 희희낙락거리고 있었다. 근데 문제는 통제불능인 나이오비가 드니스의 도발에 넘어가고 그 결과 오히려 자신들의 세력권이던 디시카가 불바다로 변하고 만다. 믿는 도끼에 발등 찍힌 격이 돼버린 그들은 자신들의 수장인 흑염 하이드에게 도움을 요청했으며, 드니스 또한 포트레너드의 안개에 대한 보고를 올리고 헬리오스의 총수 명왕이 디시카에 직접 행차하기에 이른다. 덕분에 마지막에 카인이 부처의 고기칼에 다져질 뻔했지만 제때 등장한 명왕의 번개에 의해 카인은 살아남고 부처는 통구이가 되어버렸다. 오토 또한 명왕의 번개에 희생될 뻔했지만 흑염 하이드가 도착하여 목숨을 부지하게 되고 앤트워프 협약으로 인해 포트레너드 사건은 종결된다. 이 사건을 계기로 회사와 연합은 포트레너드의 안개의 비밀을 알게 되어 또 다른 갈등이 고조되었다.[2]

사건은 끝났지만 카인은 디시카에서 이사벨을 찾을 수 없었다. 사실 이사벨을 납치한 사람은 오토와 부처가 아니라 안타리우스의 광신도였고 나중에 카인과 이사벨이 다시 재회했을 때는 이사벨은 강각의 레나라는 이름의 강화인간이 되어 이사벨로서의 모든 기억과 감정이 없어진 뒤였다.

지금 그가 싸우는 이유는 밝혀지지 않았지만 정부 혹은 레나와 관련이 있을 것이라고 추정되고 있다. 카인 유니크 플레이버 텍스트에 '인간을 실험체로 사용하는 그들을 절대 용서할 수 없다. 내 시야에 들어오는 순간 고통 속에서 흔적도 없이 사라지게 만들 것이다'라는 말이 적힌 것으로 보아 그의 목적은 아마도 안타리우스 말살인 듯하다.

이후 연금술사 에밀리의 스토리에서 동료들의 모습이 등장했다. 에밀리 말고도 핸드 캐논을 사용하는 거구의 남성, 라이플을 사용하는 노년 여성과 모자를 쓴 남성이 등장했고 설정상 동료였던 인물들이 언급되긴 했지만 영상으로 등장하는 것은 이번이 처음. 카인이 싸우게 된 계기 또한 헨리 맥고윈이 과거로 돌아가 미래의 일을 누설했기 때문으로 밝혀졌다.

헨리의 말을 들은 카인은 이사벨의 흔적을 찾기 위해 전우들을 모아 루사노 수도원에 잠입한다. 의식이 진행되는 상황을 발견하고 의식을 막고자 교전에 들어가나, 나무와 풀을 조종하는 소년에 의해 가로막히고 좌절하는 것으로 끝.

따라서 이들은 벨져와 릭이 제키엘과 전투를 벌이던 그 상황과 같은 시각, 다른 장소에 있었다는 것이 된다. 물론 헨리의 개입으로 역사가 바뀌었기 때문에 명백하게 원래 역사에서는 없었던 일. 좌절하는 카인에게 에밀리는 '미래가 바뀐다는 건 현재가 바뀌고 있다는 뜻이고, 헨리의 말이 사실이라면 자신들[3]은 미래를 바꾸는 터닝 포인트가 되었다. 우리의 존재가 변화를 앞당긴 이상 우리는 언제 다가올지 모르는 위기를 대비해야 한다"며 카인을 북돋았고, 그 결과 자카리 라마레가 에밀리에 관한 기록을 이클립스에 제보하면서 요기와 브루노가 에밀리 일행을 주목하기 시작했다.

'성향상 회사측보다 연합측에 가깝지만 연합의 이글과 사이가 좋지 않은 게 문제' 라고 공식 홈페이지에 적혀있지만 성향과는 반대로 회사와 연이 더 깊다. 포트레너드 사건만 해도 드니스, 명왕 같은 회사 인물의 도움을 더 많이 받았으며 오토와 부처, 이글 등 연합측 멤버와는 적대한 적이 많다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 59").content("""
최동철\n양손에 든 리볼버를 발사하는 좌표생성형 원거리 평타. 좌클릭을 누르고 있으면 최고 연사 속도로 발사한다. 움직이면서 사용하는 것도 가능하며 이때는 이동속도가 10% 감소한다. 매 발사마다 탄환을 한 발씩 소모하며 탄환이 다 떨어지면 재장전을 필요로 한다. 총 장탄수는 16발로 4발당 한 번씩 적을 경직 및 넉백시키고, 마지막 탄환은 두 배 가량의 대미지를 주며 더 큰 경직과 넉백을 가한다. 총알이 다 떨어지면 자동으로 장전하며 이때도 휠업을 한 것으로 간주되어 휠업 버프가 발동된다.발당 대미지는 약하지만 연사 속도가 대단히 빨라 어지간한 딜러의 주력기와도 맞먹는 화력을 보여준다. 한 탄창을 다 비웠을 때의 대미지 공식은 대인계수를 포함하여 4.308 공격력이다. 이 화력을 3초 남짓한 순간 만에 히트스캔으로 투사할 수 있다는 걸 감안하면 실질 위력은 평타 중에서는 실로 독보적이다. 그리고 일반적으로 원캐의 언커먼 평타링은 대미지 증가량이 +30% 정도에 그치지만 카인의 평타링은 근캐와 비슷한 +45%라는 높은 수치를 가지고 있다. 덕분에 관련 장신구에 투자하면 평타 주제에 주력기인 우지에 버금가는 대미지를 뽑는 비범한 평타가 된다. 플레이어의 성향에 따라서는 류탄이나 센트리 링 대신 채용해볼 법도 하다.또한 우클릭기인 우지와 달리 집탄율이 일정해, 거리가 멀다면 우지보다 높은 데미지를 낼 수 있다.다만 첫 타에는 경직이 없고 경직 간격이 꽤 있어서 근캐의 일반적인 돌진기로 돌파하지 못할 수준은 아니다. 또한 사거리도 그리 길지 않아 적 원딜을 노리는 데 쓰는 건 어렵고 접근하는 적을 차단하거나 무력화된 탱커에게 지속딜을 넣기에 적합하다. 물론 돌진기나 슈퍼아머가 부족한 원딜이 이 스킬에 노출된다면 대놓고 정면에서 쏴도 경직 때문에 제대로 반격하지 못하는 걸 볼 수 있다.카인의 1:1 대응력을 높여주는 활용도 높은 테크닉으로 '막발 우지'가 있다. 카인의 평타는 첫 타에 경직이 없기 때문에 히트스캔 평타임에도 상대 기술을 기민하게 끊는 것이 의외로 어렵다. 하지만 상술했듯이 마지막 공격은 상대의 피격 횟수와 관계 없이 즉시 경직과 넉백을 가한다. 이 점에 착안하여 미리 15발을 쏴서 마지막 한 발만을 남겨뒀다면, 막발에서 주어지는 경직을 통해 상대의 움직임을 묶(거나 스킬을 끊)고 안정적으로 우지를 연계할 수 있다. 특히 카인은 선딜 문제로 근접전이 대단히 취약한데 그 선딜을 이 막발의 경직으로 보완할 수 있어 카인의 생존에도 큰 기여를 하는 테크닉이기도 하다. 물론 긴박한 상황에서 빠르고 정확한 에이밍을 필요로 하기에 실전에서 유효하게 사용하는 건 충분한 경험이 필요하다.여담으로, 원캐의 평타임에도 꽤 많은 변화를 겪은 기술이다. 사이퍼즈 출시 당시 카인의 평타는 지금처럼 클릭만 해도 자동으로 나가는 게 아니라 다른 원캐들의 것처럼 일일이 클릭을 해야 할 필요가 있었는데, 그 때문에 평타임에도 유저의 숙련도에 무척이나 영향받는 건 물론 실질 연사력도 떨어졌다. 그리고 다른 특징으로는 웨슬리의 것과 마찬가지로 막발이 적을 다운시켰으며, 거기에 더해 16발이 한번에 재장전되는 것이 아니라 1발부터 16발까지 빠르게 채워지는 방식이었다. 그래서 첫 발을 재장전하는 타이밍에 맞춰 다른 스킬을 사용하면 장전이 취소되면서 딱 한 발만 탄을 채울 수 있었다. 위와 같은 이유로 높은 이론상 위력에도 불구하고 유저들은 평타를 딜링기로 사용하기 꺼렸고, 그 대신 막발의 뛰어난 견제력에 주목해 막발만을 채우고 다니다가 적을 보자마자 막발 다운→우지→류탄→저격 또는 막발 다운→류탄→저격 같은 흉악한 콤보를 쉽게 넣곤 했다. 그러나 2011년 12월 8일 패치로 다운 판정이 경직 판정으로 바뀌었고, 2013년 4월 25일 웨슬리 개편 패치 때 카인도 웨슬리와 마찬가지로 탄이 한번에 재장전되도록 바뀌었다. 이후 2019년 5월 16일 패치로 자동 발사 기능이 추가되었다.레어 영구쿨감링인 '피스톨 크로스링'에 스미스 앤 웨슨 장전시간 -11.53%가 붙어있는데, 이게 구현이 되어있는 옵션인지 아닌지에 대해 말이 많았다. 결론부터 얘기하자면 구현은 되어 있다. 장착한 영상과 장착하지 않은 영상을 각각 촬영 후 겹쳐놓고 프레임 단위로 비교해본 결과 적용이 되어있음이 확인된다. 장전 모션 속도가 빨라지고 장전 효과음이 끝나기 전에 평타가 나가며 그만큼 평타의 재사용 시간이 줄어든다. 그렇지만 숫자가 빨리 바뀐다는 것은 장전 모션 도중에 우지나 류탄을 더 빨리 쓸 수 있다는 뜻이긴 하지만 대부분은 안전한 곳에서 장전하고 사용하는지라 사실 노리고 쓰기는 힘든 편이다.따라서 딜을 늘리고 싶다면 추가공격력 50%를 올려주는 레어 4링인 '스미스 베리드'를 채용하는 것이 낫다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 60").content("""
황중석\n오른손으로 기관단총을 꺼내 조준한 지점으로 발사한다. 마우스 입력을 유지하면 지속적으로 사격하며 클릭 해제로 사격을 중지할 수 있다. 발사 중에는 움직일 수 없고 시점 전환이 전방 180º로 제한된다. 탄 퍼짐이 있어, 적과의 거리가 멀수록 적의 피격 수가 감소한다.

선 딜레이가 꽤 있는 편이지만 히트스캔으로 탄을 뿌리는 스킬 특성 상 거리를 두고 시전하면 어지간해선 끊기지 않고 적을 맞출 수 있다. 거리를 둔 적에게는 대놓고 써도 되는 수준이다.

연사 속도는 초당 7발 정도이며 여러 아이템을 통해 최대 28발까지 장탄수를 늘릴 수 있다.[8] 장탄수가 늘어나더라도 연사 속도는 변함이 없어 그만큼 우지 지속시간도 늘어난다. 또한 우지 임팩트의 경우 우지를 쏘는 도중에 먹으면 대미지 증가 효과는 적용되지만 발사 수 증가 효과는 적용되지 않는다.

우지는 사이퍼즈에서 손꼽힐 정도로 막강한 위력을 자랑하는 주력기로, 제대로 들어간다면 궁극기인 드라그노프 한 발보다도 훨씬 강력한 대미지를 주는 스킬이다. 이게 얼마나 강력하냐면 22발 풀히트 대인 대미지가 528 + 2.64 공격력, 28발 풀히트 대인 대미지가 무려 672 + 3.36 공격력이다. 샤드 리볼버(408 + 2.04 공격력), 최대 충전 보름달베기(374.4 + 1.872 공격력), 일렉버스트 상태의 전자기 방출(396 + 1.98 공격력) 등 어지간한 근거리 딜러의 주력기를 훨씬 뛰어넘는 수치다. 또한 매 공격마다 적을 띄우는 판정이 있는데, 많은 타격 수를 가진 스킬 특성상 피격되는 적은 점점 공중으로 떠오르게 된다. 그래서 딜링뿐만 아니라 홀딩 및 연계 면에서도 우수한 성능을 가지고 있으며 다운 대미지 감소는 거의 의미가 없다.

그러나 실전에서는 저 화력을 온전히 발휘할 상황이 많지 않다. 일단 가뜩이나 물몸에다 어그로까지 높은 카인이 긴 시간 동안 한 곳에 고정돼야 하는데다가, 적이 멀리 있을수록 타격 수가 줄어 화력이 급감한다는 치명적인 단점이 있다. 상술한 막강한 대미지는 적 코앞에서 적중시켜야만 낼 수 있으며 최대 사거리 부근의 적에게는 툴팁대로의 피해를 줄 수 없다. 그렇기 때문에 이 스킬로 딜링을 하기 위해서는 적당히 접근해서 시전해야 하는데, 카인의 취약한 근접전과 더불어 이 스킬이 다른 행동을 할 수 없는 채널링 스킬이라는 걸 감안하면 이는 너무나 위험한 행위다. 또한 전방 180도까지만 시선을 돌릴 수 있어 뒤에서 들어오는 공격에는 대응할 수 없다.

또한 저격과 센트리로 적의 진입을 애당초 차단하며 초장거리에서 공격하는 카인의 특징 상 우지의 화력을 발휘하는 건 현실적으로 어렵다. 2nd 궁극기를 들면 우지를 적극 활용할 수 있으나, 저격을 갖고 있는 카인은 사실상 우지를 생존기 수준으로 활용하게 된다.

이러한 단점 탓에 우지를 단순한 대미지 딜링기로 운용하는 건 카인의 플레이 방식과 어울리지 않는다. 중거리 히트스캔 기술임을 감안하면 적은 선딜, 모든 공격에 있는 다운 판정, 그리고 워낙 강력한 자체 화력 덕분에 거리가 좀 있더라도 평균적인 대미지는 나온다는 점 등을 고려해보면, 우지는 근접해서 딜링을 하라고 있는 기술이 아니라 접근하는 적을 중거리에서 견제하기 위해 있는 기술임을 알 수 있다. 특히 히트스캔 공격이라 맞히기 쉽고 모든 공격에 다운 판정이 있기 때문에 긴급회피와 더불어 카인의 생존에도 상당히 중요한 역할을 담당한다. 다수가 몰려오는 상황일 때 여기저기 난사하면 적을 넘어뜨려 시간을 벌 수 있고, 적에게 쫓길 때 모퉁이를 돌자마자 우지를 꺼내 적을 다운시키고 도망치거나 여건이 된다면 역관광도 노려볼 수 있다. 물론 평타 문단에서 서술한 '막발 우지'를 활용하는 것도 좋은 방법이다.

물론 그럼에도 워낙 데미지 딜링이 높기 때문에 600~800 정도의 적절한 거리에서 사용하면 적 딜러를 처치할 수도 있기에 데미지 딜링기로 사용할 가치는 충분하다.

참고로 벽에 붙어 있는 적에게는 우지가 더 많이 히트하는 현상이 있는데, 벽에 맞은 총알도 그 자리에서 공격 판정이 생기기 때문이다. 벽이 없었다면 그대로 빗나갔을 총알이 벽에 맞아 공격 범위가 생성되면서 그 안에 있던 적이 맞는 것이다. 물론 카인은 배달형 탱커가 아니므로 노리고 활용하는 건 어렵지만 우연히 상황이 맞아 떨어졌다면 보다 먼 거리에서 안정적으로 딜을 넣을 수 있다.

딜각이 좁고 후반에는 딜이 떨어지늨 저격 대신, 비교적 안정적이면서도 후반까지 높은 위력을 지니는 우지의 딜링에 주목해 우지에 집중적으로 투자하는 극 우지 세팅이 있다. 우지의 대미지를 늘릴 수 있는 장비들을 최대한 구비하면[9] 1발당 100+100+15+5.25+5.25+16+9+9=259.5%의 대미지를 가진 우지가 28발 날아가게 된다. 하지만 이러한 세팅은 저격을 통해 맵을 장악하여 스노우볼링을 굴리고 한타에도 강력한 누킹을 통해 팀에 도움을 주는 딜포터로서의 카인의 특성과는 많이 반하기도 하고, 앞서 언급된 우지의 단점들로 인해 우지를 사용하기 위해 1선에 나온다는 행위 자체가 굉장히 위험하기 때문에 무난하게 추천할 세팅은 아니다.

여담으로, 이름은 UZI이지만 생긴 건 TEC-DC9에 더 가깝다. 굳이 따지자면 마이크로 UZI나 TMP가 비슷하게 생겼다. 그리고 드라그노프의 외형을 변경하는 무기 액세서리인 '고독한 심판'을 착용하면 우지의 외형도 Vz.61 기관단총과 비슷하게 변한다.

2nd 궁극기인 샷건을 들 경우 카인의 장점인 사거리가 매우 짧아지기 때문에, 원하든 원치 않든 우지를 주력기로 활용하게 된다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 61").content("""
김태섭\n통칭 센트리 혹은 디티. 현재 자신의 위치에 DT류 레이더와 동일한 외형의 레이더를 설치한다. 이 레이더는 설치된 지역의 시야를 밝혀주고 지뢰의 은신 효과를 감지하며, 일정 시간이 지나거나 공격받아 체력이 0이 되면 사라진다.

카인이 다른 원거리 딜러들과 차별화되는 큰 부분이자 카인이 전략적 가치가 높은 이유다. 직접 캐릭터가 위치하지 않아도 지속적으로 시야를 밝혀주는 레이더는 근캐의 침입과 기습 이니시를 차단해 적의 전략 구상 자체를 방해하는 데 중요한 역할을 한다. 비록 DT처럼 벽이나 안개 너머의 시야까지는 공유해주지 못하지만, 그렇다고 해도 일단은 시야를 공유해주는 점 때문에 카인의 저격과 생존을 원활하게 해주는 1등 도우미로 손꼽힌다. 여러 근딜들의 뒤치기 방지, 골목길 테러 방지 등 여러모로 유용하므로 쿨타임이 될 때마다 주요 길목 여기저기에 설치해주자. 효율적인 장소들이 따로 있긴 하지만 철거반이 지나가지 않는 동선, 혹은 탱커가 계속 보기에는 중요도가 떨어지는 곳에 까는 것만으로도 충분히 기여가 된다.

또한 스킬 설명문에는 나와 있지 않지만, 센트리 레이더에는 저격의 사거리를 늘려주는 숨겨진 효과도 있다. 연습장 기준 큰 박스 한 칸 반 정도의 사정거리를 늘려주므로 징검다리 식으로 시야가 이어지게 깔아주면 맵 끝에서 맵 끝까지 저격이 닿는 것도 가능하다. 물론 센트리의 전략적 가치를 활용하지 않는 것이기도 하고 보이면 우선적으로 파괴되는 것이 센트리이기 때문에 실전에서 활용할 수 있는 가능성은 많지 않다.

깨알같은 팁으로 이 센트리 레이더 또한 엄연한 오브젝트 판정이라, 저격하기 전 자기 앞에 깔아두면 중하단 한정으로 비관통, 스플래시 없는 적의 원거리 공격을 한 번쯤 막아주기도 한다. 초중을 노티~1티로 극복해야 하는 카인 특성상 알아두면 나쁘지 않은 팁이다.

관련 장신구를 통해 센트리의 체력을 늘리고 쿨타임을 줄일 수 있다. 다만 최대로 효과를 볼 수 있는 4레어를 착용하더라도 체력은 1040까지라 한계라 사실상 쿨타임 감소 효과를 보고 써야 하는데, 이 게임은 그렇게까지 센트리가 많이 필요할 만큼 진입 경로가 복잡하지 않으므로 센트리 쿨타임 감소의 필요성이 떨어진다. 딜링이 떨어진다는 유틸 위주 장신구의 문제도 있으므로 센트리 장신구의 채용은 추천되지 않는다.

여담으로 사이퍼즈 초창기에는 센트리의 성능이 지금보다 훨씬 우수했다. 우선 체력이 1500으로 훨씬 높았고 지속시간도 매우 긴 120초였으며 지금의 DT에 필적할 정도로 시야가 넓었던 것은 물론 지뢰처럼 자체 은신 기능도 갖추고 있었다. 또한 DT류 아이템처럼 벽이나 안개까지 뚫고 시야를 밝혔다. 그러나 2011년 9월 8일 패치로 체력, 지속시간, 시야가 감소했고 은신 기능이 삭제됐으며, 2014년 2월 13일 패치로 센트리 레이더가 벽이나 안개를 뚫고 시야를 공유해주지 못하게 되었다. 또한 시바의 플랜 디코이 전에는 시바의 은신도 감지할 수 있었지만 시바의 은신 방식이 변경된 이후 시바의 은신은 감지할 수 없게 됐다.

연금술사 에밀리의 출시 이후 이스터에그[10]가 생겼다. 센트리의 외형이 에밀리의 잡기스킬에서 나오는 머리에 한 방 뚝배기 날리는 토끼모양 센트리로 변경됐다.[11] 하지만 센트리와 DT인사이트류 아이템의 적군/아군 소유 여부가 구별하기 힘들어져 원래대로 돌려놓으라는 요구가 많았으며 그래서인지 2020년 10월 29일 패치로 센트리가 원래대로 되돌아갔다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 62").content("""
이아영\n조준한 지점에 수류탄을 던진다. 수류탄은 지형에 의해 튕겨질 수 있으며, 직격되면 바로 폭발하고 그렇지 않다면 바닥에 착탄한 후 약 1.5초 뒤에 폭발한다.

수류탄은 350 거리 미만으로 던지면 착탄 후 50 거리를 이동하고 폭발한다. 350 이상의 사거리에 던지면 착탄 후 100 거리를 이동하면서 폭발한다. 따라서 평지를 기준으로 최대 사거리는 기존 사거리 보다 100 증가한다고 보면 된다. 수류탄은 반지름 165 범위로 공격한다.

폭발에 맞은 적을 높이 띄울 수 있어 연계에 유용하다. 자주 사용되는 류탄 - 저격은 류탄 시전 후 곧바로 저격을 들어 떨어지는 적을 사격하는 콤보로, 적에게 최소한 한 번은 다운 대미지 감소 없이 공중에서 저격을 넣을 수 있다. 류탄이 사거리 안이라면 일반적으로 그냥 저격을 들기에는 다소 가까운 상황이기 때문에 류탄이라는 무력화 작업을 거치는 것. 또한 비교적 선딜이 짧고 깔아두기가 가능한 매커니즘으로 인해, 근접전 상황일 경우 생존기로 사용할 수 있는 기술이기도 하다. 적을 크게 띄운다는 특성상 적중에 성공한다면 도주할 시간을 벌 수 있다.

투사체가 지형의 영향을 받아 움직이기 때문에 벽에 튕겨 던지거나, 경사로에 떨어지게 하여 굴러 내려가게 하는 등 다양한 응용법이 있다. 던지는 거리, 땅에 닿아서 굴러가는 거리, 폭발 범위를 감안하면 연습장 기준 7칸보다 약간 긴 정도로 긴 사거리를 가졌지만, 투사체가 날아가는 시간이 있기에 사거리를 살려 견제를 넣는 건 어렵고 지형을 넘겨 던지는 등의 테크닉이 필요하다.

평타, 우지, 저격만으로도 카인의 딜은 충분히 완성할 수 있기 때문에 류탄은 상대적으로 딜 중요도가 떨어진다. 그래서 긴급회피 장신구와 자주 교체되기도 하지만 조금씩 상향이 되면서 다운기 중에서 최상위권의 피해량이 되었기 때문에, 제대로 투자를 해주면 괜찮은 대미지가 뽑히니 링을 사용하는 것도 좋은 선택지가 되었다.

만약 작정하고 류탄 링에 임팩트를 더하면 적 딜러에게 2000 이상의 데미지를 띄울 수도 있다. 유틸을 떠나 데미지만 보면 대인 별점 3개가 아깝지 않은 다운기인 셈이다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 63").content("""
유민석\n통칭 긴회. 무적 상태가 되면서 지정한 방향으로 구른다. 전후좌우 모든 방향으로 구를 수 있으며, 이동키 입력이 없다면 전방으로 구른다. 라이트닝 스텝처럼 대각선 방향으로는 구를 수 없다. 옆이나 뒤로 굴렀을 때는 앞으로 굴렀을 때보다 딜레이가 약간 길어진다. 뒤가 제일 멀리 구르고 딜레이도 제일 길다.

즉시 무적 회피기라 카인의 생존에 큰 공헌을 하는 기술이며, 동시에 근접해서 카인을 노리는 적에게 대항할 기회를 제공해주기도 하는 기술이다. 막발을 남겨 놓은 상태라면 회피 이후 선딜레이가 없는 막발로 경직을 준 다음에 바로 우지를 사용해서 역전의 기회를 잡을 수 있다. 뒤도 돌아보지 않고 도주해야 하는 상황이 아니라면 적과의 대치 상태에서는 틈을 내주는 것보다는 반격의 기회를 노리는 것이 생존에 더 도움이 된다.

보기에는 그렇게 안 보이지만 스킬 시작 시 짧은 시간 동안에는 무적 상태가 아닌 슈퍼아머 상태이다. 평범한 경직이라면 별 상관 없지만, 상태이상을 동반한 공격을 피하려고 할 때 무턱대고 스페이스를 연타했다간 가끔씩 긴급회피가 캔슬되는 불상사가 생길 수 있으니 주의하도록 하자. 여담으로 예전 시절에는 이 시작 부분의 슈퍼아머가 없었기에 적의 공격에 너무 딱 맞춰서 긴급회피를 쓰면 긴급회피가 캔슬되는 사태가 종종 발생했으며, 이는 버그로 판명되어 지금처럼 변경되었다.

대부분의 회피기들이 그렇지만 관련 장신구를 착용하면 성능이 크게 향상된다. 언커먼 링은 3.3초 정도, 레어 링은 4.1초 정도 쿨타임이 감소하며 레어에는 긴급회피 이동 거리 증가 옵션도 있어 어지간한 방어 아이템 하나 이상의 생존력 향상을 기대할 수 있다. 특히 50코인 비싼 대신 우지 추가 공격력 15%가 붙은 커맨더-긴급회피는 사실상 유니크나 다름없는 취급을 받으며 채용률이 매우 높다. 긴급회피-커맨더 링 적용 시 앞 560(+50/45/45) 옆 600(+50/55/50) 뒤 630(+55/60/55)거리를 이동할 수 있게 된다.

여담으로 보이스 박스에는 적혀 있지 않지만 앞으로 긴회를 쓸 때와 뒤로 긴회를 쓸 때 보이스가 다르다. 같은 총캐인 웨슬리의 긴회 보이스는 앞으로 구르거나 뒤로 굴러도 같은 것과는 조금 다른 차이점.

카인의 두 번째 궁극기는 발포 시 장전 시간이 있어 스킬이 봉인되는데 유일하게 긴급회피는 사용할 수 있다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 64").content("""
최동철\n스미스 앤 웨슨을 재장전한다. 버프인 치명타 증가 효과가 걸림과 동시에 스미스 앤 웨슨의 탄이 최대치인 16발로 충전된다. 웨슬리와 더불어 휠업 스킬에 버프 외의 다른 기능이 있는 둘뿐인 경우이다. 총알이 다 떨어져 자동으로 장전할 때도 퍼스널 액션을 사용한 것으로 간주되어 버프가 적용된다.

기본공격을 사용하려면 필수적으로 사용해야하는 휠업이지만, 휠업의 탄피 떨어지는 소리가 저격 최대 사거리와 맞먹을만큼 멀리까지 시끄럽게 잘 들리기 때문에 적에게 위치를 알려주고 싶은게 아니면 필요할 때만 사용하는 습관을 들여야한다.

여담으로 장전할 때 잘 보면 탄피가 6개밖에 나오지 않는다. 거너 J가 권총을 4발 쏘고 장전시에 4발 빼내는 세심함에 비해 대조되는 부분. 이는 8발을 장전하는 웨슬리도 마찬가지다. 장전 모션 자체는 현실에서도 가능하긴 하지만 이 양반은 권총 두 자루를 한 자루만 장전하는 모션으로 16발을 채워버린다. 웨슬리와 장전 모션을 공유하기 때문으로 보인다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 65").content("""
황중석\n두 궁극기 공통적으로 디시카에서 전사한 카인의 전우와 관련이 있다.

1st : 드라그노프 - 바실리의 유품
2nd : E.D 트렌치 건 - 카인의 전우인 에드워드 데이의 딸 연금술사 에밀리가 제작한 산탄총.

여담이지만 궁극기로 사용하는 무기들이 꽤나 강렬하다보니 유저들 사이에서 1차 궁극기는 저격카인, 2차 궁극기는 샷건카인으로 불린다. 적이든 아군이든 카인이 있다면 궁극기 구별이 빠르기에 꽤나 좋은 장점.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 66").content("""
김태섭\n등 뒤에 접혀 있던 저격총을 꺼내들어 저격 태세로 돌입한다. 이 상태에서는 시야가 대폭 증가하므로 일반시야로는 볼 수 없는 거리까지 훤히 볼 수 있으며 안개 너머도 볼 수 있다. 그러나 이동 불가, 미니맵 확인 불가, 시점이 좁은 1인칭 시점으로 전환되며, 소리까지 차단되는 등 극도로 무방비한 상태가 된다. 마우스 우클릭을 하면 조준경 배율 확대/축소를 하고 좌클릭으로 탄환 하나를 소모해 발사한다. 탄환은 최대 5발(S 목 유니크 효과 적용 시 6발)까지 저장할 수 있으며 저격 시전 중에는 쿨타임이 돌아가지 않는다. 스킬을 재시전하면 저격 태세를 해제할 수 있다. 맞출 수 있는 대상이 있으면 크로스헤어가 좁아지며 하얗게 변한다. 저격 명중률을 높이고 싶다면 크로스헤어에 집중해보는 것이 좋다.

치명적인 단점으로는 저격 모드 개시 시 충전되고 있던 탄환이 사격 여부를 떠나 다시 처음부터 돌아간다는 것이다. 즉 탄환이 쏘지도 않았는데 저격총을 드는 순간 없어지는 것이다. 때문에 마음껏 들었다 놨다 하기보단 꼭 필요한 순간에 들어야 한다. 숙련된 카인 유저는 탄환 쿨타임 낭비를 방지하기 위해 아군에게 일단 적극적으로 싸우지 말라고 권하곤 한다. 게다가 유독 시전음이 우렁차기 때문에 발동만 하면 게임 플레이어 10명이 다 알아채고, 본인은 벗어날 수단을 당분간 잃는데다 미니맵도 못 보는 패널티까지 가져 최중요 타겟이 된다. 저격수의 재능이 없을지도 모른다 게임 밸런스를 위한 어쩔 수 없는 조치인 것이 만약 정말 저격수처럼 은밀하게 발동해 원거리에서 적을 마음대로 사살할 수 있으면 사운드플레이가 핵심인 게임 밸런스 자체가 무너지기 때문이다. 기존에는 사격 후 궤적 표시가 없었는데 이것도 게임 초기 카인이 워낙에 밸런스를 붕괴시켜 의도적으로 넣어 약점을 부여한 패널티다.

여담으로 카인 설정화엔 이런 접이식 저격총을 두고(말도 안 됨)이라는 각주가 붙어 있다. 다른 총도 아니고 정밀함이 중요한 저격총의 총열을 접고 편다는 건 물론 말도 안 되는 설계이긴 하다. 게임적 허용으로 넘어간 듯.

카인의 성능적 정체성이라고 말할 수 있는 매우 중요한 기술로, 궁극기를 제외한 모든 기술은 카인의 보조기에 지나지 않는다. 산술적 데미지가 높은 우지가 주력기인가 싶겠지만 근접전 최약체인 카인이 적에게 근접해서 오랜 시간 적 하나를 붙들고 우지를 쏘는 것은 현실적으로 매우 어렵다.

위치가 고정되고 시야가 극도로 좁아지기에 신중한 위치 선정을 필요로 하며 적을 정확히 조준해야만 적중시킬 수 있는 고난도 기술이지만, 익숙해지면 시야를 훨씬 넘어서는 먼 거리에서 클릭 몇 번으로 적 딜러를 순식간에 없앨 수 있는 저격은 분명한 카인의 핵심 스킬이다. 조작 방법은 FPS 게임에서 등장하는 저격총류 무기와 유사하기에 FPS 경험이 있다면 어느 정도 도움이 된다.

사실 지원폭격 / 별똥별 등 저격보다 더 긴 사거리를 가진 스킬이 없는 것도 아니고 아예 글로벌 궁극기인 용성락 / 비행 같은 것도 있으니 사거리가 길다고 하기엔 무리 아닌가 할 수도 있다. 그럼에도 불구하고 저격이 초장거리 공격의 대명사가 된 이유는 이 스킬이 히트스캔 판정이기 때문이다. 적이 사선에 들어왔을 때 공격키 입력과 동시에 공격 판정이 발생하기 때문에 장거리 킬 결정력과 전선 장악에 대해선 다른 원거리 스킬이 따라오기 힘들 만큼 강력함을 보여준다. 원거리 딜러들은 대체로 자신의 공격은 닿고 적의 공격은 닿지 않는 거리를 유지함으로써 안전을 확보하는데, 저격은 그런 싸움이 통하지 않을 만큼 매우 긴 사거리를 갖고 있다. 원딜들은 정면 돌파를 할 수단도 부족하고 카인을 측면에서 기습하는 것도 어려우니 자연히 지형 너머로 몸을 피할 수밖에 없고 이는 적에게 큰 압박으로 작용한다. 때문에 카인은 대부분의 원거리 딜러를 상대로 상성상 우위를 점한다.

저격을 사용할 때의 유용한 팁이 있다. 일단 저격을 준비하는 중 에임 전환이 자유롭다. 또한 저격 준비 완료 시 에임이 위치한 곳을 기준으로 저격 조준이 시작된다. 즉, 저격을 준비하는 선딜레이를 그냥 선딜레이로 칠 것이 아니라 적을 조준하기 위한 준비 시간으로 치면 더욱 신속한 저격이 가능하다. 그러니 저격을 시전할 때 그냥 선딜레이라며 에임을 가만히 두지 말고, 최대한 에임을 적에게 따라가며 시전하도록 하자. 신이여를 외치자마자 적에게 저격을 먹여줄 수 있다. 이 팁을 숙지하는 것만으로도 게임 기여도가 확연히 달라지며 카인의 진입장벽이 대폭 낮아진다.

그리고 헐 다운, 소위 '빼꼼샷' 이 가능하다. 저격의 발사 지점이 카인의 머리 쪽에 있기 때문에, 언덕 지형에 걸터서서 머리만 살짝 내놓은 채로 적들을 사격할 수 있다. 미러픽에서 안정성을 상승시켜주고 적들의 견제 사격을 보다 덜 받을 수 있다. 묘하게 고증에 충실하다

창발적 테크닉이 있는데 아군의 박스를 뚫고 적을 사격할 수 있다. 타워 박스 근처에서 농성을 벌이는 일이 잦은 카인에게 유용한 팁. 적이 박스 언저리에서 대항할 때 저격으로 적의 머리를 날려줄 수 있다.

하지만 저격 중에는 미니맵 확인이 안 되고 소음, 특히 적 궁극기 시전 소리도 잘 들리지 않게 되어 주위 공격에 극도로 무방비해진다. 팀에 카인이 있는데 상대편이 비행이나 용성락 등의 궁극기를 사용했다면 카인의 위치에 위험핑을 여러번 찍어서 위기상황임을 알려주는 것이 좋다. 또한 여타 궁극기가 그렇듯 시전 음성이 크고 탄환의 궤적이 적에게도 보이기 때문에 정말로 현실의 저격수처럼 적을 은밀하게 암살하는 것은 어렵다. 그러므로 주위 상황을 파악하고 신중하게 자리를 잡는 것이 중요하며 저격 상태를 너무 오래 유지하는 것은 피하는 게 좋다. 당연하다면 당연하지만 관통 기능도 없기 때문에 나이오비 / 린 / 토마스 등의 장벽형 스킬이나 레오노르 / 휴톤 등 방어스킬로 막는 탱커, 타워를 관통할 수 없다.

원거리 공격이라는 특성상 다운된 적에게도 적중시킬 수 있으므로, 한 번이라도 맞혔다면 사거리에서 벗어날 때까지는 계속해서 추가로 맞힐 수 있다. 다운된 적은 그 자리에 정지해 있는 상태이니 적중 난이도도 크게 낮아진다. 다만 이러한 점을 감안했는지 드라그노프는 다운 대미지 감소율이 30%로 유독 크며, 같은 적에게 연이어 맞힐 때마다 대미지가 5%씩, 최대 15%까지 감소하는 페널티도 있다. 이글의 뇌안도나 제레온의 로열 가드로 막는 것 역시 맞은 것으로 간주되어 다음 타격의 대미지는 감소된 대미지가 들어간다. 두 페널티는 복리로 적용되므로, 다운된 상태에서 4발 이상을 맞을 경우 마지막 공격은 0.7x0.85=0.595로 40.5%의 대미지가 감소한다. 이를 고려했을 때 단일 대상에게 5발을 전탄 명중시켰을 경우의 대미지는 대인 기준으로 약 836 + 5.85 공격력이다.

한편 설명문에 명시되지 않은 세 가지 효과가 존재한다. 첫 번째로 저격 상태에서는 안개 속을 꿰뚫어 볼 수 있다. 그래서 시야를 확보해야 하는데 진입하기는 불안하다면 저격을 잠깐 켜서 안을 확인할 수 있다.
두 번째로는 저격 상태에서의 시야는 벽을 뚫고 적을 쳐다보는 것이 가능하다. 원래 시야가 확보되지 않은 위치에 적이 있으면 벽에 있는 틈새로도 적이 보이지 않고 아군이나 아군 오브젝트로 시야가 확보된 적이여야만 벽의 틈새를 통해서 벽 너머에 있는 적의 모습을 볼 수 있는데 저격 상태에서는 이 조건을 무시하고 벽의 틈새로 적의 모습을 보는 것이 가능하다. 또한 맵 양끝에 있는 통로의 경우 통로에 최대한 붙은 상태로 저격을 쓰면 마찬가지로 해당 통로 벽 너머에 있는 적의 모습을 볼 수 있다. 단, 이렇게 보이는 적의 모습은 카인만 확인 가능하며 다른 아군에게는 보이지 않는 판정으로 당연히 미니맵 상으로도 드러나지 않고 저격으로 맞추는 것도 불가능하다. 이는 특히 매트로폴리스 같은 안개맵에서는 전방 사이드 타워쪽에서 중앙으로 빠져나오는 안개 골목을 저격으로 확인이 가능해지는 등 유용하게 사용할 수 있다.
세 번째로 저격의 최대 사거리 근처에 있는 센트리 레이더는 저격의 사거리를 증가시킨다. 센트리의 시야 안에 있는 적이라면 다 맞힐 수 있을 정도로 증가하며, 실용성은 없지만 센트리 여러 개를 연달아 설치하면 그만큼 사거리를 더 늘리는 것도 일단은 가능하다. 해당 지점에 센트리를 미리 깔아둬야 하는데다가 센트리는 보이자마자 우선적으로 파괴되는 경우가 잦으므로 자주 쓸 수는 없는 방법이지만 센트리 근처에서 운 좋게 한타가 일어났을 때 활용할 수 있다.

또한 드라그노프 시전 중에는 상하 에임 제한이 사라진다. 그래서 사거리와 조준 실력만 된다면 하늘로 날아오른 트리비아, 카를로스, 빅터, 마를렌, 탄야 등을 격추시키는 것도 가능하다. 물론 저격 중인 카인 역시 공격에 취약한 상태이므로 무턱대고 노릴 수는 없지만 성공했다면 팀에게는 명사수라는 찬사를 받고 적에게는 굉장한 굴욕을 선사할 수 있다.[19]

레벨대에 맞게 착실히 공격 아이템과 저격 링에 투자한다면 초반 적 딜러를 1~2발에 즉사시킬 수 있기에, 타워 싸움에서 승리하여 중앙을 확보하고 나면 이러한 대미지와 긴 사거리를 통해서 적들의 성장에 엄청난 압박을 줄 수 있다. 이때 최대한 적들의 동선을 막고 아군의 성장을 도모해서 격차를 벌리는 것이 초반 카인 운영의 핵심으로 이 때 이득을 취하지 못하여 미처 성장하기도 전에 적들이 방템을 구비하기 시작하면 게임이 급격하게 어려워진다. 이렇게 어느 정도 이득을 취하고 딜러들까지 방템을 구비하여 적들이 저격을 맞고도 살아남을 가능성이 높아지기 시작하면 저격 사용에 신중한 판단이 요구된다.

이때부터는 본격적으로 딜포터의 역할이 중점이 되는 시기인데, 드라그노프의 단일 대상에게 명중했을 시 대미지 감소라는 패널티를 최대한 덜어내고 적들에게 높은 딜을 누적시키기 위해서 확정 킬을 내기보다는 누킹을 중점으로 하는 것이 중요해진다. 또한 저격은 넉백 거리와 다운되는 시간이 길어서 적에게 딜로스를 유발하기도 적합한데 이점을 감안하여 아군을 노리는 근거리 딜러나 탱커들을 저격하여 눕히거나 후방에서 백업을 오는 딜러들에게 큰 대미지를 줌으로써 한타에 참여하기 어렵게 만드는 것이 주요 관건이 된다. 그 외에도 사거리가 긴 만큼 도망치는 적들을 노리기에도 적합한데 도망치는 중이거나 생존해나갈 가능성이 있는 적들을 저격하여 킬캐치를 하는 것 역시 가능하다.

물론 게임에 큰 영향을 끼치는 1순위로 제거해야할 적이 있다면 5발을 다 사용하는 것이 좋을 수 있지만 이렇게 되면 저격을 통한 맵 장악과 여러 대상에 대한 누킹은 포기해야 됨은 물론이고 대미지 감소로 인해서 탄약 소비에 비해 효율도 굉장히 떨어지기 때문에 킬 욕심을 내는 것은 지양해야 된다. 카인의 현재 역할은 단순한 딜러가 아닌 딜포터로서의 정체성이 강하다는 점을 기억하자.

다만 이러한 이점을 활용하려면 일단 대상을 맞춰야하기 때문에 FPS에 익숙하여 저격을 활용하는 방법을 충분히 숙지한 사람이라면 그만큼 효과를 보기도 쉽지만, 그렇지 않은 유저라면 다른 캐릭터와 다른 조작감으로 인해서 적응하기 어려운 스킬이라는 점을 유념해야 한다. 또한 헤드샷 판정이 없고 FPS와는 다르게 엄폐와 이동이 수월하지 않으며 탄도나 탄속이 적용되지 않고 발사하는 즉시 명중하는 히트스캔 방식이기 때문에 상대적으로 저격의 난이도는 낮은 편에 속하지만 사이퍼즈 내에서도 에임의 영향이 독보적으로 크기 때문에 다루기 쉽지 않다. 게다가 탄수는 한타에서 많이 쏴봐야 6 ~ 7발 정도밖에 사용하지 못하기 때문에 한 발이 빗나갔을 때의 영향은 굉장히 크다. 그렇기 때문에 카인을 운영하기에 앞서 에임을 연습하는 것 외에도 저격을 성공시키기 위한 테크닉이나 콤보 등의 요령을 알아둘 필요가 있다.

우선 저격을 하기 전에 위치를 선정하는 것이 가장 중요하다. 카인이 활약하기에 가장 좋은 위치는 장애물 없이 일자로 뻗어있는 라인에서 아군 후방 지점이다. 이러한 장소에서 한타를 시작해야 긴 사거리의 이점을 활용할 수 있음은 물론이고 최후방에 서서 저격을 하기 때문에 적들을 한 눈에 파악하기도 쉬우면서 동시에 안전을 확보할 수 있다. 그 밖에도 고저차가 있는 언덕에서 저격을 하는 것도 좋은 선택이 될 수 있는데 일직선으로 맞히고자 하는 목표를 가로막는 대상이 있다면 그대로 목표를 저격하는 것을 포기해야되는 평상시와는 달리 고저차가 생기면서 포괄적으로 조준을 해낼 수 있기 때문에 원하는 대상을 맞히기에도 적합하다.

이러한 위치선정 외에도 우선적으로 저격을 하고자 하는 타겟을 정해두는 것도 중요한데, 우선 카인을 의식하는 캐릭터들의 경우 무빙을 통해 저격을 회피할 가능성이 높기 때문에 방심하고 카인을 의식하지 않으며 다른 아군에게 초점이 맞춰져있을 때를 노려서 저격해야 명중률을 높일 수 있다. 또한 빠르게 이동할 수 있는 기술이 존재하는 적들 보다는 기동성이 약한 뚜벅이 캐릭터를 먼저 노리는 것이 좋다. 물론 경우에 따라 최우선으로 저격해야할 대상이 바뀌는 경우가 상황에 따라 항상 존재하지만 이러한 우선순위를 두는 것 역시 저격의 성공에 큰 기여를 함으로 잘 숙지해둘 필요가 있다.

그리고 이러한 위치확보와 목표를 선정하는 것 외에도 콤보나 아군과의 연계를 통해 저격을 명중시키는 방법이 존재한다. 카인의 저격은 광역으로 홀딩 및 메즈를 겸하는 아군의 기술들과의 궁합이 좋은 편에 속하기 때문에 이러한 기술을 지닌 아군과의 팀업을 통해 저격을 명중시키는 것도 가능하며 아군이 마킹하며 다운시키는 적을 연계를 통해 저격하는 것도 가능하다. 다만 어떠한 경우에서든 다운 상태에 돌입한 적을 공격하는 것은 35%라는 무시못할 대미지 감소가 있기 때문에 마냥 저격의 대미지를 100% 발휘하려면 공중에 떴을 때를 노리는 것이 좋다.

또한 카인의 류탄은 스탠딩과 다운 여부에 상관없이 높이 띄우기 때문에 아군과의 연계나 우지 및 잡기를 통해 카인이 직접 다운시킨 경우에도 류탄을 사용하여 공중에 띄우고 저격으로 온전한 대미지를 입힐 수 있다. 다만 이러한 아군과의 연계에서 주의할 점은 저격은 명중하면 적을 뒤로 멀리 밀어내기 때문에 제대로 킬을 내지 못하고 방생하는 경우가 발생할 수 있다는 것이다. 이렇게 방생하였을 경우 한타에 악영향을 미칠 가능성 역시 존재하니 경우에 따라 저격을 삼가야하는 때도 있음을 알아두어야 한다.

그 외에도 FPS에서 저격총을 사용할 때 사용하는 테크닉인 소위 말하는 '패줌'을 통해 저격을 사용하는 방법도 있는데, 카인의 저격은 저격을 사용할 때 카인이 조준점을 두었던 방향으로 조준을 시작하는 점을 이용한 테크닉으로 저격을 켜고 조준경을 통해 적에게 에임을 맞추고 저격을 하는 것이 아니라 저격을 켜기 이전에 맞히고자 하는 대상에게 에임을 맞춰둔 뒤에 저격을 사용하고 즉시 저격총을 발사하는 것이다. 히트박스가 큰 편에 속하고 스킬로 인한 선후딜의 존재로 인해 여느 FPS 처럼 무빙에 그다지 특화되어있지 않은 사이퍼즈의 특성상 다른 곳을 마킹하고 있는 적이라면 정교하고도 신속하게 저격에 성공할 수 있으며 이동기나 회피기가 있는 일부 캐릭터가 아닌 이상 정면에서 조차 피해내기 어렵다. 오히려 저격을 켜둔 채로 계속해서 조준을 하는 것 보다 명중률이 높다.

큰 영향을 끼치는 기능은 아니지만 드라그노프에는 적을 맞출 수 있는 상황이면 가운데의 조준점이 좁혀지는 기능이 있는데, 시야를 벗어나서 적 캐릭터가 보이지 않더라도 조준경의 조준점이 좁혀지면 거기에 타격 가능한 무언가가 있다는 뜻이므로 적이 시야에 보이지 않더라도 이 경우 저격이 가능하다.

사실상 카인 운영의 주축이기도 하고 그로 인해 템세팅 역시 저격을 우선적으로 투자하여 대미지를 극대화하는 것에 초점이 맞춰져 있는데, 그로 인해 저격의 대미지와 사거리를 늘려주는 저격 맥시머의 효용성은 매우 크다. 맥시머의 유무에 따라 유통기한도 길어지고 킬 결정력 또한 상승하기 때문에 저격의 사거리를 늘려주는 발터펠트 아우프와 더불어 카인의 필수템으로 인정받고 있다. 참고로 대미지 증가 옵션은 실시간 적용이기 때문에 저격을 켠 상태에서도 사용하면 대미지가 증가되지만 사정거리 증가 옵션은 맥시머를 사용한 후 저격을 다시 들어야 적용된다. 참고로 이 사정거리 증가는 확보되는 시야거리또한 증가가 된다.

또한 카인 미러전이라면 저격을 쓰고 있는 카인의 히트박스가 애매해진다는 점이 중요하다. 카인이 저격 모드로 들어가면 자신이 서 있는 위치에서 바라보고 있는 방향으로 발을 앞으로 내딛는 자세를 취하는데,(_/ 요런 자세다)[20] 저격을 쓰고 있는 카인을 정면으로 바라보고 있다면 상관 없는 부분이지만 자신이 카인이고 저격을 쓰는 카인을 측면에서 바라보고 있다면 정직하게 저격을 카인 몸체에 박아버리면 빗나가는 경우가 발생한다. 따라서 저격을 쓰고 있는 카인을 측면에서 제대로 저격으로 맞추기 위해서는 카인 몸체가 아닌 카인 몸체 뒤쪽을 쏴야 제대로 적중한다.[21] 이 점을 모르는 초심자들이 몰래 옆에서 쐈는데 빗나가서 당황하는 경우가 있다.

여담으로 저격할 때 꺼내드는 총은 드라그노프인데 실상 생김새는 진짜 SVD와는 전혀 닮은 구석이 없다. 총구 및 소염기 부분은 바렛, 총신은 MSG 90, 개머리판 부분은 짐 스나이퍼 II 화이트 딩고 사양의 저격 빔 라이플을 닮았다. 또한 반으로 접혀있는 상태로 휴대하고 있다가 결합하여 사용하는 방식인데, 당연히 현실에서 이런 구조의 저격소총은 없다.[22]

격발 사운드를 들어보면 시원하게 폭발음이 들리고 땡그렁하는 제법 큰 탄피가 떨어지는 소리가 들리는데 ,다음 탄환을 장전하는 노리쇠가 움직이는 소리가 들릴 때도 있고 안 들릴 때도 있으며 이 효과음은 격발 후 정확히 50% 확률로 랜덤으로 들린다. 카인이 저격하는 모션을 보면 반자동 소총인게 확실해 보이는데 노리쇠 소리는 왜 설정했는지 의문.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 67").content("""
이아영\n높은 화력
카인은 대미지 공식이 어지간한 근딜과 비교해도 밀리지 않을 수준인데다 모든 스킬의 대인 계수가 1.2로 설정되어 있어서, 공격 기술이 적음에도 불구하고 화력이 강하다. 평타, 우지, 트렌치건 모두 제대로 들어가면 동급 스킬 중에서는 견줄 대상이 없을 정도로 막강한 대미지를 보여주며, 저격 역시 딜러를 상대로는 치명적인 피해를 가할 수 있다.
센트리 레이더와 저격이 결합된 탈수기 운영
승기를 잡은 카인은 적을 서서히 말려죽일 수 있다. 센트리 레이더는 설치된 곳의 시야를 지속적으로 밝히는 스킬로, 사이퍼즈에서 시야의 중요성을 감안하면 딜링기 하나 이상의 가치를 갖는 훌륭한 스킬이다. 카인은 후방에서 이 센트리를 부지런히 까는 것만으로도 근거리 캐릭터들의 기습 및 암살 시도를 효과적으로 억제할 수 있다. 적의 시야를 피해 역전의 기회를 노려야 하는 입장에서 카인의 이러한 능력은 큰 장애물로 작용하기에, 카인은 초반에 얻은 이득을 바탕으로 게임의 승기를 굳히기에 적합하다. 이 장점은 엄청난 사거리로 뛰어난 맵 장악력을 보여주는 드라구노프 카인일 때 극대화된다.
초장거리 원거리 전투력 (드라그노프 한정)
드라그노프를 들면 가용 전투범위가 무려 1800까지 늘어난다. 이는 대다수 원거리 캐릭터들의 사거리는 물론 시야까지 아득하게 뛰어넘는다. 이 정도의 사거리를 지닌 스킬이 히트스캔으로 5발이나 날아들어오며, 피해량도 낮지 않아 초중반에는 몸 약한 딜러들을 한두 발에 빈사 혹은 사망에 이르게 한다. 이런 특징 때문에 카인은 저격을 드는 것만으로도 적 원딜들에게 큰 심리적 압박을 가할 수 있어, 이들이 필연적으로 몸을 사리게 만든다. 또한 사거리가 길고 조준 중에는 앙각 제한이 사라진다는 점 덕분에, 저격 카인은 피격 판정이 공중에 떠 대부분의 공격을 받지 않는 일부 캐릭터들의 효과적인 카운터가 되기도 한다.
극단적으로 강력한 순간 화력 (E.D 트렌치건 한정)
트렌치건은 너무나도 협소한 딜각과 없다시피한 근접 선공권을 가졌지만, 그 단점에 대한 보상으로 어마어마한 순간 화력을 뿜어낸다. 적정 사거리에서 3발을 꽂아넣기만 해도 웬만한 근거리 딜러 궁극기 수준의 폭딜이 나오는데, 상황에 따라서는 평타와 우지를 섞으며 이걸 한 번 더 넣을 수도 있다. 이런 엄청난 순간 화력 덕분에 트렌치건 카인은 딜각만 주어진다면 마치 딜러 암살하듯 탱커를 지워버리며, 한정된 시간 안에 트루퍼나 수호자를 제거하는 데에도 탁월한 모습을 보인다. 제 아무리 화력으로 정평이 난 캐릭터라도 트렌치건 6발만큼의 딜을 이런 짧은 시간 안에 쏟아낼 수 없다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 68").content("""
유민석\n다수 공격 능력 부족
카인의 스킬들은 1:1에 철저히 특화되어 있어 다수 공격 능력이 없다시피 하다. 평타는 범위가 매우 좁아 사실상 한 명에게만 딜을 넣을 수 있고, 우지는 다수를 공격하려면 탄환을 흩뿌려야 하므로 딜링기로서의 역할을 포기해야 하며, 트렌치건도 범위 공격 판정이 아니라 탄환 하나 하나가 비관통 투사체로 나가기에 다수의 적에게는 그 위력을 발휘할 수 없다. 심지어 저격은 여럿을 동시에 공격하는 것이 원천적으로 불가능하다. 그나마 이론상 정상적인 다수 공격이 가능한 류탄 역시 범위가 평범해 광역기로 보기는 어렵다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 69").content("""
최동철\n센트리 레이더와 저격이 결합된 탈수기 운영
승기를 잡은 카인은 적을 서서히 말려죽일 수 있다. 센트리 레이더는 설치된 곳의 시야를 지속적으로 밝히는 스킬로, 사이퍼즈에서 시야의 중요성을 감안하면 딜링기 하나 이상의 가치를 갖는 훌륭한 스킬이다. 카인은 후방에서 이 센트리를 부지런히 까는 것만으로도 근거리 캐릭터들의 기습 및 암살 시도를 효과적으로 억제할 수 있다. 적의 시야를 피해 역전의 기회를 노려야 하는 입장에서 카인의 이러한 능력은 큰 장애물로 작용하기에, 카인은 초반에 얻은 이득을 바탕으로 게임의 승기를 굳히기에 적합하다. 이 장점은 엄청난 사거리로 뛰어난 맵 장악력을 보여주는 드라구노프 카인일 때 극대화된다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 70").content("""
황중석\n초장거리 원거리 전투력 (드라그노프 한정)
드라그노프를 들면 가용 전투범위가 무려 1800까지 늘어난다. 이는 대다수 원거리 캐릭터들의 사거리는 물론 시야까지 아득하게 뛰어넘는다. 이 정도의 사거리를 지닌 스킬이 히트스캔으로 5발이나 날아들어오며, 피해량도 낮지 않아 초중반에는 몸 약한 딜러들을 한두 발에 빈사 혹은 사망에 이르게 한다. 이런 특징 때문에 카인은 저격을 드는 것만으로도 적 원딜들에게 큰 심리적 압박을 가할 수 있어, 이들이 필연적으로 몸을 사리게 만든다. 또한 사거리가 길고 조준 중에는 앙각 제한이 사라진다는 점 덕분에, 저격 카인은 피격 판정이 공중에 떠 대부분의 공격을 받지 않는 일부 캐릭터들의 효과적인 카운터가 되기도 한다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 71").content("""
김태섭\n극단적으로 강력한 순간 화력 (E.D 트렌치건 한정)
트렌치건은 너무나도 협소한 딜각과 없다시피한 근접 선공권을 가졌지만, 그 단점에 대한 보상으로 어마어마한 순간 화력을 뿜어낸다. 적정 사거리에서 3발을 꽂아넣기만 해도 웬만한 근거리 딜러 궁극기 수준의 폭딜이 나오는데, 상황에 따라서는 평타와 우지를 섞으며 이걸 한 번 더 넣을 수도 있다. 이런 엄청난 순간 화력 덕분에 트렌치건 카인은 딜각만 주어진다면 마치 딜러 암살하듯 탱커를 지워버리며, 한정된 시간 안에 트루퍼나 수호자를 제거하는 데에도 탁월한 모습을 보인다. 제 아무리 화력으로 정평이 난 캐릭터라도 트렌치건 6발만큼의 딜을 이런 짧은 시간 안에 쏟아낼 수 없다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 72").content("""
이아영\n다수 공격 능력 부족
카인의 스킬들은 1:1에 철저히 특화되어 있어 다수 공격 능력이 없다시피 하다. 평타는 범위가 매우 좁아 사실상 한 명에게만 딜을 넣을 수 있고, 우지는 다수를 공격하려면 탄환을 흩뿌려야 하므로 딜링기로서의 역할을 포기해야 하며, 트렌치건도 범위 공격 판정이 아니라 탄환 하나 하나가 비관통 투사체로 나가기에 다수의 적에게는 그 위력을 발휘할 수 없다. 심지어 저격은 여럿을 동시에 공격하는 것이 원천적으로 불가능하다. 그나마 이론상 정상적인 다수 공격이 가능한 류탄 역시 범위가 평범해 광역기로 보기는 어렵다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 73").content("""
유민석\n낮은 공성력
카인의 대부분의 스킬은 대인계수가 1.2인 반면 공성계수는 0.8에 불과하다. 건물을 공격할 때는 대인전 대비 40%의 손해를 본다는 뜻이다. 스킬 구성이 타워링에 적합하지 않은 것도 있지만 이 낮은 공성 대미지 탓에 카인의 공성 효율은 전 캐릭터 중에도 최악이다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 74").content("""
최동철\n어려운 조준 난이도
카인은 FPS의 요소가 극대화된 캐릭터로, 좁은 범위의 히트스캔 공격 위주로 스킬이 구성되어 있어 사이퍼즈의 원거리 딜러 중에도 유별나게 정확한 조준을 요구한다. 특히 드라그노프는 FPS 게임에서 저격총을 잡아봤다면 그 조준 난이도를 알 수 있는데, 공격범위가 아예 없어 빗나가면 문자 그대로 탄환 한 발만 날리고 게임에 영향을 전혀 끼칠 수 없다. 트렌치건을 선택하면 이 난점이 조금 해소되긴 하나, 그 트렌치건도 조준이 마냥 편한 스킬이 아닌데다가 팀이 트렌치건 조준을 항상 배려하며 협공할 수도 없는 노릇이라 결국 일정 수준의 조준 실력은 있어야 한다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 75").content("""
황중석\n최악의 근접전 능력 (드라그노프 한정)
베테랑 군인이라는 설정이 무색하게도 저격 카인은 근접전이 매우 취약하다. 버트 스트로크는 카인이 근접전에서 능동적으로 내지를 수 있는 사실상 유일한 스킬인데, 바꿔 말해 버트 스트로크가 없는 저격 카인은 근캐의 접근을 허용했다면 긴급회피로 도망가거나 그나마 선딜이 짧은 류탄을 근처에 던지는 것 말고는 대처법이 없다. 후반이 되어 딜러의 콤보 한 바퀴는 버틸 만한 맷집이 갖춰졌다 해도, 이 처참한 근접전 능력 탓에 저격 카인은 근캐에게 습격당할 경우 팀의 지원이 없다면 죽는 건 시간 문제라 봐도 무방하다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 76").content("""
김태섭\n저격 카인은 이기고 있을 때는 승기를 유지하기 쉽지만 반대로 초반부터 팀이 밀린다면 역전하기가 힘들다. 일단 기지 안에 고립된 상황에서는 센트리도 원활히 깔 수 없고 저격도 딜각이 좁아지니 저격 카인 특유의 맵 장악력이 상당 부분 약화된다. 만약 게임 중반부까지 전세를 뒤집지 못했다면 성장 우위를 내준 채로 적 원딜이 서서히 방템을 올리기 시작하는데, 이러한 상황에서 저격 카인은 원딜을 확실히 따지도 못하고, 탱커를 빠르게 녹이지도 못하는 그야말로 무능한 잉여가 돼버린다. 그렇다고 성장력이 좋아서 립을 꾸역꾸역 먹어 후반을 도모하거나 궁 대박으로 일발 역전을 노릴 수 있는 것도 아니다. 결국 저격 카인 플레이어는 초반부터 반드시 승기를 잡아야 한다는 압박감에 눌리며 캐릭터를 운용할 수밖에 없다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 77").content("""
이아영\n극히 짧은 사거리 (E.D 트렌치건 한정)
트렌치건 카인은 과장 좀 보태서 팔 긴 근거리 딜러나 다름없을 정도로 원거리 딜러 중 교전 거리가 극히 짧다. 우지와 트렌치건은 원거리 스킬임에도 근캐의 주력기가 닿는 수준으로 붙어야 제 위력이 나오며, 평타와 류탄 또한 사거리가 길다고는 볼 수 없는 스킬이다. 이 때문에 초장거리 히트스캔 공격으로 뭇 원딜들의 최상위 포식자로 군림하는 저격 카인과 대조적이게도, 트렌치건 카인은 사거리 긴 원딜 대부분에게 만만한 사냥감이 돼버린다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 78").content("""
유민석\n극심한 아군 의존도 (E.D 트렌치건 한정)
상술했듯 트렌치건 카인은 사거리가 워낙 짧다 보니 필연적으로 적 근거리 캐릭터들과 힘싸움을 벌이게 된다. 하지만 어쨌든 트렌치건 카인은 원거리 캐릭터인지라, 사거리를 희생했음에도 근접전에서 근캐들과 대등하게 맞설 정도의 근접 전투력을 가지고 있는 건 아니다. 결국 사거리 긴 스킬이 없고 근접전도 확실하게 내세울 수 없는 트렌치건 카인은 딜각을 능동적으로 만드는 것이 거의 불가능해, 팀의 철저한 보호를 받으며 움직일 수밖에 없다. 탱커나 서포터가 거의 디코이 이전 브루스 수준으로 돌보며 어떻게든 딜각을 만들어줘야 정상적인 플레이가 가능할 지경이다""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 79").content("""
최동철\n따로 노는 캐릭터 설계 (E.D 트렌치건 한정)
기존의 카인은 초창기에 사기로 군림하던 시절 부터 오랜 시간에 걸쳐 어중간한 스킬셋과 스탯으로 드라그노프라는 강력한 영향력을 줄 수 있는 스킬에 의존하는 모양새를 띄던 캐릭터이다. 적의 시야에 포착되지 않는 사거리에서 저격으로 높은 데미지를 줄 수 있는 드라그노프를 지닌 대신 기술 전반적으로 긴 딜타임과 원딜치고는 짧은 사거리, 그리고 부족한 근거리 대처능력을 지니고 있으며 이러한 단점을 메우기 위해 접근을 방해하는 센트리와 위험한 기술을 피할 수 있는 긴급 회피가 존재하는 것이다. 하지만 트렌치건 카인의 경우에는 기존에 드라그노프에 맞춰 디메리트를 크게 물려준 스킬셋을 그대로 가지고서 드라그노프를 포기한 형태를 띄고 있다. 사거리가 짧아서 근거리에서 사격해야 함에도 불구하고 여전히 근거리 대처력은 좋지 않으며 기동력은 원딜 중에서도 최하위권이라 적에게 접근하기도 역으로 도주를 하기도 쉽지 않은데 설상가상으로 이러한 기동성으로 적의 강력한 기술에 대처할 수 있는 게 긴급회피 하나 뿐이다. 그나마 근접전에서 쓰라고 버트 스트로크가 주어진다고는 하지만 엄연히 쿨타임 7초 짜리의 스킬에 짧은 범위와 사거리를 지녀 완전히 근거리에서만 사용할 수 있는데도 선딜이 존재하다 보니 접근전에서는 빠르게 평타로 치고 들어오는 근캐들 상대로는 역부족이다. 이로 인해 원딜러 중에서도 최상급의 순간화력을 지닌 트렌치건이지만 현실적으로 카인의 스킬셋 자체가 그 트렌치건의 발목을 잡는 부분이 매우 많아 드라그노프라는 선택지를 희생하고서 고를 만큼의 메리트가 나오지 못하는 것이다. 때문에 카인과 반대로 하자가 있던 궁극기에 강력한 유틸기들로 무장한 같은 총티어 캐릭인 웨슬리가 샷건을 받았다면 다르지 않았을까 하는 의견 또한 있었는데, 실제로 추후 웨슬리 역시 2차 궁극기를 받으면서 궁극기를 발동하면 이동속도가 증가하고 중원거리에서도 화력을 낼 수 있는 자동 사격이 주어지면서 카인의 사례에서 어느 정도 개선된 모습을 보여주었다는 것이 아이러니.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 80").content("""
황중석\n센트리를 이용한 정찰은 물론이고 저격을 이용한 주변 탐색과 아군 엄호, 한타시 빠질 수 없는 우지의 강력한 화력 지원 등등 그야말로 팀의 레인저라고 할 수 있는 캐릭터다. 장거리에서 주요 목표를 단숨에 제거할 수 있는 저격, 시야를 지속적으로 제공하는 센트리 레이더 등 전반적으로 스킬들의 전략적 가치가 높으며, 그러한 스킬들을 통해 맵을 장악하여 자신을 드러내지 않고서도 적들을 지속적으로 압박할 수 있다. 그래서 마치 시바가 그러하듯이 존재 자체만으로도 적의 행동에 많은 제약을 준다. 카인이 초반에 주도권을 잡으면 게임 구도가 경직되어 재미가 없어진다는 말이 나올 정도다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 81").content("""
김태섭\n하지만 캐릭터의 장점만큼이나 단점 또한 명확할뿐더러, 사이퍼즈에서 손꼽힐 정도로 이질적이면서도 어려운 운영법을 가지고 있다. 그래서 진입장벽이 높은 것은 물론 캐릭터 자체적으로 가진 리스크도 크다는 것을 염두에 두어야 한다. 대부분의 원거리 딜러들은 주력기를 쓴 뒤에도 평타를 통해 어느 정도 지속적인 화력 투사가 가능하며, 일부 캐릭터는 평타를 직접적으로 강화하는 스킬도 보유하고 있다. 하지만 카인의 평타는 저지력이 지나치게 떨어지고 저격은 시전을 위해 안전한 위치를 확보해야 하기에, 두 스킬 모두 적과 대면한 상황에서는 사용하기 곤란한 경우가 많다. 그리고 센트리 레이더라는 차별화된 유틸기의 존재는 분명한 장점이지만, 그 대가로 원거리 딜러라면 일반적으로 가져야 할 딜링용 스킬 하나를 잃었다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 82").content("""
이아영\n즉, 카인은 한타에서 적에게 내밀 카드가 많지 않다. 안정적으로 사용할 수 있는 주력기는 쿨타임 10초의 우지밖에 없다고 봐야 한다. 그리고 스킬의 공백 사이에 생기는 한타 기여의 부재는 센트리의 시야 확보 능력과 저격의 견제 능력으로 메꿔야 한다. 이 점 때문에 카인의 운영이 이질적이면서도 어려운 것이다. 요컨대 스킬을 사용하기에 적절한 타이밍을 재는 것이 다른 원딜보다 까다롭다. 이 공백을 최소화하기 위해서는 적 원거리 딜러를 저격할 수 있으면서 동시에 자신을 노리는 적들로부터 안전한 위치를 확보할 필요가 있는데, 변화무쌍한 한타 속에서 이를 매번 고려하고 움직이는 것은 유저의 판단력 면에서든, 카인의 기동성 면에서든 정말로 쉽지 않다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 83").content("""
유민석\n카인의 위치는 다른 원거리 딜러들과 마찬가지로 아군 최후방이다. 적 근캐들과 안전거리를 둘 수 있도록 항상 자리를 신경써야 한다. 저격의 장점을 십분 발휘할 수 있는 시야 밖의 장거리가 이상적이지만, 우지와 류탄도 카인의 엄연한 딜링기이므로 상황에 따라서는 최대 시야보다 약간 짧은 중거리를 유지하는 것도 나쁘지 않다. 막발 - 우지라는 사기급 테크닉 덕분에 막발이 준비되어 있다면 적과 1:1로 마주쳤을 때 높은 확률로 선공을 빼앗을 수 있다. 순간 화력이 강력한 카인 특성상 선타의 확보는 곧 킬로 이어지기 때문에 딜러와의 1:1에서 강한 모습을 보여준다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 84").content("""
최동철\n그러나 막발을 제외한 나머지 스킬들의 선딜은 긴 편이라 막발을 준비하지 못했다면 드렉슬러 같은 즉발성 스킬을 가지고 있는 원거리 캐릭터와의 싸움에서도 밀릴 수 있으므로 지나친 단독 행동은 금물이다. 그리고 카인은 어그로를 엄청나게 끄는 캐릭터라 카인 유저의 실력이 좋을수록 적 다수로부터 집중적인 마크를 당하는 경우가 잦다. 그러니 아군을 지원하면서 동시에 아군에게 보호받을 필요도 있으므로, 혼자 다니면서 킬만 노리는 것보단 빠른 한타 참여로 후방 지원을 해주는 것이 팀의 승리에 더 도움이 된다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 85").content("""
황중석\n당연하지만 근접전은 닥치고 무조건 피해야만 한다. 카인은 웨슬리처럼 지뢰가 있는 것도 아니고 막발도 강경직이라 맞고 스킬을 내지를 근캐들이 많은데다가 대부분의 스킬들이 선 딜레이가 있어 근접한 적에게 대응하는 능력이 극히 떨어진다. 거기에 체력까지 최하위권이므로 근접전에서 공격을 허용했다면 그대로 전광판으로 직행하는 경우가 대부분이다. 상술한 막발 - 우지 테크닉으로 이 단점을 어느 정도 보완할 수는 있지만, 근접전에 강한 캐릭터라면 막발과 우지 사이에 충분히 근접 평타를 욱여넣을 수 있어서 완전한 대책은 되지 못한다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 86").content("""
김태섭\n캐릭터 특성상 승기를 잡은 판에서 강한 모습을 보인다. 지고 있는 쪽 입장에서는 불리한 한타 유발을 피하면서 어떻게든 립을 먹어 격차를 좁혀야 하는데 카인이 중앙에서 저격 키고 있으면 그것조차도 난감해지기 때문이다. 무리해서 나갔다가 한두 명 따이기라도 하면 격차는 더욱 벌어진다. 게다가 중앙을 장악하고 있으니 센트리 역시 훨씬 전방에 깔 수 있게 되고, 이에 따라 적들은 한타는커녕 기본적인 성장조차 힘들어지는 판이 지속되어 굉장히 답답해진다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 87").content("""
이아영\n하지만 반대로 밀리고 있는 판에서 카인은 정말 도움이 안 된다. 우선 본진에 고립된 상황일 테니 센트리를 설치하러 나가기 어렵고, 상대 딜러가 잘 커서 방어 아이템을 구입하기 시작하면 저격의 영향력도 급격히 감소하는데, 설상가상으로 웨슬리마냥 궁 대박으로 한타 역전을 노릴 수 있는 것도 아니다. 따라서 카인을 팀에 기용했다면 반드시 초반 한타 및 라인전에서 우위를 가져올 필요가 있다. 이 시기는 원거리 딜러들이 대부분 방템을 두르지 않았을 때이니 저격의 위력에는 큰 문제가 없을 것이다. 어떻게든 초반 한타에서 승리하여 분위기를 유리하게 이끌었다면 그 다음부터는 운영이 비교적 수월해진다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 88").content("""
유민석\n또한 높은 대인 공격력을 자랑하긴 하지만 주요 기술인 우지와 저격이 고정된 상태로 한 명에게 화력을 집중해야만 강력한 기술이기 때문에 1명에게 가하는 데미지는 매우 강력하나 안정적인 전선이 없고 화력을 집중하기 힘든 난전에서는 상당히 취약한 모습을 보인다. 한타가 중요한 AOS, 사이퍼즈인 만큼 어찌 보면 상당히 치명적인 약점. 특히나 아군에 마땅한 탱커가 없거나 적진에 돌파력이 뛰어난 캐릭터가 있어 안정적인 전선을 갖추고 싸우기 힘들 경우 마치 스타크래프트의 공성 전차처럼 '고정 터렛' 성격이 강한 카인이 활약하기가 매우 힘들어진다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 89").content("""
최동철\n따라서 아군과 상대방의 팀 조합의 영향을 가장 크게 받는 캐릭터 중 하나이다. 그래서 일반 공방에서 카인 셀렉러는 상당한 실력이 요구된다. 물론 우리 팀 조합뿐만 아니라 상대 팀 조합에도 큰 영향을 받는다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 90").content("""
황중석\n지형의 영향을 많이 받는 캐릭터이기도 하다. 따라서 아군에 카인이 있을 때 절대 소홀히 해서는 안 되는 것이 바로 카인이 활약하기 좋은 지형에서 이니시에이팅을 하는 것. 카인이 불리한 위치에서 한타를 벌이게 되면 카인은 정말 힘을 못 쓴다. 카인에게 불리한 위치는 길목이 많거나 장애물이 많은 구간. 가장 대표적으로 양 팀 2번 타워 라인 한복판의 양쪽의 2단 언덕을 들 수 있는데 대체로 근캐나 낙궁캐들은 이 언덕을 오르락내리락 하면서 싸운다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 91").content("""
김태섭\n그런데 이 지형이 카인한테는 지옥이다. 특히 공방의 경우 파티보다 팀워크가 상대적으로 부족하기 때문에 근캐들이 먼저 우르르 달려가 한타를 일으키고 이속 느린 카인이 뒤늦게 합류하는 상황이 흔하게 벌어진다. 이럴 경우 카인은 스킬이 난무하는 언덕에 뛰어들어 싸울 수도 없는 노릇이기 때문에 보통 언덕 아래쪽에서 깔짝거리게 된다. 그런데 이 위치가 우지나 류탄 맞추기도 애매하고 무엇보다 저격이 원천 봉쇄되는 위치기 때문에 카인의 한타 기여도가 말 그대로 폭락한다. 상대방도 언덕을 오르락내리락 하기 때문에 저격 맞추기 어렵고 맞춘다고 해도 언덕 아래로 떨어져버리기 때문에 공중에서 한 번 더 총알을 꽂지 않는 이상 후속타를 맞추기는 불가능하다. 더구나 트루퍼 리젠 위치가 바로 2단 언덕 옆쪽이니...""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 92").content("""
이아영\n이렇듯 불리한 위치에선 정말 힘 못 쓰는 게 카인이다. 그러니까 아군에 카인이 있다면 꼭 위치를 봐가면서 한타하자. 물론 반대로 말하면 적군 입장에서는 최대한 카인이 불리한 곳에서 한타를 일으켜야 한다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 93").content("""
유민석\n장비 세팅은 보통 공격력+치명타+이속 극공으로 가는 경우가 많다. 방어력은 포기하는 경우가 많은데, 카인은 방어템을 사서 얻는 이득이 완전히 없다고 봐도 된다. 거기에 저격으로 적 딜러를 순식간에 없애버릴 수 있으니 공격 템트리를 갈 수밖에 없다. 카인의 회피기인 긴급회피는 시전 도중 무적 판정을 받기 때문에 적의 한 방 기술을 피할 수 있기 때문이다. 방세팅을 해도 워낙에 물몸이라 효율이 안 나온다는 것이 더 큰 이유이긴 하지만 만약 적이 극공을 탔거나 전세가 어느정도 밀렸을 경우 자신을 암살할 수 있는 여건을 가진 근딜이 있거나, 원딜의 짧은 대치상황에도 스킬, 혹은 연계를 버티지 못하고 죽는다고 한다면 1티 → 1바지로 차근차근 구입하는 것이 좋다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 94").content("""
최동철\n그리고 저격 링은 구입할 수 있는 레벨에 맞춰 최적의 루트로 템 트리를 타서 빠르게 구하는 것이 좋다. 어찌되었건 카인의 주딜은 저격이기 때문.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 95").content("""
황중석\n또한 우지 링과 류탄 링은 자신의 세팅과 상황에 따라 차근차근 사는 것이 좋다. 류탄 링은 주로 라인을 밀거나 센티넬, 철거반 등을 제거하여 립을 회수하는데에 유용하여 구입되고, 우지는 현재 구입 시 순간적이게 데미지를 올릴 수 있는 버프를 가진 '연사의 파이프', 혹은 4링이 사용되는데, 이는 한타가 시작할 때 여유가 되는대로 구입하는 것이 좋다. 우지의 데미지가 훌륭하다는 점은 있지만 주딜은 엄연히 저격이며, 우지의 긴 사용시간 특성상 위험성을 부담하고 있기 때문에 아군의 백업을 받기 전 까지 적을 묶으며 생존하거나, 아군의 후방에서 적을 묶어두며 백업을 하는 용도가 더 크다는 것을 숙지하기를 바란다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("김태섭").get()).title("공지사항 96").content("""
김태섭\n우지→류탄→저격: 가장 기본적인 콤보. 이 콤보는 즉결심판 후에도 가능하므로 만약 잡기에 성공한다면 그야말로 일발역전의 기회를 마련할 수 있다. 류탄 에 맞은적이 땅에 닿기전에 공중저격을 명중 시키는 테크닉은 그야말로 필수 테크닉이다. 연습장에서는 힘들다. 다리 유니크가 있다면 막발→우지가 부드럽게 이어진다. 류탄 후 저격을 맞히는 것을 보다 안정적으로 하고 싶다면 류탄을 적에게 직격시키는 것이 아니라 옆으로 던져서 시간차로 폭발을 일으키는 것이 좋다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("이아영").get()).title("공지사항 97").content("""
이아영\n우지→저격: 류탄을 쓸 수 없는 상황일 경우. 일반적으로 이 콤보를 쓰는 경우는 적이 멀어 류탄을 명중시키기 힘든 경우이다. 이 콤보를 성공시키려면 우지는 적당히 쏜 뒤 취소하고 바로 저격을 하는 게 좋다. 우지를 너무 오랫동안 쏠 경우 끝에 잠깐동안 멍때리게 되기 때문에 저격이 연계되지 않는 경우가 종종 발생하기 때문. 화면 오른쪽의 흰색 게이지를 잘 보고 연계해야 한다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("유민석").get()).title("공지사항 98").content("""
유민석\n류탄→우지→류탄→저격: 가장 강력한 콤보. 이 콤보의 포인트는 첫번째 류탄 후 우지를 최대한 늦게 쏘는 것. 그래야만 다음 류탄을 던질 쿨타임을 벌 수 있다. 평타를 활용해 적이 공중에 떠있는 시간을 조금이라도 늘려주면 콤보 잇기에 좋다. 그리고 두번째 류탄의 경우엔 적을 직접 맞추지 말고 적의 살짝 앞쪽에 터뜨리는 것이 저격 연계가 좀 더 수월하다. 타이밍이 상당히 빠듯하므로 연습이 조금 필요한 콤보. 모자 유니크나 우지 임팩트가 있으면 우지로 적을 더 오래 공중에 붙잡아둘 수 있기 때문에 콤보 넣기가 쉬워진다. 거리가 가깝다면 첫 류탄 후 즉결심판→우지→류탄→저격으로도 연계가 가능하다. 또는 레어 아이템인 '류탄 디바이스' 를 착용하면 30초 동안 쿨타임이 34% 감소하는 효과가 있어서 저 빡빡한 콤보가 부드럽게 이어진다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("최동철").get()).title("공지사항 99").content("""
최동철\n센트리를 자주 설치하는 습관을 들이면 적의 동태를 파악하는데 큰 도움이 된다. 열심히 깔자. 우선 팀이 라인을 얼마나 밀었느냐에 따라 정해진 만큼만 나아가서 센트리를 설치하도록 하고, 센트리를 설치하러 가기 전에 막발을 장전해두어 적과 마주쳤을시 막발로 경직을 먹이고 구르기로 제빨리 도망가도록 한다. 다만 앞서 말했듯이 팀원들이 라인을 밀어준 정도에 맞춰서 일정 거리를 유지하고 깔아야 팀원들과 빠르게 합류 할 수 있다는 점을 숙지해야 한다. 센트리를 설치할 장소를 핑을 찍어 확인을 시켜주는 것도 좋은 방법이다.""").build());
        noticeRepository.save(Notice.builder().member(memberRepository.findByName("황중석").get()).title("공지사항 100").content("""
황중석\n원거리 누커 특성상, 타라와 마찬가지로 공성전이 장기전이 되고 적이 전원 방셋을 적절히 맞추었다면 힘들어진다. 적보다 압도적으로 높은 공격력과 레벨차를 유지하면서 속전속결로 끝내는 것이 최선의 상황이다. 이 때문에 초반에 자주 죽지 않는 것이 중요하다. 그나마 타라는 테러로 계속 성장할 수 있지만 카인은 정말 열심히 아군을 도우며 적군을 처치하고 다녀야 한다.""").build());
    }

    void initCart() {
        cartRepository.save(Cart.builder().member(memberRepository.findByName("storeManager2").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("storeManager3").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("storeManager4").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("storeManager5").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("storeManager6").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("storeManager7").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("storeManager8").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("storeManager9").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("storeManager10").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner1").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner2").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner3").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner4").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner5").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner6").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner7").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner8").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner9").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner10").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner11").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner12").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner13").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner14").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner15").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner16").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner17").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner18").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner19").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner20").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner21").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner22").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner23").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner24").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner25").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner26").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner27").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner28").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner29").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner30").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner31").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner32").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner33").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner34").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner35").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner36").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner37").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner38").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner39").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner40").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner41").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner42").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner43").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner44").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner45").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner46").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner47").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner48").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner49").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner50").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner51").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner52").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner53").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner54").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner55").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner56").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner57").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner58").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner59").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner60").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner61").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner62").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner63").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner64").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner65").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner66").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner67").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner68").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner69").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner70").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner71").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner72").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner73").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner74").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner75").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner76").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner77").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner78").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner79").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner80").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner81").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner82").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner83").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner84").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner85").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner86").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner87").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner88").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner89").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner90").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner91").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner92").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner93").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner94").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner95").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner96").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner97").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner98").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner99").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("owner100").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member1").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member2").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member3").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member4").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member5").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member6").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member7").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member8").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member9").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member10").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member11").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member12").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member13").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member14").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member15").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member16").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member17").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member18").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member19").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member20").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member21").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member22").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member23").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member24").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member25").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member26").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member27").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member28").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member29").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member30").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member31").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member32").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member33").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member34").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member35").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member36").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member37").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member38").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member39").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member40").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member41").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member42").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member43").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member44").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member45").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member46").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member47").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member48").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member49").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member50").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member51").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member52").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member53").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member54").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member55").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member56").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member57").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member58").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member59").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member60").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member61").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member62").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member63").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member64").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member65").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member66").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member67").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member68").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member69").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member70").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member71").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member72").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member73").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member74").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member75").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member76").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member77").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member78").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member79").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member80").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member81").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member82").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member83").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member84").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member85").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member86").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member87").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member88").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member89").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member90").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member91").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member92").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member93").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member94").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member95").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member96").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member97").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member98").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member99").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member100").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member101").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member102").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member103").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member104").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member105").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member106").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member107").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member108").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member109").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member110").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member111").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member112").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member113").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member114").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member115").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member116").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member117").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member118").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member119").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member120").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member121").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member122").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member123").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member124").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member125").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member126").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member127").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member128").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member129").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member130").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member131").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member132").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member133").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member134").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member135").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member136").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member137").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member138").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member139").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member140").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member141").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member142").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member143").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member144").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member145").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member146").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member147").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member148").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member149").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member150").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member151").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member152").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member153").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member154").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member155").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member156").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member157").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member158").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member159").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member160").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member161").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member162").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member163").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member164").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member165").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member166").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member167").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member168").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member169").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member170").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member171").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member172").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member173").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member174").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member175").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member176").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member177").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member178").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member179").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member180").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member181").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member182").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member183").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member184").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member185").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member186").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member187").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member188").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member189").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member190").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member191").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member192").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member193").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member194").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member195").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member196").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member197").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member198").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member199").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member200").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor1").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor2").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor3").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor4").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor5").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor6").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor7").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor8").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor9").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor10").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor11").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor12").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor13").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor14").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor15").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor16").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor17").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor18").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor19").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor20").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor21").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor22").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor23").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor24").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor25").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor26").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor27").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor28").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor29").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor30").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor31").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor32").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor33").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor34").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor35").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor36").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor37").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor38").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor39").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor40").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor41").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor42").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor43").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor44").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor45").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor46").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor47").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor48").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor49").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("superVisor50").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member201").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member202").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member203").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member204").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member205").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member206").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member207").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member208").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member209").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member210").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member211").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member212").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member213").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member214").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member215").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member216").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member217").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member218").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member219").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member220").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member221").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member222").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member223").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member224").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member225").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member226").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member227").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member228").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member229").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member230").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member231").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member232").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member233").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member234").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member235").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member236").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member237").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member238").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member239").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member240").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member241").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member242").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member243").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member244").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member245").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member246").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member247").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member248").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member249").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member250").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member251").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member252").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member253").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member254").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member255").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member256").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member257").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member258").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member259").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member260").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member261").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member262").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member263").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member264").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member265").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member266").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member267").get()).build());
        cartRepository.save(Cart.builder().member(memberRepository.findByName("member268").get()).build());

    }

    void initCartDetail1() {
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(1L).get()).item(itemRepository.findById(1L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(2L).get()).item(itemRepository.findById(2L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(3L).get()).item(itemRepository.findById(3L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(4L).get()).item(itemRepository.findById(4L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(5L).get()).item(itemRepository.findById(5L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(6L).get()).item(itemRepository.findById(6L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(7L).get()).item(itemRepository.findById(7L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(8L).get()).item(itemRepository.findById(8L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(9L).get()).item(itemRepository.findById(9L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(10L).get()).item(itemRepository.findById(10L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(11L).get()).item(itemRepository.findById(11L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(12L).get()).item(itemRepository.findById(12L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(13L).get()).item(itemRepository.findById(13L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(14L).get()).item(itemRepository.findById(14L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(15L).get()).item(itemRepository.findById(15L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(16L).get()).item(itemRepository.findById(16L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(17L).get()).item(itemRepository.findById(17L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(18L).get()).item(itemRepository.findById(18L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(19L).get()).item(itemRepository.findById(19L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(20L).get()).item(itemRepository.findById(20L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(21L).get()).item(itemRepository.findById(21L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(22L).get()).item(itemRepository.findById(22L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(23L).get()).item(itemRepository.findById(23L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(24L).get()).item(itemRepository.findById(24L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(25L).get()).item(itemRepository.findById(25L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(26L).get()).item(itemRepository.findById(26L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(27L).get()).item(itemRepository.findById(27L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(28L).get()).item(itemRepository.findById(28L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(29L).get()).item(itemRepository.findById(29L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(30L).get()).item(itemRepository.findById(30L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(31L).get()).item(itemRepository.findById(31L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(32L).get()).item(itemRepository.findById(32L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(33L).get()).item(itemRepository.findById(33L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(34L).get()).item(itemRepository.findById(34L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(35L).get()).item(itemRepository.findById(35L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(36L).get()).item(itemRepository.findById(36L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(37L).get()).item(itemRepository.findById(37L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(38L).get()).item(itemRepository.findById(38L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(39L).get()).item(itemRepository.findById(39L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(40L).get()).item(itemRepository.findById(40L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(41L).get()).item(itemRepository.findById(41L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(42L).get()).item(itemRepository.findById(42L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(43L).get()).item(itemRepository.findById(43L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(44L).get()).item(itemRepository.findById(44L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(45L).get()).item(itemRepository.findById(45L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(46L).get()).item(itemRepository.findById(46L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(47L).get()).item(itemRepository.findById(47L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(48L).get()).item(itemRepository.findById(48L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(49L).get()).item(itemRepository.findById(49L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(50L).get()).item(itemRepository.findById(50L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(51L).get()).item(itemRepository.findById(51L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(52L).get()).item(itemRepository.findById(52L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(53L).get()).item(itemRepository.findById(53L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(54L).get()).item(itemRepository.findById(54L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(55L).get()).item(itemRepository.findById(55L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(56L).get()).item(itemRepository.findById(56L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(57L).get()).item(itemRepository.findById(57L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(58L).get()).item(itemRepository.findById(58L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(59L).get()).item(itemRepository.findById(59L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(60L).get()).item(itemRepository.findById(60L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(61L).get()).item(itemRepository.findById(61L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(62L).get()).item(itemRepository.findById(62L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(63L).get()).item(itemRepository.findById(63L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(64L).get()).item(itemRepository.findById(64L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(65L).get()).item(itemRepository.findById(65L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(66L).get()).item(itemRepository.findById(66L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(67L).get()).item(itemRepository.findById(67L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(68L).get()).item(itemRepository.findById(68L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(69L).get()).item(itemRepository.findById(69L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(70L).get()).item(itemRepository.findById(70L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(71L).get()).item(itemRepository.findById(71L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(72L).get()).item(itemRepository.findById(72L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(73L).get()).item(itemRepository.findById(73L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(74L).get()).item(itemRepository.findById(74L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(75L).get()).item(itemRepository.findById(75L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(76L).get()).item(itemRepository.findById(76L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(77L).get()).item(itemRepository.findById(77L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(78L).get()).item(itemRepository.findById(78L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(79L).get()).item(itemRepository.findById(79L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(80L).get()).item(itemRepository.findById(80L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(81L).get()).item(itemRepository.findById(81L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(82L).get()).item(itemRepository.findById(82L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(83L).get()).item(itemRepository.findById(83L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(84L).get()).item(itemRepository.findById(84L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(85L).get()).item(itemRepository.findById(85L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(86L).get()).item(itemRepository.findById(86L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(87L).get()).item(itemRepository.findById(87L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(88L).get()).item(itemRepository.findById(88L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(89L).get()).item(itemRepository.findById(89L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(90L).get()).item(itemRepository.findById(90L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(91L).get()).item(itemRepository.findById(91L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(92L).get()).item(itemRepository.findById(92L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(93L).get()).item(itemRepository.findById(93L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(94L).get()).item(itemRepository.findById(94L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(95L).get()).item(itemRepository.findById(95L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(96L).get()).item(itemRepository.findById(96L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(97L).get()).item(itemRepository.findById(97L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(98L).get()).item(itemRepository.findById(98L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(99L).get()).item(itemRepository.findById(99L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(100L).get()).item(itemRepository.findById(100L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(101L).get()).item(itemRepository.findById(101L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(102L).get()).item(itemRepository.findById(102L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(103L).get()).item(itemRepository.findById(103L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(104L).get()).item(itemRepository.findById(104L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(105L).get()).item(itemRepository.findById(105L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(106L).get()).item(itemRepository.findById(106L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(107L).get()).item(itemRepository.findById(107L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(108L).get()).item(itemRepository.findById(108L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(109L).get()).item(itemRepository.findById(109L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(110L).get()).item(itemRepository.findById(110L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(111L).get()).item(itemRepository.findById(111L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(112L).get()).item(itemRepository.findById(112L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(113L).get()).item(itemRepository.findById(113L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(114L).get()).item(itemRepository.findById(114L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(115L).get()).item(itemRepository.findById(115L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(116L).get()).item(itemRepository.findById(116L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(117L).get()).item(itemRepository.findById(117L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(118L).get()).item(itemRepository.findById(118L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(119L).get()).item(itemRepository.findById(119L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(120L).get()).item(itemRepository.findById(120L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(121L).get()).item(itemRepository.findById(121L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(122L).get()).item(itemRepository.findById(122L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(123L).get()).item(itemRepository.findById(123L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(124L).get()).item(itemRepository.findById(124L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(125L).get()).item(itemRepository.findById(125L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(126L).get()).item(itemRepository.findById(126L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(127L).get()).item(itemRepository.findById(127L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(128L).get()).item(itemRepository.findById(128L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(129L).get()).item(itemRepository.findById(129L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(130L).get()).item(itemRepository.findById(130L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(131L).get()).item(itemRepository.findById(131L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(132L).get()).item(itemRepository.findById(132L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(133L).get()).item(itemRepository.findById(133L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(134L).get()).item(itemRepository.findById(134L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(135L).get()).item(itemRepository.findById(135L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(136L).get()).item(itemRepository.findById(136L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(137L).get()).item(itemRepository.findById(137L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(138L).get()).item(itemRepository.findById(138L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(139L).get()).item(itemRepository.findById(139L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(140L).get()).item(itemRepository.findById(140L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(141L).get()).item(itemRepository.findById(141L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(142L).get()).item(itemRepository.findById(142L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(143L).get()).item(itemRepository.findById(143L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(144L).get()).item(itemRepository.findById(144L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(145L).get()).item(itemRepository.findById(145L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(146L).get()).item(itemRepository.findById(146L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(147L).get()).item(itemRepository.findById(147L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(148L).get()).item(itemRepository.findById(148L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(149L).get()).item(itemRepository.findById(149L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(150L).get()).item(itemRepository.findById(150L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(151L).get()).item(itemRepository.findById(151L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(152L).get()).item(itemRepository.findById(152L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(153L).get()).item(itemRepository.findById(153L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(154L).get()).item(itemRepository.findById(154L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(155L).get()).item(itemRepository.findById(155L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(156L).get()).item(itemRepository.findById(156L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(157L).get()).item(itemRepository.findById(157L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(158L).get()).item(itemRepository.findById(158L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(159L).get()).item(itemRepository.findById(159L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(160L).get()).item(itemRepository.findById(160L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(161L).get()).item(itemRepository.findById(161L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(162L).get()).item(itemRepository.findById(162L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(163L).get()).item(itemRepository.findById(163L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(164L).get()).item(itemRepository.findById(164L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(165L).get()).item(itemRepository.findById(165L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(166L).get()).item(itemRepository.findById(166L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(167L).get()).item(itemRepository.findById(167L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(168L).get()).item(itemRepository.findById(168L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(169L).get()).item(itemRepository.findById(169L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(170L).get()).item(itemRepository.findById(170L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(171L).get()).item(itemRepository.findById(171L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(172L).get()).item(itemRepository.findById(172L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(173L).get()).item(itemRepository.findById(173L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(174L).get()).item(itemRepository.findById(174L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(175L).get()).item(itemRepository.findById(175L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(176L).get()).item(itemRepository.findById(176L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(177L).get()).item(itemRepository.findById(177L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(178L).get()).item(itemRepository.findById(178L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(179L).get()).item(itemRepository.findById(179L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(180L).get()).item(itemRepository.findById(180L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(181L).get()).item(itemRepository.findById(181L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(182L).get()).item(itemRepository.findById(182L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(183L).get()).item(itemRepository.findById(183L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(184L).get()).item(itemRepository.findById(184L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(185L).get()).item(itemRepository.findById(185L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(186L).get()).item(itemRepository.findById(186L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(187L).get()).item(itemRepository.findById(187L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(188L).get()).item(itemRepository.findById(188L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(189L).get()).item(itemRepository.findById(189L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(190L).get()).item(itemRepository.findById(190L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(191L).get()).item(itemRepository.findById(191L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(192L).get()).item(itemRepository.findById(192L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(193L).get()).item(itemRepository.findById(193L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(194L).get()).item(itemRepository.findById(194L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(195L).get()).item(itemRepository.findById(195L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(196L).get()).item(itemRepository.findById(196L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(197L).get()).item(itemRepository.findById(197L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(198L).get()).item(itemRepository.findById(198L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(199L).get()).item(itemRepository.findById(199L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(200L).get()).item(itemRepository.findById(200L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(201L).get()).item(itemRepository.findById(201L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(202L).get()).item(itemRepository.findById(202L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(203L).get()).item(itemRepository.findById(203L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(204L).get()).item(itemRepository.findById(204L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(205L).get()).item(itemRepository.findById(205L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(206L).get()).item(itemRepository.findById(206L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(207L).get()).item(itemRepository.findById(207L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(208L).get()).item(itemRepository.findById(208L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(209L).get()).item(itemRepository.findById(209L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(210L).get()).item(itemRepository.findById(210L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(211L).get()).item(itemRepository.findById(211L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(212L).get()).item(itemRepository.findById(212L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(213L).get()).item(itemRepository.findById(213L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(214L).get()).item(itemRepository.findById(214L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(215L).get()).item(itemRepository.findById(215L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(216L).get()).item(itemRepository.findById(216L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(217L).get()).item(itemRepository.findById(217L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(218L).get()).item(itemRepository.findById(218L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(219L).get()).item(itemRepository.findById(219L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(220L).get()).item(itemRepository.findById(220L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(221L).get()).item(itemRepository.findById(221L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(222L).get()).item(itemRepository.findById(222L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(223L).get()).item(itemRepository.findById(223L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(224L).get()).item(itemRepository.findById(224L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(225L).get()).item(itemRepository.findById(225L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(226L).get()).item(itemRepository.findById(226L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(227L).get()).item(itemRepository.findById(227L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(228L).get()).item(itemRepository.findById(228L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(229L).get()).item(itemRepository.findById(229L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(230L).get()).item(itemRepository.findById(230L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(231L).get()).item(itemRepository.findById(231L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(232L).get()).item(itemRepository.findById(232L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(233L).get()).item(itemRepository.findById(233L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(234L).get()).item(itemRepository.findById(234L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(235L).get()).item(itemRepository.findById(235L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(236L).get()).item(itemRepository.findById(236L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(237L).get()).item(itemRepository.findById(237L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(238L).get()).item(itemRepository.findById(238L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(239L).get()).item(itemRepository.findById(239L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(240L).get()).item(itemRepository.findById(240L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(241L).get()).item(itemRepository.findById(241L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(242L).get()).item(itemRepository.findById(242L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(243L).get()).item(itemRepository.findById(243L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(244L).get()).item(itemRepository.findById(244L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(245L).get()).item(itemRepository.findById(245L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(246L).get()).item(itemRepository.findById(246L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(247L).get()).item(itemRepository.findById(247L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(248L).get()).item(itemRepository.findById(248L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(249L).get()).item(itemRepository.findById(249L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(250L).get()).item(itemRepository.findById(250L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(251L).get()).item(itemRepository.findById(251L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(252L).get()).item(itemRepository.findById(252L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(253L).get()).item(itemRepository.findById(253L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(254L).get()).item(itemRepository.findById(254L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(255L).get()).item(itemRepository.findById(255L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(256L).get()).item(itemRepository.findById(256L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(257L).get()).item(itemRepository.findById(257L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(258L).get()).item(itemRepository.findById(258L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(259L).get()).item(itemRepository.findById(259L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(260L).get()).item(itemRepository.findById(260L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(261L).get()).item(itemRepository.findById(261L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(262L).get()).item(itemRepository.findById(262L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(263L).get()).item(itemRepository.findById(263L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(264L).get()).item(itemRepository.findById(264L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(265L).get()).item(itemRepository.findById(265L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(266L).get()).item(itemRepository.findById(266L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(267L).get()).item(itemRepository.findById(267L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(268L).get()).item(itemRepository.findById(268L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(269L).get()).item(itemRepository.findById(269L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(270L).get()).item(itemRepository.findById(270L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(271L).get()).item(itemRepository.findById(271L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(272L).get()).item(itemRepository.findById(272L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(273L).get()).item(itemRepository.findById(273L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(274L).get()).item(itemRepository.findById(274L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(275L).get()).item(itemRepository.findById(275L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(276L).get()).item(itemRepository.findById(276L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(277L).get()).item(itemRepository.findById(277L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(278L).get()).item(itemRepository.findById(278L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(279L).get()).item(itemRepository.findById(279L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(280L).get()).item(itemRepository.findById(280L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(281L).get()).item(itemRepository.findById(281L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(282L).get()).item(itemRepository.findById(282L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(283L).get()).item(itemRepository.findById(283L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(284L).get()).item(itemRepository.findById(284L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(285L).get()).item(itemRepository.findById(285L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(286L).get()).item(itemRepository.findById(286L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(287L).get()).item(itemRepository.findById(287L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(288L).get()).item(itemRepository.findById(288L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(289L).get()).item(itemRepository.findById(289L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(290L).get()).item(itemRepository.findById(290L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(291L).get()).item(itemRepository.findById(291L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(292L).get()).item(itemRepository.findById(292L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(293L).get()).item(itemRepository.findById(293L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(294L).get()).item(itemRepository.findById(294L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(295L).get()).item(itemRepository.findById(295L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(296L).get()).item(itemRepository.findById(296L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(297L).get()).item(itemRepository.findById(297L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(298L).get()).item(itemRepository.findById(298L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(299L).get()).item(itemRepository.findById(299L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(300L).get()).item(itemRepository.findById(300L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(301L).get()).item(itemRepository.findById(301L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(302L).get()).item(itemRepository.findById(302L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(303L).get()).item(itemRepository.findById(303L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(304L).get()).item(itemRepository.findById(304L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(305L).get()).item(itemRepository.findById(305L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(306L).get()).item(itemRepository.findById(306L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(307L).get()).item(itemRepository.findById(307L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(308L).get()).item(itemRepository.findById(308L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(309L).get()).item(itemRepository.findById(309L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(310L).get()).item(itemRepository.findById(310L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(311L).get()).item(itemRepository.findById(311L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(312L).get()).item(itemRepository.findById(312L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(313L).get()).item(itemRepository.findById(313L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(314L).get()).item(itemRepository.findById(314L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(315L).get()).item(itemRepository.findById(315L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(316L).get()).item(itemRepository.findById(316L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(317L).get()).item(itemRepository.findById(317L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(318L).get()).item(itemRepository.findById(318L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(319L).get()).item(itemRepository.findById(319L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(320L).get()).item(itemRepository.findById(320L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(321L).get()).item(itemRepository.findById(321L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(322L).get()).item(itemRepository.findById(322L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(323L).get()).item(itemRepository.findById(323L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(324L).get()).item(itemRepository.findById(324L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(325L).get()).item(itemRepository.findById(325L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(326L).get()).item(itemRepository.findById(326L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(327L).get()).item(itemRepository.findById(327L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(328L).get()).item(itemRepository.findById(328L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(329L).get()).item(itemRepository.findById(329L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(330L).get()).item(itemRepository.findById(330L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(331L).get()).item(itemRepository.findById(331L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(332L).get()).item(itemRepository.findById(332L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(333L).get()).item(itemRepository.findById(333L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(334L).get()).item(itemRepository.findById(334L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(335L).get()).item(itemRepository.findById(335L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(336L).get()).item(itemRepository.findById(336L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(337L).get()).item(itemRepository.findById(337L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(338L).get()).item(itemRepository.findById(338L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(339L).get()).item(itemRepository.findById(339L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(340L).get()).item(itemRepository.findById(340L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(341L).get()).item(itemRepository.findById(341L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(342L).get()).item(itemRepository.findById(342L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(343L).get()).item(itemRepository.findById(343L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(344L).get()).item(itemRepository.findById(344L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(345L).get()).item(itemRepository.findById(345L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(346L).get()).item(itemRepository.findById(346L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(347L).get()).item(itemRepository.findById(347L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(348L).get()).item(itemRepository.findById(348L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(349L).get()).item(itemRepository.findById(349L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(350L).get()).item(itemRepository.findById(350L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(351L).get()).item(itemRepository.findById(351L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(352L).get()).item(itemRepository.findById(352L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(353L).get()).item(itemRepository.findById(353L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(354L).get()).item(itemRepository.findById(354L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(355L).get()).item(itemRepository.findById(355L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(356L).get()).item(itemRepository.findById(356L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(357L).get()).item(itemRepository.findById(357L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(358L).get()).item(itemRepository.findById(358L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(359L).get()).item(itemRepository.findById(359L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(360L).get()).item(itemRepository.findById(360L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(361L).get()).item(itemRepository.findById(361L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(362L).get()).item(itemRepository.findById(362L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(363L).get()).item(itemRepository.findById(363L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(364L).get()).item(itemRepository.findById(364L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(365L).get()).item(itemRepository.findById(365L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(366L).get()).item(itemRepository.findById(366L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(367L).get()).item(itemRepository.findById(367L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(368L).get()).item(itemRepository.findById(368L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(369L).get()).item(itemRepository.findById(369L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(370L).get()).item(itemRepository.findById(370L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(371L).get()).item(itemRepository.findById(371L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(372L).get()).item(itemRepository.findById(372L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(373L).get()).item(itemRepository.findById(373L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(374L).get()).item(itemRepository.findById(374L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(375L).get()).item(itemRepository.findById(375L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(376L).get()).item(itemRepository.findById(376L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(377L).get()).item(itemRepository.findById(377L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(378L).get()).item(itemRepository.findById(378L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(379L).get()).item(itemRepository.findById(379L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(380L).get()).item(itemRepository.findById(380L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(381L).get()).item(itemRepository.findById(381L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(382L).get()).item(itemRepository.findById(382L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(383L).get()).item(itemRepository.findById(383L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(384L).get()).item(itemRepository.findById(384L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(385L).get()).item(itemRepository.findById(385L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(386L).get()).item(itemRepository.findById(386L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(387L).get()).item(itemRepository.findById(387L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(388L).get()).item(itemRepository.findById(388L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(389L).get()).item(itemRepository.findById(389L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(390L).get()).item(itemRepository.findById(390L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(391L).get()).item(itemRepository.findById(391L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(392L).get()).item(itemRepository.findById(392L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(393L).get()).item(itemRepository.findById(393L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(394L).get()).item(itemRepository.findById(394L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(395L).get()).item(itemRepository.findById(395L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(396L).get()).item(itemRepository.findById(396L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(397L).get()).item(itemRepository.findById(397L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(398L).get()).item(itemRepository.findById(398L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(399L).get()).item(itemRepository.findById(399L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(400L).get()).item(itemRepository.findById(400L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(401L).get()).item(itemRepository.findById(401L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(402L).get()).item(itemRepository.findById(402L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(403L).get()).item(itemRepository.findById(403L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(404L).get()).item(itemRepository.findById(404L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(405L).get()).item(itemRepository.findById(405L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(406L).get()).item(itemRepository.findById(406L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(407L).get()).item(itemRepository.findById(407L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(408L).get()).item(itemRepository.findById(408L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(409L).get()).item(itemRepository.findById(409L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(410L).get()).item(itemRepository.findById(410L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(411L).get()).item(itemRepository.findById(411L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(412L).get()).item(itemRepository.findById(412L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(413L).get()).item(itemRepository.findById(413L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(414L).get()).item(itemRepository.findById(414L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(415L).get()).item(itemRepository.findById(415L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(416L).get()).item(itemRepository.findById(416L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(417L).get()).item(itemRepository.findById(417L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(418L).get()).item(itemRepository.findById(418L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(419L).get()).item(itemRepository.findById(419L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(420L).get()).item(itemRepository.findById(420L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(421L).get()).item(itemRepository.findById(421L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(422L).get()).item(itemRepository.findById(422L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(423L).get()).item(itemRepository.findById(423L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(424L).get()).item(itemRepository.findById(424L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(425L).get()).item(itemRepository.findById(425L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(426L).get()).item(itemRepository.findById(426L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(427L).get()).item(itemRepository.findById(427L).get()).quantity(5L).build());

    }
    void initCartDetail2() {
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(1L).get()).item(itemRepository.findById(463L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(2L).get()).item(itemRepository.findById(462L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(3L).get()).item(itemRepository.findById(461L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(4L).get()).item(itemRepository.findById(460L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(5L).get()).item(itemRepository.findById(459L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(6L).get()).item(itemRepository.findById(458L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(7L).get()).item(itemRepository.findById(457L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(8L).get()).item(itemRepository.findById(456L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(9L).get()).item(itemRepository.findById(455L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(10L).get()).item(itemRepository.findById(454L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(11L).get()).item(itemRepository.findById(453L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(12L).get()).item(itemRepository.findById(452L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(13L).get()).item(itemRepository.findById(451L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(14L).get()).item(itemRepository.findById(450L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(15L).get()).item(itemRepository.findById(449L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(16L).get()).item(itemRepository.findById(448L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(17L).get()).item(itemRepository.findById(447L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(18L).get()).item(itemRepository.findById(446L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(19L).get()).item(itemRepository.findById(445L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(20L).get()).item(itemRepository.findById(444L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(21L).get()).item(itemRepository.findById(443L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(22L).get()).item(itemRepository.findById(442L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(23L).get()).item(itemRepository.findById(441L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(24L).get()).item(itemRepository.findById(440L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(25L).get()).item(itemRepository.findById(439L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(26L).get()).item(itemRepository.findById(438L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(27L).get()).item(itemRepository.findById(437L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(28L).get()).item(itemRepository.findById(436L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(29L).get()).item(itemRepository.findById(435L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(30L).get()).item(itemRepository.findById(434L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(31L).get()).item(itemRepository.findById(433L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(32L).get()).item(itemRepository.findById(432L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(33L).get()).item(itemRepository.findById(431L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(34L).get()).item(itemRepository.findById(430L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(35L).get()).item(itemRepository.findById(429L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(36L).get()).item(itemRepository.findById(428L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(37L).get()).item(itemRepository.findById(427L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(38L).get()).item(itemRepository.findById(426L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(39L).get()).item(itemRepository.findById(425L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(40L).get()).item(itemRepository.findById(424L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(41L).get()).item(itemRepository.findById(423L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(42L).get()).item(itemRepository.findById(422L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(43L).get()).item(itemRepository.findById(421L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(44L).get()).item(itemRepository.findById(420L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(45L).get()).item(itemRepository.findById(419L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(46L).get()).item(itemRepository.findById(418L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(47L).get()).item(itemRepository.findById(417L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(48L).get()).item(itemRepository.findById(416L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(49L).get()).item(itemRepository.findById(415L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(50L).get()).item(itemRepository.findById(414L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(51L).get()).item(itemRepository.findById(413L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(52L).get()).item(itemRepository.findById(412L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(53L).get()).item(itemRepository.findById(411L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(54L).get()).item(itemRepository.findById(410L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(55L).get()).item(itemRepository.findById(409L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(56L).get()).item(itemRepository.findById(408L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(57L).get()).item(itemRepository.findById(407L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(58L).get()).item(itemRepository.findById(406L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(59L).get()).item(itemRepository.findById(405L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(60L).get()).item(itemRepository.findById(404L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(61L).get()).item(itemRepository.findById(403L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(62L).get()).item(itemRepository.findById(402L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(63L).get()).item(itemRepository.findById(401L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(64L).get()).item(itemRepository.findById(400L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(65L).get()).item(itemRepository.findById(399L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(66L).get()).item(itemRepository.findById(398L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(67L).get()).item(itemRepository.findById(397L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(68L).get()).item(itemRepository.findById(396L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(69L).get()).item(itemRepository.findById(395L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(70L).get()).item(itemRepository.findById(394L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(71L).get()).item(itemRepository.findById(393L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(72L).get()).item(itemRepository.findById(392L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(73L).get()).item(itemRepository.findById(391L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(74L).get()).item(itemRepository.findById(390L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(75L).get()).item(itemRepository.findById(389L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(76L).get()).item(itemRepository.findById(388L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(77L).get()).item(itemRepository.findById(387L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(78L).get()).item(itemRepository.findById(386L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(79L).get()).item(itemRepository.findById(385L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(80L).get()).item(itemRepository.findById(384L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(81L).get()).item(itemRepository.findById(383L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(82L).get()).item(itemRepository.findById(382L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(83L).get()).item(itemRepository.findById(381L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(84L).get()).item(itemRepository.findById(380L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(85L).get()).item(itemRepository.findById(379L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(86L).get()).item(itemRepository.findById(378L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(87L).get()).item(itemRepository.findById(377L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(88L).get()).item(itemRepository.findById(376L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(89L).get()).item(itemRepository.findById(375L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(90L).get()).item(itemRepository.findById(374L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(91L).get()).item(itemRepository.findById(373L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(92L).get()).item(itemRepository.findById(372L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(93L).get()).item(itemRepository.findById(371L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(94L).get()).item(itemRepository.findById(370L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(95L).get()).item(itemRepository.findById(369L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(96L).get()).item(itemRepository.findById(368L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(97L).get()).item(itemRepository.findById(367L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(98L).get()).item(itemRepository.findById(366L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(99L).get()).item(itemRepository.findById(365L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(100L).get()).item(itemRepository.findById(364L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(101L).get()).item(itemRepository.findById(363L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(102L).get()).item(itemRepository.findById(362L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(103L).get()).item(itemRepository.findById(361L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(104L).get()).item(itemRepository.findById(360L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(105L).get()).item(itemRepository.findById(359L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(106L).get()).item(itemRepository.findById(358L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(107L).get()).item(itemRepository.findById(357L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(108L).get()).item(itemRepository.findById(356L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(109L).get()).item(itemRepository.findById(355L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(110L).get()).item(itemRepository.findById(354L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(111L).get()).item(itemRepository.findById(353L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(112L).get()).item(itemRepository.findById(352L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(113L).get()).item(itemRepository.findById(351L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(114L).get()).item(itemRepository.findById(350L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(115L).get()).item(itemRepository.findById(349L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(116L).get()).item(itemRepository.findById(348L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(117L).get()).item(itemRepository.findById(347L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(118L).get()).item(itemRepository.findById(346L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(119L).get()).item(itemRepository.findById(345L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(120L).get()).item(itemRepository.findById(344L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(121L).get()).item(itemRepository.findById(343L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(122L).get()).item(itemRepository.findById(342L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(123L).get()).item(itemRepository.findById(341L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(124L).get()).item(itemRepository.findById(340L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(125L).get()).item(itemRepository.findById(339L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(126L).get()).item(itemRepository.findById(338L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(127L).get()).item(itemRepository.findById(337L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(128L).get()).item(itemRepository.findById(336L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(129L).get()).item(itemRepository.findById(335L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(130L).get()).item(itemRepository.findById(334L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(131L).get()).item(itemRepository.findById(333L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(132L).get()).item(itemRepository.findById(332L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(133L).get()).item(itemRepository.findById(331L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(134L).get()).item(itemRepository.findById(330L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(135L).get()).item(itemRepository.findById(329L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(136L).get()).item(itemRepository.findById(328L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(137L).get()).item(itemRepository.findById(327L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(138L).get()).item(itemRepository.findById(326L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(139L).get()).item(itemRepository.findById(325L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(140L).get()).item(itemRepository.findById(324L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(141L).get()).item(itemRepository.findById(323L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(142L).get()).item(itemRepository.findById(322L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(143L).get()).item(itemRepository.findById(321L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(144L).get()).item(itemRepository.findById(320L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(145L).get()).item(itemRepository.findById(319L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(146L).get()).item(itemRepository.findById(318L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(147L).get()).item(itemRepository.findById(317L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(148L).get()).item(itemRepository.findById(316L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(149L).get()).item(itemRepository.findById(315L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(150L).get()).item(itemRepository.findById(314L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(151L).get()).item(itemRepository.findById(313L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(152L).get()).item(itemRepository.findById(312L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(153L).get()).item(itemRepository.findById(311L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(154L).get()).item(itemRepository.findById(310L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(155L).get()).item(itemRepository.findById(309L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(156L).get()).item(itemRepository.findById(308L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(157L).get()).item(itemRepository.findById(307L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(158L).get()).item(itemRepository.findById(306L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(159L).get()).item(itemRepository.findById(305L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(160L).get()).item(itemRepository.findById(304L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(161L).get()).item(itemRepository.findById(303L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(162L).get()).item(itemRepository.findById(302L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(163L).get()).item(itemRepository.findById(301L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(164L).get()).item(itemRepository.findById(300L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(165L).get()).item(itemRepository.findById(299L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(166L).get()).item(itemRepository.findById(298L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(167L).get()).item(itemRepository.findById(297L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(168L).get()).item(itemRepository.findById(296L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(169L).get()).item(itemRepository.findById(295L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(170L).get()).item(itemRepository.findById(294L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(171L).get()).item(itemRepository.findById(293L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(172L).get()).item(itemRepository.findById(292L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(173L).get()).item(itemRepository.findById(291L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(174L).get()).item(itemRepository.findById(290L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(175L).get()).item(itemRepository.findById(289L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(176L).get()).item(itemRepository.findById(288L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(177L).get()).item(itemRepository.findById(287L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(178L).get()).item(itemRepository.findById(286L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(179L).get()).item(itemRepository.findById(285L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(180L).get()).item(itemRepository.findById(284L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(181L).get()).item(itemRepository.findById(283L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(182L).get()).item(itemRepository.findById(282L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(183L).get()).item(itemRepository.findById(281L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(184L).get()).item(itemRepository.findById(280L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(185L).get()).item(itemRepository.findById(279L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(186L).get()).item(itemRepository.findById(278L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(187L).get()).item(itemRepository.findById(277L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(188L).get()).item(itemRepository.findById(276L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(189L).get()).item(itemRepository.findById(275L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(190L).get()).item(itemRepository.findById(274L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(191L).get()).item(itemRepository.findById(273L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(192L).get()).item(itemRepository.findById(272L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(193L).get()).item(itemRepository.findById(271L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(194L).get()).item(itemRepository.findById(270L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(195L).get()).item(itemRepository.findById(269L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(196L).get()).item(itemRepository.findById(268L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(197L).get()).item(itemRepository.findById(267L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(198L).get()).item(itemRepository.findById(266L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(199L).get()).item(itemRepository.findById(265L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(200L).get()).item(itemRepository.findById(264L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(201L).get()).item(itemRepository.findById(263L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(202L).get()).item(itemRepository.findById(262L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(203L).get()).item(itemRepository.findById(261L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(204L).get()).item(itemRepository.findById(260L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(205L).get()).item(itemRepository.findById(259L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(206L).get()).item(itemRepository.findById(258L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(207L).get()).item(itemRepository.findById(257L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(208L).get()).item(itemRepository.findById(256L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(209L).get()).item(itemRepository.findById(255L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(210L).get()).item(itemRepository.findById(254L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(211L).get()).item(itemRepository.findById(253L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(212L).get()).item(itemRepository.findById(252L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(213L).get()).item(itemRepository.findById(251L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(214L).get()).item(itemRepository.findById(250L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(215L).get()).item(itemRepository.findById(249L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(216L).get()).item(itemRepository.findById(248L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(217L).get()).item(itemRepository.findById(247L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(218L).get()).item(itemRepository.findById(246L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(219L).get()).item(itemRepository.findById(245L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(220L).get()).item(itemRepository.findById(244L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(221L).get()).item(itemRepository.findById(243L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(222L).get()).item(itemRepository.findById(242L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(223L).get()).item(itemRepository.findById(241L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(224L).get()).item(itemRepository.findById(240L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(225L).get()).item(itemRepository.findById(239L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(226L).get()).item(itemRepository.findById(238L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(227L).get()).item(itemRepository.findById(237L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(228L).get()).item(itemRepository.findById(236L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(229L).get()).item(itemRepository.findById(235L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(230L).get()).item(itemRepository.findById(234L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(231L).get()).item(itemRepository.findById(233L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(232L).get()).item(itemRepository.findById(232L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(233L).get()).item(itemRepository.findById(231L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(234L).get()).item(itemRepository.findById(230L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(235L).get()).item(itemRepository.findById(229L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(236L).get()).item(itemRepository.findById(228L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(237L).get()).item(itemRepository.findById(227L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(238L).get()).item(itemRepository.findById(226L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(239L).get()).item(itemRepository.findById(225L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(240L).get()).item(itemRepository.findById(224L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(241L).get()).item(itemRepository.findById(223L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(242L).get()).item(itemRepository.findById(222L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(243L).get()).item(itemRepository.findById(221L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(244L).get()).item(itemRepository.findById(220L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(245L).get()).item(itemRepository.findById(219L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(246L).get()).item(itemRepository.findById(218L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(247L).get()).item(itemRepository.findById(217L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(248L).get()).item(itemRepository.findById(216L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(249L).get()).item(itemRepository.findById(215L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(250L).get()).item(itemRepository.findById(214L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(251L).get()).item(itemRepository.findById(213L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(252L).get()).item(itemRepository.findById(212L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(253L).get()).item(itemRepository.findById(211L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(254L).get()).item(itemRepository.findById(210L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(255L).get()).item(itemRepository.findById(209L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(256L).get()).item(itemRepository.findById(208L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(257L).get()).item(itemRepository.findById(207L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(258L).get()).item(itemRepository.findById(206L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(259L).get()).item(itemRepository.findById(205L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(260L).get()).item(itemRepository.findById(204L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(261L).get()).item(itemRepository.findById(203L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(262L).get()).item(itemRepository.findById(202L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(263L).get()).item(itemRepository.findById(201L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(264L).get()).item(itemRepository.findById(200L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(265L).get()).item(itemRepository.findById(199L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(266L).get()).item(itemRepository.findById(198L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(267L).get()).item(itemRepository.findById(197L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(268L).get()).item(itemRepository.findById(196L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(269L).get()).item(itemRepository.findById(195L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(270L).get()).item(itemRepository.findById(194L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(271L).get()).item(itemRepository.findById(193L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(272L).get()).item(itemRepository.findById(192L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(273L).get()).item(itemRepository.findById(191L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(274L).get()).item(itemRepository.findById(190L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(275L).get()).item(itemRepository.findById(189L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(276L).get()).item(itemRepository.findById(188L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(277L).get()).item(itemRepository.findById(187L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(278L).get()).item(itemRepository.findById(186L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(279L).get()).item(itemRepository.findById(185L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(280L).get()).item(itemRepository.findById(184L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(281L).get()).item(itemRepository.findById(183L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(282L).get()).item(itemRepository.findById(182L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(283L).get()).item(itemRepository.findById(181L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(284L).get()).item(itemRepository.findById(180L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(285L).get()).item(itemRepository.findById(179L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(286L).get()).item(itemRepository.findById(178L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(287L).get()).item(itemRepository.findById(177L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(288L).get()).item(itemRepository.findById(176L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(289L).get()).item(itemRepository.findById(175L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(290L).get()).item(itemRepository.findById(174L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(291L).get()).item(itemRepository.findById(173L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(292L).get()).item(itemRepository.findById(172L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(293L).get()).item(itemRepository.findById(171L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(294L).get()).item(itemRepository.findById(170L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(295L).get()).item(itemRepository.findById(169L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(296L).get()).item(itemRepository.findById(168L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(297L).get()).item(itemRepository.findById(167L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(298L).get()).item(itemRepository.findById(166L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(299L).get()).item(itemRepository.findById(165L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(300L).get()).item(itemRepository.findById(164L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(301L).get()).item(itemRepository.findById(163L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(302L).get()).item(itemRepository.findById(162L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(303L).get()).item(itemRepository.findById(161L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(304L).get()).item(itemRepository.findById(160L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(305L).get()).item(itemRepository.findById(159L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(306L).get()).item(itemRepository.findById(158L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(307L).get()).item(itemRepository.findById(157L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(308L).get()).item(itemRepository.findById(156L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(309L).get()).item(itemRepository.findById(155L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(310L).get()).item(itemRepository.findById(154L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(311L).get()).item(itemRepository.findById(153L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(312L).get()).item(itemRepository.findById(152L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(313L).get()).item(itemRepository.findById(151L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(314L).get()).item(itemRepository.findById(150L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(315L).get()).item(itemRepository.findById(149L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(316L).get()).item(itemRepository.findById(148L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(317L).get()).item(itemRepository.findById(147L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(318L).get()).item(itemRepository.findById(146L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(319L).get()).item(itemRepository.findById(145L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(320L).get()).item(itemRepository.findById(144L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(321L).get()).item(itemRepository.findById(143L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(322L).get()).item(itemRepository.findById(142L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(323L).get()).item(itemRepository.findById(141L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(324L).get()).item(itemRepository.findById(140L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(325L).get()).item(itemRepository.findById(139L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(326L).get()).item(itemRepository.findById(138L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(327L).get()).item(itemRepository.findById(137L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(328L).get()).item(itemRepository.findById(136L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(329L).get()).item(itemRepository.findById(135L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(330L).get()).item(itemRepository.findById(134L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(331L).get()).item(itemRepository.findById(133L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(332L).get()).item(itemRepository.findById(132L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(333L).get()).item(itemRepository.findById(131L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(334L).get()).item(itemRepository.findById(130L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(335L).get()).item(itemRepository.findById(129L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(336L).get()).item(itemRepository.findById(128L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(337L).get()).item(itemRepository.findById(127L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(338L).get()).item(itemRepository.findById(126L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(339L).get()).item(itemRepository.findById(125L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(340L).get()).item(itemRepository.findById(124L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(341L).get()).item(itemRepository.findById(123L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(342L).get()).item(itemRepository.findById(122L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(343L).get()).item(itemRepository.findById(121L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(344L).get()).item(itemRepository.findById(120L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(345L).get()).item(itemRepository.findById(119L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(346L).get()).item(itemRepository.findById(118L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(347L).get()).item(itemRepository.findById(117L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(348L).get()).item(itemRepository.findById(116L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(349L).get()).item(itemRepository.findById(115L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(350L).get()).item(itemRepository.findById(114L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(351L).get()).item(itemRepository.findById(113L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(352L).get()).item(itemRepository.findById(112L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(353L).get()).item(itemRepository.findById(111L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(354L).get()).item(itemRepository.findById(110L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(355L).get()).item(itemRepository.findById(109L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(356L).get()).item(itemRepository.findById(108L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(357L).get()).item(itemRepository.findById(107L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(358L).get()).item(itemRepository.findById(106L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(359L).get()).item(itemRepository.findById(105L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(360L).get()).item(itemRepository.findById(104L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(361L).get()).item(itemRepository.findById(103L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(362L).get()).item(itemRepository.findById(102L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(363L).get()).item(itemRepository.findById(101L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(364L).get()).item(itemRepository.findById(100L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(365L).get()).item(itemRepository.findById(99L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(366L).get()).item(itemRepository.findById(98L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(367L).get()).item(itemRepository.findById(97L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(368L).get()).item(itemRepository.findById(96L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(369L).get()).item(itemRepository.findById(95L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(370L).get()).item(itemRepository.findById(94L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(371L).get()).item(itemRepository.findById(93L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(372L).get()).item(itemRepository.findById(92L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(373L).get()).item(itemRepository.findById(91L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(374L).get()).item(itemRepository.findById(90L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(375L).get()).item(itemRepository.findById(89L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(376L).get()).item(itemRepository.findById(88L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(377L).get()).item(itemRepository.findById(87L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(378L).get()).item(itemRepository.findById(86L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(379L).get()).item(itemRepository.findById(85L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(380L).get()).item(itemRepository.findById(84L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(381L).get()).item(itemRepository.findById(83L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(382L).get()).item(itemRepository.findById(82L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(383L).get()).item(itemRepository.findById(81L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(384L).get()).item(itemRepository.findById(80L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(385L).get()).item(itemRepository.findById(79L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(386L).get()).item(itemRepository.findById(78L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(387L).get()).item(itemRepository.findById(77L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(388L).get()).item(itemRepository.findById(76L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(389L).get()).item(itemRepository.findById(75L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(390L).get()).item(itemRepository.findById(74L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(391L).get()).item(itemRepository.findById(73L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(392L).get()).item(itemRepository.findById(72L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(393L).get()).item(itemRepository.findById(71L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(394L).get()).item(itemRepository.findById(70L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(395L).get()).item(itemRepository.findById(69L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(396L).get()).item(itemRepository.findById(68L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(397L).get()).item(itemRepository.findById(67L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(398L).get()).item(itemRepository.findById(66L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(399L).get()).item(itemRepository.findById(65L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(400L).get()).item(itemRepository.findById(64L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(401L).get()).item(itemRepository.findById(63L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(402L).get()).item(itemRepository.findById(62L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(403L).get()).item(itemRepository.findById(61L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(404L).get()).item(itemRepository.findById(60L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(405L).get()).item(itemRepository.findById(59L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(406L).get()).item(itemRepository.findById(58L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(407L).get()).item(itemRepository.findById(57L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(408L).get()).item(itemRepository.findById(56L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(409L).get()).item(itemRepository.findById(55L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(410L).get()).item(itemRepository.findById(54L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(411L).get()).item(itemRepository.findById(53L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(412L).get()).item(itemRepository.findById(52L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(413L).get()).item(itemRepository.findById(51L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(414L).get()).item(itemRepository.findById(50L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(415L).get()).item(itemRepository.findById(49L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(416L).get()).item(itemRepository.findById(48L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(417L).get()).item(itemRepository.findById(47L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(418L).get()).item(itemRepository.findById(46L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(419L).get()).item(itemRepository.findById(45L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(420L).get()).item(itemRepository.findById(44L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(421L).get()).item(itemRepository.findById(43L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(422L).get()).item(itemRepository.findById(42L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(423L).get()).item(itemRepository.findById(41L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(424L).get()).item(itemRepository.findById(40L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(425L).get()).item(itemRepository.findById(39L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(426L).get()).item(itemRepository.findById(38L).get()).quantity(5L).build());
        cartDetailRepository.save(CartDetail.builder().cart(cartRepository.findById(427L).get()).item(itemRepository.findById(37L).get()).quantity(5L).build());
    }

    void initRestauranStock() {
        restaurantStockRepository.save(
                restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(1L).get()).quantity(100L).restaurant(restaurantRepository.findById(1L).get()).build()));
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(2L).get()).quantity(100L).restaurant(restaurantRepository.findById(2L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(3L).get()).quantity(100L).restaurant(restaurantRepository.findById(3L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(4L).get()).quantity(100L).restaurant(restaurantRepository.findById(4L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(5L).get()).quantity(100L).restaurant(restaurantRepository.findById(5L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(6L).get()).quantity(100L).restaurant(restaurantRepository.findById(6L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(7L).get()).quantity(100L).restaurant(restaurantRepository.findById(7L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(8L).get()).quantity(100L).restaurant(restaurantRepository.findById(8L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(9L).get()).quantity(100L).restaurant(restaurantRepository.findById(9L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(10L).get()).quantity(100L).restaurant(restaurantRepository.findById(10L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(11L).get()).quantity(100L).restaurant(restaurantRepository.findById(11L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(12L).get()).quantity(100L).restaurant(restaurantRepository.findById(12L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(13L).get()).quantity(100L).restaurant(restaurantRepository.findById(13L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(14L).get()).quantity(100L).restaurant(restaurantRepository.findById(14L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(15L).get()).quantity(100L).restaurant(restaurantRepository.findById(15L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(16L).get()).quantity(100L).restaurant(restaurantRepository.findById(16L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(17L).get()).quantity(100L).restaurant(restaurantRepository.findById(17L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(18L).get()).quantity(100L).restaurant(restaurantRepository.findById(18L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(19L).get()).quantity(100L).restaurant(restaurantRepository.findById(19L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(20L).get()).quantity(100L).restaurant(restaurantRepository.findById(20L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(21L).get()).quantity(100L).restaurant(restaurantRepository.findById(21L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(22L).get()).quantity(100L).restaurant(restaurantRepository.findById(22L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(23L).get()).quantity(100L).restaurant(restaurantRepository.findById(23L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(24L).get()).quantity(100L).restaurant(restaurantRepository.findById(24L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(25L).get()).quantity(100L).restaurant(restaurantRepository.findById(25L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(26L).get()).quantity(100L).restaurant(restaurantRepository.findById(26L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(27L).get()).quantity(100L).restaurant(restaurantRepository.findById(27L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(28L).get()).quantity(100L).restaurant(restaurantRepository.findById(28L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(29L).get()).quantity(100L).restaurant(restaurantRepository.findById(29L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(30L).get()).quantity(100L).restaurant(restaurantRepository.findById(30L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(31L).get()).quantity(100L).restaurant(restaurantRepository.findById(31L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(32L).get()).quantity(100L).restaurant(restaurantRepository.findById(32L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(33L).get()).quantity(100L).restaurant(restaurantRepository.findById(33L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(34L).get()).quantity(100L).restaurant(restaurantRepository.findById(34L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(35L).get()).quantity(100L).restaurant(restaurantRepository.findById(35L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(36L).get()).quantity(100L).restaurant(restaurantRepository.findById(36L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(37L).get()).quantity(100L).restaurant(restaurantRepository.findById(37L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(38L).get()).quantity(100L).restaurant(restaurantRepository.findById(38L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(39L).get()).quantity(100L).restaurant(restaurantRepository.findById(39L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(40L).get()).quantity(100L).restaurant(restaurantRepository.findById(40L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(41L).get()).quantity(100L).restaurant(restaurantRepository.findById(41L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(42L).get()).quantity(100L).restaurant(restaurantRepository.findById(42L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(43L).get()).quantity(100L).restaurant(restaurantRepository.findById(43L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(44L).get()).quantity(100L).restaurant(restaurantRepository.findById(44L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(45L).get()).quantity(100L).restaurant(restaurantRepository.findById(45L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(46L).get()).quantity(100L).restaurant(restaurantRepository.findById(46L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(47L).get()).quantity(100L).restaurant(restaurantRepository.findById(47L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(48L).get()).quantity(100L).restaurant(restaurantRepository.findById(48L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(49L).get()).quantity(100L).restaurant(restaurantRepository.findById(49L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(50L).get()).quantity(100L).restaurant(restaurantRepository.findById(50L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(51L).get()).quantity(100L).restaurant(restaurantRepository.findById(51L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(52L).get()).quantity(100L).restaurant(restaurantRepository.findById(52L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(53L).get()).quantity(100L).restaurant(restaurantRepository.findById(53L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(54L).get()).quantity(100L).restaurant(restaurantRepository.findById(54L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(55L).get()).quantity(100L).restaurant(restaurantRepository.findById(55L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(56L).get()).quantity(100L).restaurant(restaurantRepository.findById(56L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(57L).get()).quantity(100L).restaurant(restaurantRepository.findById(57L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(58L).get()).quantity(100L).restaurant(restaurantRepository.findById(58L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(59L).get()).quantity(100L).restaurant(restaurantRepository.findById(59L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(60L).get()).quantity(100L).restaurant(restaurantRepository.findById(60L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(61L).get()).quantity(100L).restaurant(restaurantRepository.findById(61L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(62L).get()).quantity(100L).restaurant(restaurantRepository.findById(62L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(63L).get()).quantity(100L).restaurant(restaurantRepository.findById(63L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(64L).get()).quantity(100L).restaurant(restaurantRepository.findById(64L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(65L).get()).quantity(100L).restaurant(restaurantRepository.findById(65L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(66L).get()).quantity(100L).restaurant(restaurantRepository.findById(66L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(67L).get()).quantity(100L).restaurant(restaurantRepository.findById(67L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(68L).get()).quantity(100L).restaurant(restaurantRepository.findById(68L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(69L).get()).quantity(100L).restaurant(restaurantRepository.findById(69L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(70L).get()).quantity(100L).restaurant(restaurantRepository.findById(70L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(71L).get()).quantity(100L).restaurant(restaurantRepository.findById(71L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(72L).get()).quantity(100L).restaurant(restaurantRepository.findById(72L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(73L).get()).quantity(100L).restaurant(restaurantRepository.findById(73L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(74L).get()).quantity(100L).restaurant(restaurantRepository.findById(74L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(75L).get()).quantity(100L).restaurant(restaurantRepository.findById(75L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(76L).get()).quantity(100L).restaurant(restaurantRepository.findById(76L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(77L).get()).quantity(100L).restaurant(restaurantRepository.findById(77L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(78L).get()).quantity(100L).restaurant(restaurantRepository.findById(78L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(79L).get()).quantity(100L).restaurant(restaurantRepository.findById(79L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(80L).get()).quantity(100L).restaurant(restaurantRepository.findById(80L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(81L).get()).quantity(100L).restaurant(restaurantRepository.findById(81L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(82L).get()).quantity(100L).restaurant(restaurantRepository.findById(82L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(83L).get()).quantity(100L).restaurant(restaurantRepository.findById(83L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(84L).get()).quantity(100L).restaurant(restaurantRepository.findById(84L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(85L).get()).quantity(100L).restaurant(restaurantRepository.findById(85L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(86L).get()).quantity(100L).restaurant(restaurantRepository.findById(86L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(87L).get()).quantity(100L).restaurant(restaurantRepository.findById(87L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(88L).get()).quantity(100L).restaurant(restaurantRepository.findById(88L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(89L).get()).quantity(100L).restaurant(restaurantRepository.findById(89L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(90L).get()).quantity(100L).restaurant(restaurantRepository.findById(90L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(91L).get()).quantity(100L).restaurant(restaurantRepository.findById(91L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(92L).get()).quantity(100L).restaurant(restaurantRepository.findById(92L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(93L).get()).quantity(100L).restaurant(restaurantRepository.findById(93L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(94L).get()).quantity(100L).restaurant(restaurantRepository.findById(94L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(95L).get()).quantity(100L).restaurant(restaurantRepository.findById(95L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(96L).get()).quantity(100L).restaurant(restaurantRepository.findById(96L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(97L).get()).quantity(100L).restaurant(restaurantRepository.findById(97L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(98L).get()).quantity(100L).restaurant(restaurantRepository.findById(98L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(99L).get()).quantity(100L).restaurant(restaurantRepository.findById(99L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(100L).get()).quantity(100L).restaurant(restaurantRepository.findById(100L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(100L).get()).quantity(100L).restaurant(restaurantRepository.findById(1L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(99L).get()).quantity(100L).restaurant(restaurantRepository.findById(2L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(98L).get()).quantity(100L).restaurant(restaurantRepository.findById(3L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(97L).get()).quantity(100L).restaurant(restaurantRepository.findById(4L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(96L).get()).quantity(100L).restaurant(restaurantRepository.findById(5L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(95L).get()).quantity(100L).restaurant(restaurantRepository.findById(6L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(94L).get()).quantity(100L).restaurant(restaurantRepository.findById(7L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(93L).get()).quantity(100L).restaurant(restaurantRepository.findById(8L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(92L).get()).quantity(100L).restaurant(restaurantRepository.findById(9L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(91L).get()).quantity(100L).restaurant(restaurantRepository.findById(10L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(90L).get()).quantity(100L).restaurant(restaurantRepository.findById(11L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(89L).get()).quantity(100L).restaurant(restaurantRepository.findById(12L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(88L).get()).quantity(100L).restaurant(restaurantRepository.findById(13L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(87L).get()).quantity(100L).restaurant(restaurantRepository.findById(14L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(86L).get()).quantity(100L).restaurant(restaurantRepository.findById(15L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(85L).get()).quantity(100L).restaurant(restaurantRepository.findById(16L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(84L).get()).quantity(100L).restaurant(restaurantRepository.findById(17L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(83L).get()).quantity(100L).restaurant(restaurantRepository.findById(18L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(82L).get()).quantity(100L).restaurant(restaurantRepository.findById(19L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(81L).get()).quantity(100L).restaurant(restaurantRepository.findById(20L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(80L).get()).quantity(100L).restaurant(restaurantRepository.findById(21L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(79L).get()).quantity(100L).restaurant(restaurantRepository.findById(22L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(78L).get()).quantity(100L).restaurant(restaurantRepository.findById(23L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(77L).get()).quantity(100L).restaurant(restaurantRepository.findById(24L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(76L).get()).quantity(100L).restaurant(restaurantRepository.findById(25L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(75L).get()).quantity(100L).restaurant(restaurantRepository.findById(26L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(74L).get()).quantity(100L).restaurant(restaurantRepository.findById(27L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(73L).get()).quantity(100L).restaurant(restaurantRepository.findById(28L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(72L).get()).quantity(100L).restaurant(restaurantRepository.findById(29L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(71L).get()).quantity(100L).restaurant(restaurantRepository.findById(30L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(70L).get()).quantity(100L).restaurant(restaurantRepository.findById(31L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(69L).get()).quantity(100L).restaurant(restaurantRepository.findById(32L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(68L).get()).quantity(100L).restaurant(restaurantRepository.findById(33L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(67L).get()).quantity(100L).restaurant(restaurantRepository.findById(34L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(66L).get()).quantity(100L).restaurant(restaurantRepository.findById(35L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(65L).get()).quantity(100L).restaurant(restaurantRepository.findById(36L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(64L).get()).quantity(100L).restaurant(restaurantRepository.findById(37L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(63L).get()).quantity(100L).restaurant(restaurantRepository.findById(38L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(62L).get()).quantity(100L).restaurant(restaurantRepository.findById(39L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(61L).get()).quantity(100L).restaurant(restaurantRepository.findById(40L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(60L).get()).quantity(100L).restaurant(restaurantRepository.findById(41L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(59L).get()).quantity(100L).restaurant(restaurantRepository.findById(42L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(58L).get()).quantity(100L).restaurant(restaurantRepository.findById(43L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(57L).get()).quantity(100L).restaurant(restaurantRepository.findById(44L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(56L).get()).quantity(100L).restaurant(restaurantRepository.findById(45L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(55L).get()).quantity(100L).restaurant(restaurantRepository.findById(46L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(54L).get()).quantity(100L).restaurant(restaurantRepository.findById(47L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(53L).get()).quantity(100L).restaurant(restaurantRepository.findById(48L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(52L).get()).quantity(100L).restaurant(restaurantRepository.findById(49L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(51L).get()).quantity(100L).restaurant(restaurantRepository.findById(50L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(50L).get()).quantity(100L).restaurant(restaurantRepository.findById(51L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(49L).get()).quantity(100L).restaurant(restaurantRepository.findById(52L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(48L).get()).quantity(100L).restaurant(restaurantRepository.findById(53L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(47L).get()).quantity(100L).restaurant(restaurantRepository.findById(54L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(46L).get()).quantity(100L).restaurant(restaurantRepository.findById(55L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(45L).get()).quantity(100L).restaurant(restaurantRepository.findById(56L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(44L).get()).quantity(100L).restaurant(restaurantRepository.findById(57L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(43L).get()).quantity(100L).restaurant(restaurantRepository.findById(58L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(42L).get()).quantity(100L).restaurant(restaurantRepository.findById(59L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(41L).get()).quantity(100L).restaurant(restaurantRepository.findById(60L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(40L).get()).quantity(100L).restaurant(restaurantRepository.findById(61L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(39L).get()).quantity(100L).restaurant(restaurantRepository.findById(62L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(38L).get()).quantity(100L).restaurant(restaurantRepository.findById(63L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(37L).get()).quantity(100L).restaurant(restaurantRepository.findById(64L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(36L).get()).quantity(100L).restaurant(restaurantRepository.findById(65L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(35L).get()).quantity(100L).restaurant(restaurantRepository.findById(66L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(34L).get()).quantity(100L).restaurant(restaurantRepository.findById(67L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(33L).get()).quantity(100L).restaurant(restaurantRepository.findById(68L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(32L).get()).quantity(100L).restaurant(restaurantRepository.findById(69L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(31L).get()).quantity(100L).restaurant(restaurantRepository.findById(70L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(30L).get()).quantity(100L).restaurant(restaurantRepository.findById(71L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(29L).get()).quantity(100L).restaurant(restaurantRepository.findById(72L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(28L).get()).quantity(100L).restaurant(restaurantRepository.findById(73L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(27L).get()).quantity(100L).restaurant(restaurantRepository.findById(74L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(26L).get()).quantity(100L).restaurant(restaurantRepository.findById(75L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(25L).get()).quantity(100L).restaurant(restaurantRepository.findById(76L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(24L).get()).quantity(100L).restaurant(restaurantRepository.findById(77L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(23L).get()).quantity(100L).restaurant(restaurantRepository.findById(78L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(22L).get()).quantity(100L).restaurant(restaurantRepository.findById(79L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(21L).get()).quantity(100L).restaurant(restaurantRepository.findById(80L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(20L).get()).quantity(100L).restaurant(restaurantRepository.findById(81L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(19L).get()).quantity(100L).restaurant(restaurantRepository.findById(82L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(18L).get()).quantity(100L).restaurant(restaurantRepository.findById(83L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(17L).get()).quantity(100L).restaurant(restaurantRepository.findById(84L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(16L).get()).quantity(100L).restaurant(restaurantRepository.findById(85L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(15L).get()).quantity(100L).restaurant(restaurantRepository.findById(86L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(14L).get()).quantity(100L).restaurant(restaurantRepository.findById(87L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(13L).get()).quantity(100L).restaurant(restaurantRepository.findById(88L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(12L).get()).quantity(100L).restaurant(restaurantRepository.findById(89L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(11L).get()).quantity(100L).restaurant(restaurantRepository.findById(90L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(10L).get()).quantity(100L).restaurant(restaurantRepository.findById(91L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(9L).get()).quantity(100L).restaurant(restaurantRepository.findById(92L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(8L).get()).quantity(100L).restaurant(restaurantRepository.findById(93L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(7L).get()).quantity(100L).restaurant(restaurantRepository.findById(94L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(6L).get()).quantity(100L).restaurant(restaurantRepository.findById(95L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(5L).get()).quantity(100L).restaurant(restaurantRepository.findById(96L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(4L).get()).quantity(100L).restaurant(restaurantRepository.findById(97L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(3L).get()).quantity(100L).restaurant(restaurantRepository.findById(98L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(2L).get()).quantity(100L).restaurant(restaurantRepository.findById(99L).get()).build());
        restaurantStockRepository.save(RestaurantStock.builder().product(productRepository.findById(1L).get()).quantity(100L).restaurant(restaurantRepository.findById(100L).get()).build());
    }

    void initQuestion() {
        questionRepository.save(Question.builder().member(memberRepository.findById(1L).get()).title("테스트 문의사항 1").content("테스트 문의사항 내용 1").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(2L).get()).title("테스트 문의사항 2").content("테스트 문의사항 내용 2").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(3L).get()).title("테스트 문의사항 3").content("테스트 문의사항 내용 3").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(4L).get()).title("테스트 문의사항 4").content("테스트 문의사항 내용 4").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(5L).get()).title("테스트 문의사항 5").content("테스트 문의사항 내용 5").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(6L).get()).title("테스트 문의사항 6").content("테스트 문의사항 내용 6").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(7L).get()).title("테스트 문의사항 7").content("테스트 문의사항 내용 7").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(8L).get()).title("테스트 문의사항 8").content("테스트 문의사항 내용 8").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(9L).get()).title("테스트 문의사항 9").content("테스트 문의사항 내용 9").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(10L).get()).title("테스트 문의사항 10").content("테스트 문의사항 내용 10").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(11L).get()).title("테스트 문의사항 11").content("테스트 문의사항 내용 11").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(12L).get()).title("테스트 문의사항 12").content("테스트 문의사항 내용 12").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(13L).get()).title("테스트 문의사항 13").content("테스트 문의사항 내용 13").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(14L).get()).title("테스트 문의사항 14").content("테스트 문의사항 내용 14").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(15L).get()).title("테스트 문의사항 15").content("테스트 문의사항 내용 15").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(16L).get()).title("테스트 문의사항 16").content("테스트 문의사항 내용 16").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(17L).get()).title("테스트 문의사항 17").content("테스트 문의사항 내용 17").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(18L).get()).title("테스트 문의사항 18").content("테스트 문의사항 내용 18").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(19L).get()).title("테스트 문의사항 19").content("테스트 문의사항 내용 19").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(20L).get()).title("테스트 문의사항 20").content("테스트 문의사항 내용 20").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(21L).get()).title("테스트 문의사항 21").content("테스트 문의사항 내용 21").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(22L).get()).title("테스트 문의사항 22").content("테스트 문의사항 내용 22").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(23L).get()).title("테스트 문의사항 23").content("테스트 문의사항 내용 23").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(24L).get()).title("테스트 문의사항 24").content("테스트 문의사항 내용 24").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(25L).get()).title("테스트 문의사항 25").content("테스트 문의사항 내용 25").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(26L).get()).title("테스트 문의사항 26").content("테스트 문의사항 내용 26").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(27L).get()).title("테스트 문의사항 27").content("테스트 문의사항 내용 27").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(28L).get()).title("테스트 문의사항 28").content("테스트 문의사항 내용 28").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(29L).get()).title("테스트 문의사항 29").content("테스트 문의사항 내용 29").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(30L).get()).title("테스트 문의사항 30").content("테스트 문의사항 내용 30").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(31L).get()).title("테스트 문의사항 31").content("테스트 문의사항 내용 31").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(32L).get()).title("테스트 문의사항 32").content("테스트 문의사항 내용 32").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(33L).get()).title("테스트 문의사항 33").content("테스트 문의사항 내용 33").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(34L).get()).title("테스트 문의사항 34").content("테스트 문의사항 내용 34").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(35L).get()).title("테스트 문의사항 35").content("테스트 문의사항 내용 35").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(36L).get()).title("테스트 문의사항 36").content("테스트 문의사항 내용 36").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(37L).get()).title("테스트 문의사항 37").content("테스트 문의사항 내용 37").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(38L).get()).title("테스트 문의사항 38").content("테스트 문의사항 내용 38").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(39L).get()).title("테스트 문의사항 39").content("테스트 문의사항 내용 39").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(40L).get()).title("테스트 문의사항 40").content("테스트 문의사항 내용 40").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(41L).get()).title("테스트 문의사항 41").content("테스트 문의사항 내용 41").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(42L).get()).title("테스트 문의사항 42").content("테스트 문의사항 내용 42").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(43L).get()).title("테스트 문의사항 43").content("테스트 문의사항 내용 43").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(44L).get()).title("테스트 문의사항 44").content("테스트 문의사항 내용 44").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(45L).get()).title("테스트 문의사항 45").content("테스트 문의사항 내용 45").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(46L).get()).title("테스트 문의사항 46").content("테스트 문의사항 내용 46").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(47L).get()).title("테스트 문의사항 47").content("테스트 문의사항 내용 47").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(48L).get()).title("테스트 문의사항 48").content("테스트 문의사항 내용 48").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(49L).get()).title("테스트 문의사항 49").content("테스트 문의사항 내용 49").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(50L).get()).title("테스트 문의사항 50").content("테스트 문의사항 내용 50").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(51L).get()).title("테스트 문의사항 51").content("테스트 문의사항 내용 51").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(52L).get()).title("테스트 문의사항 52").content("테스트 문의사항 내용 52").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(53L).get()).title("테스트 문의사항 53").content("테스트 문의사항 내용 53").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(54L).get()).title("테스트 문의사항 54").content("테스트 문의사항 내용 54").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(55L).get()).title("테스트 문의사항 55").content("테스트 문의사항 내용 55").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(56L).get()).title("테스트 문의사항 56").content("테스트 문의사항 내용 56").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(57L).get()).title("테스트 문의사항 57").content("테스트 문의사항 내용 57").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(58L).get()).title("테스트 문의사항 58").content("테스트 문의사항 내용 58").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(59L).get()).title("테스트 문의사항 59").content("테스트 문의사항 내용 59").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(60L).get()).title("테스트 문의사항 60").content("테스트 문의사항 내용 60").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(61L).get()).title("테스트 문의사항 61").content("테스트 문의사항 내용 61").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(62L).get()).title("테스트 문의사항 62").content("테스트 문의사항 내용 62").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(63L).get()).title("테스트 문의사항 63").content("테스트 문의사항 내용 63").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(64L).get()).title("테스트 문의사항 64").content("테스트 문의사항 내용 64").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(65L).get()).title("테스트 문의사항 65").content("테스트 문의사항 내용 65").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(66L).get()).title("테스트 문의사항 66").content("테스트 문의사항 내용 66").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(67L).get()).title("테스트 문의사항 67").content("테스트 문의사항 내용 67").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(68L).get()).title("테스트 문의사항 68").content("테스트 문의사항 내용 68").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(69L).get()).title("테스트 문의사항 69").content("테스트 문의사항 내용 69").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(70L).get()).title("테스트 문의사항 70").content("테스트 문의사항 내용 70").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(71L).get()).title("테스트 문의사항 71").content("테스트 문의사항 내용 71").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(72L).get()).title("테스트 문의사항 72").content("테스트 문의사항 내용 72").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(73L).get()).title("테스트 문의사항 73").content("테스트 문의사항 내용 73").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(74L).get()).title("테스트 문의사항 74").content("테스트 문의사항 내용 74").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(75L).get()).title("테스트 문의사항 75").content("테스트 문의사항 내용 75").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(76L).get()).title("테스트 문의사항 76").content("테스트 문의사항 내용 76").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(77L).get()).title("테스트 문의사항 77").content("테스트 문의사항 내용 77").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(78L).get()).title("테스트 문의사항 78").content("테스트 문의사항 내용 78").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(79L).get()).title("테스트 문의사항 79").content("테스트 문의사항 내용 79").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(80L).get()).title("테스트 문의사항 80").content("테스트 문의사항 내용 80").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(81L).get()).title("테스트 문의사항 81").content("테스트 문의사항 내용 81").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(82L).get()).title("테스트 문의사항 82").content("테스트 문의사항 내용 82").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(83L).get()).title("테스트 문의사항 83").content("테스트 문의사항 내용 83").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(84L).get()).title("테스트 문의사항 84").content("테스트 문의사항 내용 84").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(85L).get()).title("테스트 문의사항 85").content("테스트 문의사항 내용 85").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(86L).get()).title("테스트 문의사항 86").content("테스트 문의사항 내용 86").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(87L).get()).title("테스트 문의사항 87").content("테스트 문의사항 내용 87").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(88L).get()).title("테스트 문의사항 88").content("테스트 문의사항 내용 88").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(89L).get()).title("테스트 문의사항 89").content("테스트 문의사항 내용 89").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(90L).get()).title("테스트 문의사항 90").content("테스트 문의사항 내용 90").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(91L).get()).title("테스트 문의사항 91").content("테스트 문의사항 내용 91").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(92L).get()).title("테스트 문의사항 92").content("테스트 문의사항 내용 92").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(93L).get()).title("테스트 문의사항 93").content("테스트 문의사항 내용 93").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(94L).get()).title("테스트 문의사항 94").content("테스트 문의사항 내용 94").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(95L).get()).title("테스트 문의사항 95").content("테스트 문의사항 내용 95").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(96L).get()).title("테스트 문의사항 96").content("테스트 문의사항 내용 96").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(97L).get()).title("테스트 문의사항 97").content("테스트 문의사항 내용 97").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(98L).get()).title("테스트 문의사항 98").content("테스트 문의사항 내용 98").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(99L).get()).title("테스트 문의사항 99").content("테스트 문의사항 내용 99").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(100L).get()).title("테스트 문의사항 100").content("테스트 문의사항 내용 100").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(101L).get()).title("테스트 문의사항 101").content("테스트 문의사항 내용 101").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(102L).get()).title("테스트 문의사항 102").content("테스트 문의사항 내용 102").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(103L).get()).title("테스트 문의사항 103").content("테스트 문의사항 내용 103").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(104L).get()).title("테스트 문의사항 104").content("테스트 문의사항 내용 104").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(105L).get()).title("테스트 문의사항 105").content("테스트 문의사항 내용 105").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(106L).get()).title("테스트 문의사항 106").content("테스트 문의사항 내용 106").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(107L).get()).title("테스트 문의사항 107").content("테스트 문의사항 내용 107").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(108L).get()).title("테스트 문의사항 108").content("테스트 문의사항 내용 108").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(109L).get()).title("테스트 문의사항 109").content("테스트 문의사항 내용 109").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(110L).get()).title("테스트 문의사항 110").content("테스트 문의사항 내용 110").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(111L).get()).title("테스트 문의사항 111").content("테스트 문의사항 내용 111").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(112L).get()).title("테스트 문의사항 112").content("테스트 문의사항 내용 112").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(113L).get()).title("테스트 문의사항 113").content("테스트 문의사항 내용 113").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(114L).get()).title("테스트 문의사항 114").content("테스트 문의사항 내용 114").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(115L).get()).title("테스트 문의사항 115").content("테스트 문의사항 내용 115").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(116L).get()).title("테스트 문의사항 116").content("테스트 문의사항 내용 116").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(117L).get()).title("테스트 문의사항 117").content("테스트 문의사항 내용 117").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(118L).get()).title("테스트 문의사항 118").content("테스트 문의사항 내용 118").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(119L).get()).title("테스트 문의사항 119").content("테스트 문의사항 내용 119").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(120L).get()).title("테스트 문의사항 120").content("테스트 문의사항 내용 120").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(121L).get()).title("테스트 문의사항 121").content("테스트 문의사항 내용 121").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(122L).get()).title("테스트 문의사항 122").content("테스트 문의사항 내용 122").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(123L).get()).title("테스트 문의사항 123").content("테스트 문의사항 내용 123").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(124L).get()).title("테스트 문의사항 124").content("테스트 문의사항 내용 124").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(125L).get()).title("테스트 문의사항 125").content("테스트 문의사항 내용 125").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(126L).get()).title("테스트 문의사항 126").content("테스트 문의사항 내용 126").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(127L).get()).title("테스트 문의사항 127").content("테스트 문의사항 내용 127").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(128L).get()).title("테스트 문의사항 128").content("테스트 문의사항 내용 128").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(129L).get()).title("테스트 문의사항 129").content("테스트 문의사항 내용 129").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(130L).get()).title("테스트 문의사항 130").content("테스트 문의사항 내용 130").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(131L).get()).title("테스트 문의사항 131").content("테스트 문의사항 내용 131").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(132L).get()).title("테스트 문의사항 132").content("테스트 문의사항 내용 132").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(133L).get()).title("테스트 문의사항 133").content("테스트 문의사항 내용 133").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(134L).get()).title("테스트 문의사항 134").content("테스트 문의사항 내용 134").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(135L).get()).title("테스트 문의사항 135").content("테스트 문의사항 내용 135").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(136L).get()).title("테스트 문의사항 136").content("테스트 문의사항 내용 136").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(137L).get()).title("테스트 문의사항 137").content("테스트 문의사항 내용 137").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(138L).get()).title("테스트 문의사항 138").content("테스트 문의사항 내용 138").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(139L).get()).title("테스트 문의사항 139").content("테스트 문의사항 내용 139").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(140L).get()).title("테스트 문의사항 140").content("테스트 문의사항 내용 140").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(141L).get()).title("테스트 문의사항 141").content("테스트 문의사항 내용 141").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(142L).get()).title("테스트 문의사항 142").content("테스트 문의사항 내용 142").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(143L).get()).title("테스트 문의사항 143").content("테스트 문의사항 내용 143").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(144L).get()).title("테스트 문의사항 144").content("테스트 문의사항 내용 144").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(145L).get()).title("테스트 문의사항 145").content("테스트 문의사항 내용 145").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(146L).get()).title("테스트 문의사항 146").content("테스트 문의사항 내용 146").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(147L).get()).title("테스트 문의사항 147").content("테스트 문의사항 내용 147").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(148L).get()).title("테스트 문의사항 148").content("테스트 문의사항 내용 148").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(149L).get()).title("테스트 문의사항 149").content("테스트 문의사항 내용 149").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(150L).get()).title("테스트 문의사항 150").content("테스트 문의사항 내용 150").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(151L).get()).title("테스트 문의사항 151").content("테스트 문의사항 내용 151").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(152L).get()).title("테스트 문의사항 152").content("테스트 문의사항 내용 152").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(153L).get()).title("테스트 문의사항 153").content("테스트 문의사항 내용 153").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(154L).get()).title("테스트 문의사항 154").content("테스트 문의사항 내용 154").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(155L).get()).title("테스트 문의사항 155").content("테스트 문의사항 내용 155").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(156L).get()).title("테스트 문의사항 156").content("테스트 문의사항 내용 156").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(157L).get()).title("테스트 문의사항 157").content("테스트 문의사항 내용 157").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(158L).get()).title("테스트 문의사항 158").content("테스트 문의사항 내용 158").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(159L).get()).title("테스트 문의사항 159").content("테스트 문의사항 내용 159").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(160L).get()).title("테스트 문의사항 160").content("테스트 문의사항 내용 160").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(161L).get()).title("테스트 문의사항 161").content("테스트 문의사항 내용 161").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(162L).get()).title("테스트 문의사항 162").content("테스트 문의사항 내용 162").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(163L).get()).title("테스트 문의사항 163").content("테스트 문의사항 내용 163").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(164L).get()).title("테스트 문의사항 164").content("테스트 문의사항 내용 164").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(165L).get()).title("테스트 문의사항 165").content("테스트 문의사항 내용 165").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(166L).get()).title("테스트 문의사항 166").content("테스트 문의사항 내용 166").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(167L).get()).title("테스트 문의사항 167").content("테스트 문의사항 내용 167").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(168L).get()).title("테스트 문의사항 168").content("테스트 문의사항 내용 168").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(169L).get()).title("테스트 문의사항 169").content("테스트 문의사항 내용 169").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(170L).get()).title("테스트 문의사항 170").content("테스트 문의사항 내용 170").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(171L).get()).title("테스트 문의사항 171").content("테스트 문의사항 내용 171").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(172L).get()).title("테스트 문의사항 172").content("테스트 문의사항 내용 172").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(173L).get()).title("테스트 문의사항 173").content("테스트 문의사항 내용 173").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(174L).get()).title("테스트 문의사항 174").content("테스트 문의사항 내용 174").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(175L).get()).title("테스트 문의사항 175").content("테스트 문의사항 내용 175").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(176L).get()).title("테스트 문의사항 176").content("테스트 문의사항 내용 176").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(177L).get()).title("테스트 문의사항 177").content("테스트 문의사항 내용 177").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(178L).get()).title("테스트 문의사항 178").content("테스트 문의사항 내용 178").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(179L).get()).title("테스트 문의사항 179").content("테스트 문의사항 내용 179").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(180L).get()).title("테스트 문의사항 180").content("테스트 문의사항 내용 180").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(181L).get()).title("테스트 문의사항 181").content("테스트 문의사항 내용 181").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(182L).get()).title("테스트 문의사항 182").content("테스트 문의사항 내용 182").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(183L).get()).title("테스트 문의사항 183").content("테스트 문의사항 내용 183").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(184L).get()).title("테스트 문의사항 184").content("테스트 문의사항 내용 184").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(185L).get()).title("테스트 문의사항 185").content("테스트 문의사항 내용 185").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(186L).get()).title("테스트 문의사항 186").content("테스트 문의사항 내용 186").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(187L).get()).title("테스트 문의사항 187").content("테스트 문의사항 내용 187").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(188L).get()).title("테스트 문의사항 188").content("테스트 문의사항 내용 188").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(189L).get()).title("테스트 문의사항 189").content("테스트 문의사항 내용 189").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(190L).get()).title("테스트 문의사항 190").content("테스트 문의사항 내용 190").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(191L).get()).title("테스트 문의사항 191").content("테스트 문의사항 내용 191").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(192L).get()).title("테스트 문의사항 192").content("테스트 문의사항 내용 192").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(193L).get()).title("테스트 문의사항 193").content("테스트 문의사항 내용 193").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(194L).get()).title("테스트 문의사항 194").content("테스트 문의사항 내용 194").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(195L).get()).title("테스트 문의사항 195").content("테스트 문의사항 내용 195").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(196L).get()).title("테스트 문의사항 196").content("테스트 문의사항 내용 196").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(197L).get()).title("테스트 문의사항 197").content("테스트 문의사항 내용 197").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(198L).get()).title("테스트 문의사항 198").content("테스트 문의사항 내용 198").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(199L).get()).title("테스트 문의사항 199").content("테스트 문의사항 내용 199").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(200L).get()).title("테스트 문의사항 200").content("테스트 문의사항 내용 200").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(201L).get()).title("테스트 문의사항 201").content("테스트 문의사항 내용 201").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(202L).get()).title("테스트 문의사항 202").content("테스트 문의사항 내용 202").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(203L).get()).title("테스트 문의사항 203").content("테스트 문의사항 내용 203").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(204L).get()).title("테스트 문의사항 204").content("테스트 문의사항 내용 204").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(205L).get()).title("테스트 문의사항 205").content("테스트 문의사항 내용 205").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(206L).get()).title("테스트 문의사항 206").content("테스트 문의사항 내용 206").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(207L).get()).title("테스트 문의사항 207").content("테스트 문의사항 내용 207").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(208L).get()).title("테스트 문의사항 208").content("테스트 문의사항 내용 208").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(209L).get()).title("테스트 문의사항 209").content("테스트 문의사항 내용 209").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(210L).get()).title("테스트 문의사항 210").content("테스트 문의사항 내용 210").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(211L).get()).title("테스트 문의사항 211").content("테스트 문의사항 내용 211").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(212L).get()).title("테스트 문의사항 212").content("테스트 문의사항 내용 212").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(213L).get()).title("테스트 문의사항 213").content("테스트 문의사항 내용 213").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(214L).get()).title("테스트 문의사항 214").content("테스트 문의사항 내용 214").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(215L).get()).title("테스트 문의사항 215").content("테스트 문의사항 내용 215").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(216L).get()).title("테스트 문의사항 216").content("테스트 문의사항 내용 216").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(217L).get()).title("테스트 문의사항 217").content("테스트 문의사항 내용 217").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(218L).get()).title("테스트 문의사항 218").content("테스트 문의사항 내용 218").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(219L).get()).title("테스트 문의사항 219").content("테스트 문의사항 내용 219").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(220L).get()).title("테스트 문의사항 220").content("테스트 문의사항 내용 220").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(221L).get()).title("테스트 문의사항 221").content("테스트 문의사항 내용 221").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(222L).get()).title("테스트 문의사항 222").content("테스트 문의사항 내용 222").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(223L).get()).title("테스트 문의사항 223").content("테스트 문의사항 내용 223").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(224L).get()).title("테스트 문의사항 224").content("테스트 문의사항 내용 224").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(225L).get()).title("테스트 문의사항 225").content("테스트 문의사항 내용 225").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(226L).get()).title("테스트 문의사항 226").content("테스트 문의사항 내용 226").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(227L).get()).title("테스트 문의사항 227").content("테스트 문의사항 내용 227").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(228L).get()).title("테스트 문의사항 228").content("테스트 문의사항 내용 228").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(229L).get()).title("테스트 문의사항 229").content("테스트 문의사항 내용 229").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(230L).get()).title("테스트 문의사항 230").content("테스트 문의사항 내용 230").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(231L).get()).title("테스트 문의사항 231").content("테스트 문의사항 내용 231").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(232L).get()).title("테스트 문의사항 232").content("테스트 문의사항 내용 232").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(233L).get()).title("테스트 문의사항 233").content("테스트 문의사항 내용 233").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(234L).get()).title("테스트 문의사항 234").content("테스트 문의사항 내용 234").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(235L).get()).title("테스트 문의사항 235").content("테스트 문의사항 내용 235").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(236L).get()).title("테스트 문의사항 236").content("테스트 문의사항 내용 236").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(237L).get()).title("테스트 문의사항 237").content("테스트 문의사항 내용 237").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(238L).get()).title("테스트 문의사항 238").content("테스트 문의사항 내용 238").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(239L).get()).title("테스트 문의사항 239").content("테스트 문의사항 내용 239").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(240L).get()).title("테스트 문의사항 240").content("테스트 문의사항 내용 240").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(241L).get()).title("테스트 문의사항 241").content("테스트 문의사항 내용 241").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(242L).get()).title("테스트 문의사항 242").content("테스트 문의사항 내용 242").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(243L).get()).title("테스트 문의사항 243").content("테스트 문의사항 내용 243").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(244L).get()).title("테스트 문의사항 244").content("테스트 문의사항 내용 244").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(245L).get()).title("테스트 문의사항 245").content("테스트 문의사항 내용 245").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(246L).get()).title("테스트 문의사항 246").content("테스트 문의사항 내용 246").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(247L).get()).title("테스트 문의사항 247").content("테스트 문의사항 내용 247").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(248L).get()).title("테스트 문의사항 248").content("테스트 문의사항 내용 248").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(249L).get()).title("테스트 문의사항 249").content("테스트 문의사항 내용 249").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(250L).get()).title("테스트 문의사항 250").content("테스트 문의사항 내용 250").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(251L).get()).title("테스트 문의사항 251").content("테스트 문의사항 내용 251").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(252L).get()).title("테스트 문의사항 252").content("테스트 문의사항 내용 252").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(253L).get()).title("테스트 문의사항 253").content("테스트 문의사항 내용 253").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(254L).get()).title("테스트 문의사항 254").content("테스트 문의사항 내용 254").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(255L).get()).title("테스트 문의사항 255").content("테스트 문의사항 내용 255").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(256L).get()).title("테스트 문의사항 256").content("테스트 문의사항 내용 256").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(257L).get()).title("테스트 문의사항 257").content("테스트 문의사항 내용 257").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(258L).get()).title("테스트 문의사항 258").content("테스트 문의사항 내용 258").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(259L).get()).title("테스트 문의사항 259").content("테스트 문의사항 내용 259").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(260L).get()).title("테스트 문의사항 260").content("테스트 문의사항 내용 260").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(261L).get()).title("테스트 문의사항 261").content("테스트 문의사항 내용 261").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(262L).get()).title("테스트 문의사항 262").content("테스트 문의사항 내용 262").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(263L).get()).title("테스트 문의사항 263").content("테스트 문의사항 내용 263").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(264L).get()).title("테스트 문의사항 264").content("테스트 문의사항 내용 264").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(265L).get()).title("테스트 문의사항 265").content("테스트 문의사항 내용 265").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(266L).get()).title("테스트 문의사항 266").content("테스트 문의사항 내용 266").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(267L).get()).title("테스트 문의사항 267").content("테스트 문의사항 내용 267").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(268L).get()).title("테스트 문의사항 268").content("테스트 문의사항 내용 268").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(269L).get()).title("테스트 문의사항 269").content("테스트 문의사항 내용 269").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(270L).get()).title("테스트 문의사항 270").content("테스트 문의사항 내용 270").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(271L).get()).title("테스트 문의사항 271").content("테스트 문의사항 내용 271").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(272L).get()).title("테스트 문의사항 272").content("테스트 문의사항 내용 272").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(273L).get()).title("테스트 문의사항 273").content("테스트 문의사항 내용 273").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(274L).get()).title("테스트 문의사항 274").content("테스트 문의사항 내용 274").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(275L).get()).title("테스트 문의사항 275").content("테스트 문의사항 내용 275").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(276L).get()).title("테스트 문의사항 276").content("테스트 문의사항 내용 276").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(277L).get()).title("테스트 문의사항 277").content("테스트 문의사항 내용 277").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(278L).get()).title("테스트 문의사항 278").content("테스트 문의사항 내용 278").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(279L).get()).title("테스트 문의사항 279").content("테스트 문의사항 내용 279").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(280L).get()).title("테스트 문의사항 280").content("테스트 문의사항 내용 280").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(281L).get()).title("테스트 문의사항 281").content("테스트 문의사항 내용 281").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(282L).get()).title("테스트 문의사항 282").content("테스트 문의사항 내용 282").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(283L).get()).title("테스트 문의사항 283").content("테스트 문의사항 내용 283").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(284L).get()).title("테스트 문의사항 284").content("테스트 문의사항 내용 284").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(285L).get()).title("테스트 문의사항 285").content("테스트 문의사항 내용 285").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(286L).get()).title("테스트 문의사항 286").content("테스트 문의사항 내용 286").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(287L).get()).title("테스트 문의사항 287").content("테스트 문의사항 내용 287").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(288L).get()).title("테스트 문의사항 288").content("테스트 문의사항 내용 288").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(289L).get()).title("테스트 문의사항 289").content("테스트 문의사항 내용 289").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(290L).get()).title("테스트 문의사항 290").content("테스트 문의사항 내용 290").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(291L).get()).title("테스트 문의사항 291").content("테스트 문의사항 내용 291").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(292L).get()).title("테스트 문의사항 292").content("테스트 문의사항 내용 292").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(293L).get()).title("테스트 문의사항 293").content("테스트 문의사항 내용 293").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(294L).get()).title("테스트 문의사항 294").content("테스트 문의사항 내용 294").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(295L).get()).title("테스트 문의사항 295").content("테스트 문의사항 내용 295").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(296L).get()).title("테스트 문의사항 296").content("테스트 문의사항 내용 296").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(297L).get()).title("테스트 문의사항 297").content("테스트 문의사항 내용 297").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(298L).get()).title("테스트 문의사항 298").content("테스트 문의사항 내용 298").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(299L).get()).title("테스트 문의사항 299").content("테스트 문의사항 내용 299").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(300L).get()).title("테스트 문의사항 300").content("테스트 문의사항 내용 300").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(301L).get()).title("테스트 문의사항 301").content("테스트 문의사항 내용 301").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(302L).get()).title("테스트 문의사항 302").content("테스트 문의사항 내용 302").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(303L).get()).title("테스트 문의사항 303").content("테스트 문의사항 내용 303").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(304L).get()).title("테스트 문의사항 304").content("테스트 문의사항 내용 304").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(305L).get()).title("테스트 문의사항 305").content("테스트 문의사항 내용 305").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(306L).get()).title("테스트 문의사항 306").content("테스트 문의사항 내용 306").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(307L).get()).title("테스트 문의사항 307").content("테스트 문의사항 내용 307").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(308L).get()).title("테스트 문의사항 308").content("테스트 문의사항 내용 308").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(309L).get()).title("테스트 문의사항 309").content("테스트 문의사항 내용 309").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(310L).get()).title("테스트 문의사항 310").content("테스트 문의사항 내용 310").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(311L).get()).title("테스트 문의사항 311").content("테스트 문의사항 내용 311").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(312L).get()).title("테스트 문의사항 312").content("테스트 문의사항 내용 312").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(313L).get()).title("테스트 문의사항 313").content("테스트 문의사항 내용 313").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(314L).get()).title("테스트 문의사항 314").content("테스트 문의사항 내용 314").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(315L).get()).title("테스트 문의사항 315").content("테스트 문의사항 내용 315").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(316L).get()).title("테스트 문의사항 316").content("테스트 문의사항 내용 316").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(317L).get()).title("테스트 문의사항 317").content("테스트 문의사항 내용 317").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(318L).get()).title("테스트 문의사항 318").content("테스트 문의사항 내용 318").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(319L).get()).title("테스트 문의사항 319").content("테스트 문의사항 내용 319").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(320L).get()).title("테스트 문의사항 320").content("테스트 문의사항 내용 320").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(321L).get()).title("테스트 문의사항 321").content("테스트 문의사항 내용 321").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(322L).get()).title("테스트 문의사항 322").content("테스트 문의사항 내용 322").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(323L).get()).title("테스트 문의사항 323").content("테스트 문의사항 내용 323").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(324L).get()).title("테스트 문의사항 324").content("테스트 문의사항 내용 324").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(325L).get()).title("테스트 문의사항 325").content("테스트 문의사항 내용 325").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(326L).get()).title("테스트 문의사항 326").content("테스트 문의사항 내용 326").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(327L).get()).title("테스트 문의사항 327").content("테스트 문의사항 내용 327").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(328L).get()).title("테스트 문의사항 328").content("테스트 문의사항 내용 328").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(329L).get()).title("테스트 문의사항 329").content("테스트 문의사항 내용 329").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(330L).get()).title("테스트 문의사항 330").content("테스트 문의사항 내용 330").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(331L).get()).title("테스트 문의사항 331").content("테스트 문의사항 내용 331").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(332L).get()).title("테스트 문의사항 332").content("테스트 문의사항 내용 332").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(333L).get()).title("테스트 문의사항 333").content("테스트 문의사항 내용 333").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(334L).get()).title("테스트 문의사항 334").content("테스트 문의사항 내용 334").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(335L).get()).title("테스트 문의사항 335").content("테스트 문의사항 내용 335").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(336L).get()).title("테스트 문의사항 336").content("테스트 문의사항 내용 336").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(337L).get()).title("테스트 문의사항 337").content("테스트 문의사항 내용 337").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(338L).get()).title("테스트 문의사항 338").content("테스트 문의사항 내용 338").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(339L).get()).title("테스트 문의사항 339").content("테스트 문의사항 내용 339").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(340L).get()).title("테스트 문의사항 340").content("테스트 문의사항 내용 340").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(341L).get()).title("테스트 문의사항 341").content("테스트 문의사항 내용 341").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(342L).get()).title("테스트 문의사항 342").content("테스트 문의사항 내용 342").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(343L).get()).title("테스트 문의사항 343").content("테스트 문의사항 내용 343").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(344L).get()).title("테스트 문의사항 344").content("테스트 문의사항 내용 344").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(345L).get()).title("테스트 문의사항 345").content("테스트 문의사항 내용 345").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(346L).get()).title("테스트 문의사항 346").content("테스트 문의사항 내용 346").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(347L).get()).title("테스트 문의사항 347").content("테스트 문의사항 내용 347").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(348L).get()).title("테스트 문의사항 348").content("테스트 문의사항 내용 348").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(349L).get()).title("테스트 문의사항 349").content("테스트 문의사항 내용 349").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(350L).get()).title("테스트 문의사항 350").content("테스트 문의사항 내용 350").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(351L).get()).title("테스트 문의사항 351").content("테스트 문의사항 내용 351").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(352L).get()).title("테스트 문의사항 352").content("테스트 문의사항 내용 352").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(353L).get()).title("테스트 문의사항 353").content("테스트 문의사항 내용 353").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(354L).get()).title("테스트 문의사항 354").content("테스트 문의사항 내용 354").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(355L).get()).title("테스트 문의사항 355").content("테스트 문의사항 내용 355").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(356L).get()).title("테스트 문의사항 356").content("테스트 문의사항 내용 356").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(357L).get()).title("테스트 문의사항 357").content("테스트 문의사항 내용 357").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(358L).get()).title("테스트 문의사항 358").content("테스트 문의사항 내용 358").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(359L).get()).title("테스트 문의사항 359").content("테스트 문의사항 내용 359").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(360L).get()).title("테스트 문의사항 360").content("테스트 문의사항 내용 360").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(361L).get()).title("테스트 문의사항 361").content("테스트 문의사항 내용 361").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(362L).get()).title("테스트 문의사항 362").content("테스트 문의사항 내용 362").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(363L).get()).title("테스트 문의사항 363").content("테스트 문의사항 내용 363").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(364L).get()).title("테스트 문의사항 364").content("테스트 문의사항 내용 364").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(365L).get()).title("테스트 문의사항 365").content("테스트 문의사항 내용 365").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(366L).get()).title("테스트 문의사항 366").content("테스트 문의사항 내용 366").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(367L).get()).title("테스트 문의사항 367").content("테스트 문의사항 내용 367").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(368L).get()).title("테스트 문의사항 368").content("테스트 문의사항 내용 368").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(369L).get()).title("테스트 문의사항 369").content("테스트 문의사항 내용 369").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(370L).get()).title("테스트 문의사항 370").content("테스트 문의사항 내용 370").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(371L).get()).title("테스트 문의사항 371").content("테스트 문의사항 내용 371").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(372L).get()).title("테스트 문의사항 372").content("테스트 문의사항 내용 372").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(373L).get()).title("테스트 문의사항 373").content("테스트 문의사항 내용 373").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(374L).get()).title("테스트 문의사항 374").content("테스트 문의사항 내용 374").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(375L).get()).title("테스트 문의사항 375").content("테스트 문의사항 내용 375").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(376L).get()).title("테스트 문의사항 376").content("테스트 문의사항 내용 376").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(377L).get()).title("테스트 문의사항 377").content("테스트 문의사항 내용 377").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(378L).get()).title("테스트 문의사항 378").content("테스트 문의사항 내용 378").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(379L).get()).title("테스트 문의사항 379").content("테스트 문의사항 내용 379").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(380L).get()).title("테스트 문의사항 380").content("테스트 문의사항 내용 380").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(381L).get()).title("테스트 문의사항 381").content("테스트 문의사항 내용 381").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(382L).get()).title("테스트 문의사항 382").content("테스트 문의사항 내용 382").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(383L).get()).title("테스트 문의사항 383").content("테스트 문의사항 내용 383").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(384L).get()).title("테스트 문의사항 384").content("테스트 문의사항 내용 384").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(385L).get()).title("테스트 문의사항 385").content("테스트 문의사항 내용 385").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(386L).get()).title("테스트 문의사항 386").content("테스트 문의사항 내용 386").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(387L).get()).title("테스트 문의사항 387").content("테스트 문의사항 내용 387").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(388L).get()).title("테스트 문의사항 388").content("테스트 문의사항 내용 388").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(389L).get()).title("테스트 문의사항 389").content("테스트 문의사항 내용 389").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(390L).get()).title("테스트 문의사항 390").content("테스트 문의사항 내용 390").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(391L).get()).title("테스트 문의사항 391").content("테스트 문의사항 내용 391").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(392L).get()).title("테스트 문의사항 392").content("테스트 문의사항 내용 392").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(393L).get()).title("테스트 문의사항 393").content("테스트 문의사항 내용 393").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(394L).get()).title("테스트 문의사항 394").content("테스트 문의사항 내용 394").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(395L).get()).title("테스트 문의사항 395").content("테스트 문의사항 내용 395").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(396L).get()).title("테스트 문의사항 396").content("테스트 문의사항 내용 396").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(397L).get()).title("테스트 문의사항 397").content("테스트 문의사항 내용 397").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(398L).get()).title("테스트 문의사항 398").content("테스트 문의사항 내용 398").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(399L).get()).title("테스트 문의사항 399").content("테스트 문의사항 내용 399").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(400L).get()).title("테스트 문의사항 400").content("테스트 문의사항 내용 400").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(401L).get()).title("테스트 문의사항 401").content("테스트 문의사항 내용 401").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(402L).get()).title("테스트 문의사항 402").content("테스트 문의사항 내용 402").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(403L).get()).title("테스트 문의사항 403").content("테스트 문의사항 내용 403").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(404L).get()).title("테스트 문의사항 404").content("테스트 문의사항 내용 404").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(405L).get()).title("테스트 문의사항 405").content("테스트 문의사항 내용 405").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(406L).get()).title("테스트 문의사항 406").content("테스트 문의사항 내용 406").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(407L).get()).title("테스트 문의사항 407").content("테스트 문의사항 내용 407").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(408L).get()).title("테스트 문의사항 408").content("테스트 문의사항 내용 408").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(409L).get()).title("테스트 문의사항 409").content("테스트 문의사항 내용 409").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(410L).get()).title("테스트 문의사항 410").content("테스트 문의사항 내용 410").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(411L).get()).title("테스트 문의사항 411").content("테스트 문의사항 내용 411").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(412L).get()).title("테스트 문의사항 412").content("테스트 문의사항 내용 412").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(413L).get()).title("테스트 문의사항 413").content("테스트 문의사항 내용 413").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(414L).get()).title("테스트 문의사항 414").content("테스트 문의사항 내용 414").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(415L).get()).title("테스트 문의사항 415").content("테스트 문의사항 내용 415").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(416L).get()).title("테스트 문의사항 416").content("테스트 문의사항 내용 416").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(417L).get()).title("테스트 문의사항 417").content("테스트 문의사항 내용 417").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(418L).get()).title("테스트 문의사항 418").content("테스트 문의사항 내용 418").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(419L).get()).title("테스트 문의사항 419").content("테스트 문의사항 내용 419").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(420L).get()).title("테스트 문의사항 420").content("테스트 문의사항 내용 420").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(421L).get()).title("테스트 문의사항 421").content("테스트 문의사항 내용 421").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(422L).get()).title("테스트 문의사항 422").content("테스트 문의사항 내용 422").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(423L).get()).title("테스트 문의사항 423").content("테스트 문의사항 내용 423").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(424L).get()).title("테스트 문의사항 424").content("테스트 문의사항 내용 424").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(425L).get()).title("테스트 문의사항 425").content("테스트 문의사항 내용 425").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(426L).get()).title("테스트 문의사항 426").content("테스트 문의사항 내용 426").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(427L).get()).title("테스트 문의사항 427").content("테스트 문의사항 내용 427").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(428L).get()).title("테스트 문의사항 428").content("테스트 문의사항 내용 428").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(429L).get()).title("테스트 문의사항 429").content("테스트 문의사항 내용 429").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(430L).get()).title("테스트 문의사항 430").content("테스트 문의사항 내용 430").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(431L).get()).title("테스트 문의사항 431").content("테스트 문의사항 내용 431").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(432L).get()).title("테스트 문의사항 432").content("테스트 문의사항 내용 432").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(433L).get()).title("테스트 문의사항 433").content("테스트 문의사항 내용 433").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(434L).get()).title("테스트 문의사항 434").content("테스트 문의사항 내용 434").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(435L).get()).title("테스트 문의사항 435").content("테스트 문의사항 내용 435").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(436L).get()).title("테스트 문의사항 436").content("테스트 문의사항 내용 436").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(437L).get()).title("테스트 문의사항 437").content("테스트 문의사항 내용 437").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(438L).get()).title("테스트 문의사항 438").content("테스트 문의사항 내용 438").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(439L).get()).title("테스트 문의사항 439").content("테스트 문의사항 내용 439").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(440L).get()).title("테스트 문의사항 440").content("테스트 문의사항 내용 440").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(441L).get()).title("테스트 문의사항 441").content("테스트 문의사항 내용 441").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(442L).get()).title("테스트 문의사항 442").content("테스트 문의사항 내용 442").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(443L).get()).title("테스트 문의사항 443").content("테스트 문의사항 내용 443").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(444L).get()).title("테스트 문의사항 444").content("테스트 문의사항 내용 444").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(445L).get()).title("테스트 문의사항 445").content("테스트 문의사항 내용 445").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(446L).get()).title("테스트 문의사항 446").content("테스트 문의사항 내용 446").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(447L).get()).title("테스트 문의사항 447").content("테스트 문의사항 내용 447").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(448L).get()).title("테스트 문의사항 448").content("테스트 문의사항 내용 448").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(449L).get()).title("테스트 문의사항 449").content("테스트 문의사항 내용 449").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(450L).get()).title("테스트 문의사항 450").content("테스트 문의사항 내용 450").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(451L).get()).title("테스트 문의사항 451").content("테스트 문의사항 내용 451").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(452L).get()).title("테스트 문의사항 452").content("테스트 문의사항 내용 452").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(453L).get()).title("테스트 문의사항 453").content("테스트 문의사항 내용 453").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(454L).get()).title("테스트 문의사항 454").content("테스트 문의사항 내용 454").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(455L).get()).title("테스트 문의사항 455").content("테스트 문의사항 내용 455").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(456L).get()).title("테스트 문의사항 456").content("테스트 문의사항 내용 456").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(457L).get()).title("테스트 문의사항 457").content("테스트 문의사항 내용 457").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(458L).get()).title("테스트 문의사항 458").content("테스트 문의사항 내용 458").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(459L).get()).title("테스트 문의사항 459").content("테스트 문의사항 내용 459").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(460L).get()).title("테스트 문의사항 460").content("테스트 문의사항 내용 460").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(461L).get()).title("테스트 문의사항 461").content("테스트 문의사항 내용 461").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(462L).get()).title("테스트 문의사항 462").content("테스트 문의사항 내용 462").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(463L).get()).title("테스트 문의사항 463").content("테스트 문의사항 내용 463").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(464L).get()).title("테스트 문의사항 464").content("테스트 문의사항 내용 464").status(QuestionStatus.COMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(465L).get()).title("테스트 문의사항 465").content("테스트 문의사항 내용 465").status(QuestionStatus.COMPLETE).build());
    }

    void initQuestion2() {
        questionRepository.save(Question.builder().member(memberRepository.findById(1L).get()).title("테스트 문의사항 466").content("테스트 문의사항 내용 466").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(2L).get()).title("테스트 문의사항 467").content("테스트 문의사항 내용 467").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(3L).get()).title("테스트 문의사항 468").content("테스트 문의사항 내용 468").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(4L).get()).title("테스트 문의사항 469").content("테스트 문의사항 내용 469").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(5L).get()).title("테스트 문의사항 470").content("테스트 문의사항 내용 470").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(6L).get()).title("테스트 문의사항 471").content("테스트 문의사항 내용 471").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(7L).get()).title("테스트 문의사항 472").content("테스트 문의사항 내용 472").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(8L).get()).title("테스트 문의사항 473").content("테스트 문의사항 내용 473").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(9L).get()).title("테스트 문의사항 474").content("테스트 문의사항 내용 474").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(10L).get()).title("테스트 문의사항 475").content("테스트 문의사항 내용 475").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(11L).get()).title("테스트 문의사항 476").content("테스트 문의사항 내용 476").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(12L).get()).title("테스트 문의사항 477").content("테스트 문의사항 내용 477").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(13L).get()).title("테스트 문의사항 478").content("테스트 문의사항 내용 478").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(14L).get()).title("테스트 문의사항 479").content("테스트 문의사항 내용 479").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(15L).get()).title("테스트 문의사항 480").content("테스트 문의사항 내용 480").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(16L).get()).title("테스트 문의사항 481").content("테스트 문의사항 내용 481").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(17L).get()).title("테스트 문의사항 482").content("테스트 문의사항 내용 482").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(18L).get()).title("테스트 문의사항 483").content("테스트 문의사항 내용 483").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(19L).get()).title("테스트 문의사항 484").content("테스트 문의사항 내용 484").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(20L).get()).title("테스트 문의사항 485").content("테스트 문의사항 내용 485").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(21L).get()).title("테스트 문의사항 486").content("테스트 문의사항 내용 486").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(22L).get()).title("테스트 문의사항 487").content("테스트 문의사항 내용 487").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(23L).get()).title("테스트 문의사항 488").content("테스트 문의사항 내용 488").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(24L).get()).title("테스트 문의사항 489").content("테스트 문의사항 내용 489").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(25L).get()).title("테스트 문의사항 490").content("테스트 문의사항 내용 490").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(26L).get()).title("테스트 문의사항 491").content("테스트 문의사항 내용 491").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(27L).get()).title("테스트 문의사항 492").content("테스트 문의사항 내용 492").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(28L).get()).title("테스트 문의사항 493").content("테스트 문의사항 내용 493").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(29L).get()).title("테스트 문의사항 494").content("테스트 문의사항 내용 494").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(30L).get()).title("테스트 문의사항 495").content("테스트 문의사항 내용 495").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(31L).get()).title("테스트 문의사항 496").content("테스트 문의사항 내용 496").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(32L).get()).title("테스트 문의사항 497").content("테스트 문의사항 내용 497").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(33L).get()).title("테스트 문의사항 498").content("테스트 문의사항 내용 498").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(34L).get()).title("테스트 문의사항 499").content("테스트 문의사항 내용 499").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(35L).get()).title("테스트 문의사항 500").content("테스트 문의사항 내용 500").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(36L).get()).title("테스트 문의사항 501").content("테스트 문의사항 내용 501").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(37L).get()).title("테스트 문의사항 502").content("테스트 문의사항 내용 502").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(38L).get()).title("테스트 문의사항 503").content("테스트 문의사항 내용 503").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(39L).get()).title("테스트 문의사항 504").content("테스트 문의사항 내용 504").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(40L).get()).title("테스트 문의사항 505").content("테스트 문의사항 내용 505").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(41L).get()).title("테스트 문의사항 506").content("테스트 문의사항 내용 506").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(42L).get()).title("테스트 문의사항 507").content("테스트 문의사항 내용 507").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(43L).get()).title("테스트 문의사항 508").content("테스트 문의사항 내용 508").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(44L).get()).title("테스트 문의사항 509").content("테스트 문의사항 내용 509").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(45L).get()).title("테스트 문의사항 510").content("테스트 문의사항 내용 510").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(46L).get()).title("테스트 문의사항 511").content("테스트 문의사항 내용 511").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(47L).get()).title("테스트 문의사항 512").content("테스트 문의사항 내용 512").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(48L).get()).title("테스트 문의사항 513").content("테스트 문의사항 내용 513").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(49L).get()).title("테스트 문의사항 514").content("테스트 문의사항 내용 514").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(50L).get()).title("테스트 문의사항 515").content("테스트 문의사항 내용 515").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(51L).get()).title("테스트 문의사항 516").content("테스트 문의사항 내용 516").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(52L).get()).title("테스트 문의사항 517").content("테스트 문의사항 내용 517").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(53L).get()).title("테스트 문의사항 518").content("테스트 문의사항 내용 518").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(54L).get()).title("테스트 문의사항 519").content("테스트 문의사항 내용 519").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(55L).get()).title("테스트 문의사항 520").content("테스트 문의사항 내용 520").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(56L).get()).title("테스트 문의사항 521").content("테스트 문의사항 내용 521").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(57L).get()).title("테스트 문의사항 522").content("테스트 문의사항 내용 522").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(58L).get()).title("테스트 문의사항 523").content("테스트 문의사항 내용 523").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(59L).get()).title("테스트 문의사항 524").content("테스트 문의사항 내용 524").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(60L).get()).title("테스트 문의사항 525").content("테스트 문의사항 내용 525").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(61L).get()).title("테스트 문의사항 526").content("테스트 문의사항 내용 526").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(62L).get()).title("테스트 문의사항 527").content("테스트 문의사항 내용 527").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(63L).get()).title("테스트 문의사항 528").content("테스트 문의사항 내용 528").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(64L).get()).title("테스트 문의사항 529").content("테스트 문의사항 내용 529").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(65L).get()).title("테스트 문의사항 530").content("테스트 문의사항 내용 530").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(66L).get()).title("테스트 문의사항 531").content("테스트 문의사항 내용 531").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(67L).get()).title("테스트 문의사항 532").content("테스트 문의사항 내용 532").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(68L).get()).title("테스트 문의사항 533").content("테스트 문의사항 내용 533").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(69L).get()).title("테스트 문의사항 534").content("테스트 문의사항 내용 534").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(70L).get()).title("테스트 문의사항 535").content("테스트 문의사항 내용 535").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(71L).get()).title("테스트 문의사항 536").content("테스트 문의사항 내용 536").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(72L).get()).title("테스트 문의사항 537").content("테스트 문의사항 내용 537").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(73L).get()).title("테스트 문의사항 538").content("테스트 문의사항 내용 538").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(74L).get()).title("테스트 문의사항 539").content("테스트 문의사항 내용 539").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(75L).get()).title("테스트 문의사항 540").content("테스트 문의사항 내용 540").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(76L).get()).title("테스트 문의사항 541").content("테스트 문의사항 내용 541").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(77L).get()).title("테스트 문의사항 542").content("테스트 문의사항 내용 542").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(78L).get()).title("테스트 문의사항 543").content("테스트 문의사항 내용 543").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(79L).get()).title("테스트 문의사항 544").content("테스트 문의사항 내용 544").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(80L).get()).title("테스트 문의사항 545").content("테스트 문의사항 내용 545").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(81L).get()).title("테스트 문의사항 546").content("테스트 문의사항 내용 546").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(82L).get()).title("테스트 문의사항 547").content("테스트 문의사항 내용 547").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(83L).get()).title("테스트 문의사항 548").content("테스트 문의사항 내용 548").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(84L).get()).title("테스트 문의사항 549").content("테스트 문의사항 내용 549").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(85L).get()).title("테스트 문의사항 550").content("테스트 문의사항 내용 550").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(86L).get()).title("테스트 문의사항 551").content("테스트 문의사항 내용 551").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(87L).get()).title("테스트 문의사항 552").content("테스트 문의사항 내용 552").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(88L).get()).title("테스트 문의사항 553").content("테스트 문의사항 내용 553").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(89L).get()).title("테스트 문의사항 554").content("테스트 문의사항 내용 554").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(90L).get()).title("테스트 문의사항 555").content("테스트 문의사항 내용 555").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(91L).get()).title("테스트 문의사항 556").content("테스트 문의사항 내용 556").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(92L).get()).title("테스트 문의사항 557").content("테스트 문의사항 내용 557").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(93L).get()).title("테스트 문의사항 558").content("테스트 문의사항 내용 558").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(94L).get()).title("테스트 문의사항 559").content("테스트 문의사항 내용 559").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(95L).get()).title("테스트 문의사항 560").content("테스트 문의사항 내용 560").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(96L).get()).title("테스트 문의사항 561").content("테스트 문의사항 내용 561").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(97L).get()).title("테스트 문의사항 562").content("테스트 문의사항 내용 562").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(98L).get()).title("테스트 문의사항 563").content("테스트 문의사항 내용 563").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(99L).get()).title("테스트 문의사항 564").content("테스트 문의사항 내용 564").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(100L).get()).title("테스트 문의사항 565").content("테스트 문의사항 내용 565").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(101L).get()).title("테스트 문의사항 566").content("테스트 문의사항 내용 566").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(102L).get()).title("테스트 문의사항 567").content("테스트 문의사항 내용 567").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(103L).get()).title("테스트 문의사항 568").content("테스트 문의사항 내용 568").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(104L).get()).title("테스트 문의사항 569").content("테스트 문의사항 내용 569").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(105L).get()).title("테스트 문의사항 570").content("테스트 문의사항 내용 570").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(106L).get()).title("테스트 문의사항 571").content("테스트 문의사항 내용 571").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(107L).get()).title("테스트 문의사항 572").content("테스트 문의사항 내용 572").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(108L).get()).title("테스트 문의사항 573").content("테스트 문의사항 내용 573").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(109L).get()).title("테스트 문의사항 574").content("테스트 문의사항 내용 574").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(110L).get()).title("테스트 문의사항 575").content("테스트 문의사항 내용 575").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(111L).get()).title("테스트 문의사항 576").content("테스트 문의사항 내용 576").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(112L).get()).title("테스트 문의사항 577").content("테스트 문의사항 내용 577").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(113L).get()).title("테스트 문의사항 578").content("테스트 문의사항 내용 578").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(114L).get()).title("테스트 문의사항 579").content("테스트 문의사항 내용 579").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(115L).get()).title("테스트 문의사항 580").content("테스트 문의사항 내용 580").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(116L).get()).title("테스트 문의사항 581").content("테스트 문의사항 내용 581").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(117L).get()).title("테스트 문의사항 582").content("테스트 문의사항 내용 582").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(118L).get()).title("테스트 문의사항 583").content("테스트 문의사항 내용 583").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(119L).get()).title("테스트 문의사항 584").content("테스트 문의사항 내용 584").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(120L).get()).title("테스트 문의사항 585").content("테스트 문의사항 내용 585").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(121L).get()).title("테스트 문의사항 586").content("테스트 문의사항 내용 586").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(122L).get()).title("테스트 문의사항 587").content("테스트 문의사항 내용 587").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(123L).get()).title("테스트 문의사항 588").content("테스트 문의사항 내용 588").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(124L).get()).title("테스트 문의사항 589").content("테스트 문의사항 내용 589").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(125L).get()).title("테스트 문의사항 590").content("테스트 문의사항 내용 590").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(126L).get()).title("테스트 문의사항 591").content("테스트 문의사항 내용 591").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(127L).get()).title("테스트 문의사항 592").content("테스트 문의사항 내용 592").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(128L).get()).title("테스트 문의사항 593").content("테스트 문의사항 내용 593").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(129L).get()).title("테스트 문의사항 594").content("테스트 문의사항 내용 594").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(130L).get()).title("테스트 문의사항 595").content("테스트 문의사항 내용 595").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(131L).get()).title("테스트 문의사항 596").content("테스트 문의사항 내용 596").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(132L).get()).title("테스트 문의사항 597").content("테스트 문의사항 내용 597").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(133L).get()).title("테스트 문의사항 598").content("테스트 문의사항 내용 598").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(134L).get()).title("테스트 문의사항 599").content("테스트 문의사항 내용 599").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(135L).get()).title("테스트 문의사항 600").content("테스트 문의사항 내용 600").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(136L).get()).title("테스트 문의사항 601").content("테스트 문의사항 내용 601").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(137L).get()).title("테스트 문의사항 602").content("테스트 문의사항 내용 602").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(138L).get()).title("테스트 문의사항 603").content("테스트 문의사항 내용 603").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(139L).get()).title("테스트 문의사항 604").content("테스트 문의사항 내용 604").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(140L).get()).title("테스트 문의사항 605").content("테스트 문의사항 내용 605").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(141L).get()).title("테스트 문의사항 606").content("테스트 문의사항 내용 606").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(142L).get()).title("테스트 문의사항 607").content("테스트 문의사항 내용 607").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(143L).get()).title("테스트 문의사항 608").content("테스트 문의사항 내용 608").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(144L).get()).title("테스트 문의사항 609").content("테스트 문의사항 내용 609").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(145L).get()).title("테스트 문의사항 610").content("테스트 문의사항 내용 610").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(146L).get()).title("테스트 문의사항 611").content("테스트 문의사항 내용 611").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(147L).get()).title("테스트 문의사항 612").content("테스트 문의사항 내용 612").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(148L).get()).title("테스트 문의사항 613").content("테스트 문의사항 내용 613").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(149L).get()).title("테스트 문의사항 614").content("테스트 문의사항 내용 614").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(150L).get()).title("테스트 문의사항 615").content("테스트 문의사항 내용 615").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(151L).get()).title("테스트 문의사항 616").content("테스트 문의사항 내용 616").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(152L).get()).title("테스트 문의사항 617").content("테스트 문의사항 내용 617").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(153L).get()).title("테스트 문의사항 618").content("테스트 문의사항 내용 618").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(154L).get()).title("테스트 문의사항 619").content("테스트 문의사항 내용 619").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(155L).get()).title("테스트 문의사항 620").content("테스트 문의사항 내용 620").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(156L).get()).title("테스트 문의사항 621").content("테스트 문의사항 내용 621").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(157L).get()).title("테스트 문의사항 622").content("테스트 문의사항 내용 622").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(158L).get()).title("테스트 문의사항 623").content("테스트 문의사항 내용 623").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(159L).get()).title("테스트 문의사항 624").content("테스트 문의사항 내용 624").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(160L).get()).title("테스트 문의사항 625").content("테스트 문의사항 내용 625").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(161L).get()).title("테스트 문의사항 626").content("테스트 문의사항 내용 626").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(162L).get()).title("테스트 문의사항 627").content("테스트 문의사항 내용 627").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(163L).get()).title("테스트 문의사항 628").content("테스트 문의사항 내용 628").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(164L).get()).title("테스트 문의사항 629").content("테스트 문의사항 내용 629").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(165L).get()).title("테스트 문의사항 630").content("테스트 문의사항 내용 630").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(166L).get()).title("테스트 문의사항 631").content("테스트 문의사항 내용 631").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(167L).get()).title("테스트 문의사항 632").content("테스트 문의사항 내용 632").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(168L).get()).title("테스트 문의사항 633").content("테스트 문의사항 내용 633").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(169L).get()).title("테스트 문의사항 634").content("테스트 문의사항 내용 634").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(170L).get()).title("테스트 문의사항 635").content("테스트 문의사항 내용 635").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(171L).get()).title("테스트 문의사항 636").content("테스트 문의사항 내용 636").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(172L).get()).title("테스트 문의사항 637").content("테스트 문의사항 내용 637").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(173L).get()).title("테스트 문의사항 638").content("테스트 문의사항 내용 638").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(174L).get()).title("테스트 문의사항 639").content("테스트 문의사항 내용 639").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(175L).get()).title("테스트 문의사항 640").content("테스트 문의사항 내용 640").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(176L).get()).title("테스트 문의사항 641").content("테스트 문의사항 내용 641").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(177L).get()).title("테스트 문의사항 642").content("테스트 문의사항 내용 642").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(178L).get()).title("테스트 문의사항 643").content("테스트 문의사항 내용 643").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(179L).get()).title("테스트 문의사항 644").content("테스트 문의사항 내용 644").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(180L).get()).title("테스트 문의사항 645").content("테스트 문의사항 내용 645").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(181L).get()).title("테스트 문의사항 646").content("테스트 문의사항 내용 646").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(182L).get()).title("테스트 문의사항 647").content("테스트 문의사항 내용 647").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(183L).get()).title("테스트 문의사항 648").content("테스트 문의사항 내용 648").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(184L).get()).title("테스트 문의사항 649").content("테스트 문의사항 내용 649").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(185L).get()).title("테스트 문의사항 650").content("테스트 문의사항 내용 650").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(186L).get()).title("테스트 문의사항 651").content("테스트 문의사항 내용 651").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(187L).get()).title("테스트 문의사항 652").content("테스트 문의사항 내용 652").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(188L).get()).title("테스트 문의사항 653").content("테스트 문의사항 내용 653").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(189L).get()).title("테스트 문의사항 654").content("테스트 문의사항 내용 654").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(190L).get()).title("테스트 문의사항 655").content("테스트 문의사항 내용 655").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(191L).get()).title("테스트 문의사항 656").content("테스트 문의사항 내용 656").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(192L).get()).title("테스트 문의사항 657").content("테스트 문의사항 내용 657").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(193L).get()).title("테스트 문의사항 658").content("테스트 문의사항 내용 658").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(194L).get()).title("테스트 문의사항 659").content("테스트 문의사항 내용 659").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(195L).get()).title("테스트 문의사항 660").content("테스트 문의사항 내용 660").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(196L).get()).title("테스트 문의사항 661").content("테스트 문의사항 내용 661").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(197L).get()).title("테스트 문의사항 662").content("테스트 문의사항 내용 662").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(198L).get()).title("테스트 문의사항 663").content("테스트 문의사항 내용 663").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(199L).get()).title("테스트 문의사항 664").content("테스트 문의사항 내용 664").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(200L).get()).title("테스트 문의사항 665").content("테스트 문의사항 내용 665").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(201L).get()).title("테스트 문의사항 666").content("테스트 문의사항 내용 666").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(202L).get()).title("테스트 문의사항 667").content("테스트 문의사항 내용 667").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(203L).get()).title("테스트 문의사항 668").content("테스트 문의사항 내용 668").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(204L).get()).title("테스트 문의사항 669").content("테스트 문의사항 내용 669").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(205L).get()).title("테스트 문의사항 670").content("테스트 문의사항 내용 670").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(206L).get()).title("테스트 문의사항 671").content("테스트 문의사항 내용 671").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(207L).get()).title("테스트 문의사항 672").content("테스트 문의사항 내용 672").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(208L).get()).title("테스트 문의사항 673").content("테스트 문의사항 내용 673").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(209L).get()).title("테스트 문의사항 674").content("테스트 문의사항 내용 674").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(210L).get()).title("테스트 문의사항 675").content("테스트 문의사항 내용 675").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(211L).get()).title("테스트 문의사항 676").content("테스트 문의사항 내용 676").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(212L).get()).title("테스트 문의사항 677").content("테스트 문의사항 내용 677").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(213L).get()).title("테스트 문의사항 678").content("테스트 문의사항 내용 678").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(214L).get()).title("테스트 문의사항 679").content("테스트 문의사항 내용 679").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(215L).get()).title("테스트 문의사항 680").content("테스트 문의사항 내용 680").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(216L).get()).title("테스트 문의사항 681").content("테스트 문의사항 내용 681").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(217L).get()).title("테스트 문의사항 682").content("테스트 문의사항 내용 682").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(218L).get()).title("테스트 문의사항 683").content("테스트 문의사항 내용 683").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(219L).get()).title("테스트 문의사항 684").content("테스트 문의사항 내용 684").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(220L).get()).title("테스트 문의사항 685").content("테스트 문의사항 내용 685").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(221L).get()).title("테스트 문의사항 686").content("테스트 문의사항 내용 686").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(222L).get()).title("테스트 문의사항 687").content("테스트 문의사항 내용 687").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(223L).get()).title("테스트 문의사항 688").content("테스트 문의사항 내용 688").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(224L).get()).title("테스트 문의사항 689").content("테스트 문의사항 내용 689").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(225L).get()).title("테스트 문의사항 690").content("테스트 문의사항 내용 690").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(226L).get()).title("테스트 문의사항 691").content("테스트 문의사항 내용 691").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(227L).get()).title("테스트 문의사항 692").content("테스트 문의사항 내용 692").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(228L).get()).title("테스트 문의사항 693").content("테스트 문의사항 내용 693").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(229L).get()).title("테스트 문의사항 694").content("테스트 문의사항 내용 694").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(230L).get()).title("테스트 문의사항 695").content("테스트 문의사항 내용 695").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(231L).get()).title("테스트 문의사항 696").content("테스트 문의사항 내용 696").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(232L).get()).title("테스트 문의사항 697").content("테스트 문의사항 내용 697").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(233L).get()).title("테스트 문의사항 698").content("테스트 문의사항 내용 698").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(234L).get()).title("테스트 문의사항 699").content("테스트 문의사항 내용 699").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(235L).get()).title("테스트 문의사항 700").content("테스트 문의사항 내용 700").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(236L).get()).title("테스트 문의사항 701").content("테스트 문의사항 내용 701").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(237L).get()).title("테스트 문의사항 702").content("테스트 문의사항 내용 702").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(238L).get()).title("테스트 문의사항 703").content("테스트 문의사항 내용 703").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(239L).get()).title("테스트 문의사항 704").content("테스트 문의사항 내용 704").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(240L).get()).title("테스트 문의사항 705").content("테스트 문의사항 내용 705").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(241L).get()).title("테스트 문의사항 706").content("테스트 문의사항 내용 706").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(242L).get()).title("테스트 문의사항 707").content("테스트 문의사항 내용 707").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(243L).get()).title("테스트 문의사항 708").content("테스트 문의사항 내용 708").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(244L).get()).title("테스트 문의사항 709").content("테스트 문의사항 내용 709").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(245L).get()).title("테스트 문의사항 710").content("테스트 문의사항 내용 710").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(246L).get()).title("테스트 문의사항 711").content("테스트 문의사항 내용 711").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(247L).get()).title("테스트 문의사항 712").content("테스트 문의사항 내용 712").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(248L).get()).title("테스트 문의사항 713").content("테스트 문의사항 내용 713").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(249L).get()).title("테스트 문의사항 714").content("테스트 문의사항 내용 714").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(250L).get()).title("테스트 문의사항 715").content("테스트 문의사항 내용 715").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(251L).get()).title("테스트 문의사항 716").content("테스트 문의사항 내용 716").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(252L).get()).title("테스트 문의사항 717").content("테스트 문의사항 내용 717").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(253L).get()).title("테스트 문의사항 718").content("테스트 문의사항 내용 718").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(254L).get()).title("테스트 문의사항 719").content("테스트 문의사항 내용 719").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(255L).get()).title("테스트 문의사항 720").content("테스트 문의사항 내용 720").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(256L).get()).title("테스트 문의사항 721").content("테스트 문의사항 내용 721").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(257L).get()).title("테스트 문의사항 722").content("테스트 문의사항 내용 722").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(258L).get()).title("테스트 문의사항 723").content("테스트 문의사항 내용 723").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(259L).get()).title("테스트 문의사항 724").content("테스트 문의사항 내용 724").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(260L).get()).title("테스트 문의사항 725").content("테스트 문의사항 내용 725").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(261L).get()).title("테스트 문의사항 726").content("테스트 문의사항 내용 726").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(262L).get()).title("테스트 문의사항 727").content("테스트 문의사항 내용 727").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(263L).get()).title("테스트 문의사항 728").content("테스트 문의사항 내용 728").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(264L).get()).title("테스트 문의사항 729").content("테스트 문의사항 내용 729").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(265L).get()).title("테스트 문의사항 730").content("테스트 문의사항 내용 730").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(266L).get()).title("테스트 문의사항 731").content("테스트 문의사항 내용 731").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(267L).get()).title("테스트 문의사항 732").content("테스트 문의사항 내용 732").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(268L).get()).title("테스트 문의사항 733").content("테스트 문의사항 내용 733").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(269L).get()).title("테스트 문의사항 734").content("테스트 문의사항 내용 734").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(270L).get()).title("테스트 문의사항 735").content("테스트 문의사항 내용 735").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(271L).get()).title("테스트 문의사항 736").content("테스트 문의사항 내용 736").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(272L).get()).title("테스트 문의사항 737").content("테스트 문의사항 내용 737").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(273L).get()).title("테스트 문의사항 738").content("테스트 문의사항 내용 738").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(274L).get()).title("테스트 문의사항 739").content("테스트 문의사항 내용 739").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(275L).get()).title("테스트 문의사항 740").content("테스트 문의사항 내용 740").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(276L).get()).title("테스트 문의사항 741").content("테스트 문의사항 내용 741").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(277L).get()).title("테스트 문의사항 742").content("테스트 문의사항 내용 742").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(278L).get()).title("테스트 문의사항 743").content("테스트 문의사항 내용 743").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(279L).get()).title("테스트 문의사항 744").content("테스트 문의사항 내용 744").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(280L).get()).title("테스트 문의사항 745").content("테스트 문의사항 내용 745").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(281L).get()).title("테스트 문의사항 746").content("테스트 문의사항 내용 746").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(282L).get()).title("테스트 문의사항 747").content("테스트 문의사항 내용 747").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(283L).get()).title("테스트 문의사항 748").content("테스트 문의사항 내용 748").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(284L).get()).title("테스트 문의사항 749").content("테스트 문의사항 내용 749").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(285L).get()).title("테스트 문의사항 750").content("테스트 문의사항 내용 750").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(286L).get()).title("테스트 문의사항 751").content("테스트 문의사항 내용 751").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(287L).get()).title("테스트 문의사항 752").content("테스트 문의사항 내용 752").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(288L).get()).title("테스트 문의사항 753").content("테스트 문의사항 내용 753").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(289L).get()).title("테스트 문의사항 754").content("테스트 문의사항 내용 754").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(290L).get()).title("테스트 문의사항 755").content("테스트 문의사항 내용 755").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(291L).get()).title("테스트 문의사항 756").content("테스트 문의사항 내용 756").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(292L).get()).title("테스트 문의사항 757").content("테스트 문의사항 내용 757").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(293L).get()).title("테스트 문의사항 758").content("테스트 문의사항 내용 758").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(294L).get()).title("테스트 문의사항 759").content("테스트 문의사항 내용 759").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(295L).get()).title("테스트 문의사항 760").content("테스트 문의사항 내용 760").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(296L).get()).title("테스트 문의사항 761").content("테스트 문의사항 내용 761").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(297L).get()).title("테스트 문의사항 762").content("테스트 문의사항 내용 762").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(298L).get()).title("테스트 문의사항 763").content("테스트 문의사항 내용 763").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(299L).get()).title("테스트 문의사항 764").content("테스트 문의사항 내용 764").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(300L).get()).title("테스트 문의사항 765").content("테스트 문의사항 내용 765").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(301L).get()).title("테스트 문의사항 766").content("테스트 문의사항 내용 766").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(302L).get()).title("테스트 문의사항 767").content("테스트 문의사항 내용 767").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(303L).get()).title("테스트 문의사항 768").content("테스트 문의사항 내용 768").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(304L).get()).title("테스트 문의사항 769").content("테스트 문의사항 내용 769").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(305L).get()).title("테스트 문의사항 770").content("테스트 문의사항 내용 770").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(306L).get()).title("테스트 문의사항 771").content("테스트 문의사항 내용 771").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(307L).get()).title("테스트 문의사항 772").content("테스트 문의사항 내용 772").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(308L).get()).title("테스트 문의사항 773").content("테스트 문의사항 내용 773").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(309L).get()).title("테스트 문의사항 774").content("테스트 문의사항 내용 774").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(310L).get()).title("테스트 문의사항 775").content("테스트 문의사항 내용 775").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(311L).get()).title("테스트 문의사항 776").content("테스트 문의사항 내용 776").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(312L).get()).title("테스트 문의사항 777").content("테스트 문의사항 내용 777").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(313L).get()).title("테스트 문의사항 778").content("테스트 문의사항 내용 778").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(314L).get()).title("테스트 문의사항 779").content("테스트 문의사항 내용 779").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(315L).get()).title("테스트 문의사항 780").content("테스트 문의사항 내용 780").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(316L).get()).title("테스트 문의사항 781").content("테스트 문의사항 내용 781").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(317L).get()).title("테스트 문의사항 782").content("테스트 문의사항 내용 782").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(318L).get()).title("테스트 문의사항 783").content("테스트 문의사항 내용 783").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(319L).get()).title("테스트 문의사항 784").content("테스트 문의사항 내용 784").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(320L).get()).title("테스트 문의사항 785").content("테스트 문의사항 내용 785").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(321L).get()).title("테스트 문의사항 786").content("테스트 문의사항 내용 786").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(322L).get()).title("테스트 문의사항 787").content("테스트 문의사항 내용 787").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(323L).get()).title("테스트 문의사항 788").content("테스트 문의사항 내용 788").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(324L).get()).title("테스트 문의사항 789").content("테스트 문의사항 내용 789").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(325L).get()).title("테스트 문의사항 790").content("테스트 문의사항 내용 790").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(326L).get()).title("테스트 문의사항 791").content("테스트 문의사항 내용 791").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(327L).get()).title("테스트 문의사항 792").content("테스트 문의사항 내용 792").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(328L).get()).title("테스트 문의사항 793").content("테스트 문의사항 내용 793").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(329L).get()).title("테스트 문의사항 794").content("테스트 문의사항 내용 794").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(330L).get()).title("테스트 문의사항 795").content("테스트 문의사항 내용 795").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(331L).get()).title("테스트 문의사항 796").content("테스트 문의사항 내용 796").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(332L).get()).title("테스트 문의사항 797").content("테스트 문의사항 내용 797").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(333L).get()).title("테스트 문의사항 798").content("테스트 문의사항 내용 798").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(334L).get()).title("테스트 문의사항 799").content("테스트 문의사항 내용 799").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(335L).get()).title("테스트 문의사항 800").content("테스트 문의사항 내용 800").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(336L).get()).title("테스트 문의사항 801").content("테스트 문의사항 내용 801").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(337L).get()).title("테스트 문의사항 802").content("테스트 문의사항 내용 802").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(338L).get()).title("테스트 문의사항 803").content("테스트 문의사항 내용 803").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(339L).get()).title("테스트 문의사항 804").content("테스트 문의사항 내용 804").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(340L).get()).title("테스트 문의사항 805").content("테스트 문의사항 내용 805").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(341L).get()).title("테스트 문의사항 806").content("테스트 문의사항 내용 806").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(342L).get()).title("테스트 문의사항 807").content("테스트 문의사항 내용 807").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(343L).get()).title("테스트 문의사항 808").content("테스트 문의사항 내용 808").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(344L).get()).title("테스트 문의사항 809").content("테스트 문의사항 내용 809").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(345L).get()).title("테스트 문의사항 810").content("테스트 문의사항 내용 810").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(346L).get()).title("테스트 문의사항 811").content("테스트 문의사항 내용 811").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(347L).get()).title("테스트 문의사항 812").content("테스트 문의사항 내용 812").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(348L).get()).title("테스트 문의사항 813").content("테스트 문의사항 내용 813").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(349L).get()).title("테스트 문의사항 814").content("테스트 문의사항 내용 814").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(350L).get()).title("테스트 문의사항 815").content("테스트 문의사항 내용 815").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(351L).get()).title("테스트 문의사항 816").content("테스트 문의사항 내용 816").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(352L).get()).title("테스트 문의사항 817").content("테스트 문의사항 내용 817").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(353L).get()).title("테스트 문의사항 818").content("테스트 문의사항 내용 818").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(354L).get()).title("테스트 문의사항 819").content("테스트 문의사항 내용 819").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(355L).get()).title("테스트 문의사항 820").content("테스트 문의사항 내용 820").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(356L).get()).title("테스트 문의사항 821").content("테스트 문의사항 내용 821").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(357L).get()).title("테스트 문의사항 822").content("테스트 문의사항 내용 822").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(358L).get()).title("테스트 문의사항 823").content("테스트 문의사항 내용 823").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(359L).get()).title("테스트 문의사항 824").content("테스트 문의사항 내용 824").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(360L).get()).title("테스트 문의사항 825").content("테스트 문의사항 내용 825").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(361L).get()).title("테스트 문의사항 826").content("테스트 문의사항 내용 826").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(362L).get()).title("테스트 문의사항 827").content("테스트 문의사항 내용 827").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(363L).get()).title("테스트 문의사항 828").content("테스트 문의사항 내용 828").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(364L).get()).title("테스트 문의사항 829").content("테스트 문의사항 내용 829").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(365L).get()).title("테스트 문의사항 830").content("테스트 문의사항 내용 830").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(366L).get()).title("테스트 문의사항 831").content("테스트 문의사항 내용 831").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(367L).get()).title("테스트 문의사항 832").content("테스트 문의사항 내용 832").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(368L).get()).title("테스트 문의사항 833").content("테스트 문의사항 내용 833").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(369L).get()).title("테스트 문의사항 834").content("테스트 문의사항 내용 834").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(370L).get()).title("테스트 문의사항 835").content("테스트 문의사항 내용 835").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(371L).get()).title("테스트 문의사항 836").content("테스트 문의사항 내용 836").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(372L).get()).title("테스트 문의사항 837").content("테스트 문의사항 내용 837").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(373L).get()).title("테스트 문의사항 838").content("테스트 문의사항 내용 838").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(374L).get()).title("테스트 문의사항 839").content("테스트 문의사항 내용 839").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(375L).get()).title("테스트 문의사항 840").content("테스트 문의사항 내용 840").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(376L).get()).title("테스트 문의사항 841").content("테스트 문의사항 내용 841").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(377L).get()).title("테스트 문의사항 842").content("테스트 문의사항 내용 842").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(378L).get()).title("테스트 문의사항 843").content("테스트 문의사항 내용 843").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(379L).get()).title("테스트 문의사항 844").content("테스트 문의사항 내용 844").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(380L).get()).title("테스트 문의사항 845").content("테스트 문의사항 내용 845").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(381L).get()).title("테스트 문의사항 846").content("테스트 문의사항 내용 846").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(382L).get()).title("테스트 문의사항 847").content("테스트 문의사항 내용 847").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(383L).get()).title("테스트 문의사항 848").content("테스트 문의사항 내용 848").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(384L).get()).title("테스트 문의사항 849").content("테스트 문의사항 내용 849").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(385L).get()).title("테스트 문의사항 850").content("테스트 문의사항 내용 850").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(386L).get()).title("테스트 문의사항 851").content("테스트 문의사항 내용 851").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(387L).get()).title("테스트 문의사항 852").content("테스트 문의사항 내용 852").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(388L).get()).title("테스트 문의사항 853").content("테스트 문의사항 내용 853").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(389L).get()).title("테스트 문의사항 854").content("테스트 문의사항 내용 854").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(390L).get()).title("테스트 문의사항 855").content("테스트 문의사항 내용 855").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(391L).get()).title("테스트 문의사항 856").content("테스트 문의사항 내용 856").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(392L).get()).title("테스트 문의사항 857").content("테스트 문의사항 내용 857").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(393L).get()).title("테스트 문의사항 858").content("테스트 문의사항 내용 858").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(394L).get()).title("테스트 문의사항 859").content("테스트 문의사항 내용 859").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(395L).get()).title("테스트 문의사항 860").content("테스트 문의사항 내용 860").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(396L).get()).title("테스트 문의사항 861").content("테스트 문의사항 내용 861").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(397L).get()).title("테스트 문의사항 862").content("테스트 문의사항 내용 862").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(398L).get()).title("테스트 문의사항 863").content("테스트 문의사항 내용 863").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(399L).get()).title("테스트 문의사항 864").content("테스트 문의사항 내용 864").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(400L).get()).title("테스트 문의사항 865").content("테스트 문의사항 내용 865").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(401L).get()).title("테스트 문의사항 866").content("테스트 문의사항 내용 866").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(402L).get()).title("테스트 문의사항 867").content("테스트 문의사항 내용 867").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(403L).get()).title("테스트 문의사항 868").content("테스트 문의사항 내용 868").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(404L).get()).title("테스트 문의사항 869").content("테스트 문의사항 내용 869").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(405L).get()).title("테스트 문의사항 870").content("테스트 문의사항 내용 870").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(406L).get()).title("테스트 문의사항 871").content("테스트 문의사항 내용 871").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(407L).get()).title("테스트 문의사항 872").content("테스트 문의사항 내용 872").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(408L).get()).title("테스트 문의사항 873").content("테스트 문의사항 내용 873").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(409L).get()).title("테스트 문의사항 874").content("테스트 문의사항 내용 874").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(410L).get()).title("테스트 문의사항 875").content("테스트 문의사항 내용 875").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(411L).get()).title("테스트 문의사항 876").content("테스트 문의사항 내용 876").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(412L).get()).title("테스트 문의사항 877").content("테스트 문의사항 내용 877").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(413L).get()).title("테스트 문의사항 878").content("테스트 문의사항 내용 878").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(414L).get()).title("테스트 문의사항 879").content("테스트 문의사항 내용 879").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(415L).get()).title("테스트 문의사항 880").content("테스트 문의사항 내용 880").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(416L).get()).title("테스트 문의사항 881").content("테스트 문의사항 내용 881").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(417L).get()).title("테스트 문의사항 882").content("테스트 문의사항 내용 882").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(418L).get()).title("테스트 문의사항 883").content("테스트 문의사항 내용 883").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(419L).get()).title("테스트 문의사항 884").content("테스트 문의사항 내용 884").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(420L).get()).title("테스트 문의사항 885").content("테스트 문의사항 내용 885").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(421L).get()).title("테스트 문의사항 886").content("테스트 문의사항 내용 886").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(422L).get()).title("테스트 문의사항 887").content("테스트 문의사항 내용 887").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(423L).get()).title("테스트 문의사항 888").content("테스트 문의사항 내용 888").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(424L).get()).title("테스트 문의사항 889").content("테스트 문의사항 내용 889").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(425L).get()).title("테스트 문의사항 890").content("테스트 문의사항 내용 890").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(426L).get()).title("테스트 문의사항 891").content("테스트 문의사항 내용 891").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(427L).get()).title("테스트 문의사항 892").content("테스트 문의사항 내용 892").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(428L).get()).title("테스트 문의사항 893").content("테스트 문의사항 내용 893").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(429L).get()).title("테스트 문의사항 894").content("테스트 문의사항 내용 894").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(430L).get()).title("테스트 문의사항 895").content("테스트 문의사항 내용 895").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(431L).get()).title("테스트 문의사항 896").content("테스트 문의사항 내용 896").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(432L).get()).title("테스트 문의사항 897").content("테스트 문의사항 내용 897").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(433L).get()).title("테스트 문의사항 898").content("테스트 문의사항 내용 898").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(434L).get()).title("테스트 문의사항 899").content("테스트 문의사항 내용 899").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(435L).get()).title("테스트 문의사항 900").content("테스트 문의사항 내용 900").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(436L).get()).title("테스트 문의사항 901").content("테스트 문의사항 내용 901").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(437L).get()).title("테스트 문의사항 902").content("테스트 문의사항 내용 902").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(438L).get()).title("테스트 문의사항 903").content("테스트 문의사항 내용 903").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(439L).get()).title("테스트 문의사항 904").content("테스트 문의사항 내용 904").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(440L).get()).title("테스트 문의사항 905").content("테스트 문의사항 내용 905").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(441L).get()).title("테스트 문의사항 906").content("테스트 문의사항 내용 906").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(442L).get()).title("테스트 문의사항 907").content("테스트 문의사항 내용 907").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(443L).get()).title("테스트 문의사항 908").content("테스트 문의사항 내용 908").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(444L).get()).title("테스트 문의사항 909").content("테스트 문의사항 내용 909").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(445L).get()).title("테스트 문의사항 910").content("테스트 문의사항 내용 910").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(446L).get()).title("테스트 문의사항 911").content("테스트 문의사항 내용 911").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(447L).get()).title("테스트 문의사항 912").content("테스트 문의사항 내용 912").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(448L).get()).title("테스트 문의사항 913").content("테스트 문의사항 내용 913").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(449L).get()).title("테스트 문의사항 914").content("테스트 문의사항 내용 914").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(450L).get()).title("테스트 문의사항 915").content("테스트 문의사항 내용 915").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(451L).get()).title("테스트 문의사항 916").content("테스트 문의사항 내용 916").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(452L).get()).title("테스트 문의사항 917").content("테스트 문의사항 내용 917").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(453L).get()).title("테스트 문의사항 918").content("테스트 문의사항 내용 918").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(454L).get()).title("테스트 문의사항 919").content("테스트 문의사항 내용 919").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(455L).get()).title("테스트 문의사항 920").content("테스트 문의사항 내용 920").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(456L).get()).title("테스트 문의사항 921").content("테스트 문의사항 내용 921").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(457L).get()).title("테스트 문의사항 922").content("테스트 문의사항 내용 922").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(458L).get()).title("테스트 문의사항 923").content("테스트 문의사항 내용 923").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(459L).get()).title("테스트 문의사항 924").content("테스트 문의사항 내용 924").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(460L).get()).title("테스트 문의사항 925").content("테스트 문의사항 내용 925").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(461L).get()).title("테스트 문의사항 926").content("테스트 문의사항 내용 926").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(462L).get()).title("테스트 문의사항 927").content("테스트 문의사항 내용 927").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(463L).get()).title("테스트 문의사항 928").content("테스트 문의사항 내용 928").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(464L).get()).title("테스트 문의사항 929").content("테스트 문의사항 내용 929").status(QuestionStatus.INCOMPLETE).build());
        questionRepository.save(Question.builder().member(memberRepository.findById(465L).get()).title("테스트 문의사항 930").content("테스트 문의사항 내용 930").status(QuestionStatus.INCOMPLETE).build());
    }

    void initAnswer() {
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor1").get()).content("문의 답변 1").question(questionRepository.findById(1L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor2").get()).content("문의 답변 2").question(questionRepository.findById(2L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor3").get()).content("문의 답변 3").question(questionRepository.findById(3L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor4").get()).content("문의 답변 4").question(questionRepository.findById(4L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor5").get()).content("문의 답변 5").question(questionRepository.findById(5L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor6").get()).content("문의 답변 6").question(questionRepository.findById(6L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor7").get()).content("문의 답변 7").question(questionRepository.findById(7L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor8").get()).content("문의 답변 8").question(questionRepository.findById(8L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor9").get()).content("문의 답변 9").question(questionRepository.findById(9L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor10").get()).content("문의 답변 10").question(questionRepository.findById(10L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor11").get()).content("문의 답변 11").question(questionRepository.findById(11L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor12").get()).content("문의 답변 12").question(questionRepository.findById(12L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor13").get()).content("문의 답변 13").question(questionRepository.findById(13L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor14").get()).content("문의 답변 14").question(questionRepository.findById(14L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor15").get()).content("문의 답변 15").question(questionRepository.findById(15L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor16").get()).content("문의 답변 16").question(questionRepository.findById(16L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor17").get()).content("문의 답변 17").question(questionRepository.findById(17L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor18").get()).content("문의 답변 18").question(questionRepository.findById(18L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor19").get()).content("문의 답변 19").question(questionRepository.findById(19L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor20").get()).content("문의 답변 20").question(questionRepository.findById(20L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor21").get()).content("문의 답변 21").question(questionRepository.findById(21L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor22").get()).content("문의 답변 22").question(questionRepository.findById(22L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor23").get()).content("문의 답변 23").question(questionRepository.findById(23L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor24").get()).content("문의 답변 24").question(questionRepository.findById(24L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor25").get()).content("문의 답변 25").question(questionRepository.findById(25L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor26").get()).content("문의 답변 26").question(questionRepository.findById(26L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor27").get()).content("문의 답변 27").question(questionRepository.findById(27L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor28").get()).content("문의 답변 28").question(questionRepository.findById(28L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor29").get()).content("문의 답변 29").question(questionRepository.findById(29L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor30").get()).content("문의 답변 30").question(questionRepository.findById(30L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor31").get()).content("문의 답변 31").question(questionRepository.findById(31L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor32").get()).content("문의 답변 32").question(questionRepository.findById(32L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor33").get()).content("문의 답변 33").question(questionRepository.findById(33L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor34").get()).content("문의 답변 34").question(questionRepository.findById(34L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor35").get()).content("문의 답변 35").question(questionRepository.findById(35L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor36").get()).content("문의 답변 36").question(questionRepository.findById(36L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor37").get()).content("문의 답변 37").question(questionRepository.findById(37L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor38").get()).content("문의 답변 38").question(questionRepository.findById(38L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor39").get()).content("문의 답변 39").question(questionRepository.findById(39L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor40").get()).content("문의 답변 40").question(questionRepository.findById(40L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor41").get()).content("문의 답변 41").question(questionRepository.findById(41L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor42").get()).content("문의 답변 42").question(questionRepository.findById(42L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor43").get()).content("문의 답변 43").question(questionRepository.findById(43L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor44").get()).content("문의 답변 44").question(questionRepository.findById(44L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor45").get()).content("문의 답변 45").question(questionRepository.findById(45L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor46").get()).content("문의 답변 46").question(questionRepository.findById(46L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor47").get()).content("문의 답변 47").question(questionRepository.findById(47L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor48").get()).content("문의 답변 48").question(questionRepository.findById(48L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor49").get()).content("문의 답변 49").question(questionRepository.findById(49L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor50").get()).content("문의 답변 50").question(questionRepository.findById(50L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor1").get()).content("문의 답변 51").question(questionRepository.findById(51L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor2").get()).content("문의 답변 52").question(questionRepository.findById(52L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor3").get()).content("문의 답변 53").question(questionRepository.findById(53L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor4").get()).content("문의 답변 54").question(questionRepository.findById(54L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor5").get()).content("문의 답변 55").question(questionRepository.findById(55L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor6").get()).content("문의 답변 56").question(questionRepository.findById(56L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor7").get()).content("문의 답변 57").question(questionRepository.findById(57L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor8").get()).content("문의 답변 58").question(questionRepository.findById(58L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor9").get()).content("문의 답변 59").question(questionRepository.findById(59L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor10").get()).content("문의 답변 60").question(questionRepository.findById(60L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor11").get()).content("문의 답변 61").question(questionRepository.findById(61L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor12").get()).content("문의 답변 62").question(questionRepository.findById(62L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor13").get()).content("문의 답변 63").question(questionRepository.findById(63L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor14").get()).content("문의 답변 64").question(questionRepository.findById(64L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor15").get()).content("문의 답변 65").question(questionRepository.findById(65L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor16").get()).content("문의 답변 66").question(questionRepository.findById(66L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor17").get()).content("문의 답변 67").question(questionRepository.findById(67L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor18").get()).content("문의 답변 68").question(questionRepository.findById(68L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor19").get()).content("문의 답변 69").question(questionRepository.findById(69L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor20").get()).content("문의 답변 70").question(questionRepository.findById(70L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor21").get()).content("문의 답변 71").question(questionRepository.findById(71L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor22").get()).content("문의 답변 72").question(questionRepository.findById(72L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor23").get()).content("문의 답변 73").question(questionRepository.findById(73L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor24").get()).content("문의 답변 74").question(questionRepository.findById(74L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor25").get()).content("문의 답변 75").question(questionRepository.findById(75L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor26").get()).content("문의 답변 76").question(questionRepository.findById(76L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor27").get()).content("문의 답변 77").question(questionRepository.findById(77L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor28").get()).content("문의 답변 78").question(questionRepository.findById(78L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor29").get()).content("문의 답변 79").question(questionRepository.findById(79L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor30").get()).content("문의 답변 80").question(questionRepository.findById(80L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor31").get()).content("문의 답변 81").question(questionRepository.findById(81L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor32").get()).content("문의 답변 82").question(questionRepository.findById(82L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor33").get()).content("문의 답변 83").question(questionRepository.findById(83L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor34").get()).content("문의 답변 84").question(questionRepository.findById(84L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor35").get()).content("문의 답변 85").question(questionRepository.findById(85L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor36").get()).content("문의 답변 86").question(questionRepository.findById(86L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor37").get()).content("문의 답변 87").question(questionRepository.findById(87L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor38").get()).content("문의 답변 88").question(questionRepository.findById(88L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor39").get()).content("문의 답변 89").question(questionRepository.findById(89L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor40").get()).content("문의 답변 90").question(questionRepository.findById(90L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor41").get()).content("문의 답변 91").question(questionRepository.findById(91L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor42").get()).content("문의 답변 92").question(questionRepository.findById(92L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor43").get()).content("문의 답변 93").question(questionRepository.findById(93L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor44").get()).content("문의 답변 94").question(questionRepository.findById(94L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor45").get()).content("문의 답변 95").question(questionRepository.findById(95L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor46").get()).content("문의 답변 96").question(questionRepository.findById(96L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor47").get()).content("문의 답변 97").question(questionRepository.findById(97L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor48").get()).content("문의 답변 98").question(questionRepository.findById(98L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor49").get()).content("문의 답변 99").question(questionRepository.findById(99L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor50").get()).content("문의 답변 100").question(questionRepository.findById(100L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor1").get()).content("문의 답변 101").question(questionRepository.findById(101L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor2").get()).content("문의 답변 102").question(questionRepository.findById(102L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor3").get()).content("문의 답변 103").question(questionRepository.findById(103L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor4").get()).content("문의 답변 104").question(questionRepository.findById(104L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor5").get()).content("문의 답변 105").question(questionRepository.findById(105L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor6").get()).content("문의 답변 106").question(questionRepository.findById(106L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor7").get()).content("문의 답변 107").question(questionRepository.findById(107L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor8").get()).content("문의 답변 108").question(questionRepository.findById(108L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor9").get()).content("문의 답변 109").question(questionRepository.findById(109L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor10").get()).content("문의 답변 110").question(questionRepository.findById(110L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor11").get()).content("문의 답변 111").question(questionRepository.findById(111L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor12").get()).content("문의 답변 112").question(questionRepository.findById(112L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor13").get()).content("문의 답변 113").question(questionRepository.findById(113L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor14").get()).content("문의 답변 114").question(questionRepository.findById(114L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor15").get()).content("문의 답변 115").question(questionRepository.findById(115L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor16").get()).content("문의 답변 116").question(questionRepository.findById(116L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor17").get()).content("문의 답변 117").question(questionRepository.findById(117L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor18").get()).content("문의 답변 118").question(questionRepository.findById(118L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor19").get()).content("문의 답변 119").question(questionRepository.findById(119L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor20").get()).content("문의 답변 120").question(questionRepository.findById(120L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor21").get()).content("문의 답변 121").question(questionRepository.findById(121L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor22").get()).content("문의 답변 122").question(questionRepository.findById(122L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor23").get()).content("문의 답변 123").question(questionRepository.findById(123L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor24").get()).content("문의 답변 124").question(questionRepository.findById(124L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor25").get()).content("문의 답변 125").question(questionRepository.findById(125L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor26").get()).content("문의 답변 126").question(questionRepository.findById(126L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor27").get()).content("문의 답변 127").question(questionRepository.findById(127L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor28").get()).content("문의 답변 128").question(questionRepository.findById(128L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor29").get()).content("문의 답변 129").question(questionRepository.findById(129L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor30").get()).content("문의 답변 130").question(questionRepository.findById(130L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor31").get()).content("문의 답변 131").question(questionRepository.findById(131L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor32").get()).content("문의 답변 132").question(questionRepository.findById(132L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor33").get()).content("문의 답변 133").question(questionRepository.findById(133L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor34").get()).content("문의 답변 134").question(questionRepository.findById(134L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor35").get()).content("문의 답변 135").question(questionRepository.findById(135L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor36").get()).content("문의 답변 136").question(questionRepository.findById(136L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor37").get()).content("문의 답변 137").question(questionRepository.findById(137L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor38").get()).content("문의 답변 138").question(questionRepository.findById(138L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor39").get()).content("문의 답변 139").question(questionRepository.findById(139L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor40").get()).content("문의 답변 140").question(questionRepository.findById(140L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor41").get()).content("문의 답변 141").question(questionRepository.findById(141L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor42").get()).content("문의 답변 142").question(questionRepository.findById(142L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor43").get()).content("문의 답변 143").question(questionRepository.findById(143L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor44").get()).content("문의 답변 144").question(questionRepository.findById(144L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor45").get()).content("문의 답변 145").question(questionRepository.findById(145L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor46").get()).content("문의 답변 146").question(questionRepository.findById(146L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor47").get()).content("문의 답변 147").question(questionRepository.findById(147L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor48").get()).content("문의 답변 148").question(questionRepository.findById(148L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor49").get()).content("문의 답변 149").question(questionRepository.findById(149L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor50").get()).content("문의 답변 150").question(questionRepository.findById(150L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor1").get()).content("문의 답변 151").question(questionRepository.findById(151L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor2").get()).content("문의 답변 152").question(questionRepository.findById(152L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor3").get()).content("문의 답변 153").question(questionRepository.findById(153L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor4").get()).content("문의 답변 154").question(questionRepository.findById(154L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor5").get()).content("문의 답변 155").question(questionRepository.findById(155L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor6").get()).content("문의 답변 156").question(questionRepository.findById(156L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor7").get()).content("문의 답변 157").question(questionRepository.findById(157L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor8").get()).content("문의 답변 158").question(questionRepository.findById(158L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor9").get()).content("문의 답변 159").question(questionRepository.findById(159L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor10").get()).content("문의 답변 160").question(questionRepository.findById(160L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor11").get()).content("문의 답변 161").question(questionRepository.findById(161L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor12").get()).content("문의 답변 162").question(questionRepository.findById(162L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor13").get()).content("문의 답변 163").question(questionRepository.findById(163L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor14").get()).content("문의 답변 164").question(questionRepository.findById(164L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor15").get()).content("문의 답변 165").question(questionRepository.findById(165L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor16").get()).content("문의 답변 166").question(questionRepository.findById(166L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor17").get()).content("문의 답변 167").question(questionRepository.findById(167L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor18").get()).content("문의 답변 168").question(questionRepository.findById(168L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor19").get()).content("문의 답변 169").question(questionRepository.findById(169L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor20").get()).content("문의 답변 170").question(questionRepository.findById(170L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor21").get()).content("문의 답변 171").question(questionRepository.findById(171L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor22").get()).content("문의 답변 172").question(questionRepository.findById(172L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor23").get()).content("문의 답변 173").question(questionRepository.findById(173L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor24").get()).content("문의 답변 174").question(questionRepository.findById(174L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor25").get()).content("문의 답변 175").question(questionRepository.findById(175L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor26").get()).content("문의 답변 176").question(questionRepository.findById(176L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor27").get()).content("문의 답변 177").question(questionRepository.findById(177L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor28").get()).content("문의 답변 178").question(questionRepository.findById(178L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor29").get()).content("문의 답변 179").question(questionRepository.findById(179L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor30").get()).content("문의 답변 180").question(questionRepository.findById(180L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor31").get()).content("문의 답변 181").question(questionRepository.findById(181L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor32").get()).content("문의 답변 182").question(questionRepository.findById(182L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor33").get()).content("문의 답변 183").question(questionRepository.findById(183L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor34").get()).content("문의 답변 184").question(questionRepository.findById(184L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor35").get()).content("문의 답변 185").question(questionRepository.findById(185L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor36").get()).content("문의 답변 186").question(questionRepository.findById(186L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor37").get()).content("문의 답변 187").question(questionRepository.findById(187L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor38").get()).content("문의 답변 188").question(questionRepository.findById(188L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor39").get()).content("문의 답변 189").question(questionRepository.findById(189L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor40").get()).content("문의 답변 190").question(questionRepository.findById(190L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor41").get()).content("문의 답변 191").question(questionRepository.findById(191L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor42").get()).content("문의 답변 192").question(questionRepository.findById(192L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor43").get()).content("문의 답변 193").question(questionRepository.findById(193L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor44").get()).content("문의 답변 194").question(questionRepository.findById(194L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor45").get()).content("문의 답변 195").question(questionRepository.findById(195L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor46").get()).content("문의 답변 196").question(questionRepository.findById(196L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor47").get()).content("문의 답변 197").question(questionRepository.findById(197L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor48").get()).content("문의 답변 198").question(questionRepository.findById(198L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor49").get()).content("문의 답변 199").question(questionRepository.findById(199L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor50").get()).content("문의 답변 200").question(questionRepository.findById(200L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor1").get()).content("문의 답변 201").question(questionRepository.findById(201L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor2").get()).content("문의 답변 202").question(questionRepository.findById(202L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor3").get()).content("문의 답변 203").question(questionRepository.findById(203L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor4").get()).content("문의 답변 204").question(questionRepository.findById(204L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor5").get()).content("문의 답변 205").question(questionRepository.findById(205L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor6").get()).content("문의 답변 206").question(questionRepository.findById(206L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor7").get()).content("문의 답변 207").question(questionRepository.findById(207L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor8").get()).content("문의 답변 208").question(questionRepository.findById(208L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor9").get()).content("문의 답변 209").question(questionRepository.findById(209L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor10").get()).content("문의 답변 210").question(questionRepository.findById(210L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor11").get()).content("문의 답변 211").question(questionRepository.findById(211L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor12").get()).content("문의 답변 212").question(questionRepository.findById(212L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor13").get()).content("문의 답변 213").question(questionRepository.findById(213L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor14").get()).content("문의 답변 214").question(questionRepository.findById(214L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor15").get()).content("문의 답변 215").question(questionRepository.findById(215L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor16").get()).content("문의 답변 216").question(questionRepository.findById(216L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor17").get()).content("문의 답변 217").question(questionRepository.findById(217L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor18").get()).content("문의 답변 218").question(questionRepository.findById(218L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor19").get()).content("문의 답변 219").question(questionRepository.findById(219L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor20").get()).content("문의 답변 220").question(questionRepository.findById(220L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor21").get()).content("문의 답변 221").question(questionRepository.findById(221L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor22").get()).content("문의 답변 222").question(questionRepository.findById(222L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor23").get()).content("문의 답변 223").question(questionRepository.findById(223L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor24").get()).content("문의 답변 224").question(questionRepository.findById(224L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor25").get()).content("문의 답변 225").question(questionRepository.findById(225L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor26").get()).content("문의 답변 226").question(questionRepository.findById(226L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor27").get()).content("문의 답변 227").question(questionRepository.findById(227L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor28").get()).content("문의 답변 228").question(questionRepository.findById(228L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor29").get()).content("문의 답변 229").question(questionRepository.findById(229L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor30").get()).content("문의 답변 230").question(questionRepository.findById(230L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor31").get()).content("문의 답변 231").question(questionRepository.findById(231L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor32").get()).content("문의 답변 232").question(questionRepository.findById(232L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor33").get()).content("문의 답변 233").question(questionRepository.findById(233L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor34").get()).content("문의 답변 234").question(questionRepository.findById(234L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor35").get()).content("문의 답변 235").question(questionRepository.findById(235L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor36").get()).content("문의 답변 236").question(questionRepository.findById(236L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor37").get()).content("문의 답변 237").question(questionRepository.findById(237L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor38").get()).content("문의 답변 238").question(questionRepository.findById(238L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor39").get()).content("문의 답변 239").question(questionRepository.findById(239L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor40").get()).content("문의 답변 240").question(questionRepository.findById(240L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor41").get()).content("문의 답변 241").question(questionRepository.findById(241L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor42").get()).content("문의 답변 242").question(questionRepository.findById(242L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor43").get()).content("문의 답변 243").question(questionRepository.findById(243L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor44").get()).content("문의 답변 244").question(questionRepository.findById(244L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor45").get()).content("문의 답변 245").question(questionRepository.findById(245L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor46").get()).content("문의 답변 246").question(questionRepository.findById(246L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor47").get()).content("문의 답변 247").question(questionRepository.findById(247L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor48").get()).content("문의 답변 248").question(questionRepository.findById(248L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor49").get()).content("문의 답변 249").question(questionRepository.findById(249L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor50").get()).content("문의 답변 250").question(questionRepository.findById(250L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor1").get()).content("문의 답변 251").question(questionRepository.findById(251L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor2").get()).content("문의 답변 252").question(questionRepository.findById(252L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor3").get()).content("문의 답변 253").question(questionRepository.findById(253L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor4").get()).content("문의 답변 254").question(questionRepository.findById(254L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor5").get()).content("문의 답변 255").question(questionRepository.findById(255L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor6").get()).content("문의 답변 256").question(questionRepository.findById(256L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor7").get()).content("문의 답변 257").question(questionRepository.findById(257L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor8").get()).content("문의 답변 258").question(questionRepository.findById(258L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor9").get()).content("문의 답변 259").question(questionRepository.findById(259L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor10").get()).content("문의 답변 260").question(questionRepository.findById(260L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor11").get()).content("문의 답변 261").question(questionRepository.findById(261L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor12").get()).content("문의 답변 262").question(questionRepository.findById(262L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor13").get()).content("문의 답변 263").question(questionRepository.findById(263L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor14").get()).content("문의 답변 264").question(questionRepository.findById(264L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor15").get()).content("문의 답변 265").question(questionRepository.findById(265L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor16").get()).content("문의 답변 266").question(questionRepository.findById(266L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor17").get()).content("문의 답변 267").question(questionRepository.findById(267L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor18").get()).content("문의 답변 268").question(questionRepository.findById(268L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor19").get()).content("문의 답변 269").question(questionRepository.findById(269L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor20").get()).content("문의 답변 270").question(questionRepository.findById(270L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor21").get()).content("문의 답변 271").question(questionRepository.findById(271L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor22").get()).content("문의 답변 272").question(questionRepository.findById(272L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor23").get()).content("문의 답변 273").question(questionRepository.findById(273L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor24").get()).content("문의 답변 274").question(questionRepository.findById(274L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor25").get()).content("문의 답변 275").question(questionRepository.findById(275L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor26").get()).content("문의 답변 276").question(questionRepository.findById(276L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor27").get()).content("문의 답변 277").question(questionRepository.findById(277L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor28").get()).content("문의 답변 278").question(questionRepository.findById(278L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor29").get()).content("문의 답변 279").question(questionRepository.findById(279L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor30").get()).content("문의 답변 280").question(questionRepository.findById(280L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor31").get()).content("문의 답변 281").question(questionRepository.findById(281L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor32").get()).content("문의 답변 282").question(questionRepository.findById(282L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor33").get()).content("문의 답변 283").question(questionRepository.findById(283L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor34").get()).content("문의 답변 284").question(questionRepository.findById(284L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor35").get()).content("문의 답변 285").question(questionRepository.findById(285L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor36").get()).content("문의 답변 286").question(questionRepository.findById(286L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor37").get()).content("문의 답변 287").question(questionRepository.findById(287L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor38").get()).content("문의 답변 288").question(questionRepository.findById(288L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor39").get()).content("문의 답변 289").question(questionRepository.findById(289L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor40").get()).content("문의 답변 290").question(questionRepository.findById(290L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor41").get()).content("문의 답변 291").question(questionRepository.findById(291L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor42").get()).content("문의 답변 292").question(questionRepository.findById(292L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor43").get()).content("문의 답변 293").question(questionRepository.findById(293L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor44").get()).content("문의 답변 294").question(questionRepository.findById(294L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor45").get()).content("문의 답변 295").question(questionRepository.findById(295L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor46").get()).content("문의 답변 296").question(questionRepository.findById(296L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor47").get()).content("문의 답변 297").question(questionRepository.findById(297L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor48").get()).content("문의 답변 298").question(questionRepository.findById(298L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor49").get()).content("문의 답변 299").question(questionRepository.findById(299L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor50").get()).content("문의 답변 300").question(questionRepository.findById(300L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor1").get()).content("문의 답변 301").question(questionRepository.findById(301L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor2").get()).content("문의 답변 302").question(questionRepository.findById(302L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor3").get()).content("문의 답변 303").question(questionRepository.findById(303L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor4").get()).content("문의 답변 304").question(questionRepository.findById(304L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor5").get()).content("문의 답변 305").question(questionRepository.findById(305L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor6").get()).content("문의 답변 306").question(questionRepository.findById(306L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor7").get()).content("문의 답변 307").question(questionRepository.findById(307L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor8").get()).content("문의 답변 308").question(questionRepository.findById(308L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor9").get()).content("문의 답변 309").question(questionRepository.findById(309L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor10").get()).content("문의 답변 310").question(questionRepository.findById(310L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor11").get()).content("문의 답변 311").question(questionRepository.findById(311L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor12").get()).content("문의 답변 312").question(questionRepository.findById(312L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor13").get()).content("문의 답변 313").question(questionRepository.findById(313L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor14").get()).content("문의 답변 314").question(questionRepository.findById(314L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor15").get()).content("문의 답변 315").question(questionRepository.findById(315L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor16").get()).content("문의 답변 316").question(questionRepository.findById(316L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor17").get()).content("문의 답변 317").question(questionRepository.findById(317L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor18").get()).content("문의 답변 318").question(questionRepository.findById(318L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor19").get()).content("문의 답변 319").question(questionRepository.findById(319L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor20").get()).content("문의 답변 320").question(questionRepository.findById(320L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor21").get()).content("문의 답변 321").question(questionRepository.findById(321L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor22").get()).content("문의 답변 322").question(questionRepository.findById(322L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor23").get()).content("문의 답변 323").question(questionRepository.findById(323L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor24").get()).content("문의 답변 324").question(questionRepository.findById(324L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor25").get()).content("문의 답변 325").question(questionRepository.findById(325L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor26").get()).content("문의 답변 326").question(questionRepository.findById(326L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor27").get()).content("문의 답변 327").question(questionRepository.findById(327L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor28").get()).content("문의 답변 328").question(questionRepository.findById(328L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor29").get()).content("문의 답변 329").question(questionRepository.findById(329L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor30").get()).content("문의 답변 330").question(questionRepository.findById(330L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor31").get()).content("문의 답변 331").question(questionRepository.findById(331L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor32").get()).content("문의 답변 332").question(questionRepository.findById(332L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor33").get()).content("문의 답변 333").question(questionRepository.findById(333L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor34").get()).content("문의 답변 334").question(questionRepository.findById(334L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor35").get()).content("문의 답변 335").question(questionRepository.findById(335L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor36").get()).content("문의 답변 336").question(questionRepository.findById(336L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor37").get()).content("문의 답변 337").question(questionRepository.findById(337L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor38").get()).content("문의 답변 338").question(questionRepository.findById(338L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor39").get()).content("문의 답변 339").question(questionRepository.findById(339L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor40").get()).content("문의 답변 340").question(questionRepository.findById(340L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor41").get()).content("문의 답변 341").question(questionRepository.findById(341L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor42").get()).content("문의 답변 342").question(questionRepository.findById(342L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor43").get()).content("문의 답변 343").question(questionRepository.findById(343L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor44").get()).content("문의 답변 344").question(questionRepository.findById(344L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor45").get()).content("문의 답변 345").question(questionRepository.findById(345L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor46").get()).content("문의 답변 346").question(questionRepository.findById(346L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor47").get()).content("문의 답변 347").question(questionRepository.findById(347L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor48").get()).content("문의 답변 348").question(questionRepository.findById(348L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor49").get()).content("문의 답변 349").question(questionRepository.findById(349L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor50").get()).content("문의 답변 350").question(questionRepository.findById(350L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor1").get()).content("문의 답변 351").question(questionRepository.findById(351L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor2").get()).content("문의 답변 352").question(questionRepository.findById(352L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor3").get()).content("문의 답변 353").question(questionRepository.findById(353L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor4").get()).content("문의 답변 354").question(questionRepository.findById(354L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor5").get()).content("문의 답변 355").question(questionRepository.findById(355L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor6").get()).content("문의 답변 356").question(questionRepository.findById(356L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor7").get()).content("문의 답변 357").question(questionRepository.findById(357L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor8").get()).content("문의 답변 358").question(questionRepository.findById(358L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor9").get()).content("문의 답변 359").question(questionRepository.findById(359L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor10").get()).content("문의 답변 360").question(questionRepository.findById(360L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor11").get()).content("문의 답변 361").question(questionRepository.findById(361L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor12").get()).content("문의 답변 362").question(questionRepository.findById(362L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor13").get()).content("문의 답변 363").question(questionRepository.findById(363L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor14").get()).content("문의 답변 364").question(questionRepository.findById(364L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor15").get()).content("문의 답변 365").question(questionRepository.findById(365L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor16").get()).content("문의 답변 366").question(questionRepository.findById(366L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor17").get()).content("문의 답변 367").question(questionRepository.findById(367L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor18").get()).content("문의 답변 368").question(questionRepository.findById(368L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor19").get()).content("문의 답변 369").question(questionRepository.findById(369L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor20").get()).content("문의 답변 370").question(questionRepository.findById(370L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor21").get()).content("문의 답변 371").question(questionRepository.findById(371L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor22").get()).content("문의 답변 372").question(questionRepository.findById(372L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor23").get()).content("문의 답변 373").question(questionRepository.findById(373L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor24").get()).content("문의 답변 374").question(questionRepository.findById(374L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor25").get()).content("문의 답변 375").question(questionRepository.findById(375L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor26").get()).content("문의 답변 376").question(questionRepository.findById(376L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor27").get()).content("문의 답변 377").question(questionRepository.findById(377L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor28").get()).content("문의 답변 378").question(questionRepository.findById(378L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor29").get()).content("문의 답변 379").question(questionRepository.findById(379L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor30").get()).content("문의 답변 380").question(questionRepository.findById(380L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor31").get()).content("문의 답변 381").question(questionRepository.findById(381L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor32").get()).content("문의 답변 382").question(questionRepository.findById(382L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor33").get()).content("문의 답변 383").question(questionRepository.findById(383L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor34").get()).content("문의 답변 384").question(questionRepository.findById(384L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor35").get()).content("문의 답변 385").question(questionRepository.findById(385L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor36").get()).content("문의 답변 386").question(questionRepository.findById(386L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor37").get()).content("문의 답변 387").question(questionRepository.findById(387L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor38").get()).content("문의 답변 388").question(questionRepository.findById(388L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor39").get()).content("문의 답변 389").question(questionRepository.findById(389L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor40").get()).content("문의 답변 390").question(questionRepository.findById(390L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor41").get()).content("문의 답변 391").question(questionRepository.findById(391L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor42").get()).content("문의 답변 392").question(questionRepository.findById(392L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor43").get()).content("문의 답변 393").question(questionRepository.findById(393L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor44").get()).content("문의 답변 394").question(questionRepository.findById(394L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor45").get()).content("문의 답변 395").question(questionRepository.findById(395L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor46").get()).content("문의 답변 396").question(questionRepository.findById(396L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor47").get()).content("문의 답변 397").question(questionRepository.findById(397L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor48").get()).content("문의 답변 398").question(questionRepository.findById(398L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor49").get()).content("문의 답변 399").question(questionRepository.findById(399L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor50").get()).content("문의 답변 400").question(questionRepository.findById(400L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor1").get()).content("문의 답변 401").question(questionRepository.findById(401L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor2").get()).content("문의 답변 402").question(questionRepository.findById(402L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor3").get()).content("문의 답변 403").question(questionRepository.findById(403L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor4").get()).content("문의 답변 404").question(questionRepository.findById(404L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor5").get()).content("문의 답변 405").question(questionRepository.findById(405L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor6").get()).content("문의 답변 406").question(questionRepository.findById(406L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor7").get()).content("문의 답변 407").question(questionRepository.findById(407L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor8").get()).content("문의 답변 408").question(questionRepository.findById(408L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor9").get()).content("문의 답변 409").question(questionRepository.findById(409L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor10").get()).content("문의 답변 410").question(questionRepository.findById(410L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor11").get()).content("문의 답변 411").question(questionRepository.findById(411L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor12").get()).content("문의 답변 412").question(questionRepository.findById(412L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor13").get()).content("문의 답변 413").question(questionRepository.findById(413L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor14").get()).content("문의 답변 414").question(questionRepository.findById(414L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor15").get()).content("문의 답변 415").question(questionRepository.findById(415L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor16").get()).content("문의 답변 416").question(questionRepository.findById(416L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor17").get()).content("문의 답변 417").question(questionRepository.findById(417L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor18").get()).content("문의 답변 418").question(questionRepository.findById(418L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor19").get()).content("문의 답변 419").question(questionRepository.findById(419L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor20").get()).content("문의 답변 420").question(questionRepository.findById(420L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor21").get()).content("문의 답변 421").question(questionRepository.findById(421L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor22").get()).content("문의 답변 422").question(questionRepository.findById(422L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor23").get()).content("문의 답변 423").question(questionRepository.findById(423L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor24").get()).content("문의 답변 424").question(questionRepository.findById(424L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor25").get()).content("문의 답변 425").question(questionRepository.findById(425L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor26").get()).content("문의 답변 426").question(questionRepository.findById(426L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor27").get()).content("문의 답변 427").question(questionRepository.findById(427L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor28").get()).content("문의 답변 428").question(questionRepository.findById(428L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor29").get()).content("문의 답변 429").question(questionRepository.findById(429L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor30").get()).content("문의 답변 430").question(questionRepository.findById(430L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor31").get()).content("문의 답변 431").question(questionRepository.findById(431L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor32").get()).content("문의 답변 432").question(questionRepository.findById(432L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor33").get()).content("문의 답변 433").question(questionRepository.findById(433L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor34").get()).content("문의 답변 434").question(questionRepository.findById(434L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor35").get()).content("문의 답변 435").question(questionRepository.findById(435L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor36").get()).content("문의 답변 436").question(questionRepository.findById(436L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor37").get()).content("문의 답변 437").question(questionRepository.findById(437L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor38").get()).content("문의 답변 438").question(questionRepository.findById(438L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor39").get()).content("문의 답변 439").question(questionRepository.findById(439L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor40").get()).content("문의 답변 440").question(questionRepository.findById(440L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor41").get()).content("문의 답변 441").question(questionRepository.findById(441L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor42").get()).content("문의 답변 442").question(questionRepository.findById(442L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor43").get()).content("문의 답변 443").question(questionRepository.findById(443L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor44").get()).content("문의 답변 444").question(questionRepository.findById(444L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor45").get()).content("문의 답변 445").question(questionRepository.findById(445L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor46").get()).content("문의 답변 446").question(questionRepository.findById(446L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor47").get()).content("문의 답변 447").question(questionRepository.findById(447L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor48").get()).content("문의 답변 448").question(questionRepository.findById(448L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor49").get()).content("문의 답변 449").question(questionRepository.findById(449L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor50").get()).content("문의 답변 450").question(questionRepository.findById(450L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor1").get()).content("문의 답변 451").question(questionRepository.findById(451L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor2").get()).content("문의 답변 452").question(questionRepository.findById(452L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor3").get()).content("문의 답변 453").question(questionRepository.findById(453L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor4").get()).content("문의 답변 454").question(questionRepository.findById(454L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor5").get()).content("문의 답변 455").question(questionRepository.findById(455L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor6").get()).content("문의 답변 456").question(questionRepository.findById(456L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor7").get()).content("문의 답변 457").question(questionRepository.findById(457L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor8").get()).content("문의 답변 458").question(questionRepository.findById(458L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor9").get()).content("문의 답변 459").question(questionRepository.findById(459L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor10").get()).content("문의 답변 460").question(questionRepository.findById(460L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor11").get()).content("문의 답변 461").question(questionRepository.findById(461L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor12").get()).content("문의 답변 462").question(questionRepository.findById(462L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor13").get()).content("문의 답변 463").question(questionRepository.findById(463L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor14").get()).content("문의 답변 464").question(questionRepository.findById(464L).get()).build());
        answerRepository.save(Answer.builder().member(memberRepository.findByName("superVisor15").get()).content("문의 답변 465").question(questionRepository.findById(465L).get()).build());
    }

    void initOrder() {
        orderRepository.save(Order.builder().member(memberRepository.findByName("member1").get()).orderNo("2024-03-14__0001").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member1").phone(1012345678L).address("대한민국 테스트 주소 001").addressDetail("상세주소 001").description("부재시 문앞에 놓아주세요.").postcode("00001").price(BigDecimal.valueOf(28200)).totalPrice(BigDecimal.valueOf(30700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member2").get()).orderNo("2024-03-14__0002").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member2").phone(1012345679L).address("대한민국 테스트 주소 002").addressDetail("상세주소 002").description("부재시 경비실에 맡겨주세요.").postcode("00002").price(BigDecimal.valueOf(379200)).totalPrice(BigDecimal.valueOf(381700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member3").get()).orderNo("2024-03-14__0003").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member3").phone(1012345680L).address("대한민국 테스트 주소 003").addressDetail("상세주소 003").description("부재시 옆집 주세요.").postcode("00003").price(BigDecimal.valueOf(102000)).totalPrice(BigDecimal.valueOf(104500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member4").get()).orderNo("2024-03-14__0004").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member4").phone(1012345681L).address("대한민국 테스트 주소 004").addressDetail("상세주소 004").description("부재시 전화 주세요.").postcode("00004").price(BigDecimal.valueOf(97200)).totalPrice(BigDecimal.valueOf(99700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member5").get()).orderNo("2024-03-14__0005").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member5").phone(1012345682L).address("대한민국 테스트 주소 005").addressDetail("상세주소 005").description("강아지가 짖습니다.").postcode("00005").price(BigDecimal.valueOf(474000)).totalPrice(BigDecimal.valueOf(476500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member6").get()).orderNo("2024-03-14__0006").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member6").phone(1012345683L).address("대한민국 테스트 주소 006").addressDetail("상세주소 006").description("애기가 자고 있습니다.").postcode("00006").price(BigDecimal.valueOf(180000)).totalPrice(BigDecimal.valueOf(182500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member7").get()).orderNo("2024-03-14__0007").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member7").phone(1012345684L).address("대한민국 테스트 주소 007").addressDetail("상세주소 007").description("벨 누르지말아주세요").postcode("00007").price(BigDecimal.valueOf(270000)).totalPrice(BigDecimal.valueOf(272500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member8").get()).orderNo("2024-03-14__0008").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member8").phone(1012345685L).address("대한민국 테스트 주소 008").addressDetail("상세주소 008").description("벨 누르면 환불합니다.").postcode("00008").price(BigDecimal.valueOf(81000)).totalPrice(BigDecimal.valueOf(83500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member9").get()).orderNo("2024-03-14__0009").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member9").phone(1012345686L).address("대한민국 테스트 주소 009").addressDetail("상세주소 009").description("강아지가 물어요").postcode("00009").price(BigDecimal.valueOf(63000)).totalPrice(BigDecimal.valueOf(65500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member10").get()).orderNo("2024-03-14__0010").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member10").phone(1012345687L).address("대한민국 테스트 주소 010").addressDetail("상세주소 010").description("빵상").postcode("00010").price(BigDecimal.valueOf(61800)).totalPrice(BigDecimal.valueOf(64300)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member11").get()).orderNo("2024-03-14__0011").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member11").phone(1012345688L).address("대한민국 테스트 주소 011").addressDetail("상세주소 011").description("부재시 문앞에 놓아주세요.").postcode("00011").price(BigDecimal.valueOf(84000)).totalPrice(BigDecimal.valueOf(86500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member12").get()).orderNo("2024-03-14__0012").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member12").phone(1012345689L).address("대한민국 테스트 주소 012").addressDetail("상세주소 012").description("부재시 경비실에 맡겨주세요.").postcode("00012").price(BigDecimal.valueOf(62400)).totalPrice(BigDecimal.valueOf(64900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member13").get()).orderNo("2024-03-14__0013").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member13").phone(1012345690L).address("대한민국 테스트 주소 013").addressDetail("상세주소 013").description("부재시 옆집 주세요.").postcode("00013").price(BigDecimal.valueOf(70200)).totalPrice(BigDecimal.valueOf(72700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member14").get()).orderNo("2024-03-14__0014").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member14").phone(1012345691L).address("대한민국 테스트 주소 014").addressDetail("상세주소 014").description("부재시 전화 주세요.").postcode("00014").price(BigDecimal.valueOf(96000)).totalPrice(BigDecimal.valueOf(98500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member15").get()).orderNo("2024-03-14__0015").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member15").phone(1012345692L).address("대한민국 테스트 주소 015").addressDetail("상세주소 015").description("강아지가 짖습니다.").postcode("00015").price(BigDecimal.valueOf(270000)).totalPrice(BigDecimal.valueOf(272500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member16").get()).orderNo("2024-03-14__0016").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member16").phone(1012345693L).address("대한민국 테스트 주소 016").addressDetail("상세주소 016").description("애기가 자고 있습니다.").postcode("00016").price(BigDecimal.valueOf(140700)).totalPrice(BigDecimal.valueOf(143200)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member17").get()).orderNo("2024-03-14__0017").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member17").phone(1012345694L).address("대한민국 테스트 주소 017").addressDetail("상세주소 017").description("벨 누르지말아주세요").postcode("00017").price(BigDecimal.valueOf(216000)).totalPrice(BigDecimal.valueOf(218500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member18").get()).orderNo("2024-03-14__0018").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member18").phone(1012345695L).address("대한민국 테스트 주소 018").addressDetail("상세주소 018").description("벨 누르면 환불합니다.").postcode("00018").price(BigDecimal.valueOf(342000)).totalPrice(BigDecimal.valueOf(344500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member19").get()).orderNo("2024-03-14__0019").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member19").phone(1012345696L).address("대한민국 테스트 주소 019").addressDetail("상세주소 019").description("강아지가 물어요").postcode("00019").price(BigDecimal.valueOf(168000)).totalPrice(BigDecimal.valueOf(170500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member20").get()).orderNo("2024-03-14__0020").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member20").phone(1012345697L).address("대한민국 테스트 주소 020").addressDetail("상세주소 020").description("빵상").postcode("00020").price(BigDecimal.valueOf(585000)).totalPrice(BigDecimal.valueOf(587500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member21").get()).orderNo("2024-03-14__0021").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member21").phone(1012345698L).address("대한민국 테스트 주소 021").addressDetail("상세주소 021").description("부재시 문앞에 놓아주세요.").postcode("00021").price(BigDecimal.valueOf(90000)).totalPrice(BigDecimal.valueOf(92500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member22").get()).orderNo("2024-03-14__0022").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member22").phone(1012345699L).address("대한민국 테스트 주소 022").addressDetail("상세주소 022").description("부재시 경비실에 맡겨주세요.").postcode("00022").price(BigDecimal.valueOf(162000)).totalPrice(BigDecimal.valueOf(164500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member23").get()).orderNo("2024-03-14__0023").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member23").phone(1012345700L).address("대한민국 테스트 주소 023").addressDetail("상세주소 023").description("부재시 옆집 주세요.").postcode("00023").price(BigDecimal.valueOf(228000)).totalPrice(BigDecimal.valueOf(230500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member24").get()).orderNo("2024-03-14__0024").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member24").phone(1012345701L).address("대한민국 테스트 주소 024").addressDetail("상세주소 024").description("부재시 전화 주세요.").postcode("00024").price(BigDecimal.valueOf(67800)).totalPrice(BigDecimal.valueOf(70300)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member25").get()).orderNo("2024-03-14__0025").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member25").phone(1012345702L).address("대한민국 테스트 주소 025").addressDetail("상세주소 025").description("강아지가 짖습니다.").postcode("00025").price(BigDecimal.valueOf(174000)).totalPrice(BigDecimal.valueOf(176500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member26").get()).orderNo("2024-03-14__0026").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member26").phone(1012345703L).address("대한민국 테스트 주소 026").addressDetail("상세주소 026").description("애기가 자고 있습니다.").postcode("00026").price(BigDecimal.valueOf(485400)).totalPrice(BigDecimal.valueOf(487900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member27").get()).orderNo("2024-03-14__0027").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member27").phone(1012345704L).address("대한민국 테스트 주소 027").addressDetail("상세주소 027").description("벨 누르지말아주세요").postcode("00027").price(BigDecimal.valueOf(549000)).totalPrice(BigDecimal.valueOf(551500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member28").get()).orderNo("2024-03-14__0028").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member28").phone(1012345705L).address("대한민국 테스트 주소 028").addressDetail("상세주소 028").description("벨 누르면 환불합니다.").postcode("00028").price(BigDecimal.valueOf(156000)).totalPrice(BigDecimal.valueOf(158500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member29").get()).orderNo("2024-03-14__0029").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member29").phone(1012345706L).address("대한민국 테스트 주소 029").addressDetail("상세주소 029").description("강아지가 물어요").postcode("00029").price(BigDecimal.valueOf(795000)).totalPrice(BigDecimal.valueOf(797500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member30").get()).orderNo("2024-03-14__0030").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member30").phone(1012345707L).address("대한민국 테스트 주소 030").addressDetail("상세주소 030").description("빵상").postcode("00030").price(BigDecimal.valueOf(282000)).totalPrice(BigDecimal.valueOf(284500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member31").get()).orderNo("2024-03-14__0031").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member31").phone(1012345708L).address("대한민국 테스트 주소 031").addressDetail("상세주소 031").description("부재시 문앞에 놓아주세요.").postcode("00031").price(BigDecimal.valueOf(168000)).totalPrice(BigDecimal.valueOf(170500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member32").get()).orderNo("2024-03-14__0032").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member32").phone(1012345709L).address("대한민국 테스트 주소 032").addressDetail("상세주소 032").description("부재시 경비실에 맡겨주세요.").postcode("00032").price(BigDecimal.valueOf(462000)).totalPrice(BigDecimal.valueOf(464500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member33").get()).orderNo("2024-03-14__0033").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member33").phone(1012345710L).address("대한민국 테스트 주소 033").addressDetail("상세주소 033").description("부재시 옆집 주세요.").postcode("00033").price(BigDecimal.valueOf(930000)).totalPrice(BigDecimal.valueOf(932500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member34").get()).orderNo("2024-03-14__0034").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member34").phone(1012345711L).address("대한민국 테스트 주소 034").addressDetail("상세주소 034").description("부재시 전화 주세요.").postcode("00034").price(BigDecimal.valueOf(230400)).totalPrice(BigDecimal.valueOf(232900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member35").get()).orderNo("2024-03-14__0035").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member35").phone(1012345712L).address("대한민국 테스트 주소 035").addressDetail("상세주소 035").description("강아지가 짖습니다.").postcode("00035").price(BigDecimal.valueOf(390000)).totalPrice(BigDecimal.valueOf(392500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member36").get()).orderNo("2024-03-14__0036").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member36").phone(1012345713L).address("대한민국 테스트 주소 036").addressDetail("상세주소 036").description("애기가 자고 있습니다.").postcode("00036").price(BigDecimal.valueOf(618000)).totalPrice(BigDecimal.valueOf(620500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member37").get()).orderNo("2024-03-14__0037").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member37").phone(1012345714L).address("대한민국 테스트 주소 037").addressDetail("상세주소 037").description("벨 누르지말아주세요").postcode("00037").price(BigDecimal.valueOf(876000)).totalPrice(BigDecimal.valueOf(878500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member38").get()).orderNo("2024-03-14__0038").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member38").phone(1012345715L).address("대한민국 테스트 주소 038").addressDetail("상세주소 038").description("벨 누르면 환불합니다.").postcode("00038").price(BigDecimal.valueOf(1008000)).totalPrice(BigDecimal.valueOf(1010500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member39").get()).orderNo("2024-03-14__0039").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member39").phone(1012345716L).address("대한민국 테스트 주소 039").addressDetail("상세주소 039").description("강아지가 물어요").postcode("00039").price(BigDecimal.valueOf(342000)).totalPrice(BigDecimal.valueOf(344500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member40").get()).orderNo("2024-03-14__0040").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member40").phone(1012345717L).address("대한민국 테스트 주소 040").addressDetail("상세주소 040").description("빵상").postcode("00040").price(BigDecimal.valueOf(204000)).totalPrice(BigDecimal.valueOf(206500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member41").get()).orderNo("2024-03-14__0041").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member41").phone(1012345718L).address("대한민국 테스트 주소 041").addressDetail("상세주소 041").description("부재시 문앞에 놓아주세요.").postcode("00041").price(BigDecimal.valueOf(252000)).totalPrice(BigDecimal.valueOf(254500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member42").get()).orderNo("2024-03-14__0042").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member42").phone(1012345719L).address("대한민국 테스트 주소 042").addressDetail("상세주소 042").description("부재시 경비실에 맡겨주세요.").postcode("00042").price(BigDecimal.valueOf(142800)).totalPrice(BigDecimal.valueOf(145300)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member43").get()).orderNo("2024-03-14__0043").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member43").phone(1012345720L).address("대한민국 테스트 주소 043").addressDetail("상세주소 043").description("부재시 옆집 주세요.").postcode("00043").price(BigDecimal.valueOf(141000)).totalPrice(BigDecimal.valueOf(143500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member44").get()).orderNo("2024-03-14__0044").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member44").phone(1012345721L).address("대한민국 테스트 주소 044").addressDetail("상세주소 044").description("부재시 전화 주세요.").postcode("00044").price(BigDecimal.valueOf(408000)).totalPrice(BigDecimal.valueOf(410500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member45").get()).orderNo("2024-03-14__0045").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member45").phone(1012345722L).address("대한민국 테스트 주소 045").addressDetail("상세주소 045").description("강아지가 짖습니다.").postcode("00045").price(BigDecimal.valueOf(372000)).totalPrice(BigDecimal.valueOf(374500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member46").get()).orderNo("2024-03-14__0046").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member46").phone(1012345723L).address("대한민국 테스트 주소 046").addressDetail("상세주소 046").description("애기가 자고 있습니다.").postcode("00046").price(BigDecimal.valueOf(2280000)).totalPrice(BigDecimal.valueOf(2282500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member47").get()).orderNo("2024-03-14__0047").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member47").phone(1012345724L).address("대한민국 테스트 주소 047").addressDetail("상세주소 047").description("벨 누르지말아주세요").postcode("00047").price(BigDecimal.valueOf(2280000)).totalPrice(BigDecimal.valueOf(2282500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member48").get()).orderNo("2024-03-14__0048").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member48").phone(1012345725L).address("대한민국 테스트 주소 048").addressDetail("상세주소 048").description("벨 누르면 환불합니다.").postcode("00048").price(BigDecimal.valueOf(135000)).totalPrice(BigDecimal.valueOf(137500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member49").get()).orderNo("2024-03-14__0049").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member49").phone(1012345726L).address("대한민국 테스트 주소 049").addressDetail("상세주소 049").description("강아지가 물어요").postcode("00049").price(BigDecimal.valueOf(480000)).totalPrice(BigDecimal.valueOf(482500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member50").get()).orderNo("2024-03-14__0050").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member50").phone(1012345727L).address("대한민국 테스트 주소 050").addressDetail("상세주소 050").description("빵상").postcode("00050").price(BigDecimal.valueOf(396000)).totalPrice(BigDecimal.valueOf(398500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member51").get()).orderNo("2024-03-14__0051").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member51").phone(1012345728L).address("대한민국 테스트 주소 051").addressDetail("상세주소 051").description("부재시 문앞에 놓아주세요.").postcode("00051").price(BigDecimal.valueOf(132000)).totalPrice(BigDecimal.valueOf(134500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member52").get()).orderNo("2024-03-14__0052").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member52").phone(1012345729L).address("대한민국 테스트 주소 052").addressDetail("상세주소 052").description("부재시 경비실에 맡겨주세요.").postcode("00052").price(BigDecimal.valueOf(129000)).totalPrice(BigDecimal.valueOf(131500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member53").get()).orderNo("2024-03-14__0053").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member53").phone(1012345730L).address("대한민국 테스트 주소 053").addressDetail("상세주소 053").description("부재시 옆집 주세요.").postcode("00053").price(BigDecimal.valueOf(630000)).totalPrice(BigDecimal.valueOf(632500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member54").get()).orderNo("2024-03-14__0054").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member54").phone(1012345731L).address("대한민국 테스트 주소 054").addressDetail("상세주소 054").description("부재시 전화 주세요.").postcode("00054").price(BigDecimal.valueOf(222000)).totalPrice(BigDecimal.valueOf(224500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member55").get()).orderNo("2024-03-14__0055").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member55").phone(1012345732L).address("대한민국 테스트 주소 055").addressDetail("상세주소 055").description("강아지가 짖습니다.").postcode("00055").price(BigDecimal.valueOf(382800)).totalPrice(BigDecimal.valueOf(385300)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member56").get()).orderNo("2024-03-14__0056").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member56").phone(1012345733L).address("대한민국 테스트 주소 056").addressDetail("상세주소 056").description("애기가 자고 있습니다.").postcode("00056").price(BigDecimal.valueOf(330000)).totalPrice(BigDecimal.valueOf(332500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member57").get()).orderNo("2024-03-14__0057").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member57").phone(1012345734L).address("대한민국 테스트 주소 057").addressDetail("상세주소 057").description("벨 누르지말아주세요").postcode("00057").price(BigDecimal.valueOf(246000)).totalPrice(BigDecimal.valueOf(248500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member58").get()).orderNo("2024-03-14__0058").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member58").phone(1012345735L).address("대한민국 테스트 주소 058").addressDetail("상세주소 058").description("벨 누르면 환불합니다.").postcode("00058").price(BigDecimal.valueOf(531000)).totalPrice(BigDecimal.valueOf(533500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member59").get()).orderNo("2024-03-14__0059").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member59").phone(1012345736L).address("대한민국 테스트 주소 059").addressDetail("상세주소 059").description("강아지가 물어요").postcode("00059").price(BigDecimal.valueOf(630000)).totalPrice(BigDecimal.valueOf(632500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member60").get()).orderNo("2024-03-14__0060").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member60").phone(1012345737L).address("대한민국 테스트 주소 060").addressDetail("상세주소 060").description("빵상").postcode("00060").price(BigDecimal.valueOf(630000)).totalPrice(BigDecimal.valueOf(632500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member61").get()).orderNo("2024-03-14__0061").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member61").phone(1012345738L).address("대한민국 테스트 주소 061").addressDetail("상세주소 061").description("부재시 문앞에 놓아주세요.").postcode("00061").price(BigDecimal.valueOf(630000)).totalPrice(BigDecimal.valueOf(632500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member62").get()).orderNo("2024-03-14__0062").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member62").phone(1012345739L).address("대한민국 테스트 주소 062").addressDetail("상세주소 062").description("부재시 경비실에 맡겨주세요.").postcode("00062").price(BigDecimal.valueOf(600000)).totalPrice(BigDecimal.valueOf(602500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member63").get()).orderNo("2024-03-14__0063").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member63").phone(1012345740L).address("대한민국 테스트 주소 063").addressDetail("상세주소 063").description("부재시 옆집 주세요.").postcode("00063").price(BigDecimal.valueOf(360000)).totalPrice(BigDecimal.valueOf(362500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member64").get()).orderNo("2024-03-14__0064").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member64").phone(1012345741L).address("대한민국 테스트 주소 064").addressDetail("상세주소 064").description("부재시 전화 주세요.").postcode("00064").price(BigDecimal.valueOf(402000)).totalPrice(BigDecimal.valueOf(404500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member65").get()).orderNo("2024-03-14__0065").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member65").phone(1012345742L).address("대한민국 테스트 주소 065").addressDetail("상세주소 065").description("강아지가 짖습니다.").postcode("00065").price(BigDecimal.valueOf(174000)).totalPrice(BigDecimal.valueOf(176500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member66").get()).orderNo("2024-03-14__0066").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member66").phone(1012345743L).address("대한민국 테스트 주소 066").addressDetail("상세주소 066").description("애기가 자고 있습니다.").postcode("00066").price(BigDecimal.valueOf(359400)).totalPrice(BigDecimal.valueOf(361900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member67").get()).orderNo("2024-03-14__0067").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member67").phone(1012345744L).address("대한민국 테스트 주소 067").addressDetail("상세주소 067").description("벨 누르지말아주세요").postcode("00067").price(BigDecimal.valueOf(100800)).totalPrice(BigDecimal.valueOf(103300)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member68").get()).orderNo("2024-03-14__0068").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member68").phone(1012345745L).address("대한민국 테스트 주소 068").addressDetail("상세주소 068").description("벨 누르면 환불합니다.").postcode("00068").price(BigDecimal.valueOf(157800)).totalPrice(BigDecimal.valueOf(160300)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member69").get()).orderNo("2024-03-14__0069").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member69").phone(1012345746L).address("대한민국 테스트 주소 069").addressDetail("상세주소 069").description("강아지가 물어요").postcode("00069").price(BigDecimal.valueOf(426000)).totalPrice(BigDecimal.valueOf(428500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member70").get()).orderNo("2024-03-14__0070").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member70").phone(1012345747L).address("대한민국 테스트 주소 070").addressDetail("상세주소 070").description("빵상").postcode("00070").price(BigDecimal.valueOf(180000)).totalPrice(BigDecimal.valueOf(182500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member71").get()).orderNo("2024-03-14__0071").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member71").phone(1012345748L).address("대한민국 테스트 주소 071").addressDetail("상세주소 071").description("부재시 문앞에 놓아주세요.").postcode("00071").price(BigDecimal.valueOf(331200)).totalPrice(BigDecimal.valueOf(333700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member72").get()).orderNo("2024-03-14__0072").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member72").phone(1012345749L).address("대한민국 테스트 주소 072").addressDetail("상세주소 072").description("부재시 경비실에 맡겨주세요.").postcode("00072").price(BigDecimal.valueOf(36000)).totalPrice(BigDecimal.valueOf(38500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member73").get()).orderNo("2024-03-14__0073").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member73").phone(1012345750L).address("대한민국 테스트 주소 073").addressDetail("상세주소 073").description("부재시 옆집 주세요.").postcode("00073").price(BigDecimal.valueOf(71400)).totalPrice(BigDecimal.valueOf(73900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member74").get()).orderNo("2024-03-14__0074").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member74").phone(1012345751L).address("대한민국 테스트 주소 074").addressDetail("상세주소 074").description("부재시 전화 주세요.").postcode("00074").price(BigDecimal.valueOf(354000)).totalPrice(BigDecimal.valueOf(356500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member75").get()).orderNo("2024-03-14__0075").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member75").phone(1012345752L).address("대한민국 테스트 주소 075").addressDetail("상세주소 075").description("강아지가 짖습니다.").postcode("00075").price(BigDecimal.valueOf(42000)).totalPrice(BigDecimal.valueOf(44500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member76").get()).orderNo("2024-03-14__0076").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member76").phone(1012345753L).address("대한민국 테스트 주소 076").addressDetail("상세주소 076").description("애기가 자고 있습니다.").postcode("00076").price(BigDecimal.valueOf(147000)).totalPrice(BigDecimal.valueOf(149500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member77").get()).orderNo("2024-03-14__0077").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member77").phone(1012345754L).address("대한민국 테스트 주소 077").addressDetail("상세주소 077").description("벨 누르지말아주세요").postcode("00077").price(BigDecimal.valueOf(183000)).totalPrice(BigDecimal.valueOf(185500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member78").get()).orderNo("2024-03-14__0078").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member78").phone(1012345755L).address("대한민국 테스트 주소 078").addressDetail("상세주소 078").description("벨 누르면 환불합니다.").postcode("00078").price(BigDecimal.valueOf(192000)).totalPrice(BigDecimal.valueOf(194500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member79").get()).orderNo("2024-03-14__0079").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member79").phone(1012345756L).address("대한민국 테스트 주소 079").addressDetail("상세주소 079").description("강아지가 물어요").postcode("00079").price(BigDecimal.valueOf(420000)).totalPrice(BigDecimal.valueOf(422500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member80").get()).orderNo("2024-03-14__0080").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member80").phone(1012345757L).address("대한민국 테스트 주소 080").addressDetail("상세주소 080").description("빵상").postcode("00080").price(BigDecimal.valueOf(540000)).totalPrice(BigDecimal.valueOf(542500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member81").get()).orderNo("2024-03-14__0081").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member81").phone(1012345758L).address("대한민국 테스트 주소 081").addressDetail("상세주소 081").description("부재시 문앞에 놓아주세요.").postcode("00081").price(BigDecimal.valueOf(318000)).totalPrice(BigDecimal.valueOf(320500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member82").get()).orderNo("2024-03-14__0082").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member82").phone(1012345759L).address("대한민국 테스트 주소 082").addressDetail("상세주소 082").description("부재시 경비실에 맡겨주세요.").postcode("00082").price(BigDecimal.valueOf(300000)).totalPrice(BigDecimal.valueOf(302500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member83").get()).orderNo("2024-03-14__0083").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member83").phone(1012345760L).address("대한민국 테스트 주소 083").addressDetail("상세주소 083").description("부재시 옆집 주세요.").postcode("00083").price(BigDecimal.valueOf(360000)).totalPrice(BigDecimal.valueOf(362500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member84").get()).orderNo("2024-03-14__0084").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member84").phone(1012345761L).address("대한민국 테스트 주소 084").addressDetail("상세주소 084").description("부재시 전화 주세요.").postcode("00084").price(BigDecimal.valueOf(126000)).totalPrice(BigDecimal.valueOf(128500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member85").get()).orderNo("2024-03-14__0085").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member85").phone(1012345762L).address("대한민국 테스트 주소 085").addressDetail("상세주소 085").description("강아지가 짖습니다.").postcode("00085").price(BigDecimal.valueOf(204000)).totalPrice(BigDecimal.valueOf(206500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member86").get()).orderNo("2024-03-14__0086").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member86").phone(1012345763L).address("대한민국 테스트 주소 086").addressDetail("상세주소 086").description("애기가 자고 있습니다.").postcode("00086").price(BigDecimal.valueOf(249000)).totalPrice(BigDecimal.valueOf(251500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member87").get()).orderNo("2024-03-14__0087").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member87").phone(1012345764L).address("대한민국 테스트 주소 087").addressDetail("상세주소 087").description("벨 누르지말아주세요").postcode("00087").price(BigDecimal.valueOf(171600)).totalPrice(BigDecimal.valueOf(174100)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member88").get()).orderNo("2024-03-14__0088").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member88").phone(1012345765L).address("대한민국 테스트 주소 088").addressDetail("상세주소 088").description("벨 누르면 환불합니다.").postcode("00088").price(BigDecimal.valueOf(342000)).totalPrice(BigDecimal.valueOf(344500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member89").get()).orderNo("2024-03-14__0089").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member89").phone(1012345766L).address("대한민국 테스트 주소 089").addressDetail("상세주소 089").description("강아지가 물어요").postcode("00089").price(BigDecimal.valueOf(618000)).totalPrice(BigDecimal.valueOf(620500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member90").get()).orderNo("2024-03-14__0090").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member90").phone(1012345767L).address("대한민국 테스트 주소 090").addressDetail("상세주소 090").description("빵상").postcode("00090").price(BigDecimal.valueOf(240000)).totalPrice(BigDecimal.valueOf(242500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member91").get()).orderNo("2024-03-14__0091").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member91").phone(1012345768L).address("대한민국 테스트 주소 091").addressDetail("상세주소 091").description("부재시 문앞에 놓아주세요.").postcode("00091").price(BigDecimal.valueOf(348000)).totalPrice(BigDecimal.valueOf(350500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member92").get()).orderNo("2024-03-14__0092").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member92").phone(1012345769L).address("대한민국 테스트 주소 092").addressDetail("상세주소 092").description("부재시 경비실에 맡겨주세요.").postcode("00092").price(BigDecimal.valueOf(288000)).totalPrice(BigDecimal.valueOf(290500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member93").get()).orderNo("2024-03-14__0093").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member93").phone(1012345770L).address("대한민국 테스트 주소 093").addressDetail("상세주소 093").description("부재시 옆집 주세요.").postcode("00093").price(BigDecimal.valueOf(204000)).totalPrice(BigDecimal.valueOf(206500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member94").get()).orderNo("2024-03-14__0094").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member94").phone(1012345771L).address("대한민국 테스트 주소 094").addressDetail("상세주소 094").description("부재시 전화 주세요.").postcode("00094").price(BigDecimal.valueOf(63000)).totalPrice(BigDecimal.valueOf(65500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member95").get()).orderNo("2024-03-14__0095").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member95").phone(1012345772L).address("대한민국 테스트 주소 095").addressDetail("상세주소 095").description("강아지가 짖습니다.").postcode("00095").price(BigDecimal.valueOf(96000)).totalPrice(BigDecimal.valueOf(98500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member96").get()).orderNo("2024-03-14__0096").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member96").phone(1012345773L).address("대한민국 테스트 주소 096").addressDetail("상세주소 096").description("애기가 자고 있습니다.").postcode("00096").price(BigDecimal.valueOf(204000)).totalPrice(BigDecimal.valueOf(206500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member97").get()).orderNo("2024-03-14__0097").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member97").phone(1012345774L).address("대한민국 테스트 주소 097").addressDetail("상세주소 097").description("벨 누르지말아주세요").postcode("00097").price(BigDecimal.valueOf(198000)).totalPrice(BigDecimal.valueOf(200500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member98").get()).orderNo("2024-03-14__0098").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member98").phone(1012345775L).address("대한민국 테스트 주소 098").addressDetail("상세주소 098").description("벨 누르면 환불합니다.").postcode("00098").price(BigDecimal.valueOf(306000)).totalPrice(BigDecimal.valueOf(308500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member99").get()).orderNo("2024-03-14__0099").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member99").phone(1012345776L).address("대한민국 테스트 주소 099").addressDetail("상세주소 099").description("강아지가 물어요").postcode("00099").price(BigDecimal.valueOf(96000)).totalPrice(BigDecimal.valueOf(98500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member100").get()).orderNo("2024-03-14__0100").orderStatus(OrderStatus.DELIVERED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member100").phone(1012345777L).address("대한민국 테스트 주소 100").addressDetail("상세주소 100").description("빵상").postcode("00100").price(BigDecimal.valueOf(216000)).totalPrice(BigDecimal.valueOf(218500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member1").get()).orderNo("2024-03-14__0101").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member1").phone(1012345678L).address("대한민국 테스트 주소 001").addressDetail("상세주소 001").description("부재시 문앞에 놓아주세요.").postcode("00001").price(BigDecimal.valueOf(99000)).totalPrice(BigDecimal.valueOf(101500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member2").get()).orderNo("2024-03-14__0102").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member2").phone(1012345679L).address("대한민국 테스트 주소 002").addressDetail("상세주소 002").description("부재시 경비실에 맡겨주세요.").postcode("00002").price(BigDecimal.valueOf(43200)).totalPrice(BigDecimal.valueOf(45700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member3").get()).orderNo("2024-03-14__0103").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member3").phone(1012345680L).address("대한민국 테스트 주소 003").addressDetail("상세주소 003").description("부재시 옆집 주세요.").postcode("00003").price(BigDecimal.valueOf(105000)).totalPrice(BigDecimal.valueOf(107500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member4").get()).orderNo("2024-03-14__0104").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member4").phone(1012345681L).address("대한민국 테스트 주소 004").addressDetail("상세주소 004").description("부재시 전화 주세요.").postcode("00004").price(BigDecimal.valueOf(102000)).totalPrice(BigDecimal.valueOf(104500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member5").get()).orderNo("2024-03-14__0105").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member5").phone(1012345682L).address("대한민국 테스트 주소 005").addressDetail("상세주소 005").description("강아지가 짖습니다.").postcode("00005").price(BigDecimal.valueOf(390000)).totalPrice(BigDecimal.valueOf(392500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member6").get()).orderNo("2024-03-14__0106").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member6").phone(1012345683L).address("대한민국 테스트 주소 006").addressDetail("상세주소 006").description("애기가 자고 있습니다.").postcode("00006").price(BigDecimal.valueOf(150000)).totalPrice(BigDecimal.valueOf(152500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member7").get()).orderNo("2024-03-14__0107").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member7").phone(1012345684L).address("대한민국 테스트 주소 007").addressDetail("상세주소 007").description("벨 누르지말아주세요").postcode("00007").price(BigDecimal.valueOf(162000)).totalPrice(BigDecimal.valueOf(164500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member8").get()).orderNo("2024-03-14__0108").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member8").phone(1012345685L).address("대한민국 테스트 주소 008").addressDetail("상세주소 008").description("벨 누르면 환불합니다.").postcode("00008").price(BigDecimal.valueOf(120000)).totalPrice(BigDecimal.valueOf(122500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member9").get()).orderNo("2024-03-14__0109").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member9").phone(1012345686L).address("대한민국 테스트 주소 009").addressDetail("상세주소 009").description("강아지가 물어요").postcode("00009").price(BigDecimal.valueOf(114000)).totalPrice(BigDecimal.valueOf(116500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member10").get()).orderNo("2024-03-14__0110").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member10").phone(1012345687L).address("대한민국 테스트 주소 010").addressDetail("상세주소 010").description("빵상").postcode("00010").price(BigDecimal.valueOf(204000)).totalPrice(BigDecimal.valueOf(206500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member11").get()).orderNo("2024-03-14__0111").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member11").phone(1012345688L).address("대한민국 테스트 주소 011").addressDetail("상세주소 011").description("부재시 문앞에 놓아주세요.").postcode("00011").price(BigDecimal.valueOf(72000)).totalPrice(BigDecimal.valueOf(74500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member12").get()).orderNo("2024-03-14__0112").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member12").phone(1012345689L).address("대한민국 테스트 주소 012").addressDetail("상세주소 012").description("부재시 경비실에 맡겨주세요.").postcode("00012").price(BigDecimal.valueOf(204000)).totalPrice(BigDecimal.valueOf(206500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member13").get()).orderNo("2024-03-14__0113").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member13").phone(1012345690L).address("대한민국 테스트 주소 013").addressDetail("상세주소 013").description("부재시 옆집 주세요.").postcode("00013").price(BigDecimal.valueOf(75000)).totalPrice(BigDecimal.valueOf(77500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member14").get()).orderNo("2024-03-14__0114").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member14").phone(1012345691L).address("대한민국 테스트 주소 014").addressDetail("상세주소 014").description("부재시 전화 주세요.").postcode("00014").price(BigDecimal.valueOf(261000)).totalPrice(BigDecimal.valueOf(263500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member15").get()).orderNo("2024-03-14__0115").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member15").phone(1012345692L).address("대한민국 테스트 주소 015").addressDetail("상세주소 015").description("강아지가 짖습니다.").postcode("00015").price(BigDecimal.valueOf(318000)).totalPrice(BigDecimal.valueOf(320500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member16").get()).orderNo("2024-03-14__0116").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member16").phone(1012345693L).address("대한민국 테스트 주소 016").addressDetail("상세주소 016").description("애기가 자고 있습니다.").postcode("00016").price(BigDecimal.valueOf(29700)).totalPrice(BigDecimal.valueOf(32200)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member17").get()).orderNo("2024-03-14__0117").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member17").phone(1012345694L).address("대한민국 테스트 주소 017").addressDetail("상세주소 017").description("벨 누르지말아주세요").postcode("00017").price(BigDecimal.valueOf(174000)).totalPrice(BigDecimal.valueOf(176500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member18").get()).orderNo("2024-03-14__0118").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member18").phone(1012345695L).address("대한민국 테스트 주소 018").addressDetail("상세주소 018").description("벨 누르면 환불합니다.").postcode("00018").price(BigDecimal.valueOf(138000)).totalPrice(BigDecimal.valueOf(140500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member19").get()).orderNo("2024-03-14__0119").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member19").phone(1012345696L).address("대한민국 테스트 주소 019").addressDetail("상세주소 019").description("강아지가 물어요").postcode("00019").price(BigDecimal.valueOf(570000)).totalPrice(BigDecimal.valueOf(572500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member20").get()).orderNo("2024-03-14__0120").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member20").phone(1012345697L).address("대한민국 테스트 주소 020").addressDetail("상세주소 020").description("빵상").postcode("00020").price(BigDecimal.valueOf(624000)).totalPrice(BigDecimal.valueOf(626500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member21").get()).orderNo("2024-03-14__0121").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member21").phone(1012345698L).address("대한민국 테스트 주소 021").addressDetail("상세주소 021").description("부재시 문앞에 놓아주세요.").postcode("00021").price(BigDecimal.valueOf(300000)).totalPrice(BigDecimal.valueOf(302500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member22").get()).orderNo("2024-03-14__0122").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member22").phone(1012345699L).address("대한민국 테스트 주소 022").addressDetail("상세주소 022").description("부재시 경비실에 맡겨주세요.").postcode("00022").price(BigDecimal.valueOf(372000)).totalPrice(BigDecimal.valueOf(374500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member23").get()).orderNo("2024-03-14__0123").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member23").phone(1012345700L).address("대한민국 테스트 주소 023").addressDetail("상세주소 023").description("부재시 옆집 주세요.").postcode("00023").price(BigDecimal.valueOf(204000)).totalPrice(BigDecimal.valueOf(206500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member24").get()).orderNo("2024-03-14__0124").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member24").phone(1012345701L).address("대한민국 테스트 주소 024").addressDetail("상세주소 024").description("부재시 전화 주세요.").postcode("00024").price(BigDecimal.valueOf(150000)).totalPrice(BigDecimal.valueOf(152500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member25").get()).orderNo("2024-03-14__0125").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member25").phone(1012345702L).address("대한민국 테스트 주소 025").addressDetail("상세주소 025").description("강아지가 짖습니다.").postcode("00025").price(BigDecimal.valueOf(192000)).totalPrice(BigDecimal.valueOf(194500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member26").get()).orderNo("2024-03-14__0126").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member26").phone(1012345703L).address("대한민국 테스트 주소 026").addressDetail("상세주소 026").description("애기가 자고 있습니다.").postcode("00026").price(BigDecimal.valueOf(678000)).totalPrice(BigDecimal.valueOf(680500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member27").get()).orderNo("2024-03-14__0127").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member27").phone(1012345704L).address("대한민국 테스트 주소 027").addressDetail("상세주소 027").description("벨 누르지말아주세요").postcode("00027").price(BigDecimal.valueOf(732000)).totalPrice(BigDecimal.valueOf(734500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member28").get()).orderNo("2024-03-14__0128").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member28").phone(1012345705L).address("대한민국 테스트 주소 028").addressDetail("상세주소 028").description("벨 누르면 환불합니다.").postcode("00028").price(BigDecimal.valueOf(66000)).totalPrice(BigDecimal.valueOf(68500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member29").get()).orderNo("2024-03-14__0129").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member29").phone(1012345706L).address("대한민국 테스트 주소 029").addressDetail("상세주소 029").description("강아지가 물어요").postcode("00029").price(BigDecimal.valueOf(15000)).totalPrice(BigDecimal.valueOf(17500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member30").get()).orderNo("2024-03-14__0130").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member30").phone(1012345707L).address("대한민국 테스트 주소 030").addressDetail("상세주소 030").description("빵상").postcode("00030").price(BigDecimal.valueOf(216000)).totalPrice(BigDecimal.valueOf(218500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member31").get()).orderNo("2024-03-14__0131").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member31").phone(1012345708L).address("대한민국 테스트 주소 031").addressDetail("상세주소 031").description("부재시 문앞에 놓아주세요.").postcode("00031").price(BigDecimal.valueOf(492000)).totalPrice(BigDecimal.valueOf(494500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member32").get()).orderNo("2024-03-14__0132").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member32").phone(1012345709L).address("대한민국 테스트 주소 032").addressDetail("상세주소 032").description("부재시 경비실에 맡겨주세요.").postcode("00032").price(BigDecimal.valueOf(372000)).totalPrice(BigDecimal.valueOf(374500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member33").get()).orderNo("2024-03-14__0133").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member33").phone(1012345710L).address("대한민국 테스트 주소 033").addressDetail("상세주소 033").description("부재시 옆집 주세요.").postcode("00033").price(BigDecimal.valueOf(1020000)).totalPrice(BigDecimal.valueOf(1022500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member34").get()).orderNo("2024-03-14__0134").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member34").phone(1012345711L).address("대한민국 테스트 주소 034").addressDetail("상세주소 034").description("부재시 전화 주세요.").postcode("00034").price(BigDecimal.valueOf(324000)).totalPrice(BigDecimal.valueOf(326500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member35").get()).orderNo("2024-03-14__0135").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member35").phone(1012345712L).address("대한민국 테스트 주소 035").addressDetail("상세주소 035").description("강아지가 짖습니다.").postcode("00035").price(BigDecimal.valueOf(390000)).totalPrice(BigDecimal.valueOf(392500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member36").get()).orderNo("2024-03-14__0136").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member36").phone(1012345713L).address("대한민국 테스트 주소 036").addressDetail("상세주소 036").description("애기가 자고 있습니다.").postcode("00036").price(BigDecimal.valueOf(774000)).totalPrice(BigDecimal.valueOf(776500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member37").get()).orderNo("2024-03-14__0137").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member37").phone(1012345714L).address("대한민국 테스트 주소 037").addressDetail("상세주소 037").description("벨 누르지말아주세요").postcode("00037").price(BigDecimal.valueOf(732000)).totalPrice(BigDecimal.valueOf(734500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member38").get()).orderNo("2024-03-14__0138").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member38").phone(1012345715L).address("대한민국 테스트 주소 038").addressDetail("상세주소 038").description("벨 누르면 환불합니다.").postcode("00038").price(BigDecimal.valueOf(1116000)).totalPrice(BigDecimal.valueOf(1118500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member39").get()).orderNo("2024-03-14__0139").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member39").phone(1012345716L).address("대한민국 테스트 주소 039").addressDetail("상세주소 039").description("강아지가 물어요").postcode("00039").price(BigDecimal.valueOf(270000)).totalPrice(BigDecimal.valueOf(272500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member40").get()).orderNo("2024-03-14__0140").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member40").phone(1012345717L).address("대한민국 테스트 주소 040").addressDetail("상세주소 040").description("빵상").postcode("00040").price(BigDecimal.valueOf(145200)).totalPrice(BigDecimal.valueOf(147700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member41").get()).orderNo("2024-03-14__0141").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member41").phone(1012345718L).address("대한민국 테스트 주소 041").addressDetail("상세주소 041").description("부재시 문앞에 놓아주세요.").postcode("00041").price(BigDecimal.valueOf(258000)).totalPrice(BigDecimal.valueOf(260500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member42").get()).orderNo("2024-03-14__0142").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member42").phone(1012345719L).address("대한민국 테스트 주소 042").addressDetail("상세주소 042").description("부재시 경비실에 맡겨주세요.").postcode("00042").price(BigDecimal.valueOf(282000)).totalPrice(BigDecimal.valueOf(284500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member43").get()).orderNo("2024-03-14__0143").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member43").phone(1012345720L).address("대한민국 테스트 주소 043").addressDetail("상세주소 043").description("부재시 옆집 주세요.").postcode("00043").price(BigDecimal.valueOf(153000)).totalPrice(BigDecimal.valueOf(155500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member44").get()).orderNo("2024-03-14__0144").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member44").phone(1012345721L).address("대한민국 테스트 주소 044").addressDetail("상세주소 044").description("부재시 전화 주세요.").postcode("00044").price(BigDecimal.valueOf(306000)).totalPrice(BigDecimal.valueOf(308500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member45").get()).orderNo("2024-03-14__0145").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member45").phone(1012345722L).address("대한민국 테스트 주소 045").addressDetail("상세주소 045").description("강아지가 짖습니다.").postcode("00045").price(BigDecimal.valueOf(228000)).totalPrice(BigDecimal.valueOf(230500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member46").get()).orderNo("2024-03-14__0146").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member46").phone(1012345723L).address("대한민국 테스트 주소 046").addressDetail("상세주소 046").description("애기가 자고 있습니다.").postcode("00046").price(BigDecimal.valueOf(2196000)).totalPrice(BigDecimal.valueOf(2198500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member47").get()).orderNo("2024-03-14__0147").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member47").phone(1012345724L).address("대한민국 테스트 주소 047").addressDetail("상세주소 047").description("벨 누르지말아주세요").postcode("00047").price(BigDecimal.valueOf(2370000)).totalPrice(BigDecimal.valueOf(2372500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member48").get()).orderNo("2024-03-14__0148").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member48").phone(1012345725L).address("대한민국 테스트 주소 048").addressDetail("상세주소 048").description("벨 누르면 환불합니다.").postcode("00048").price(BigDecimal.valueOf(195000)).totalPrice(BigDecimal.valueOf(197500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member49").get()).orderNo("2024-03-14__0149").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member49").phone(1012345726L).address("대한민국 테스트 주소 049").addressDetail("상세주소 049").description("강아지가 물어요").postcode("00049").price(BigDecimal.valueOf(372000)).totalPrice(BigDecimal.valueOf(374500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member50").get()).orderNo("2024-03-14__0150").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member50").phone(1012345727L).address("대한민국 테스트 주소 050").addressDetail("상세주소 050").description("빵상").postcode("00050").price(BigDecimal.valueOf(936000)).totalPrice(BigDecimal.valueOf(938500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member51").get()).orderNo("2024-03-14__0151").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member51").phone(1012345728L).address("대한민국 테스트 주소 051").addressDetail("상세주소 051").description("부재시 문앞에 놓아주세요.").postcode("00051").price(BigDecimal.valueOf(252000)).totalPrice(BigDecimal.valueOf(254500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member52").get()).orderNo("2024-03-14__0152").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member52").phone(1012345729L).address("대한민국 테스트 주소 052").addressDetail("상세주소 052").description("부재시 경비실에 맡겨주세요.").postcode("00052").price(BigDecimal.valueOf(129000)).totalPrice(BigDecimal.valueOf(131500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member53").get()).orderNo("2024-03-14__0153").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member53").phone(1012345730L).address("대한민국 테스트 주소 053").addressDetail("상세주소 053").description("부재시 옆집 주세요.").postcode("00053").price(BigDecimal.valueOf(330000)).totalPrice(BigDecimal.valueOf(332500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member54").get()).orderNo("2024-03-14__0154").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member54").phone(1012345731L).address("대한민국 테스트 주소 054").addressDetail("상세주소 054").description("부재시 전화 주세요.").postcode("00054").price(BigDecimal.valueOf(198000)).totalPrice(BigDecimal.valueOf(200500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member55").get()).orderNo("2024-03-14__0155").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member55").phone(1012345732L).address("대한민국 테스트 주소 055").addressDetail("상세주소 055").description("강아지가 짖습니다.").postcode("00055").price(BigDecimal.valueOf(804000)).totalPrice(BigDecimal.valueOf(806500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member56").get()).orderNo("2024-03-14__0156").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member56").phone(1012345733L).address("대한민국 테스트 주소 056").addressDetail("상세주소 056").description("애기가 자고 있습니다.").postcode("00056").price(BigDecimal.valueOf(330000)).totalPrice(BigDecimal.valueOf(332500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member57").get()).orderNo("2024-03-14__0157").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member57").phone(1012345734L).address("대한민국 테스트 주소 057").addressDetail("상세주소 057").description("벨 누르지말아주세요").postcode("00057").price(BigDecimal.valueOf(276000)).totalPrice(BigDecimal.valueOf(278500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member58").get()).orderNo("2024-03-14__0158").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member58").phone(1012345735L).address("대한민국 테스트 주소 058").addressDetail("상세주소 058").description("벨 누르면 환불합니다.").postcode("00058").price(BigDecimal.valueOf(549000)).totalPrice(BigDecimal.valueOf(551500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member59").get()).orderNo("2024-03-14__0159").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member59").phone(1012345736L).address("대한민국 테스트 주소 059").addressDetail("상세주소 059").description("강아지가 물어요").postcode("00059").price(BigDecimal.valueOf(480000)).totalPrice(BigDecimal.valueOf(482500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member60").get()).orderNo("2024-03-14__0160").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member60").phone(1012345737L).address("대한민국 테스트 주소 060").addressDetail("상세주소 060").description("빵상").postcode("00060").price(BigDecimal.valueOf(366000)).totalPrice(BigDecimal.valueOf(368500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member61").get()).orderNo("2024-03-14__0161").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member61").phone(1012345738L).address("대한민국 테스트 주소 061").addressDetail("상세주소 061").description("부재시 문앞에 놓아주세요.").postcode("00061").price(BigDecimal.valueOf(330000)).totalPrice(BigDecimal.valueOf(332500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member62").get()).orderNo("2024-03-14__0162").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member62").phone(1012345739L).address("대한민국 테스트 주소 062").addressDetail("상세주소 062").description("부재시 경비실에 맡겨주세요.").postcode("00062").price(BigDecimal.valueOf(318000)).totalPrice(BigDecimal.valueOf(320500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member63").get()).orderNo("2024-03-14__0163").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member63").phone(1012345740L).address("대한민국 테스트 주소 063").addressDetail("상세주소 063").description("부재시 옆집 주세요.").postcode("00063").price(BigDecimal.valueOf(222000)).totalPrice(BigDecimal.valueOf(224500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member64").get()).orderNo("2024-03-14__0164").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member64").phone(1012345741L).address("대한민국 테스트 주소 064").addressDetail("상세주소 064").description("부재시 전화 주세요.").postcode("00064").price(BigDecimal.valueOf(204000)).totalPrice(BigDecimal.valueOf(206500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member65").get()).orderNo("2024-03-14__0165").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member65").phone(1012345742L).address("대한민국 테스트 주소 065").addressDetail("상세주소 065").description("강아지가 짖습니다.").postcode("00065").price(BigDecimal.valueOf(246000)).totalPrice(BigDecimal.valueOf(248500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member66").get()).orderNo("2024-03-14__0166").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member66").phone(1012345743L).address("대한민국 테스트 주소 066").addressDetail("상세주소 066").description("애기가 자고 있습니다.").postcode("00066").price(BigDecimal.valueOf(299400)).totalPrice(BigDecimal.valueOf(301900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member67").get()).orderNo("2024-03-14__0167").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member67").phone(1012345744L).address("대한민국 테스트 주소 067").addressDetail("상세주소 067").description("벨 누르지말아주세요").postcode("00067").price(BigDecimal.valueOf(354000)).totalPrice(BigDecimal.valueOf(356500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member68").get()).orderNo("2024-03-14__0168").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member68").phone(1012345745L).address("대한민국 테스트 주소 068").addressDetail("상세주소 068").description("벨 누르면 환불합니다.").postcode("00068").price(BigDecimal.valueOf(450000)).totalPrice(BigDecimal.valueOf(452500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member69").get()).orderNo("2024-03-14__0169").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member69").phone(1012345746L).address("대한민국 테스트 주소 069").addressDetail("상세주소 069").description("강아지가 물어요").postcode("00069").price(BigDecimal.valueOf(420000)).totalPrice(BigDecimal.valueOf(422500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member70").get()).orderNo("2024-03-14__0170").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member70").phone(1012345747L).address("대한민국 테스트 주소 070").addressDetail("상세주소 070").description("빵상").postcode("00070").price(BigDecimal.valueOf(450000)).totalPrice(BigDecimal.valueOf(452500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member71").get()).orderNo("2024-03-14__0171").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member71").phone(1012345748L).address("대한민국 테스트 주소 071").addressDetail("상세주소 071").description("부재시 문앞에 놓아주세요.").postcode("00071").price(BigDecimal.valueOf(133200)).totalPrice(BigDecimal.valueOf(135700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member72").get()).orderNo("2024-03-14__0172").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member72").phone(1012345749L).address("대한민국 테스트 주소 072").addressDetail("상세주소 072").description("부재시 경비실에 맡겨주세요.").postcode("00072").price(BigDecimal.valueOf(132000)).totalPrice(BigDecimal.valueOf(134500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member73").get()).orderNo("2024-03-14__0173").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member73").phone(1012345750L).address("대한민국 테스트 주소 073").addressDetail("상세주소 073").description("부재시 옆집 주세요.").postcode("00073").price(BigDecimal.valueOf(168000)).totalPrice(BigDecimal.valueOf(170500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member74").get()).orderNo("2024-03-14__0174").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member74").phone(1012345751L).address("대한민국 테스트 주소 074").addressDetail("상세주소 074").description("부재시 전화 주세요.").postcode("00074").price(BigDecimal.valueOf(246000)).totalPrice(BigDecimal.valueOf(248500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member75").get()).orderNo("2024-03-14__0175").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member75").phone(1012345752L).address("대한민국 테스트 주소 075").addressDetail("상세주소 075").description("강아지가 짖습니다.").postcode("00075").price(BigDecimal.valueOf(24600)).totalPrice(BigDecimal.valueOf(27100)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member76").get()).orderNo("2024-03-14__0176").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member76").phone(1012345753L).address("대한민국 테스트 주소 076").addressDetail("상세주소 076").description("애기가 자고 있습니다.").postcode("00076").price(BigDecimal.valueOf(39000)).totalPrice(BigDecimal.valueOf(41500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member77").get()).orderNo("2024-03-14__0177").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member77").phone(1012345754L).address("대한민국 테스트 주소 077").addressDetail("상세주소 077").description("벨 누르지말아주세요").postcode("00077").price(BigDecimal.valueOf(306000)).totalPrice(BigDecimal.valueOf(308500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member78").get()).orderNo("2024-03-14__0178").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member78").phone(1012345755L).address("대한민국 테스트 주소 078").addressDetail("상세주소 078").description("벨 누르면 환불합니다.").postcode("00078").price(BigDecimal.valueOf(192000)).totalPrice(BigDecimal.valueOf(194500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member79").get()).orderNo("2024-03-14__0179").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member79").phone(1012345756L).address("대한민국 테스트 주소 079").addressDetail("상세주소 079").description("강아지가 물어요").postcode("00079").price(BigDecimal.valueOf(360000)).totalPrice(BigDecimal.valueOf(362500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member80").get()).orderNo("2024-03-14__0180").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member80").phone(1012345757L).address("대한민국 테스트 주소 080").addressDetail("상세주소 080").description("빵상").postcode("00080").price(BigDecimal.valueOf(498000)).totalPrice(BigDecimal.valueOf(500500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member81").get()).orderNo("2024-03-14__0181").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member81").phone(1012345758L).address("대한민국 테스트 주소 081").addressDetail("상세주소 081").description("부재시 문앞에 놓아주세요.").postcode("00081").price(BigDecimal.valueOf(276000)).totalPrice(BigDecimal.valueOf(278500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member82").get()).orderNo("2024-03-14__0182").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member82").phone(1012345759L).address("대한민국 테스트 주소 082").addressDetail("상세주소 082").description("부재시 경비실에 맡겨주세요.").postcode("00082").price(BigDecimal.valueOf(148200)).totalPrice(BigDecimal.valueOf(150700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member83").get()).orderNo("2024-03-14__0183").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member83").phone(1012345760L).address("대한민국 테스트 주소 083").addressDetail("상세주소 083").description("부재시 옆집 주세요.").postcode("00083").price(BigDecimal.valueOf(318000)).totalPrice(BigDecimal.valueOf(320500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member84").get()).orderNo("2024-03-14__0184").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member84").phone(1012345761L).address("대한민국 테스트 주소 084").addressDetail("상세주소 084").description("부재시 전화 주세요.").postcode("00084").price(BigDecimal.valueOf(60000)).totalPrice(BigDecimal.valueOf(62500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member85").get()).orderNo("2024-03-14__0185").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member85").phone(1012345762L).address("대한민국 테스트 주소 085").addressDetail("상세주소 085").description("강아지가 짖습니다.").postcode("00085").price(BigDecimal.valueOf(66000)).totalPrice(BigDecimal.valueOf(68500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member86").get()).orderNo("2024-03-14__0186").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member86").phone(1012345763L).address("대한민국 테스트 주소 086").addressDetail("상세주소 086").description("애기가 자고 있습니다.").postcode("00086").price(BigDecimal.valueOf(75000)).totalPrice(BigDecimal.valueOf(77500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member87").get()).orderNo("2024-03-14__0187").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member87").phone(1012345764L).address("대한민국 테스트 주소 087").addressDetail("상세주소 087").description("벨 누르지말아주세요").postcode("00087").price(BigDecimal.valueOf(141600)).totalPrice(BigDecimal.valueOf(144100)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member88").get()).orderNo("2024-03-14__0188").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member88").phone(1012345765L).address("대한민국 테스트 주소 088").addressDetail("상세주소 088").description("벨 누르면 환불합니다.").postcode("00088").price(BigDecimal.valueOf(132000)).totalPrice(BigDecimal.valueOf(134500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member89").get()).orderNo("2024-03-14__0189").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member89").phone(1012345766L).address("대한민국 테스트 주소 089").addressDetail("상세주소 089").description("강아지가 물어요").postcode("00089").price(BigDecimal.valueOf(318000)).totalPrice(BigDecimal.valueOf(320500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member90").get()).orderNo("2024-03-14__0190").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member90").phone(1012345767L).address("대한민국 테스트 주소 090").addressDetail("상세주소 090").description("빵상").postcode("00090").price(BigDecimal.valueOf(258000)).totalPrice(BigDecimal.valueOf(260500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member91").get()).orderNo("2024-03-14__0191").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member91").phone(1012345768L).address("대한민국 테스트 주소 091").addressDetail("상세주소 091").description("부재시 문앞에 놓아주세요.").postcode("00091").price(BigDecimal.valueOf(210000)).totalPrice(BigDecimal.valueOf(212500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member92").get()).orderNo("2024-03-14__0192").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member92").phone(1012345769L).address("대한민국 테스트 주소 092").addressDetail("상세주소 092").description("부재시 경비실에 맡겨주세요.").postcode("00092").price(BigDecimal.valueOf(126000)).totalPrice(BigDecimal.valueOf(128500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member93").get()).orderNo("2024-03-14__0193").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member93").phone(1012345770L).address("대한민국 테스트 주소 093").addressDetail("상세주소 093").description("부재시 옆집 주세요.").postcode("00093").price(BigDecimal.valueOf(33600)).totalPrice(BigDecimal.valueOf(36100)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member94").get()).orderNo("2024-03-14__0194").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member94").phone(1012345771L).address("대한민국 테스트 주소 094").addressDetail("상세주소 094").description("부재시 전화 주세요.").postcode("00094").price(BigDecimal.valueOf(66000)).totalPrice(BigDecimal.valueOf(68500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member95").get()).orderNo("2024-03-14__0195").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member95").phone(1012345772L).address("대한민국 테스트 주소 095").addressDetail("상세주소 095").description("강아지가 짖습니다.").postcode("00095").price(BigDecimal.valueOf(66000)).totalPrice(BigDecimal.valueOf(68500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member96").get()).orderNo("2024-03-14__0196").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member96").phone(1012345773L).address("대한민국 테스트 주소 096").addressDetail("상세주소 096").description("애기가 자고 있습니다.").postcode("00096").price(BigDecimal.valueOf(312000)).totalPrice(BigDecimal.valueOf(314500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member97").get()).orderNo("2024-03-14__0197").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member97").phone(1012345774L).address("대한민국 테스트 주소 097").addressDetail("상세주소 097").description("벨 누르지말아주세요").postcode("00097").price(BigDecimal.valueOf(186000)).totalPrice(BigDecimal.valueOf(188500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member98").get()).orderNo("2024-03-14__0198").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member98").phone(1012345775L).address("대한민국 테스트 주소 098").addressDetail("상세주소 098").description("벨 누르면 환불합니다.").postcode("00098").price(BigDecimal.valueOf(348000)).totalPrice(BigDecimal.valueOf(350500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member99").get()).orderNo("2024-03-14__0199").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member99").phone(1012345776L).address("대한민국 테스트 주소 099").addressDetail("상세주소 099").description("강아지가 물어요").postcode("00099").price(BigDecimal.valueOf(162000)).totalPrice(BigDecimal.valueOf(164500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member100").get()).orderNo("2024-03-14__0200").orderStatus(OrderStatus.ORDER_RECEIVED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member100").phone(1012345777L).address("대한민국 테스트 주소 100").addressDetail("상세주소 100").description("빵상").postcode("00100").price(BigDecimal.valueOf(636000)).totalPrice(BigDecimal.valueOf(638500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member1").get()).orderNo("2024-03-14__0201").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member1").phone(1012345678L).address("대한민국 테스트 주소 001").addressDetail("상세주소 001").description("부재시 문앞에 놓아주세요.").postcode("00001").price(BigDecimal.valueOf(216000)).totalPrice(BigDecimal.valueOf(218500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member2").get()).orderNo("2024-03-14__0202").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member2").phone(1012345679L).address("대한민국 테스트 주소 002").addressDetail("상세주소 002").description("부재시 경비실에 맡겨주세요.").postcode("00002").price(BigDecimal.valueOf(144000)).totalPrice(BigDecimal.valueOf(146500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member3").get()).orderNo("2024-03-14__0203").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member3").phone(1012345680L).address("대한민국 테스트 주소 003").addressDetail("상세주소 003").description("부재시 옆집 주세요.").postcode("00003").price(BigDecimal.valueOf(135000)).totalPrice(BigDecimal.valueOf(137500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member4").get()).orderNo("2024-03-14__0204").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member4").phone(1012345681L).address("대한민국 테스트 주소 004").addressDetail("상세주소 004").description("부재시 전화 주세요.").postcode("00004").price(BigDecimal.valueOf(174000)).totalPrice(BigDecimal.valueOf(176500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member5").get()).orderNo("2024-03-14__0205").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member5").phone(1012345682L).address("대한민국 테스트 주소 005").addressDetail("상세주소 005").description("강아지가 짖습니다.").postcode("00005").price(BigDecimal.valueOf(111000)).totalPrice(BigDecimal.valueOf(113500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member6").get()).orderNo("2024-03-14__0206").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member6").phone(1012345683L).address("대한민국 테스트 주소 006").addressDetail("상세주소 006").description("애기가 자고 있습니다.").postcode("00006").price(BigDecimal.valueOf(111000)).totalPrice(BigDecimal.valueOf(113500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member7").get()).orderNo("2024-03-14__0207").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member7").phone(1012345684L).address("대한민국 테스트 주소 007").addressDetail("상세주소 007").description("벨 누르지말아주세요").postcode("00007").price(BigDecimal.valueOf(312000)).totalPrice(BigDecimal.valueOf(314500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member8").get()).orderNo("2024-03-14__0208").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member8").phone(1012345685L).address("대한민국 테스트 주소 008").addressDetail("상세주소 008").description("벨 누르면 환불합니다.").postcode("00008").price(BigDecimal.valueOf(404400)).totalPrice(BigDecimal.valueOf(406900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member9").get()).orderNo("2024-03-14__0209").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member9").phone(1012345686L).address("대한민국 테스트 주소 009").addressDetail("상세주소 009").description("강아지가 물어요").postcode("00009").price(BigDecimal.valueOf(300000)).totalPrice(BigDecimal.valueOf(302500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member10").get()).orderNo("2024-03-14__0210").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member10").phone(1012345687L).address("대한민국 테스트 주소 010").addressDetail("상세주소 010").description("빵상").postcode("00010").price(BigDecimal.valueOf(186000)).totalPrice(BigDecimal.valueOf(188500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member11").get()).orderNo("2024-03-14__0211").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member11").phone(1012345688L).address("대한민국 테스트 주소 011").addressDetail("상세주소 011").description("부재시 문앞에 놓아주세요.").postcode("00011").price(BigDecimal.valueOf(54000)).totalPrice(BigDecimal.valueOf(56500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member12").get()).orderNo("2024-03-14__0212").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member12").phone(1012345689L).address("대한민국 테스트 주소 012").addressDetail("상세주소 012").description("부재시 경비실에 맡겨주세요.").postcode("00012").price(BigDecimal.valueOf(222000)).totalPrice(BigDecimal.valueOf(224500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member13").get()).orderNo("2024-03-14__0213").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member13").phone(1012345690L).address("대한민국 테스트 주소 013").addressDetail("상세주소 013").description("부재시 옆집 주세요.").postcode("00013").price(BigDecimal.valueOf(63000)).totalPrice(BigDecimal.valueOf(65500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member14").get()).orderNo("2024-03-14__0214").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member14").phone(1012345691L).address("대한민국 테스트 주소 014").addressDetail("상세주소 014").description("부재시 전화 주세요.").postcode("00014").price(BigDecimal.valueOf(210000)).totalPrice(BigDecimal.valueOf(212500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member15").get()).orderNo("2024-03-14__0215").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member15").phone(1012345692L).address("대한민국 테스트 주소 015").addressDetail("상세주소 015").description("강아지가 짖습니다.").postcode("00015").price(BigDecimal.valueOf(120000)).totalPrice(BigDecimal.valueOf(122500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member16").get()).orderNo("2024-03-14__0216").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member16").phone(1012345693L).address("대한민국 테스트 주소 016").addressDetail("상세주소 016").description("애기가 자고 있습니다.").postcode("00016").price(BigDecimal.valueOf(33000)).totalPrice(BigDecimal.valueOf(35500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member17").get()).orderNo("2024-03-14__0217").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member17").phone(1012345694L).address("대한민국 테스트 주소 017").addressDetail("상세주소 017").description("벨 누르지말아주세요").postcode("00017").price(BigDecimal.valueOf(198000)).totalPrice(BigDecimal.valueOf(200500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member18").get()).orderNo("2024-03-14__0218").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member18").phone(1012345695L).address("대한민국 테스트 주소 018").addressDetail("상세주소 018").description("벨 누르면 환불합니다.").postcode("00018").price(BigDecimal.valueOf(60000)).totalPrice(BigDecimal.valueOf(62500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member19").get()).orderNo("2024-03-14__0219").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member19").phone(1012345696L).address("대한민국 테스트 주소 019").addressDetail("상세주소 019").description("강아지가 물어요").postcode("00019").price(BigDecimal.valueOf(600000)).totalPrice(BigDecimal.valueOf(602500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member20").get()).orderNo("2024-03-14__0220").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member20").phone(1012345697L).address("대한민국 테스트 주소 020").addressDetail("상세주소 020").description("빵상").postcode("00020").price(BigDecimal.valueOf(132000)).totalPrice(BigDecimal.valueOf(134500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member21").get()).orderNo("2024-03-14__0221").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member21").phone(1012345698L).address("대한민국 테스트 주소 021").addressDetail("상세주소 021").description("부재시 문앞에 놓아주세요.").postcode("00021").price(BigDecimal.valueOf(246000)).totalPrice(BigDecimal.valueOf(248500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member22").get()).orderNo("2024-03-14__0222").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member22").phone(1012345699L).address("대한민국 테스트 주소 022").addressDetail("상세주소 022").description("부재시 경비실에 맡겨주세요.").postcode("00022").price(BigDecimal.valueOf(336000)).totalPrice(BigDecimal.valueOf(338500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member23").get()).orderNo("2024-03-14__0223").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member23").phone(1012345700L).address("대한민국 테스트 주소 023").addressDetail("상세주소 023").description("부재시 옆집 주세요.").postcode("00023").price(BigDecimal.valueOf(120000)).totalPrice(BigDecimal.valueOf(122500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member24").get()).orderNo("2024-03-14__0224").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member24").phone(1012345701L).address("대한민국 테스트 주소 024").addressDetail("상세주소 024").description("부재시 전화 주세요.").postcode("00024").price(BigDecimal.valueOf(210000)).totalPrice(BigDecimal.valueOf(212500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member25").get()).orderNo("2024-03-14__0225").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member25").phone(1012345702L).address("대한민국 테스트 주소 025").addressDetail("상세주소 025").description("강아지가 짖습니다.").postcode("00025").price(BigDecimal.valueOf(115200)).totalPrice(BigDecimal.valueOf(117700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member26").get()).orderNo("2024-03-14__0226").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member26").phone(1012345703L).address("대한민국 테스트 주소 026").addressDetail("상세주소 026").description("애기가 자고 있습니다.").postcode("00026").price(BigDecimal.valueOf(348000)).totalPrice(BigDecimal.valueOf(350500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member27").get()).orderNo("2024-03-14__0227").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member27").phone(1012345704L).address("대한민국 테스트 주소 027").addressDetail("상세주소 027").description("벨 누르지말아주세요").postcode("00027").price(BigDecimal.valueOf(312000)).totalPrice(BigDecimal.valueOf(314500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member28").get()).orderNo("2024-03-14__0228").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member28").phone(1012345705L).address("대한민국 테스트 주소 028").addressDetail("상세주소 028").description("벨 누르면 환불합니다.").postcode("00028").price(BigDecimal.valueOf(90000)).totalPrice(BigDecimal.valueOf(92500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member29").get()).orderNo("2024-03-14__0229").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member29").phone(1012345706L).address("대한민국 테스트 주소 029").addressDetail("상세주소 029").description("강아지가 물어요").postcode("00029").price(BigDecimal.valueOf(120000)).totalPrice(BigDecimal.valueOf(122500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member30").get()).orderNo("2024-03-14__0230").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member30").phone(1012345707L).address("대한민국 테스트 주소 030").addressDetail("상세주소 030").description("빵상").postcode("00030").price(BigDecimal.valueOf(252000)).totalPrice(BigDecimal.valueOf(254500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member31").get()).orderNo("2024-03-14__0231").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member31").phone(1012345708L).address("대한민국 테스트 주소 031").addressDetail("상세주소 031").description("부재시 문앞에 놓아주세요.").postcode("00031").price(BigDecimal.valueOf(532800)).totalPrice(BigDecimal.valueOf(535300)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member32").get()).orderNo("2024-03-14__0232").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member32").phone(1012345709L).address("대한민국 테스트 주소 032").addressDetail("상세주소 032").description("부재시 경비실에 맡겨주세요.").postcode("00032").price(BigDecimal.valueOf(219000)).totalPrice(BigDecimal.valueOf(221500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member33").get()).orderNo("2024-03-14__0233").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member33").phone(1012345710L).address("대한민국 테스트 주소 033").addressDetail("상세주소 033").description("부재시 옆집 주세요.").postcode("00033").price(BigDecimal.valueOf(240000)).totalPrice(BigDecimal.valueOf(242500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member34").get()).orderNo("2024-03-14__0234").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member34").phone(1012345711L).address("대한민국 테스트 주소 034").addressDetail("상세주소 034").description("부재시 전화 주세요.").postcode("00034").price(BigDecimal.valueOf(342000)).totalPrice(BigDecimal.valueOf(344500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member35").get()).orderNo("2024-03-14__0235").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member35").phone(1012345712L).address("대한민국 테스트 주소 035").addressDetail("상세주소 035").description("강아지가 짖습니다.").postcode("00035").price(BigDecimal.valueOf(270000)).totalPrice(BigDecimal.valueOf(272500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member36").get()).orderNo("2024-03-14__0236").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member36").phone(1012345713L).address("대한민국 테스트 주소 036").addressDetail("상세주소 036").description("애기가 자고 있습니다.").postcode("00036").price(BigDecimal.valueOf(414000)).totalPrice(BigDecimal.valueOf(416500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member37").get()).orderNo("2024-03-14__0237").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member37").phone(1012345714L).address("대한민국 테스트 주소 037").addressDetail("상세주소 037").description("벨 누르지말아주세요").postcode("00037").price(BigDecimal.valueOf(252000)).totalPrice(BigDecimal.valueOf(254500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member38").get()).orderNo("2024-03-14__0238").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member38").phone(1012345715L).address("대한민국 테스트 주소 038").addressDetail("상세주소 038").description("벨 누르면 환불합니다.").postcode("00038").price(BigDecimal.valueOf(1116000)).totalPrice(BigDecimal.valueOf(1118500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member39").get()).orderNo("2024-03-14__0239").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member39").phone(1012345716L).address("대한민국 테스트 주소 039").addressDetail("상세주소 039").description("강아지가 물어요").postcode("00039").price(BigDecimal.valueOf(165000)).totalPrice(BigDecimal.valueOf(167500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member40").get()).orderNo("2024-03-14__0240").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member40").phone(1012345717L).address("대한민국 테스트 주소 040").addressDetail("상세주소 040").description("빵상").postcode("00040").price(BigDecimal.valueOf(283200)).totalPrice(BigDecimal.valueOf(285700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member41").get()).orderNo("2024-03-14__0241").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member41").phone(1012345718L).address("대한민국 테스트 주소 041").addressDetail("상세주소 041").description("부재시 문앞에 놓아주세요.").postcode("00041").price(BigDecimal.valueOf(30000)).totalPrice(BigDecimal.valueOf(32500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member42").get()).orderNo("2024-03-14__0242").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member42").phone(1012345719L).address("대한민국 테스트 주소 042").addressDetail("상세주소 042").description("부재시 경비실에 맡겨주세요.").postcode("00042").price(BigDecimal.valueOf(192000)).totalPrice(BigDecimal.valueOf(194500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member43").get()).orderNo("2024-03-14__0243").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member43").phone(1012345720L).address("대한민국 테스트 주소 043").addressDetail("상세주소 043").description("부재시 옆집 주세요.").postcode("00043").price(BigDecimal.valueOf(57000)).totalPrice(BigDecimal.valueOf(59500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member44").get()).orderNo("2024-03-14__0244").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member44").phone(1012345721L).address("대한민국 테스트 주소 044").addressDetail("상세주소 044").description("부재시 전화 주세요.").postcode("00044").price(BigDecimal.valueOf(72000)).totalPrice(BigDecimal.valueOf(74500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member45").get()).orderNo("2024-03-14__0245").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member45").phone(1012345722L).address("대한민국 테스트 주소 045").addressDetail("상세주소 045").description("강아지가 짖습니다.").postcode("00045").price(BigDecimal.valueOf(186000)).totalPrice(BigDecimal.valueOf(188500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member46").get()).orderNo("2024-03-14__0246").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member46").phone(1012345723L).address("대한민국 테스트 주소 046").addressDetail("상세주소 046").description("애기가 자고 있습니다.").postcode("00046").price(BigDecimal.valueOf(276000)).totalPrice(BigDecimal.valueOf(278500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member47").get()).orderNo("2024-03-14__0247").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member47").phone(1012345724L).address("대한민국 테스트 주소 047").addressDetail("상세주소 047").description("벨 누르지말아주세요").postcode("00047").price(BigDecimal.valueOf(378000)).totalPrice(BigDecimal.valueOf(380500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member48").get()).orderNo("2024-03-14__0248").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member48").phone(1012345725L).address("대한민국 테스트 주소 048").addressDetail("상세주소 048").description("벨 누르면 환불합니다.").postcode("00048").price(BigDecimal.valueOf(190200)).totalPrice(BigDecimal.valueOf(192700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member49").get()).orderNo("2024-03-14__0249").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member49").phone(1012345726L).address("대한민국 테스트 주소 049").addressDetail("상세주소 049").description("강아지가 물어요").postcode("00049").price(BigDecimal.valueOf(12000)).totalPrice(BigDecimal.valueOf(14500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member50").get()).orderNo("2024-03-14__0250").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member50").phone(1012345727L).address("대한민국 테스트 주소 050").addressDetail("상세주소 050").description("빵상").postcode("00050").price(BigDecimal.valueOf(1020000)).totalPrice(BigDecimal.valueOf(1022500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member51").get()).orderNo("2024-03-14__0251").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member51").phone(1012345728L).address("대한민국 테스트 주소 051").addressDetail("상세주소 051").description("부재시 문앞에 놓아주세요.").postcode("00051").price(BigDecimal.valueOf(402000)).totalPrice(BigDecimal.valueOf(404500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member52").get()).orderNo("2024-03-14__0252").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member52").phone(1012345729L).address("대한민국 테스트 주소 052").addressDetail("상세주소 052").description("부재시 경비실에 맡겨주세요.").postcode("00052").price(BigDecimal.valueOf(144000)).totalPrice(BigDecimal.valueOf(146500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member53").get()).orderNo("2024-03-14__0253").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member53").phone(1012345730L).address("대한민국 테스트 주소 053").addressDetail("상세주소 053").description("부재시 옆집 주세요.").postcode("00053").price(BigDecimal.valueOf(224400)).totalPrice(BigDecimal.valueOf(226900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member54").get()).orderNo("2024-03-14__0254").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member54").phone(1012345731L).address("대한민국 테스트 주소 054").addressDetail("상세주소 054").description("부재시 전화 주세요.").postcode("00054").price(BigDecimal.valueOf(78600)).totalPrice(BigDecimal.valueOf(81100)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member55").get()).orderNo("2024-03-14__0255").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member55").phone(1012345732L).address("대한민국 테스트 주소 055").addressDetail("상세주소 055").description("강아지가 짖습니다.").postcode("00055").price(BigDecimal.valueOf(1968000)).totalPrice(BigDecimal.valueOf(1970500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member56").get()).orderNo("2024-03-14__0256").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member56").phone(1012345733L).address("대한민국 테스트 주소 056").addressDetail("상세주소 056").description("애기가 자고 있습니다.").postcode("00056").price(BigDecimal.valueOf(129000)).totalPrice(BigDecimal.valueOf(131500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member57").get()).orderNo("2024-03-14__0257").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member57").phone(1012345734L).address("대한민국 테스트 주소 057").addressDetail("상세주소 057").description("벨 누르지말아주세요").postcode("00057").price(BigDecimal.valueOf(159000)).totalPrice(BigDecimal.valueOf(161500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member58").get()).orderNo("2024-03-14__0258").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member58").phone(1012345735L).address("대한민국 테스트 주소 058").addressDetail("상세주소 058").description("벨 누르면 환불합니다.").postcode("00058").price(BigDecimal.valueOf(162000)).totalPrice(BigDecimal.valueOf(164500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member59").get()).orderNo("2024-03-14__0259").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member59").phone(1012345736L).address("대한민국 테스트 주소 059").addressDetail("상세주소 059").description("강아지가 물어요").postcode("00059").price(BigDecimal.valueOf(395400)).totalPrice(BigDecimal.valueOf(397900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member60").get()).orderNo("2024-03-14__0260").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member60").phone(1012345737L).address("대한민국 테스트 주소 060").addressDetail("상세주소 060").description("빵상").postcode("00060").price(BigDecimal.valueOf(227400)).totalPrice(BigDecimal.valueOf(229900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member61").get()).orderNo("2024-03-14__0261").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member61").phone(1012345738L).address("대한민국 테스트 주소 061").addressDetail("상세주소 061").description("부재시 문앞에 놓아주세요.").postcode("00061").price(BigDecimal.valueOf(360000)).totalPrice(BigDecimal.valueOf(362500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member62").get()).orderNo("2024-03-14__0262").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member62").phone(1012345739L).address("대한민국 테스트 주소 062").addressDetail("상세주소 062").description("부재시 경비실에 맡겨주세요.").postcode("00062").price(BigDecimal.valueOf(312000)).totalPrice(BigDecimal.valueOf(314500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member63").get()).orderNo("2024-03-14__0263").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member63").phone(1012345740L).address("대한민국 테스트 주소 063").addressDetail("상세주소 063").description("부재시 옆집 주세요.").postcode("00063").price(BigDecimal.valueOf(168000)).totalPrice(BigDecimal.valueOf(170500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member64").get()).orderNo("2024-03-14__0264").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member64").phone(1012345741L).address("대한민국 테스트 주소 064").addressDetail("상세주소 064").description("부재시 전화 주세요.").postcode("00064").price(BigDecimal.valueOf(101880)).totalPrice(BigDecimal.valueOf(104380)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member65").get()).orderNo("2024-03-14__0265").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member65").phone(1012345742L).address("대한민국 테스트 주소 065").addressDetail("상세주소 065").description("강아지가 짖습니다.").postcode("00065").price(BigDecimal.valueOf(187200)).totalPrice(BigDecimal.valueOf(189700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member66").get()).orderNo("2024-03-14__0266").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member66").phone(1012345743L).address("대한민국 테스트 주소 066").addressDetail("상세주소 066").description("애기가 자고 있습니다.").postcode("00066").price(BigDecimal.valueOf(258000)).totalPrice(BigDecimal.valueOf(260500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member67").get()).orderNo("2024-03-14__0267").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member67").phone(1012345744L).address("대한민국 테스트 주소 067").addressDetail("상세주소 067").description("벨 누르지말아주세요").postcode("00067").price(BigDecimal.valueOf(271200)).totalPrice(BigDecimal.valueOf(273700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member68").get()).orderNo("2024-03-14__0268").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member68").phone(1012345745L).address("대한민국 테스트 주소 068").addressDetail("상세주소 068").description("벨 누르면 환불합니다.").postcode("00068").price(BigDecimal.valueOf(342000)).totalPrice(BigDecimal.valueOf(344500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member69").get()).orderNo("2024-03-14__0269").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member69").phone(1012345746L).address("대한민국 테스트 주소 069").addressDetail("상세주소 069").description("강아지가 물어요").postcode("00069").price(BigDecimal.valueOf(306000)).totalPrice(BigDecimal.valueOf(308500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member70").get()).orderNo("2024-03-14__0270").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member70").phone(1012345747L).address("대한민국 테스트 주소 070").addressDetail("상세주소 070").description("빵상").postcode("00070").price(BigDecimal.valueOf(402000)).totalPrice(BigDecimal.valueOf(404500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member71").get()).orderNo("2024-03-14__0271").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member71").phone(1012345748L).address("대한민국 테스트 주소 071").addressDetail("상세주소 071").description("부재시 문앞에 놓아주세요.").postcode("00071").price(BigDecimal.valueOf(396000)).totalPrice(BigDecimal.valueOf(398500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member72").get()).orderNo("2024-03-14__0272").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member72").phone(1012345749L).address("대한민국 테스트 주소 072").addressDetail("상세주소 072").description("부재시 경비실에 맡겨주세요.").postcode("00072").price(BigDecimal.valueOf(300000)).totalPrice(BigDecimal.valueOf(302500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member73").get()).orderNo("2024-03-14__0273").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member73").phone(1012345750L).address("대한민국 테스트 주소 073").addressDetail("상세주소 073").description("부재시 옆집 주세요.").postcode("00073").price(BigDecimal.valueOf(360000)).totalPrice(BigDecimal.valueOf(362500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member74").get()).orderNo("2024-03-14__0274").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member74").phone(1012345751L).address("대한민국 테스트 주소 074").addressDetail("상세주소 074").description("부재시 전화 주세요.").postcode("00074").price(BigDecimal.valueOf(474000)).totalPrice(BigDecimal.valueOf(476500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member75").get()).orderNo("2024-03-14__0275").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member75").phone(1012345752L).address("대한민국 테스트 주소 075").addressDetail("상세주소 075").description("강아지가 짖습니다.").postcode("00075").price(BigDecimal.valueOf(36600)).totalPrice(BigDecimal.valueOf(39100)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member76").get()).orderNo("2024-03-14__0276").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member76").phone(1012345753L).address("대한민국 테스트 주소 076").addressDetail("상세주소 076").description("애기가 자고 있습니다.").postcode("00076").price(BigDecimal.valueOf(63000)).totalPrice(BigDecimal.valueOf(65500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member77").get()).orderNo("2024-03-14__0277").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member77").phone(1012345754L).address("대한민국 테스트 주소 077").addressDetail("상세주소 077").description("벨 누르지말아주세요").postcode("00077").price(BigDecimal.valueOf(285600)).totalPrice(BigDecimal.valueOf(288100)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member78").get()).orderNo("2024-03-14__0278").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member78").phone(1012345755L).address("대한민국 테스트 주소 078").addressDetail("상세주소 078").description("벨 누르면 환불합니다.").postcode("00078").price(BigDecimal.valueOf(366000)).totalPrice(BigDecimal.valueOf(368500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member79").get()).orderNo("2024-03-14__0279").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member79").phone(1012345756L).address("대한민국 테스트 주소 079").addressDetail("상세주소 079").description("강아지가 물어요").postcode("00079").price(BigDecimal.valueOf(216000)).totalPrice(BigDecimal.valueOf(218500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member80").get()).orderNo("2024-03-14__0280").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member80").phone(1012345757L).address("대한민국 테스트 주소 080").addressDetail("상세주소 080").description("빵상").postcode("00080").price(BigDecimal.valueOf(384000)).totalPrice(BigDecimal.valueOf(386500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member81").get()).orderNo("2024-03-14__0281").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member81").phone(1012345758L).address("대한민국 테스트 주소 081").addressDetail("상세주소 081").description("부재시 문앞에 놓아주세요.").postcode("00081").price(BigDecimal.valueOf(384000)).totalPrice(BigDecimal.valueOf(386500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member82").get()).orderNo("2024-03-14__0282").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member82").phone(1012345759L).address("대한민국 테스트 주소 082").addressDetail("상세주소 082").description("부재시 경비실에 맡겨주세요.").postcode("00082").price(BigDecimal.valueOf(226200)).totalPrice(BigDecimal.valueOf(228700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member83").get()).orderNo("2024-03-14__0283").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member83").phone(1012345760L).address("대한민국 테스트 주소 083").addressDetail("상세주소 083").description("부재시 옆집 주세요.").postcode("00083").price(BigDecimal.valueOf(216000)).totalPrice(BigDecimal.valueOf(218500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member84").get()).orderNo("2024-03-14__0284").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member84").phone(1012345761L).address("대한민국 테스트 주소 084").addressDetail("상세주소 084").description("부재시 전화 주세요.").postcode("00084").price(BigDecimal.valueOf(66000)).totalPrice(BigDecimal.valueOf(68500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member85").get()).orderNo("2024-03-14__0285").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member85").phone(1012345762L).address("대한민국 테스트 주소 085").addressDetail("상세주소 085").description("강아지가 짖습니다.").postcode("00085").price(BigDecimal.valueOf(77400)).totalPrice(BigDecimal.valueOf(79900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member86").get()).orderNo("2024-03-14__0286").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member86").phone(1012345763L).address("대한민국 테스트 주소 086").addressDetail("상세주소 086").description("애기가 자고 있습니다.").postcode("00086").price(BigDecimal.valueOf(204000)).totalPrice(BigDecimal.valueOf(206500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member87").get()).orderNo("2024-03-14__0287").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member87").phone(1012345764L).address("대한민국 테스트 주소 087").addressDetail("상세주소 087").description("벨 누르지말아주세요").postcode("00087").price(BigDecimal.valueOf(270000)).totalPrice(BigDecimal.valueOf(272500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member88").get()).orderNo("2024-03-14__0288").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member88").phone(1012345765L).address("대한민국 테스트 주소 088").addressDetail("상세주소 088").description("벨 누르면 환불합니다.").postcode("00088").price(BigDecimal.valueOf(210000)).totalPrice(BigDecimal.valueOf(212500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member89").get()).orderNo("2024-03-14__0289").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member89").phone(1012345766L).address("대한민국 테스트 주소 089").addressDetail("상세주소 089").description("강아지가 물어요").postcode("00089").price(BigDecimal.valueOf(270000)).totalPrice(BigDecimal.valueOf(272500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member90").get()).orderNo("2024-03-14__0290").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member90").phone(1012345767L).address("대한민국 테스트 주소 090").addressDetail("상세주소 090").description("빵상").postcode("00090").price(BigDecimal.valueOf(378000)).totalPrice(BigDecimal.valueOf(380500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member91").get()).orderNo("2024-03-14__0291").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member91").phone(1012345768L).address("대한민국 테스트 주소 091").addressDetail("상세주소 091").description("부재시 문앞에 놓아주세요.").postcode("00091").price(BigDecimal.valueOf(222000)).totalPrice(BigDecimal.valueOf(224500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member92").get()).orderNo("2024-03-14__0292").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member92").phone(1012345769L).address("대한민국 테스트 주소 092").addressDetail("상세주소 092").description("부재시 경비실에 맡겨주세요.").postcode("00092").price(BigDecimal.valueOf(198000)).totalPrice(BigDecimal.valueOf(200500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member93").get()).orderNo("2024-03-14__0293").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member93").phone(1012345770L).address("대한민국 테스트 주소 093").addressDetail("상세주소 093").description("부재시 옆집 주세요.").postcode("00093").price(BigDecimal.valueOf(189600)).totalPrice(BigDecimal.valueOf(192100)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member94").get()).orderNo("2024-03-14__0294").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member94").phone(1012345771L).address("대한민국 테스트 주소 094").addressDetail("상세주소 094").description("부재시 전화 주세요.").postcode("00094").price(BigDecimal.valueOf(89400)).totalPrice(BigDecimal.valueOf(91900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member95").get()).orderNo("2024-03-14__0295").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member95").phone(1012345772L).address("대한민국 테스트 주소 095").addressDetail("상세주소 095").description("강아지가 짖습니다.").postcode("00095").price(BigDecimal.valueOf(636000)).totalPrice(BigDecimal.valueOf(638500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member96").get()).orderNo("2024-03-14__0296").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member96").phone(1012345773L).address("대한민국 테스트 주소 096").addressDetail("상세주소 096").description("애기가 자고 있습니다.").postcode("00096").price(BigDecimal.valueOf(270000)).totalPrice(BigDecimal.valueOf(272500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member97").get()).orderNo("2024-03-14__0297").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member97").phone(1012345774L).address("대한민국 테스트 주소 097").addressDetail("상세주소 097").description("벨 누르지말아주세요").postcode("00097").price(BigDecimal.valueOf(258000)).totalPrice(BigDecimal.valueOf(260500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member98").get()).orderNo("2024-03-14__0298").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member98").phone(1012345775L).address("대한민국 테스트 주소 098").addressDetail("상세주소 098").description("벨 누르면 환불합니다.").postcode("00098").price(BigDecimal.valueOf(510000)).totalPrice(BigDecimal.valueOf(512500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member99").get()).orderNo("2024-03-14__0299").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member99").phone(1012345776L).address("대한민국 테스트 주소 099").addressDetail("상세주소 099").description("강아지가 물어요").postcode("00099").price(BigDecimal.valueOf(252000)).totalPrice(BigDecimal.valueOf(254500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member100").get()).orderNo("2024-03-14__0300").orderStatus(OrderStatus.PAYMENT_COMPLETED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member100").phone(1012345777L).address("대한민국 테스트 주소 100").addressDetail("상세주소 100").description("빵상").postcode("00100").price(BigDecimal.valueOf(594000)).totalPrice(BigDecimal.valueOf(596500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member1").get()).orderNo("2024-03-14__0301").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member1").phone(1012345678L).address("대한민국 테스트 주소 001").addressDetail("상세주소 001").description("부재시 문앞에 놓아주세요.").postcode("00001").price(BigDecimal.valueOf(145800)).totalPrice(BigDecimal.valueOf(148300)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member2").get()).orderNo("2024-03-14__0302").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member2").phone(1012345679L).address("대한민국 테스트 주소 002").addressDetail("상세주소 002").description("부재시 경비실에 맡겨주세요.").postcode("00002").price(BigDecimal.valueOf(126000)).totalPrice(BigDecimal.valueOf(128500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member3").get()).orderNo("2024-03-14__0303").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member3").phone(1012345680L).address("대한민국 테스트 주소 003").addressDetail("상세주소 003").description("부재시 옆집 주세요.").postcode("00003").price(BigDecimal.valueOf(258000)).totalPrice(BigDecimal.valueOf(260500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member4").get()).orderNo("2024-03-14__0304").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member4").phone(1012345681L).address("대한민국 테스트 주소 004").addressDetail("상세주소 004").description("부재시 전화 주세요.").postcode("00004").price(BigDecimal.valueOf(324000)).totalPrice(BigDecimal.valueOf(326500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member5").get()).orderNo("2024-03-14__0305").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member5").phone(1012345682L).address("대한민국 테스트 주소 005").addressDetail("상세주소 005").description("강아지가 짖습니다.").postcode("00005").price(BigDecimal.valueOf(225000)).totalPrice(BigDecimal.valueOf(227500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member6").get()).orderNo("2024-03-14__0306").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member6").phone(1012345683L).address("대한민국 테스트 주소 006").addressDetail("상세주소 006").description("애기가 자고 있습니다.").postcode("00006").price(BigDecimal.valueOf(93000)).totalPrice(BigDecimal.valueOf(95500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member7").get()).orderNo("2024-03-14__0307").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member7").phone(1012345684L).address("대한민국 테스트 주소 007").addressDetail("상세주소 007").description("벨 누르지말아주세요").postcode("00007").price(BigDecimal.valueOf(321000)).totalPrice(BigDecimal.valueOf(323500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member8").get()).orderNo("2024-03-14__0308").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member8").phone(1012345685L).address("대한민국 테스트 주소 008").addressDetail("상세주소 008").description("벨 누르면 환불합니다.").postcode("00008").price(BigDecimal.valueOf(464400)).totalPrice(BigDecimal.valueOf(466900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member9").get()).orderNo("2024-03-14__0309").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member9").phone(1012345686L).address("대한민국 테스트 주소 009").addressDetail("상세주소 009").description("강아지가 물어요").postcode("00009").price(BigDecimal.valueOf(420000)).totalPrice(BigDecimal.valueOf(422500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member10").get()).orderNo("2024-03-14__0310").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member10").phone(1012345687L).address("대한민국 테스트 주소 010").addressDetail("상세주소 010").description("빵상").postcode("00010").price(BigDecimal.valueOf(48000)).totalPrice(BigDecimal.valueOf(50500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member11").get()).orderNo("2024-03-14__0311").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member11").phone(1012345688L).address("대한민국 테스트 주소 011").addressDetail("상세주소 011").description("부재시 문앞에 놓아주세요.").postcode("00011").price(BigDecimal.valueOf(42600)).totalPrice(BigDecimal.valueOf(45100)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member12").get()).orderNo("2024-03-14__0312").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member12").phone(1012345689L).address("대한민국 테스트 주소 012").addressDetail("상세주소 012").description("부재시 경비실에 맡겨주세요.").postcode("00012").price(BigDecimal.valueOf(252000)).totalPrice(BigDecimal.valueOf(254500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member13").get()).orderNo("2024-03-14__0313").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member13").phone(1012345690L).address("대한민국 테스트 주소 013").addressDetail("상세주소 013").description("부재시 옆집 주세요.").postcode("00013").price(BigDecimal.valueOf(168000)).totalPrice(BigDecimal.valueOf(170500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member14").get()).orderNo("2024-03-14__0314").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member14").phone(1012345691L).address("대한민국 테스트 주소 014").addressDetail("상세주소 014").description("부재시 전화 주세요.").postcode("00014").price(BigDecimal.valueOf(156000)).totalPrice(BigDecimal.valueOf(158500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member15").get()).orderNo("2024-03-14__0315").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member15").phone(1012345692L).address("대한민국 테스트 주소 015").addressDetail("상세주소 015").description("강아지가 짖습니다.").postcode("00015").price(BigDecimal.valueOf(138000)).totalPrice(BigDecimal.valueOf(140500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member16").get()).orderNo("2024-03-14__0316").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member16").phone(1012345693L).address("대한민국 테스트 주소 016").addressDetail("상세주소 016").description("애기가 자고 있습니다.").postcode("00016").price(BigDecimal.valueOf(21000)).totalPrice(BigDecimal.valueOf(23500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member17").get()).orderNo("2024-03-14__0317").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member17").phone(1012345694L).address("대한민국 테스트 주소 017").addressDetail("상세주소 017").description("벨 누르지말아주세요").postcode("00017").price(BigDecimal.valueOf(324000)).totalPrice(BigDecimal.valueOf(326500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member18").get()).orderNo("2024-03-14__0318").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member18").phone(1012345695L).address("대한민국 테스트 주소 018").addressDetail("상세주소 018").description("벨 누르면 환불합니다.").postcode("00018").price(BigDecimal.valueOf(210000)).totalPrice(BigDecimal.valueOf(212500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member19").get()).orderNo("2024-03-14__0319").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member19").phone(1012345696L).address("대한민국 테스트 주소 019").addressDetail("상세주소 019").description("강아지가 물어요").postcode("00019").price(BigDecimal.valueOf(414000)).totalPrice(BigDecimal.valueOf(416500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member20").get()).orderNo("2024-03-14__0320").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member20").phone(1012345697L).address("대한민국 테스트 주소 020").addressDetail("상세주소 020").description("빵상").postcode("00020").price(BigDecimal.valueOf(101400)).totalPrice(BigDecimal.valueOf(103900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member21").get()).orderNo("2024-03-14__0321").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member21").phone(1012345698L).address("대한민국 테스트 주소 021").addressDetail("상세주소 021").description("부재시 문앞에 놓아주세요.").postcode("00021").price(BigDecimal.valueOf(156000)).totalPrice(BigDecimal.valueOf(158500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member22").get()).orderNo("2024-03-14__0322").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member22").phone(1012345699L).address("대한민국 테스트 주소 022").addressDetail("상세주소 022").description("부재시 경비실에 맡겨주세요.").postcode("00022").price(BigDecimal.valueOf(240000)).totalPrice(BigDecimal.valueOf(242500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member23").get()).orderNo("2024-03-14__0323").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member23").phone(1012345700L).address("대한민국 테스트 주소 023").addressDetail("상세주소 023").description("부재시 옆집 주세요.").postcode("00023").price(BigDecimal.valueOf(198000)).totalPrice(BigDecimal.valueOf(200500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member24").get()).orderNo("2024-03-14__0324").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member24").phone(1012345701L).address("대한민국 테스트 주소 024").addressDetail("상세주소 024").description("부재시 전화 주세요.").postcode("00024").price(BigDecimal.valueOf(240000)).totalPrice(BigDecimal.valueOf(242500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member25").get()).orderNo("2024-03-14__0325").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member25").phone(1012345702L).address("대한민국 테스트 주소 025").addressDetail("상세주소 025").description("강아지가 짖습니다.").postcode("00025").price(BigDecimal.valueOf(43200)).totalPrice(BigDecimal.valueOf(45700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member26").get()).orderNo("2024-03-14__0326").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member26").phone(1012345703L).address("대한민국 테스트 주소 026").addressDetail("상세주소 026").description("애기가 자고 있습니다.").postcode("00026").price(BigDecimal.valueOf(210000)).totalPrice(BigDecimal.valueOf(212500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member27").get()).orderNo("2024-03-14__0327").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member27").phone(1012345704L).address("대한민국 테스트 주소 027").addressDetail("상세주소 027").description("벨 누르지말아주세요").postcode("00027").price(BigDecimal.valueOf(171000)).totalPrice(BigDecimal.valueOf(173500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member28").get()).orderNo("2024-03-14__0328").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member28").phone(1012345705L).address("대한민국 테스트 주소 028").addressDetail("상세주소 028").description("벨 누르면 환불합니다.").postcode("00028").price(BigDecimal.valueOf(180000)).totalPrice(BigDecimal.valueOf(182500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member29").get()).orderNo("2024-03-14__0329").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member29").phone(1012345706L).address("대한민국 테스트 주소 029").addressDetail("상세주소 029").description("강아지가 물어요").postcode("00029").price(BigDecimal.valueOf(192000)).totalPrice(BigDecimal.valueOf(194500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member30").get()).orderNo("2024-03-14__0330").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member30").phone(1012345707L).address("대한민국 테스트 주소 030").addressDetail("상세주소 030").description("빵상").postcode("00030").price(BigDecimal.valueOf(252000)).totalPrice(BigDecimal.valueOf(254500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member31").get()).orderNo("2024-03-14__0331").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member31").phone(1012345708L).address("대한민국 테스트 주소 031").addressDetail("상세주소 031").description("부재시 문앞에 놓아주세요.").postcode("00031").price(BigDecimal.valueOf(220800)).totalPrice(BigDecimal.valueOf(223300)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member32").get()).orderNo("2024-03-14__0332").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member32").phone(1012345709L).address("대한민국 테스트 주소 032").addressDetail("상세주소 032").description("부재시 경비실에 맡겨주세요.").postcode("00032").price(BigDecimal.valueOf(129000)).totalPrice(BigDecimal.valueOf(131500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member33").get()).orderNo("2024-03-14__0333").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member33").phone(1012345710L).address("대한민국 테스트 주소 033").addressDetail("상세주소 033").description("부재시 옆집 주세요.").postcode("00033").price(BigDecimal.valueOf(240000)).totalPrice(BigDecimal.valueOf(242500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member34").get()).orderNo("2024-03-14__0334").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member34").phone(1012345711L).address("대한민국 테스트 주소 034").addressDetail("상세주소 034").description("부재시 전화 주세요.").postcode("00034").price(BigDecimal.valueOf(414000)).totalPrice(BigDecimal.valueOf(416500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member35").get()).orderNo("2024-03-14__0335").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member35").phone(1012345712L).address("대한민국 테스트 주소 035").addressDetail("상세주소 035").description("강아지가 짖습니다.").postcode("00035").price(BigDecimal.valueOf(252000)).totalPrice(BigDecimal.valueOf(254500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member36").get()).orderNo("2024-03-14__0336").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member36").phone(1012345713L).address("대한민국 테스트 주소 036").addressDetail("상세주소 036").description("애기가 자고 있습니다.").postcode("00036").price(BigDecimal.valueOf(294000)).totalPrice(BigDecimal.valueOf(296500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member37").get()).orderNo("2024-03-14__0337").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member37").phone(1012345714L).address("대한민국 테스트 주소 037").addressDetail("상세주소 037").description("벨 누르지말아주세요").postcode("00037").price(BigDecimal.valueOf(256800)).totalPrice(BigDecimal.valueOf(259300)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member38").get()).orderNo("2024-03-14__0338").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member38").phone(1012345715L).address("대한민국 테스트 주소 038").addressDetail("상세주소 038").description("벨 누르면 환불합니다.").postcode("00038").price(BigDecimal.valueOf(1015200)).totalPrice(BigDecimal.valueOf(1017700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member39").get()).orderNo("2024-03-14__0339").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member39").phone(1012345716L).address("대한민국 테스트 주소 039").addressDetail("상세주소 039").description("강아지가 물어요").postcode("00039").price(BigDecimal.valueOf(105000)).totalPrice(BigDecimal.valueOf(107500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member40").get()).orderNo("2024-03-14__0340").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member40").phone(1012345717L).address("대한민국 테스트 주소 040").addressDetail("상세주소 040").description("빵상").postcode("00040").price(BigDecimal.valueOf(286200)).totalPrice(BigDecimal.valueOf(288700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member41").get()).orderNo("2024-03-14__0341").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member41").phone(1012345718L).address("대한민국 테스트 주소 041").addressDetail("상세주소 041").description("부재시 문앞에 놓아주세요.").postcode("00041").price(BigDecimal.valueOf(0)).totalPrice(BigDecimal.valueOf(2500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member42").get()).orderNo("2024-03-14__0342").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member42").phone(1012345719L).address("대한민국 테스트 주소 042").addressDetail("상세주소 042").description("부재시 경비실에 맡겨주세요.").postcode("00042").price(BigDecimal.valueOf(66000)).totalPrice(BigDecimal.valueOf(68500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member43").get()).orderNo("2024-03-14__0343").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member43").phone(1012345720L).address("대한민국 테스트 주소 043").addressDetail("상세주소 043").description("부재시 옆집 주세요.").postcode("00043").price(BigDecimal.valueOf(348000)).totalPrice(BigDecimal.valueOf(350500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member44").get()).orderNo("2024-03-14__0344").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member44").phone(1012345721L).address("대한민국 테스트 주소 044").addressDetail("상세주소 044").description("부재시 전화 주세요.").postcode("00044").price(BigDecimal.valueOf(66000)).totalPrice(BigDecimal.valueOf(68500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member45").get()).orderNo("2024-03-14__0345").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member45").phone(1012345722L).address("대한민국 테스트 주소 045").addressDetail("상세주소 045").description("강아지가 짖습니다.").postcode("00045").price(BigDecimal.valueOf(330000)).totalPrice(BigDecimal.valueOf(332500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member46").get()).orderNo("2024-03-14__0346").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member46").phone(1012345723L).address("대한민국 테스트 주소 046").addressDetail("상세주소 046").description("애기가 자고 있습니다.").postcode("00046").price(BigDecimal.valueOf(402000)).totalPrice(BigDecimal.valueOf(404500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member47").get()).orderNo("2024-03-14__0347").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member47").phone(1012345724L).address("대한민국 테스트 주소 047").addressDetail("상세주소 047").description("벨 누르지말아주세요").postcode("00047").price(BigDecimal.valueOf(402000)).totalPrice(BigDecimal.valueOf(404500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member48").get()).orderNo("2024-03-14__0348").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member48").phone(1012345725L).address("대한민국 테스트 주소 048").addressDetail("상세주소 048").description("벨 누르면 환불합니다.").postcode("00048").price(BigDecimal.valueOf(70200)).totalPrice(BigDecimal.valueOf(72700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member49").get()).orderNo("2024-03-14__0349").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member49").phone(1012345726L).address("대한민국 테스트 주소 049").addressDetail("상세주소 049").description("강아지가 물어요").postcode("00049").price(BigDecimal.valueOf(15000)).totalPrice(BigDecimal.valueOf(17500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member50").get()).orderNo("2024-03-14__0350").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member50").phone(1012345727L).address("대한민국 테스트 주소 050").addressDetail("상세주소 050").description("빵상").postcode("00050").price(BigDecimal.valueOf(138000)).totalPrice(BigDecimal.valueOf(140500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member51").get()).orderNo("2024-03-14__0351").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member51").phone(1012345728L).address("대한민국 테스트 주소 051").addressDetail("상세주소 051").description("부재시 문앞에 놓아주세요.").postcode("00051").price(BigDecimal.valueOf(426000)).totalPrice(BigDecimal.valueOf(428500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member52").get()).orderNo("2024-03-14__0352").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member52").phone(1012345729L).address("대한민국 테스트 주소 052").addressDetail("상세주소 052").description("부재시 경비실에 맡겨주세요.").postcode("00052").price(BigDecimal.valueOf(72000)).totalPrice(BigDecimal.valueOf(74500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member53").get()).orderNo("2024-03-14__0353").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member53").phone(1012345730L).address("대한민국 테스트 주소 053").addressDetail("상세주소 053").description("부재시 옆집 주세요.").postcode("00053").price(BigDecimal.valueOf(51600)).totalPrice(BigDecimal.valueOf(54100)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member54").get()).orderNo("2024-03-14__0354").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member54").phone(1012345731L).address("대한민국 테스트 주소 054").addressDetail("상세주소 054").description("부재시 전화 주세요.").postcode("00054").price(BigDecimal.valueOf(45600)).totalPrice(BigDecimal.valueOf(48100)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member55").get()).orderNo("2024-03-14__0355").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member55").phone(1012345732L).address("대한민국 테스트 주소 055").addressDetail("상세주소 055").description("강아지가 짖습니다.").postcode("00055").price(BigDecimal.valueOf(1524000)).totalPrice(BigDecimal.valueOf(1526500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member56").get()).orderNo("2024-03-14__0356").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member56").phone(1012345733L).address("대한민국 테스트 주소 056").addressDetail("상세주소 056").description("애기가 자고 있습니다.").postcode("00056").price(BigDecimal.valueOf(177000)).totalPrice(BigDecimal.valueOf(179500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member57").get()).orderNo("2024-03-14__0357").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member57").phone(1012345734L).address("대한민국 테스트 주소 057").addressDetail("상세주소 057").description("벨 누르지말아주세요").postcode("00057").price(BigDecimal.valueOf(279000)).totalPrice(BigDecimal.valueOf(281500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member58").get()).orderNo("2024-03-14__0358").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member58").phone(1012345735L).address("대한민국 테스트 주소 058").addressDetail("상세주소 058").description("벨 누르면 환불합니다.").postcode("00058").price(BigDecimal.valueOf(264000)).totalPrice(BigDecimal.valueOf(266500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member59").get()).orderNo("2024-03-14__0359").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member59").phone(1012345736L).address("대한민국 테스트 주소 059").addressDetail("상세주소 059").description("강아지가 물어요").postcode("00059").price(BigDecimal.valueOf(227400)).totalPrice(BigDecimal.valueOf(229900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member60").get()).orderNo("2024-03-14__0360").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member60").phone(1012345737L).address("대한민국 테스트 주소 060").addressDetail("상세주소 060").description("빵상").postcode("00060").price(BigDecimal.valueOf(185400)).totalPrice(BigDecimal.valueOf(187900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member61").get()).orderNo("2024-03-14__0361").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member61").phone(1012345738L).address("대한민국 테스트 주소 061").addressDetail("상세주소 061").description("부재시 문앞에 놓아주세요.").postcode("00061").price(BigDecimal.valueOf(277200)).totalPrice(BigDecimal.valueOf(279700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member62").get()).orderNo("2024-03-14__0362").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member62").phone(1012345739L).address("대한민국 테스트 주소 062").addressDetail("상세주소 062").description("부재시 경비실에 맡겨주세요.").postcode("00062").price(BigDecimal.valueOf(486000)).totalPrice(BigDecimal.valueOf(488500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member63").get()).orderNo("2024-03-14__0363").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member63").phone(1012345740L).address("대한민국 테스트 주소 063").addressDetail("상세주소 063").description("부재시 옆집 주세요.").postcode("00063").price(BigDecimal.valueOf(138000)).totalPrice(BigDecimal.valueOf(140500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member64").get()).orderNo("2024-03-14__0364").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member64").phone(1012345741L).address("대한민국 테스트 주소 064").addressDetail("상세주소 064").description("부재시 전화 주세요.").postcode("00064").price(BigDecimal.valueOf(18480)).totalPrice(BigDecimal.valueOf(20980)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member65").get()).orderNo("2024-03-14__0365").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member65").phone(1012345742L).address("대한민국 테스트 주소 065").addressDetail("상세주소 065").description("강아지가 짖습니다.").postcode("00065").price(BigDecimal.valueOf(18000)).totalPrice(BigDecimal.valueOf(20500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member66").get()).orderNo("2024-03-14__0366").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member66").phone(1012345743L).address("대한민국 테스트 주소 066").addressDetail("상세주소 066").description("애기가 자고 있습니다.").postcode("00066").price(BigDecimal.valueOf(102000)).totalPrice(BigDecimal.valueOf(104500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member67").get()).orderNo("2024-03-14__0367").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member67").phone(1012345744L).address("대한민국 테스트 주소 067").addressDetail("상세주소 067").description("벨 누르지말아주세요").postcode("00067").price(BigDecimal.valueOf(16200)).totalPrice(BigDecimal.valueOf(18700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member68").get()).orderNo("2024-03-14__0368").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member68").phone(1012345745L).address("대한민국 테스트 주소 068").addressDetail("상세주소 068").description("벨 누르면 환불합니다.").postcode("00068").price(BigDecimal.valueOf(51000)).totalPrice(BigDecimal.valueOf(53500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member69").get()).orderNo("2024-03-14__0369").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member69").phone(1012345746L).address("대한민국 테스트 주소 069").addressDetail("상세주소 069").description("강아지가 물어요").postcode("00069").price(BigDecimal.valueOf(52800)).totalPrice(BigDecimal.valueOf(55300)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member70").get()).orderNo("2024-03-14__0370").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member70").phone(1012345747L).address("대한민국 테스트 주소 070").addressDetail("상세주소 070").description("빵상").postcode("00070").price(BigDecimal.valueOf(240000)).totalPrice(BigDecimal.valueOf(242500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member71").get()).orderNo("2024-03-14__0371").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member71").phone(1012345748L).address("대한민국 테스트 주소 071").addressDetail("상세주소 071").description("부재시 문앞에 놓아주세요.").postcode("00071").price(BigDecimal.valueOf(570000)).totalPrice(BigDecimal.valueOf(572500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member72").get()).orderNo("2024-03-14__0372").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member72").phone(1012345749L).address("대한민국 테스트 주소 072").addressDetail("상세주소 072").description("부재시 경비실에 맡겨주세요.").postcode("00072").price(BigDecimal.valueOf(414000)).totalPrice(BigDecimal.valueOf(416500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member73").get()).orderNo("2024-03-14__0373").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member73").phone(1012345750L).address("대한민국 테스트 주소 073").addressDetail("상세주소 073").description("부재시 옆집 주세요.").postcode("00073").price(BigDecimal.valueOf(259800)).totalPrice(BigDecimal.valueOf(262300)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member74").get()).orderNo("2024-03-14__0374").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member74").phone(1012345751L).address("대한민국 테스트 주소 074").addressDetail("상세주소 074").description("부재시 전화 주세요.").postcode("00074").price(BigDecimal.valueOf(345600)).totalPrice(BigDecimal.valueOf(348100)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member75").get()).orderNo("2024-03-14__0375").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member75").phone(1012345752L).address("대한민국 테스트 주소 075").addressDetail("상세주소 075").description("강아지가 짖습니다.").postcode("00075").price(BigDecimal.valueOf(300000)).totalPrice(BigDecimal.valueOf(302500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member76").get()).orderNo("2024-03-14__0376").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member76").phone(1012345753L).address("대한민국 테스트 주소 076").addressDetail("상세주소 076").description("애기가 자고 있습니다.").postcode("00076").price(BigDecimal.valueOf(204000)).totalPrice(BigDecimal.valueOf(206500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member77").get()).orderNo("2024-03-14__0377").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member77").phone(1012345754L).address("대한민국 테스트 주소 077").addressDetail("상세주소 077").description("벨 누르지말아주세요").postcode("00077").price(BigDecimal.valueOf(117600)).totalPrice(BigDecimal.valueOf(120100)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member78").get()).orderNo("2024-03-14__0378").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member78").phone(1012345755L).address("대한민국 테스트 주소 078").addressDetail("상세주소 078").description("벨 누르면 환불합니다.").postcode("00078").price(BigDecimal.valueOf(223200)).totalPrice(BigDecimal.valueOf(225700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member79").get()).orderNo("2024-03-14__0379").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member79").phone(1012345756L).address("대한민국 테스트 주소 079").addressDetail("상세주소 079").description("강아지가 물어요").postcode("00079").price(BigDecimal.valueOf(133200)).totalPrice(BigDecimal.valueOf(135700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member80").get()).orderNo("2024-03-14__0380").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member80").phone(1012345757L).address("대한민국 테스트 주소 080").addressDetail("상세주소 080").description("빵상").postcode("00080").price(BigDecimal.valueOf(348000)).totalPrice(BigDecimal.valueOf(350500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member81").get()).orderNo("2024-03-14__0381").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member81").phone(1012345758L).address("대한민국 테스트 주소 081").addressDetail("상세주소 081").description("부재시 문앞에 놓아주세요.").postcode("00081").price(BigDecimal.valueOf(348000)).totalPrice(BigDecimal.valueOf(350500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member82").get()).orderNo("2024-03-14__0382").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member82").phone(1012345759L).address("대한민국 테스트 주소 082").addressDetail("상세주소 082").description("부재시 경비실에 맡겨주세요.").postcode("00082").price(BigDecimal.valueOf(552000)).totalPrice(BigDecimal.valueOf(554500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member83").get()).orderNo("2024-03-14__0383").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member83").phone(1012345760L).address("대한민국 테스트 주소 083").addressDetail("상세주소 083").description("부재시 옆집 주세요.").postcode("00083").price(BigDecimal.valueOf(108000)).totalPrice(BigDecimal.valueOf(110500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member84").get()).orderNo("2024-03-14__0384").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member84").phone(1012345761L).address("대한민국 테스트 주소 084").addressDetail("상세주소 084").description("부재시 전화 주세요.").postcode("00084").price(BigDecimal.valueOf(138000)).totalPrice(BigDecimal.valueOf(140500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member85").get()).orderNo("2024-03-14__0385").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member85").phone(1012345762L).address("대한민국 테스트 주소 085").addressDetail("상세주소 085").description("강아지가 짖습니다.").postcode("00085").price(BigDecimal.valueOf(155400)).totalPrice(BigDecimal.valueOf(157900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member86").get()).orderNo("2024-03-14__0386").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member86").phone(1012345763L).address("대한민국 테스트 주소 086").addressDetail("상세주소 086").description("애기가 자고 있습니다.").postcode("00086").price(BigDecimal.valueOf(216000)).totalPrice(BigDecimal.valueOf(218500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member87").get()).orderNo("2024-03-14__0387").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member87").phone(1012345764L).address("대한민국 테스트 주소 087").addressDetail("상세주소 087").description("벨 누르지말아주세요").postcode("00087").price(BigDecimal.valueOf(157200)).totalPrice(BigDecimal.valueOf(159700)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member88").get()).orderNo("2024-03-14__0388").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member88").phone(1012345765L).address("대한민국 테스트 주소 088").addressDetail("상세주소 088").description("벨 누르면 환불합니다.").postcode("00088").price(BigDecimal.valueOf(182400)).totalPrice(BigDecimal.valueOf(184900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member89").get()).orderNo("2024-03-14__0389").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member89").phone(1012345766L).address("대한민국 테스트 주소 089").addressDetail("상세주소 089").description("강아지가 물어요").postcode("00089").price(BigDecimal.valueOf(162000)).totalPrice(BigDecimal.valueOf(164500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member90").get()).orderNo("2024-03-14__0390").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member90").phone(1012345767L).address("대한민국 테스트 주소 090").addressDetail("상세주소 090").description("빵상").postcode("00090").price(BigDecimal.valueOf(300000)).totalPrice(BigDecimal.valueOf(302500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member91").get()).orderNo("2024-03-14__0391").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member91").phone(1012345768L).address("대한민국 테스트 주소 091").addressDetail("상세주소 091").description("부재시 문앞에 놓아주세요.").postcode("00091").price(BigDecimal.valueOf(288000)).totalPrice(BigDecimal.valueOf(290500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member92").get()).orderNo("2024-03-14__0392").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member92").phone(1012345769L).address("대한민국 테스트 주소 092").addressDetail("상세주소 092").description("부재시 경비실에 맡겨주세요.").postcode("00092").price(BigDecimal.valueOf(252000)).totalPrice(BigDecimal.valueOf(254500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member93").get()).orderNo("2024-03-14__0393").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member93").phone(1012345770L).address("대한민국 테스트 주소 093").addressDetail("상세주소 093").description("부재시 옆집 주세요.").postcode("00093").price(BigDecimal.valueOf(288000)).totalPrice(BigDecimal.valueOf(290500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member94").get()).orderNo("2024-03-14__0394").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member94").phone(1012345771L).address("대한민국 테스트 주소 094").addressDetail("상세주소 094").description("부재시 전화 주세요.").postcode("00094").price(BigDecimal.valueOf(317400)).totalPrice(BigDecimal.valueOf(319900)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member95").get()).orderNo("2024-03-14__0395").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member95").phone(1012345772L).address("대한민국 테스트 주소 095").addressDetail("상세주소 095").description("강아지가 짖습니다.").postcode("00095").price(BigDecimal.valueOf(640800)).totalPrice(BigDecimal.valueOf(643300)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member96").get()).orderNo("2024-03-14__0396").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member96").phone(1012345773L).address("대한민국 테스트 주소 096").addressDetail("상세주소 096").description("애기가 자고 있습니다.").postcode("00096").price(BigDecimal.valueOf(192000)).totalPrice(BigDecimal.valueOf(194500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member97").get()).orderNo("2024-03-14__0397").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member97").phone(1012345774L).address("대한민국 테스트 주소 097").addressDetail("상세주소 097").description("벨 누르지말아주세요").postcode("00097").price(BigDecimal.valueOf(525000)).totalPrice(BigDecimal.valueOf(527500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member98").get()).orderNo("2024-03-14__0398").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member98").phone(1012345775L).address("대한민국 테스트 주소 098").addressDetail("상세주소 098").description("벨 누르면 환불합니다.").postcode("00098").price(BigDecimal.valueOf(558000)).totalPrice(BigDecimal.valueOf(560500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member99").get()).orderNo("2024-03-14__0399").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member99").phone(1012345776L).address("대한민국 테스트 주소 099").addressDetail("상세주소 099").description("강아지가 물어요").postcode("00099").price(BigDecimal.valueOf(138000)).totalPrice(BigDecimal.valueOf(140500)).build());
        orderRepository.save(Order.builder().member(memberRepository.findByName("member100").get()).orderNo("2024-03-14__0400").orderStatus(OrderStatus.CANCELLED).deliveryPrice(BigDecimal.valueOf(2500)).recipient("member100").phone(1012345777L).address("대한민국 테스트 주소 100").addressDetail("상세주소 100").description("빵상").postcode("00100").price(BigDecimal.valueOf(84000)).totalPrice(BigDecimal.valueOf(86500)).build());
    }

    void initOrderDetail1() {
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(1L).get().getPrice()).item(itemRepository.findById(1L).get()).quantity(2L).order(orderRepository.findById(1L).get()).totalPrice(itemRepository.findById(1L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(2L).get().getPrice()).item(itemRepository.findById(2L).get()).quantity(2L).order(orderRepository.findById(2L).get()).totalPrice(itemRepository.findById(2L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(3L).get().getPrice()).item(itemRepository.findById(3L).get()).quantity(2L).order(orderRepository.findById(3L).get()).totalPrice(itemRepository.findById(3L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(4L).get().getPrice()).item(itemRepository.findById(4L).get()).quantity(2L).order(orderRepository.findById(4L).get()).totalPrice(itemRepository.findById(4L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(5L).get().getPrice()).item(itemRepository.findById(5L).get()).quantity(2L).order(orderRepository.findById(5L).get()).totalPrice(itemRepository.findById(5L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(6L).get().getPrice()).item(itemRepository.findById(6L).get()).quantity(2L).order(orderRepository.findById(6L).get()).totalPrice(itemRepository.findById(6L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(7L).get().getPrice()).item(itemRepository.findById(7L).get()).quantity(2L).order(orderRepository.findById(7L).get()).totalPrice(itemRepository.findById(7L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(8L).get().getPrice()).item(itemRepository.findById(8L).get()).quantity(2L).order(orderRepository.findById(8L).get()).totalPrice(itemRepository.findById(8L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(9L).get().getPrice()).item(itemRepository.findById(9L).get()).quantity(2L).order(orderRepository.findById(9L).get()).totalPrice(itemRepository.findById(9L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(10L).get().getPrice()).item(itemRepository.findById(10L).get()).quantity(2L).order(orderRepository.findById(10L).get()).totalPrice(itemRepository.findById(10L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(11L).get().getPrice()).item(itemRepository.findById(11L).get()).quantity(2L).order(orderRepository.findById(11L).get()).totalPrice(itemRepository.findById(11L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(12L).get().getPrice()).item(itemRepository.findById(12L).get()).quantity(2L).order(orderRepository.findById(12L).get()).totalPrice(itemRepository.findById(12L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(13L).get().getPrice()).item(itemRepository.findById(13L).get()).quantity(2L).order(orderRepository.findById(13L).get()).totalPrice(itemRepository.findById(13L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(14L).get().getPrice()).item(itemRepository.findById(14L).get()).quantity(2L).order(orderRepository.findById(14L).get()).totalPrice(itemRepository.findById(14L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(15L).get().getPrice()).item(itemRepository.findById(15L).get()).quantity(2L).order(orderRepository.findById(15L).get()).totalPrice(itemRepository.findById(15L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(16L).get().getPrice()).item(itemRepository.findById(16L).get()).quantity(2L).order(orderRepository.findById(16L).get()).totalPrice(itemRepository.findById(16L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(17L).get().getPrice()).item(itemRepository.findById(17L).get()).quantity(2L).order(orderRepository.findById(17L).get()).totalPrice(itemRepository.findById(17L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(18L).get().getPrice()).item(itemRepository.findById(18L).get()).quantity(2L).order(orderRepository.findById(18L).get()).totalPrice(itemRepository.findById(18L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(19L).get().getPrice()).item(itemRepository.findById(19L).get()).quantity(2L).order(orderRepository.findById(19L).get()).totalPrice(itemRepository.findById(19L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(20L).get().getPrice()).item(itemRepository.findById(20L).get()).quantity(2L).order(orderRepository.findById(20L).get()).totalPrice(itemRepository.findById(20L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(21L).get().getPrice()).item(itemRepository.findById(21L).get()).quantity(2L).order(orderRepository.findById(21L).get()).totalPrice(itemRepository.findById(21L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(22L).get().getPrice()).item(itemRepository.findById(22L).get()).quantity(2L).order(orderRepository.findById(22L).get()).totalPrice(itemRepository.findById(22L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(23L).get().getPrice()).item(itemRepository.findById(23L).get()).quantity(2L).order(orderRepository.findById(23L).get()).totalPrice(itemRepository.findById(23L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(24L).get().getPrice()).item(itemRepository.findById(24L).get()).quantity(2L).order(orderRepository.findById(24L).get()).totalPrice(itemRepository.findById(24L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(25L).get().getPrice()).item(itemRepository.findById(25L).get()).quantity(2L).order(orderRepository.findById(25L).get()).totalPrice(itemRepository.findById(25L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(26L).get().getPrice()).item(itemRepository.findById(26L).get()).quantity(2L).order(orderRepository.findById(26L).get()).totalPrice(itemRepository.findById(26L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(27L).get().getPrice()).item(itemRepository.findById(27L).get()).quantity(2L).order(orderRepository.findById(27L).get()).totalPrice(itemRepository.findById(27L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(28L).get().getPrice()).item(itemRepository.findById(28L).get()).quantity(2L).order(orderRepository.findById(28L).get()).totalPrice(itemRepository.findById(28L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(29L).get().getPrice()).item(itemRepository.findById(29L).get()).quantity(2L).order(orderRepository.findById(29L).get()).totalPrice(itemRepository.findById(29L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(30L).get().getPrice()).item(itemRepository.findById(30L).get()).quantity(2L).order(orderRepository.findById(30L).get()).totalPrice(itemRepository.findById(30L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(31L).get().getPrice()).item(itemRepository.findById(31L).get()).quantity(2L).order(orderRepository.findById(31L).get()).totalPrice(itemRepository.findById(31L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(32L).get().getPrice()).item(itemRepository.findById(32L).get()).quantity(2L).order(orderRepository.findById(32L).get()).totalPrice(itemRepository.findById(32L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(33L).get().getPrice()).item(itemRepository.findById(33L).get()).quantity(2L).order(orderRepository.findById(33L).get()).totalPrice(itemRepository.findById(33L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(34L).get().getPrice()).item(itemRepository.findById(34L).get()).quantity(2L).order(orderRepository.findById(34L).get()).totalPrice(itemRepository.findById(34L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(35L).get().getPrice()).item(itemRepository.findById(35L).get()).quantity(2L).order(orderRepository.findById(35L).get()).totalPrice(itemRepository.findById(35L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(36L).get().getPrice()).item(itemRepository.findById(36L).get()).quantity(2L).order(orderRepository.findById(36L).get()).totalPrice(itemRepository.findById(36L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(37L).get().getPrice()).item(itemRepository.findById(37L).get()).quantity(2L).order(orderRepository.findById(37L).get()).totalPrice(itemRepository.findById(37L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(38L).get().getPrice()).item(itemRepository.findById(38L).get()).quantity(2L).order(orderRepository.findById(38L).get()).totalPrice(itemRepository.findById(38L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(39L).get().getPrice()).item(itemRepository.findById(39L).get()).quantity(2L).order(orderRepository.findById(39L).get()).totalPrice(itemRepository.findById(39L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(40L).get().getPrice()).item(itemRepository.findById(40L).get()).quantity(2L).order(orderRepository.findById(40L).get()).totalPrice(itemRepository.findById(40L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(41L).get().getPrice()).item(itemRepository.findById(41L).get()).quantity(2L).order(orderRepository.findById(41L).get()).totalPrice(itemRepository.findById(41L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(42L).get().getPrice()).item(itemRepository.findById(42L).get()).quantity(2L).order(orderRepository.findById(42L).get()).totalPrice(itemRepository.findById(42L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(43L).get().getPrice()).item(itemRepository.findById(43L).get()).quantity(2L).order(orderRepository.findById(43L).get()).totalPrice(itemRepository.findById(43L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(44L).get().getPrice()).item(itemRepository.findById(44L).get()).quantity(2L).order(orderRepository.findById(44L).get()).totalPrice(itemRepository.findById(44L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(45L).get().getPrice()).item(itemRepository.findById(45L).get()).quantity(2L).order(orderRepository.findById(45L).get()).totalPrice(itemRepository.findById(45L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(46L).get().getPrice()).item(itemRepository.findById(46L).get()).quantity(2L).order(orderRepository.findById(46L).get()).totalPrice(itemRepository.findById(46L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(47L).get().getPrice()).item(itemRepository.findById(47L).get()).quantity(2L).order(orderRepository.findById(47L).get()).totalPrice(itemRepository.findById(47L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(48L).get().getPrice()).item(itemRepository.findById(48L).get()).quantity(2L).order(orderRepository.findById(48L).get()).totalPrice(itemRepository.findById(48L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(49L).get().getPrice()).item(itemRepository.findById(49L).get()).quantity(2L).order(orderRepository.findById(49L).get()).totalPrice(itemRepository.findById(49L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(50L).get().getPrice()).item(itemRepository.findById(50L).get()).quantity(2L).order(orderRepository.findById(50L).get()).totalPrice(itemRepository.findById(50L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(51L).get().getPrice()).item(itemRepository.findById(51L).get()).quantity(2L).order(orderRepository.findById(51L).get()).totalPrice(itemRepository.findById(51L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(52L).get().getPrice()).item(itemRepository.findById(52L).get()).quantity(2L).order(orderRepository.findById(52L).get()).totalPrice(itemRepository.findById(52L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(53L).get().getPrice()).item(itemRepository.findById(53L).get()).quantity(2L).order(orderRepository.findById(53L).get()).totalPrice(itemRepository.findById(53L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(54L).get().getPrice()).item(itemRepository.findById(54L).get()).quantity(2L).order(orderRepository.findById(54L).get()).totalPrice(itemRepository.findById(54L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(55L).get().getPrice()).item(itemRepository.findById(55L).get()).quantity(2L).order(orderRepository.findById(55L).get()).totalPrice(itemRepository.findById(55L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(56L).get().getPrice()).item(itemRepository.findById(56L).get()).quantity(2L).order(orderRepository.findById(56L).get()).totalPrice(itemRepository.findById(56L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(57L).get().getPrice()).item(itemRepository.findById(57L).get()).quantity(2L).order(orderRepository.findById(57L).get()).totalPrice(itemRepository.findById(57L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(58L).get().getPrice()).item(itemRepository.findById(58L).get()).quantity(2L).order(orderRepository.findById(58L).get()).totalPrice(itemRepository.findById(58L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(59L).get().getPrice()).item(itemRepository.findById(59L).get()).quantity(2L).order(orderRepository.findById(59L).get()).totalPrice(itemRepository.findById(59L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(60L).get().getPrice()).item(itemRepository.findById(60L).get()).quantity(2L).order(orderRepository.findById(60L).get()).totalPrice(itemRepository.findById(60L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(61L).get().getPrice()).item(itemRepository.findById(61L).get()).quantity(2L).order(orderRepository.findById(61L).get()).totalPrice(itemRepository.findById(61L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(62L).get().getPrice()).item(itemRepository.findById(62L).get()).quantity(2L).order(orderRepository.findById(62L).get()).totalPrice(itemRepository.findById(62L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(63L).get().getPrice()).item(itemRepository.findById(63L).get()).quantity(2L).order(orderRepository.findById(63L).get()).totalPrice(itemRepository.findById(63L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(64L).get().getPrice()).item(itemRepository.findById(64L).get()).quantity(2L).order(orderRepository.findById(64L).get()).totalPrice(itemRepository.findById(64L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(65L).get().getPrice()).item(itemRepository.findById(65L).get()).quantity(2L).order(orderRepository.findById(65L).get()).totalPrice(itemRepository.findById(65L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(66L).get().getPrice()).item(itemRepository.findById(66L).get()).quantity(2L).order(orderRepository.findById(66L).get()).totalPrice(itemRepository.findById(66L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(67L).get().getPrice()).item(itemRepository.findById(67L).get()).quantity(2L).order(orderRepository.findById(67L).get()).totalPrice(itemRepository.findById(67L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(68L).get().getPrice()).item(itemRepository.findById(68L).get()).quantity(2L).order(orderRepository.findById(68L).get()).totalPrice(itemRepository.findById(68L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(69L).get().getPrice()).item(itemRepository.findById(69L).get()).quantity(2L).order(orderRepository.findById(69L).get()).totalPrice(itemRepository.findById(69L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(70L).get().getPrice()).item(itemRepository.findById(70L).get()).quantity(2L).order(orderRepository.findById(70L).get()).totalPrice(itemRepository.findById(70L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(71L).get().getPrice()).item(itemRepository.findById(71L).get()).quantity(2L).order(orderRepository.findById(71L).get()).totalPrice(itemRepository.findById(71L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(72L).get().getPrice()).item(itemRepository.findById(72L).get()).quantity(2L).order(orderRepository.findById(72L).get()).totalPrice(itemRepository.findById(72L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(73L).get().getPrice()).item(itemRepository.findById(73L).get()).quantity(2L).order(orderRepository.findById(73L).get()).totalPrice(itemRepository.findById(73L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(74L).get().getPrice()).item(itemRepository.findById(74L).get()).quantity(2L).order(orderRepository.findById(74L).get()).totalPrice(itemRepository.findById(74L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(75L).get().getPrice()).item(itemRepository.findById(75L).get()).quantity(2L).order(orderRepository.findById(75L).get()).totalPrice(itemRepository.findById(75L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(76L).get().getPrice()).item(itemRepository.findById(76L).get()).quantity(2L).order(orderRepository.findById(76L).get()).totalPrice(itemRepository.findById(76L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(77L).get().getPrice()).item(itemRepository.findById(77L).get()).quantity(2L).order(orderRepository.findById(77L).get()).totalPrice(itemRepository.findById(77L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(78L).get().getPrice()).item(itemRepository.findById(78L).get()).quantity(2L).order(orderRepository.findById(78L).get()).totalPrice(itemRepository.findById(78L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(79L).get().getPrice()).item(itemRepository.findById(79L).get()).quantity(2L).order(orderRepository.findById(79L).get()).totalPrice(itemRepository.findById(79L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(80L).get().getPrice()).item(itemRepository.findById(80L).get()).quantity(2L).order(orderRepository.findById(80L).get()).totalPrice(itemRepository.findById(80L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(81L).get().getPrice()).item(itemRepository.findById(81L).get()).quantity(2L).order(orderRepository.findById(81L).get()).totalPrice(itemRepository.findById(81L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(82L).get().getPrice()).item(itemRepository.findById(82L).get()).quantity(2L).order(orderRepository.findById(82L).get()).totalPrice(itemRepository.findById(82L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(83L).get().getPrice()).item(itemRepository.findById(83L).get()).quantity(2L).order(orderRepository.findById(83L).get()).totalPrice(itemRepository.findById(83L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(84L).get().getPrice()).item(itemRepository.findById(84L).get()).quantity(2L).order(orderRepository.findById(84L).get()).totalPrice(itemRepository.findById(84L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(85L).get().getPrice()).item(itemRepository.findById(85L).get()).quantity(2L).order(orderRepository.findById(85L).get()).totalPrice(itemRepository.findById(85L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(86L).get().getPrice()).item(itemRepository.findById(86L).get()).quantity(2L).order(orderRepository.findById(86L).get()).totalPrice(itemRepository.findById(86L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(87L).get().getPrice()).item(itemRepository.findById(87L).get()).quantity(2L).order(orderRepository.findById(87L).get()).totalPrice(itemRepository.findById(87L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(88L).get().getPrice()).item(itemRepository.findById(88L).get()).quantity(2L).order(orderRepository.findById(88L).get()).totalPrice(itemRepository.findById(88L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(89L).get().getPrice()).item(itemRepository.findById(89L).get()).quantity(2L).order(orderRepository.findById(89L).get()).totalPrice(itemRepository.findById(89L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(90L).get().getPrice()).item(itemRepository.findById(90L).get()).quantity(2L).order(orderRepository.findById(90L).get()).totalPrice(itemRepository.findById(90L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(91L).get().getPrice()).item(itemRepository.findById(91L).get()).quantity(2L).order(orderRepository.findById(91L).get()).totalPrice(itemRepository.findById(91L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(92L).get().getPrice()).item(itemRepository.findById(92L).get()).quantity(2L).order(orderRepository.findById(92L).get()).totalPrice(itemRepository.findById(92L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(93L).get().getPrice()).item(itemRepository.findById(93L).get()).quantity(2L).order(orderRepository.findById(93L).get()).totalPrice(itemRepository.findById(93L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(94L).get().getPrice()).item(itemRepository.findById(94L).get()).quantity(2L).order(orderRepository.findById(94L).get()).totalPrice(itemRepository.findById(94L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(95L).get().getPrice()).item(itemRepository.findById(95L).get()).quantity(2L).order(orderRepository.findById(95L).get()).totalPrice(itemRepository.findById(95L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(96L).get().getPrice()).item(itemRepository.findById(96L).get()).quantity(2L).order(orderRepository.findById(96L).get()).totalPrice(itemRepository.findById(96L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(97L).get().getPrice()).item(itemRepository.findById(97L).get()).quantity(2L).order(orderRepository.findById(97L).get()).totalPrice(itemRepository.findById(97L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(98L).get().getPrice()).item(itemRepository.findById(98L).get()).quantity(2L).order(orderRepository.findById(98L).get()).totalPrice(itemRepository.findById(98L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(99L).get().getPrice()).item(itemRepository.findById(99L).get()).quantity(2L).order(orderRepository.findById(99L).get()).totalPrice(itemRepository.findById(99L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(100L).get().getPrice()).item(itemRepository.findById(100L).get()).quantity(2L).order(orderRepository.findById(100L).get()).totalPrice(itemRepository.findById(100L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(101L).get().getPrice()).item(itemRepository.findById(101L).get()).quantity(2L).order(orderRepository.findById(101L).get()).totalPrice(itemRepository.findById(101L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(102L).get().getPrice()).item(itemRepository.findById(102L).get()).quantity(2L).order(orderRepository.findById(102L).get()).totalPrice(itemRepository.findById(102L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(103L).get().getPrice()).item(itemRepository.findById(103L).get()).quantity(2L).order(orderRepository.findById(103L).get()).totalPrice(itemRepository.findById(103L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(104L).get().getPrice()).item(itemRepository.findById(104L).get()).quantity(2L).order(orderRepository.findById(104L).get()).totalPrice(itemRepository.findById(104L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(105L).get().getPrice()).item(itemRepository.findById(105L).get()).quantity(2L).order(orderRepository.findById(105L).get()).totalPrice(itemRepository.findById(105L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(106L).get().getPrice()).item(itemRepository.findById(106L).get()).quantity(2L).order(orderRepository.findById(106L).get()).totalPrice(itemRepository.findById(106L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(107L).get().getPrice()).item(itemRepository.findById(107L).get()).quantity(2L).order(orderRepository.findById(107L).get()).totalPrice(itemRepository.findById(107L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(108L).get().getPrice()).item(itemRepository.findById(108L).get()).quantity(2L).order(orderRepository.findById(108L).get()).totalPrice(itemRepository.findById(108L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(109L).get().getPrice()).item(itemRepository.findById(109L).get()).quantity(2L).order(orderRepository.findById(109L).get()).totalPrice(itemRepository.findById(109L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(110L).get().getPrice()).item(itemRepository.findById(110L).get()).quantity(2L).order(orderRepository.findById(110L).get()).totalPrice(itemRepository.findById(110L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(111L).get().getPrice()).item(itemRepository.findById(111L).get()).quantity(2L).order(orderRepository.findById(111L).get()).totalPrice(itemRepository.findById(111L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(112L).get().getPrice()).item(itemRepository.findById(112L).get()).quantity(2L).order(orderRepository.findById(112L).get()).totalPrice(itemRepository.findById(112L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(113L).get().getPrice()).item(itemRepository.findById(113L).get()).quantity(2L).order(orderRepository.findById(113L).get()).totalPrice(itemRepository.findById(113L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(114L).get().getPrice()).item(itemRepository.findById(114L).get()).quantity(2L).order(orderRepository.findById(114L).get()).totalPrice(itemRepository.findById(114L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(115L).get().getPrice()).item(itemRepository.findById(115L).get()).quantity(2L).order(orderRepository.findById(115L).get()).totalPrice(itemRepository.findById(115L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(116L).get().getPrice()).item(itemRepository.findById(116L).get()).quantity(2L).order(orderRepository.findById(116L).get()).totalPrice(itemRepository.findById(116L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(117L).get().getPrice()).item(itemRepository.findById(117L).get()).quantity(2L).order(orderRepository.findById(117L).get()).totalPrice(itemRepository.findById(117L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(118L).get().getPrice()).item(itemRepository.findById(118L).get()).quantity(2L).order(orderRepository.findById(118L).get()).totalPrice(itemRepository.findById(118L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(119L).get().getPrice()).item(itemRepository.findById(119L).get()).quantity(2L).order(orderRepository.findById(119L).get()).totalPrice(itemRepository.findById(119L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(120L).get().getPrice()).item(itemRepository.findById(120L).get()).quantity(2L).order(orderRepository.findById(120L).get()).totalPrice(itemRepository.findById(120L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(121L).get().getPrice()).item(itemRepository.findById(121L).get()).quantity(2L).order(orderRepository.findById(121L).get()).totalPrice(itemRepository.findById(121L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(122L).get().getPrice()).item(itemRepository.findById(122L).get()).quantity(2L).order(orderRepository.findById(122L).get()).totalPrice(itemRepository.findById(122L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(123L).get().getPrice()).item(itemRepository.findById(123L).get()).quantity(2L).order(orderRepository.findById(123L).get()).totalPrice(itemRepository.findById(123L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(124L).get().getPrice()).item(itemRepository.findById(124L).get()).quantity(2L).order(orderRepository.findById(124L).get()).totalPrice(itemRepository.findById(124L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(125L).get().getPrice()).item(itemRepository.findById(125L).get()).quantity(2L).order(orderRepository.findById(125L).get()).totalPrice(itemRepository.findById(125L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(126L).get().getPrice()).item(itemRepository.findById(126L).get()).quantity(2L).order(orderRepository.findById(126L).get()).totalPrice(itemRepository.findById(126L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(127L).get().getPrice()).item(itemRepository.findById(127L).get()).quantity(2L).order(orderRepository.findById(127L).get()).totalPrice(itemRepository.findById(127L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(128L).get().getPrice()).item(itemRepository.findById(128L).get()).quantity(2L).order(orderRepository.findById(128L).get()).totalPrice(itemRepository.findById(128L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(129L).get().getPrice()).item(itemRepository.findById(129L).get()).quantity(2L).order(orderRepository.findById(129L).get()).totalPrice(itemRepository.findById(129L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(130L).get().getPrice()).item(itemRepository.findById(130L).get()).quantity(2L).order(orderRepository.findById(130L).get()).totalPrice(itemRepository.findById(130L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(131L).get().getPrice()).item(itemRepository.findById(131L).get()).quantity(2L).order(orderRepository.findById(131L).get()).totalPrice(itemRepository.findById(131L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(132L).get().getPrice()).item(itemRepository.findById(132L).get()).quantity(2L).order(orderRepository.findById(132L).get()).totalPrice(itemRepository.findById(132L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(133L).get().getPrice()).item(itemRepository.findById(133L).get()).quantity(2L).order(orderRepository.findById(133L).get()).totalPrice(itemRepository.findById(133L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(134L).get().getPrice()).item(itemRepository.findById(134L).get()).quantity(2L).order(orderRepository.findById(134L).get()).totalPrice(itemRepository.findById(134L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(135L).get().getPrice()).item(itemRepository.findById(135L).get()).quantity(2L).order(orderRepository.findById(135L).get()).totalPrice(itemRepository.findById(135L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(136L).get().getPrice()).item(itemRepository.findById(136L).get()).quantity(2L).order(orderRepository.findById(136L).get()).totalPrice(itemRepository.findById(136L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(137L).get().getPrice()).item(itemRepository.findById(137L).get()).quantity(2L).order(orderRepository.findById(137L).get()).totalPrice(itemRepository.findById(137L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(138L).get().getPrice()).item(itemRepository.findById(138L).get()).quantity(2L).order(orderRepository.findById(138L).get()).totalPrice(itemRepository.findById(138L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(139L).get().getPrice()).item(itemRepository.findById(139L).get()).quantity(2L).order(orderRepository.findById(139L).get()).totalPrice(itemRepository.findById(139L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(140L).get().getPrice()).item(itemRepository.findById(140L).get()).quantity(2L).order(orderRepository.findById(140L).get()).totalPrice(itemRepository.findById(140L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(141L).get().getPrice()).item(itemRepository.findById(141L).get()).quantity(2L).order(orderRepository.findById(141L).get()).totalPrice(itemRepository.findById(141L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(142L).get().getPrice()).item(itemRepository.findById(142L).get()).quantity(2L).order(orderRepository.findById(142L).get()).totalPrice(itemRepository.findById(142L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(143L).get().getPrice()).item(itemRepository.findById(143L).get()).quantity(2L).order(orderRepository.findById(143L).get()).totalPrice(itemRepository.findById(143L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(144L).get().getPrice()).item(itemRepository.findById(144L).get()).quantity(2L).order(orderRepository.findById(144L).get()).totalPrice(itemRepository.findById(144L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(145L).get().getPrice()).item(itemRepository.findById(145L).get()).quantity(2L).order(orderRepository.findById(145L).get()).totalPrice(itemRepository.findById(145L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(146L).get().getPrice()).item(itemRepository.findById(146L).get()).quantity(2L).order(orderRepository.findById(146L).get()).totalPrice(itemRepository.findById(146L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(147L).get().getPrice()).item(itemRepository.findById(147L).get()).quantity(2L).order(orderRepository.findById(147L).get()).totalPrice(itemRepository.findById(147L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(148L).get().getPrice()).item(itemRepository.findById(148L).get()).quantity(2L).order(orderRepository.findById(148L).get()).totalPrice(itemRepository.findById(148L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(149L).get().getPrice()).item(itemRepository.findById(149L).get()).quantity(2L).order(orderRepository.findById(149L).get()).totalPrice(itemRepository.findById(149L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(150L).get().getPrice()).item(itemRepository.findById(150L).get()).quantity(2L).order(orderRepository.findById(150L).get()).totalPrice(itemRepository.findById(150L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(151L).get().getPrice()).item(itemRepository.findById(151L).get()).quantity(2L).order(orderRepository.findById(151L).get()).totalPrice(itemRepository.findById(151L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(152L).get().getPrice()).item(itemRepository.findById(152L).get()).quantity(2L).order(orderRepository.findById(152L).get()).totalPrice(itemRepository.findById(152L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(153L).get().getPrice()).item(itemRepository.findById(153L).get()).quantity(2L).order(orderRepository.findById(153L).get()).totalPrice(itemRepository.findById(153L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(154L).get().getPrice()).item(itemRepository.findById(154L).get()).quantity(2L).order(orderRepository.findById(154L).get()).totalPrice(itemRepository.findById(154L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(155L).get().getPrice()).item(itemRepository.findById(155L).get()).quantity(2L).order(orderRepository.findById(155L).get()).totalPrice(itemRepository.findById(155L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(156L).get().getPrice()).item(itemRepository.findById(156L).get()).quantity(2L).order(orderRepository.findById(156L).get()).totalPrice(itemRepository.findById(156L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(157L).get().getPrice()).item(itemRepository.findById(157L).get()).quantity(2L).order(orderRepository.findById(157L).get()).totalPrice(itemRepository.findById(157L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(158L).get().getPrice()).item(itemRepository.findById(158L).get()).quantity(2L).order(orderRepository.findById(158L).get()).totalPrice(itemRepository.findById(158L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(159L).get().getPrice()).item(itemRepository.findById(159L).get()).quantity(2L).order(orderRepository.findById(159L).get()).totalPrice(itemRepository.findById(159L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(160L).get().getPrice()).item(itemRepository.findById(160L).get()).quantity(2L).order(orderRepository.findById(160L).get()).totalPrice(itemRepository.findById(160L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(161L).get().getPrice()).item(itemRepository.findById(161L).get()).quantity(2L).order(orderRepository.findById(161L).get()).totalPrice(itemRepository.findById(161L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(162L).get().getPrice()).item(itemRepository.findById(162L).get()).quantity(2L).order(orderRepository.findById(162L).get()).totalPrice(itemRepository.findById(162L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(163L).get().getPrice()).item(itemRepository.findById(163L).get()).quantity(2L).order(orderRepository.findById(163L).get()).totalPrice(itemRepository.findById(163L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(164L).get().getPrice()).item(itemRepository.findById(164L).get()).quantity(2L).order(orderRepository.findById(164L).get()).totalPrice(itemRepository.findById(164L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(165L).get().getPrice()).item(itemRepository.findById(165L).get()).quantity(2L).order(orderRepository.findById(165L).get()).totalPrice(itemRepository.findById(165L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(166L).get().getPrice()).item(itemRepository.findById(166L).get()).quantity(2L).order(orderRepository.findById(166L).get()).totalPrice(itemRepository.findById(166L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(167L).get().getPrice()).item(itemRepository.findById(167L).get()).quantity(2L).order(orderRepository.findById(167L).get()).totalPrice(itemRepository.findById(167L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(168L).get().getPrice()).item(itemRepository.findById(168L).get()).quantity(2L).order(orderRepository.findById(168L).get()).totalPrice(itemRepository.findById(168L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(169L).get().getPrice()).item(itemRepository.findById(169L).get()).quantity(2L).order(orderRepository.findById(169L).get()).totalPrice(itemRepository.findById(169L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(170L).get().getPrice()).item(itemRepository.findById(170L).get()).quantity(2L).order(orderRepository.findById(170L).get()).totalPrice(itemRepository.findById(170L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(171L).get().getPrice()).item(itemRepository.findById(171L).get()).quantity(2L).order(orderRepository.findById(171L).get()).totalPrice(itemRepository.findById(171L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(172L).get().getPrice()).item(itemRepository.findById(172L).get()).quantity(2L).order(orderRepository.findById(172L).get()).totalPrice(itemRepository.findById(172L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(173L).get().getPrice()).item(itemRepository.findById(173L).get()).quantity(2L).order(orderRepository.findById(173L).get()).totalPrice(itemRepository.findById(173L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(174L).get().getPrice()).item(itemRepository.findById(174L).get()).quantity(2L).order(orderRepository.findById(174L).get()).totalPrice(itemRepository.findById(174L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(175L).get().getPrice()).item(itemRepository.findById(175L).get()).quantity(2L).order(orderRepository.findById(175L).get()).totalPrice(itemRepository.findById(175L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(176L).get().getPrice()).item(itemRepository.findById(176L).get()).quantity(2L).order(orderRepository.findById(176L).get()).totalPrice(itemRepository.findById(176L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(177L).get().getPrice()).item(itemRepository.findById(177L).get()).quantity(2L).order(orderRepository.findById(177L).get()).totalPrice(itemRepository.findById(177L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(178L).get().getPrice()).item(itemRepository.findById(178L).get()).quantity(2L).order(orderRepository.findById(178L).get()).totalPrice(itemRepository.findById(178L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(179L).get().getPrice()).item(itemRepository.findById(179L).get()).quantity(2L).order(orderRepository.findById(179L).get()).totalPrice(itemRepository.findById(179L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(180L).get().getPrice()).item(itemRepository.findById(180L).get()).quantity(2L).order(orderRepository.findById(180L).get()).totalPrice(itemRepository.findById(180L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(181L).get().getPrice()).item(itemRepository.findById(181L).get()).quantity(2L).order(orderRepository.findById(181L).get()).totalPrice(itemRepository.findById(181L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(182L).get().getPrice()).item(itemRepository.findById(182L).get()).quantity(2L).order(orderRepository.findById(182L).get()).totalPrice(itemRepository.findById(182L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(183L).get().getPrice()).item(itemRepository.findById(183L).get()).quantity(2L).order(orderRepository.findById(183L).get()).totalPrice(itemRepository.findById(183L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(184L).get().getPrice()).item(itemRepository.findById(184L).get()).quantity(2L).order(orderRepository.findById(184L).get()).totalPrice(itemRepository.findById(184L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(185L).get().getPrice()).item(itemRepository.findById(185L).get()).quantity(2L).order(orderRepository.findById(185L).get()).totalPrice(itemRepository.findById(185L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(186L).get().getPrice()).item(itemRepository.findById(186L).get()).quantity(2L).order(orderRepository.findById(186L).get()).totalPrice(itemRepository.findById(186L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(187L).get().getPrice()).item(itemRepository.findById(187L).get()).quantity(2L).order(orderRepository.findById(187L).get()).totalPrice(itemRepository.findById(187L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(188L).get().getPrice()).item(itemRepository.findById(188L).get()).quantity(2L).order(orderRepository.findById(188L).get()).totalPrice(itemRepository.findById(188L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(189L).get().getPrice()).item(itemRepository.findById(189L).get()).quantity(2L).order(orderRepository.findById(189L).get()).totalPrice(itemRepository.findById(189L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(190L).get().getPrice()).item(itemRepository.findById(190L).get()).quantity(2L).order(orderRepository.findById(190L).get()).totalPrice(itemRepository.findById(190L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(191L).get().getPrice()).item(itemRepository.findById(191L).get()).quantity(2L).order(orderRepository.findById(191L).get()).totalPrice(itemRepository.findById(191L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(192L).get().getPrice()).item(itemRepository.findById(192L).get()).quantity(2L).order(orderRepository.findById(192L).get()).totalPrice(itemRepository.findById(192L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(193L).get().getPrice()).item(itemRepository.findById(193L).get()).quantity(2L).order(orderRepository.findById(193L).get()).totalPrice(itemRepository.findById(193L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(194L).get().getPrice()).item(itemRepository.findById(194L).get()).quantity(2L).order(orderRepository.findById(194L).get()).totalPrice(itemRepository.findById(194L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(195L).get().getPrice()).item(itemRepository.findById(195L).get()).quantity(2L).order(orderRepository.findById(195L).get()).totalPrice(itemRepository.findById(195L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(196L).get().getPrice()).item(itemRepository.findById(196L).get()).quantity(2L).order(orderRepository.findById(196L).get()).totalPrice(itemRepository.findById(196L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(197L).get().getPrice()).item(itemRepository.findById(197L).get()).quantity(2L).order(orderRepository.findById(197L).get()).totalPrice(itemRepository.findById(197L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(198L).get().getPrice()).item(itemRepository.findById(198L).get()).quantity(2L).order(orderRepository.findById(198L).get()).totalPrice(itemRepository.findById(198L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(199L).get().getPrice()).item(itemRepository.findById(199L).get()).quantity(2L).order(orderRepository.findById(199L).get()).totalPrice(itemRepository.findById(199L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(200L).get().getPrice()).item(itemRepository.findById(200L).get()).quantity(2L).order(orderRepository.findById(200L).get()).totalPrice(itemRepository.findById(200L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(201L).get().getPrice()).item(itemRepository.findById(201L).get()).quantity(2L).order(orderRepository.findById(201L).get()).totalPrice(itemRepository.findById(201L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(202L).get().getPrice()).item(itemRepository.findById(202L).get()).quantity(2L).order(orderRepository.findById(202L).get()).totalPrice(itemRepository.findById(202L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(203L).get().getPrice()).item(itemRepository.findById(203L).get()).quantity(2L).order(orderRepository.findById(203L).get()).totalPrice(itemRepository.findById(203L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(204L).get().getPrice()).item(itemRepository.findById(204L).get()).quantity(2L).order(orderRepository.findById(204L).get()).totalPrice(itemRepository.findById(204L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(205L).get().getPrice()).item(itemRepository.findById(205L).get()).quantity(2L).order(orderRepository.findById(205L).get()).totalPrice(itemRepository.findById(205L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(206L).get().getPrice()).item(itemRepository.findById(206L).get()).quantity(2L).order(orderRepository.findById(206L).get()).totalPrice(itemRepository.findById(206L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(207L).get().getPrice()).item(itemRepository.findById(207L).get()).quantity(2L).order(orderRepository.findById(207L).get()).totalPrice(itemRepository.findById(207L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(208L).get().getPrice()).item(itemRepository.findById(208L).get()).quantity(2L).order(orderRepository.findById(208L).get()).totalPrice(itemRepository.findById(208L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(209L).get().getPrice()).item(itemRepository.findById(209L).get()).quantity(2L).order(orderRepository.findById(209L).get()).totalPrice(itemRepository.findById(209L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(210L).get().getPrice()).item(itemRepository.findById(210L).get()).quantity(2L).order(orderRepository.findById(210L).get()).totalPrice(itemRepository.findById(210L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(211L).get().getPrice()).item(itemRepository.findById(211L).get()).quantity(2L).order(orderRepository.findById(211L).get()).totalPrice(itemRepository.findById(211L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(212L).get().getPrice()).item(itemRepository.findById(212L).get()).quantity(2L).order(orderRepository.findById(212L).get()).totalPrice(itemRepository.findById(212L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(213L).get().getPrice()).item(itemRepository.findById(213L).get()).quantity(2L).order(orderRepository.findById(213L).get()).totalPrice(itemRepository.findById(213L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(214L).get().getPrice()).item(itemRepository.findById(214L).get()).quantity(2L).order(orderRepository.findById(214L).get()).totalPrice(itemRepository.findById(214L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(215L).get().getPrice()).item(itemRepository.findById(215L).get()).quantity(2L).order(orderRepository.findById(215L).get()).totalPrice(itemRepository.findById(215L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(216L).get().getPrice()).item(itemRepository.findById(216L).get()).quantity(2L).order(orderRepository.findById(216L).get()).totalPrice(itemRepository.findById(216L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(217L).get().getPrice()).item(itemRepository.findById(217L).get()).quantity(2L).order(orderRepository.findById(217L).get()).totalPrice(itemRepository.findById(217L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(218L).get().getPrice()).item(itemRepository.findById(218L).get()).quantity(2L).order(orderRepository.findById(218L).get()).totalPrice(itemRepository.findById(218L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(219L).get().getPrice()).item(itemRepository.findById(219L).get()).quantity(2L).order(orderRepository.findById(219L).get()).totalPrice(itemRepository.findById(219L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(220L).get().getPrice()).item(itemRepository.findById(220L).get()).quantity(2L).order(orderRepository.findById(220L).get()).totalPrice(itemRepository.findById(220L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(221L).get().getPrice()).item(itemRepository.findById(221L).get()).quantity(2L).order(orderRepository.findById(221L).get()).totalPrice(itemRepository.findById(221L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(222L).get().getPrice()).item(itemRepository.findById(222L).get()).quantity(2L).order(orderRepository.findById(222L).get()).totalPrice(itemRepository.findById(222L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(223L).get().getPrice()).item(itemRepository.findById(223L).get()).quantity(2L).order(orderRepository.findById(223L).get()).totalPrice(itemRepository.findById(223L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(224L).get().getPrice()).item(itemRepository.findById(224L).get()).quantity(2L).order(orderRepository.findById(224L).get()).totalPrice(itemRepository.findById(224L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(225L).get().getPrice()).item(itemRepository.findById(225L).get()).quantity(2L).order(orderRepository.findById(225L).get()).totalPrice(itemRepository.findById(225L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(226L).get().getPrice()).item(itemRepository.findById(226L).get()).quantity(2L).order(orderRepository.findById(226L).get()).totalPrice(itemRepository.findById(226L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(227L).get().getPrice()).item(itemRepository.findById(227L).get()).quantity(2L).order(orderRepository.findById(227L).get()).totalPrice(itemRepository.findById(227L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(228L).get().getPrice()).item(itemRepository.findById(228L).get()).quantity(2L).order(orderRepository.findById(228L).get()).totalPrice(itemRepository.findById(228L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(229L).get().getPrice()).item(itemRepository.findById(229L).get()).quantity(2L).order(orderRepository.findById(229L).get()).totalPrice(itemRepository.findById(229L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(230L).get().getPrice()).item(itemRepository.findById(230L).get()).quantity(2L).order(orderRepository.findById(230L).get()).totalPrice(itemRepository.findById(230L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(231L).get().getPrice()).item(itemRepository.findById(231L).get()).quantity(2L).order(orderRepository.findById(231L).get()).totalPrice(itemRepository.findById(231L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(232L).get().getPrice()).item(itemRepository.findById(232L).get()).quantity(2L).order(orderRepository.findById(232L).get()).totalPrice(itemRepository.findById(232L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(233L).get().getPrice()).item(itemRepository.findById(233L).get()).quantity(2L).order(orderRepository.findById(233L).get()).totalPrice(itemRepository.findById(233L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(234L).get().getPrice()).item(itemRepository.findById(234L).get()).quantity(2L).order(orderRepository.findById(234L).get()).totalPrice(itemRepository.findById(234L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(235L).get().getPrice()).item(itemRepository.findById(235L).get()).quantity(2L).order(orderRepository.findById(235L).get()).totalPrice(itemRepository.findById(235L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(236L).get().getPrice()).item(itemRepository.findById(236L).get()).quantity(2L).order(orderRepository.findById(236L).get()).totalPrice(itemRepository.findById(236L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(237L).get().getPrice()).item(itemRepository.findById(237L).get()).quantity(2L).order(orderRepository.findById(237L).get()).totalPrice(itemRepository.findById(237L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(238L).get().getPrice()).item(itemRepository.findById(238L).get()).quantity(2L).order(orderRepository.findById(238L).get()).totalPrice(itemRepository.findById(238L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(239L).get().getPrice()).item(itemRepository.findById(239L).get()).quantity(2L).order(orderRepository.findById(239L).get()).totalPrice(itemRepository.findById(239L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(240L).get().getPrice()).item(itemRepository.findById(240L).get()).quantity(2L).order(orderRepository.findById(240L).get()).totalPrice(itemRepository.findById(240L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(241L).get().getPrice()).item(itemRepository.findById(241L).get()).quantity(2L).order(orderRepository.findById(241L).get()).totalPrice(itemRepository.findById(241L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(242L).get().getPrice()).item(itemRepository.findById(242L).get()).quantity(2L).order(orderRepository.findById(242L).get()).totalPrice(itemRepository.findById(242L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(243L).get().getPrice()).item(itemRepository.findById(243L).get()).quantity(2L).order(orderRepository.findById(243L).get()).totalPrice(itemRepository.findById(243L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(244L).get().getPrice()).item(itemRepository.findById(244L).get()).quantity(2L).order(orderRepository.findById(244L).get()).totalPrice(itemRepository.findById(244L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(245L).get().getPrice()).item(itemRepository.findById(245L).get()).quantity(2L).order(orderRepository.findById(245L).get()).totalPrice(itemRepository.findById(245L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(246L).get().getPrice()).item(itemRepository.findById(246L).get()).quantity(2L).order(orderRepository.findById(246L).get()).totalPrice(itemRepository.findById(246L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(247L).get().getPrice()).item(itemRepository.findById(247L).get()).quantity(2L).order(orderRepository.findById(247L).get()).totalPrice(itemRepository.findById(247L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(248L).get().getPrice()).item(itemRepository.findById(248L).get()).quantity(2L).order(orderRepository.findById(248L).get()).totalPrice(itemRepository.findById(248L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(249L).get().getPrice()).item(itemRepository.findById(249L).get()).quantity(2L).order(orderRepository.findById(249L).get()).totalPrice(itemRepository.findById(249L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(250L).get().getPrice()).item(itemRepository.findById(250L).get()).quantity(2L).order(orderRepository.findById(250L).get()).totalPrice(itemRepository.findById(250L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(251L).get().getPrice()).item(itemRepository.findById(251L).get()).quantity(2L).order(orderRepository.findById(251L).get()).totalPrice(itemRepository.findById(251L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(252L).get().getPrice()).item(itemRepository.findById(252L).get()).quantity(2L).order(orderRepository.findById(252L).get()).totalPrice(itemRepository.findById(252L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(253L).get().getPrice()).item(itemRepository.findById(253L).get()).quantity(2L).order(orderRepository.findById(253L).get()).totalPrice(itemRepository.findById(253L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(254L).get().getPrice()).item(itemRepository.findById(254L).get()).quantity(2L).order(orderRepository.findById(254L).get()).totalPrice(itemRepository.findById(254L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(255L).get().getPrice()).item(itemRepository.findById(255L).get()).quantity(2L).order(orderRepository.findById(255L).get()).totalPrice(itemRepository.findById(255L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(256L).get().getPrice()).item(itemRepository.findById(256L).get()).quantity(2L).order(orderRepository.findById(256L).get()).totalPrice(itemRepository.findById(256L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(257L).get().getPrice()).item(itemRepository.findById(257L).get()).quantity(2L).order(orderRepository.findById(257L).get()).totalPrice(itemRepository.findById(257L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(258L).get().getPrice()).item(itemRepository.findById(258L).get()).quantity(2L).order(orderRepository.findById(258L).get()).totalPrice(itemRepository.findById(258L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(259L).get().getPrice()).item(itemRepository.findById(259L).get()).quantity(2L).order(orderRepository.findById(259L).get()).totalPrice(itemRepository.findById(259L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(260L).get().getPrice()).item(itemRepository.findById(260L).get()).quantity(2L).order(orderRepository.findById(260L).get()).totalPrice(itemRepository.findById(260L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(261L).get().getPrice()).item(itemRepository.findById(261L).get()).quantity(2L).order(orderRepository.findById(261L).get()).totalPrice(itemRepository.findById(261L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(262L).get().getPrice()).item(itemRepository.findById(262L).get()).quantity(2L).order(orderRepository.findById(262L).get()).totalPrice(itemRepository.findById(262L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(263L).get().getPrice()).item(itemRepository.findById(263L).get()).quantity(2L).order(orderRepository.findById(263L).get()).totalPrice(itemRepository.findById(263L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(264L).get().getPrice()).item(itemRepository.findById(264L).get()).quantity(2L).order(orderRepository.findById(264L).get()).totalPrice(itemRepository.findById(264L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(265L).get().getPrice()).item(itemRepository.findById(265L).get()).quantity(2L).order(orderRepository.findById(265L).get()).totalPrice(itemRepository.findById(265L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(266L).get().getPrice()).item(itemRepository.findById(266L).get()).quantity(2L).order(orderRepository.findById(266L).get()).totalPrice(itemRepository.findById(266L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(267L).get().getPrice()).item(itemRepository.findById(267L).get()).quantity(2L).order(orderRepository.findById(267L).get()).totalPrice(itemRepository.findById(267L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(268L).get().getPrice()).item(itemRepository.findById(268L).get()).quantity(2L).order(orderRepository.findById(268L).get()).totalPrice(itemRepository.findById(268L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(269L).get().getPrice()).item(itemRepository.findById(269L).get()).quantity(2L).order(orderRepository.findById(269L).get()).totalPrice(itemRepository.findById(269L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(270L).get().getPrice()).item(itemRepository.findById(270L).get()).quantity(2L).order(orderRepository.findById(270L).get()).totalPrice(itemRepository.findById(270L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(271L).get().getPrice()).item(itemRepository.findById(271L).get()).quantity(2L).order(orderRepository.findById(271L).get()).totalPrice(itemRepository.findById(271L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(272L).get().getPrice()).item(itemRepository.findById(272L).get()).quantity(2L).order(orderRepository.findById(272L).get()).totalPrice(itemRepository.findById(272L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(273L).get().getPrice()).item(itemRepository.findById(273L).get()).quantity(2L).order(orderRepository.findById(273L).get()).totalPrice(itemRepository.findById(273L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(274L).get().getPrice()).item(itemRepository.findById(274L).get()).quantity(2L).order(orderRepository.findById(274L).get()).totalPrice(itemRepository.findById(274L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(275L).get().getPrice()).item(itemRepository.findById(275L).get()).quantity(2L).order(orderRepository.findById(275L).get()).totalPrice(itemRepository.findById(275L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(276L).get().getPrice()).item(itemRepository.findById(276L).get()).quantity(2L).order(orderRepository.findById(276L).get()).totalPrice(itemRepository.findById(276L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(277L).get().getPrice()).item(itemRepository.findById(277L).get()).quantity(2L).order(orderRepository.findById(277L).get()).totalPrice(itemRepository.findById(277L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(278L).get().getPrice()).item(itemRepository.findById(278L).get()).quantity(2L).order(orderRepository.findById(278L).get()).totalPrice(itemRepository.findById(278L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(279L).get().getPrice()).item(itemRepository.findById(279L).get()).quantity(2L).order(orderRepository.findById(279L).get()).totalPrice(itemRepository.findById(279L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(280L).get().getPrice()).item(itemRepository.findById(280L).get()).quantity(2L).order(orderRepository.findById(280L).get()).totalPrice(itemRepository.findById(280L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(281L).get().getPrice()).item(itemRepository.findById(281L).get()).quantity(2L).order(orderRepository.findById(281L).get()).totalPrice(itemRepository.findById(281L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(282L).get().getPrice()).item(itemRepository.findById(282L).get()).quantity(2L).order(orderRepository.findById(282L).get()).totalPrice(itemRepository.findById(282L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(283L).get().getPrice()).item(itemRepository.findById(283L).get()).quantity(2L).order(orderRepository.findById(283L).get()).totalPrice(itemRepository.findById(283L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(284L).get().getPrice()).item(itemRepository.findById(284L).get()).quantity(2L).order(orderRepository.findById(284L).get()).totalPrice(itemRepository.findById(284L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(285L).get().getPrice()).item(itemRepository.findById(285L).get()).quantity(2L).order(orderRepository.findById(285L).get()).totalPrice(itemRepository.findById(285L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(286L).get().getPrice()).item(itemRepository.findById(286L).get()).quantity(2L).order(orderRepository.findById(286L).get()).totalPrice(itemRepository.findById(286L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(287L).get().getPrice()).item(itemRepository.findById(287L).get()).quantity(2L).order(orderRepository.findById(287L).get()).totalPrice(itemRepository.findById(287L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(288L).get().getPrice()).item(itemRepository.findById(288L).get()).quantity(2L).order(orderRepository.findById(288L).get()).totalPrice(itemRepository.findById(288L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(289L).get().getPrice()).item(itemRepository.findById(289L).get()).quantity(2L).order(orderRepository.findById(289L).get()).totalPrice(itemRepository.findById(289L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(290L).get().getPrice()).item(itemRepository.findById(290L).get()).quantity(2L).order(orderRepository.findById(290L).get()).totalPrice(itemRepository.findById(290L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(291L).get().getPrice()).item(itemRepository.findById(291L).get()).quantity(2L).order(orderRepository.findById(291L).get()).totalPrice(itemRepository.findById(291L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(292L).get().getPrice()).item(itemRepository.findById(292L).get()).quantity(2L).order(orderRepository.findById(292L).get()).totalPrice(itemRepository.findById(292L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(293L).get().getPrice()).item(itemRepository.findById(293L).get()).quantity(2L).order(orderRepository.findById(293L).get()).totalPrice(itemRepository.findById(293L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(294L).get().getPrice()).item(itemRepository.findById(294L).get()).quantity(2L).order(orderRepository.findById(294L).get()).totalPrice(itemRepository.findById(294L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(295L).get().getPrice()).item(itemRepository.findById(295L).get()).quantity(2L).order(orderRepository.findById(295L).get()).totalPrice(itemRepository.findById(295L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(296L).get().getPrice()).item(itemRepository.findById(296L).get()).quantity(2L).order(orderRepository.findById(296L).get()).totalPrice(itemRepository.findById(296L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(297L).get().getPrice()).item(itemRepository.findById(297L).get()).quantity(2L).order(orderRepository.findById(297L).get()).totalPrice(itemRepository.findById(297L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(298L).get().getPrice()).item(itemRepository.findById(298L).get()).quantity(2L).order(orderRepository.findById(298L).get()).totalPrice(itemRepository.findById(298L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(299L).get().getPrice()).item(itemRepository.findById(299L).get()).quantity(2L).order(orderRepository.findById(299L).get()).totalPrice(itemRepository.findById(299L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(300L).get().getPrice()).item(itemRepository.findById(300L).get()).quantity(2L).order(orderRepository.findById(300L).get()).totalPrice(itemRepository.findById(300L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(301L).get().getPrice()).item(itemRepository.findById(301L).get()).quantity(2L).order(orderRepository.findById(301L).get()).totalPrice(itemRepository.findById(301L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(302L).get().getPrice()).item(itemRepository.findById(302L).get()).quantity(2L).order(orderRepository.findById(302L).get()).totalPrice(itemRepository.findById(302L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(303L).get().getPrice()).item(itemRepository.findById(303L).get()).quantity(2L).order(orderRepository.findById(303L).get()).totalPrice(itemRepository.findById(303L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(304L).get().getPrice()).item(itemRepository.findById(304L).get()).quantity(2L).order(orderRepository.findById(304L).get()).totalPrice(itemRepository.findById(304L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(305L).get().getPrice()).item(itemRepository.findById(305L).get()).quantity(2L).order(orderRepository.findById(305L).get()).totalPrice(itemRepository.findById(305L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(306L).get().getPrice()).item(itemRepository.findById(306L).get()).quantity(2L).order(orderRepository.findById(306L).get()).totalPrice(itemRepository.findById(306L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(307L).get().getPrice()).item(itemRepository.findById(307L).get()).quantity(2L).order(orderRepository.findById(307L).get()).totalPrice(itemRepository.findById(307L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(308L).get().getPrice()).item(itemRepository.findById(308L).get()).quantity(2L).order(orderRepository.findById(308L).get()).totalPrice(itemRepository.findById(308L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(309L).get().getPrice()).item(itemRepository.findById(309L).get()).quantity(2L).order(orderRepository.findById(309L).get()).totalPrice(itemRepository.findById(309L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(310L).get().getPrice()).item(itemRepository.findById(310L).get()).quantity(2L).order(orderRepository.findById(310L).get()).totalPrice(itemRepository.findById(310L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(311L).get().getPrice()).item(itemRepository.findById(311L).get()).quantity(2L).order(orderRepository.findById(311L).get()).totalPrice(itemRepository.findById(311L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(312L).get().getPrice()).item(itemRepository.findById(312L).get()).quantity(2L).order(orderRepository.findById(312L).get()).totalPrice(itemRepository.findById(312L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(313L).get().getPrice()).item(itemRepository.findById(313L).get()).quantity(2L).order(orderRepository.findById(313L).get()).totalPrice(itemRepository.findById(313L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(314L).get().getPrice()).item(itemRepository.findById(314L).get()).quantity(2L).order(orderRepository.findById(314L).get()).totalPrice(itemRepository.findById(314L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(315L).get().getPrice()).item(itemRepository.findById(315L).get()).quantity(2L).order(orderRepository.findById(315L).get()).totalPrice(itemRepository.findById(315L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(316L).get().getPrice()).item(itemRepository.findById(316L).get()).quantity(2L).order(orderRepository.findById(316L).get()).totalPrice(itemRepository.findById(316L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(317L).get().getPrice()).item(itemRepository.findById(317L).get()).quantity(2L).order(orderRepository.findById(317L).get()).totalPrice(itemRepository.findById(317L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(318L).get().getPrice()).item(itemRepository.findById(318L).get()).quantity(2L).order(orderRepository.findById(318L).get()).totalPrice(itemRepository.findById(318L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(319L).get().getPrice()).item(itemRepository.findById(319L).get()).quantity(2L).order(orderRepository.findById(319L).get()).totalPrice(itemRepository.findById(319L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(320L).get().getPrice()).item(itemRepository.findById(320L).get()).quantity(2L).order(orderRepository.findById(320L).get()).totalPrice(itemRepository.findById(320L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(321L).get().getPrice()).item(itemRepository.findById(321L).get()).quantity(2L).order(orderRepository.findById(321L).get()).totalPrice(itemRepository.findById(321L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(322L).get().getPrice()).item(itemRepository.findById(322L).get()).quantity(2L).order(orderRepository.findById(322L).get()).totalPrice(itemRepository.findById(322L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(323L).get().getPrice()).item(itemRepository.findById(323L).get()).quantity(2L).order(orderRepository.findById(323L).get()).totalPrice(itemRepository.findById(323L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(324L).get().getPrice()).item(itemRepository.findById(324L).get()).quantity(2L).order(orderRepository.findById(324L).get()).totalPrice(itemRepository.findById(324L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(325L).get().getPrice()).item(itemRepository.findById(325L).get()).quantity(2L).order(orderRepository.findById(325L).get()).totalPrice(itemRepository.findById(325L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(326L).get().getPrice()).item(itemRepository.findById(326L).get()).quantity(2L).order(orderRepository.findById(326L).get()).totalPrice(itemRepository.findById(326L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(327L).get().getPrice()).item(itemRepository.findById(327L).get()).quantity(2L).order(orderRepository.findById(327L).get()).totalPrice(itemRepository.findById(327L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(328L).get().getPrice()).item(itemRepository.findById(328L).get()).quantity(2L).order(orderRepository.findById(328L).get()).totalPrice(itemRepository.findById(328L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(329L).get().getPrice()).item(itemRepository.findById(329L).get()).quantity(2L).order(orderRepository.findById(329L).get()).totalPrice(itemRepository.findById(329L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(330L).get().getPrice()).item(itemRepository.findById(330L).get()).quantity(2L).order(orderRepository.findById(330L).get()).totalPrice(itemRepository.findById(330L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(331L).get().getPrice()).item(itemRepository.findById(331L).get()).quantity(2L).order(orderRepository.findById(331L).get()).totalPrice(itemRepository.findById(331L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(332L).get().getPrice()).item(itemRepository.findById(332L).get()).quantity(2L).order(orderRepository.findById(332L).get()).totalPrice(itemRepository.findById(332L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(333L).get().getPrice()).item(itemRepository.findById(333L).get()).quantity(2L).order(orderRepository.findById(333L).get()).totalPrice(itemRepository.findById(333L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(334L).get().getPrice()).item(itemRepository.findById(334L).get()).quantity(2L).order(orderRepository.findById(334L).get()).totalPrice(itemRepository.findById(334L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(335L).get().getPrice()).item(itemRepository.findById(335L).get()).quantity(2L).order(orderRepository.findById(335L).get()).totalPrice(itemRepository.findById(335L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(336L).get().getPrice()).item(itemRepository.findById(336L).get()).quantity(2L).order(orderRepository.findById(336L).get()).totalPrice(itemRepository.findById(336L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(337L).get().getPrice()).item(itemRepository.findById(337L).get()).quantity(2L).order(orderRepository.findById(337L).get()).totalPrice(itemRepository.findById(337L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(338L).get().getPrice()).item(itemRepository.findById(338L).get()).quantity(2L).order(orderRepository.findById(338L).get()).totalPrice(itemRepository.findById(338L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(339L).get().getPrice()).item(itemRepository.findById(339L).get()).quantity(2L).order(orderRepository.findById(339L).get()).totalPrice(itemRepository.findById(339L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(340L).get().getPrice()).item(itemRepository.findById(340L).get()).quantity(2L).order(orderRepository.findById(340L).get()).totalPrice(itemRepository.findById(340L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(341L).get().getPrice()).item(itemRepository.findById(341L).get()).quantity(2L).order(orderRepository.findById(341L).get()).totalPrice(itemRepository.findById(341L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(342L).get().getPrice()).item(itemRepository.findById(342L).get()).quantity(2L).order(orderRepository.findById(342L).get()).totalPrice(itemRepository.findById(342L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(343L).get().getPrice()).item(itemRepository.findById(343L).get()).quantity(2L).order(orderRepository.findById(343L).get()).totalPrice(itemRepository.findById(343L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(344L).get().getPrice()).item(itemRepository.findById(344L).get()).quantity(2L).order(orderRepository.findById(344L).get()).totalPrice(itemRepository.findById(344L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(345L).get().getPrice()).item(itemRepository.findById(345L).get()).quantity(2L).order(orderRepository.findById(345L).get()).totalPrice(itemRepository.findById(345L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(346L).get().getPrice()).item(itemRepository.findById(346L).get()).quantity(2L).order(orderRepository.findById(346L).get()).totalPrice(itemRepository.findById(346L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(347L).get().getPrice()).item(itemRepository.findById(347L).get()).quantity(2L).order(orderRepository.findById(347L).get()).totalPrice(itemRepository.findById(347L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(348L).get().getPrice()).item(itemRepository.findById(348L).get()).quantity(2L).order(orderRepository.findById(348L).get()).totalPrice(itemRepository.findById(348L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(349L).get().getPrice()).item(itemRepository.findById(349L).get()).quantity(2L).order(orderRepository.findById(349L).get()).totalPrice(itemRepository.findById(349L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(350L).get().getPrice()).item(itemRepository.findById(350L).get()).quantity(2L).order(orderRepository.findById(350L).get()).totalPrice(itemRepository.findById(350L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(351L).get().getPrice()).item(itemRepository.findById(351L).get()).quantity(2L).order(orderRepository.findById(351L).get()).totalPrice(itemRepository.findById(351L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(352L).get().getPrice()).item(itemRepository.findById(352L).get()).quantity(2L).order(orderRepository.findById(352L).get()).totalPrice(itemRepository.findById(352L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(353L).get().getPrice()).item(itemRepository.findById(353L).get()).quantity(2L).order(orderRepository.findById(353L).get()).totalPrice(itemRepository.findById(353L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(354L).get().getPrice()).item(itemRepository.findById(354L).get()).quantity(2L).order(orderRepository.findById(354L).get()).totalPrice(itemRepository.findById(354L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(355L).get().getPrice()).item(itemRepository.findById(355L).get()).quantity(2L).order(orderRepository.findById(355L).get()).totalPrice(itemRepository.findById(355L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(356L).get().getPrice()).item(itemRepository.findById(356L).get()).quantity(2L).order(orderRepository.findById(356L).get()).totalPrice(itemRepository.findById(356L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(357L).get().getPrice()).item(itemRepository.findById(357L).get()).quantity(2L).order(orderRepository.findById(357L).get()).totalPrice(itemRepository.findById(357L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(358L).get().getPrice()).item(itemRepository.findById(358L).get()).quantity(2L).order(orderRepository.findById(358L).get()).totalPrice(itemRepository.findById(358L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(359L).get().getPrice()).item(itemRepository.findById(359L).get()).quantity(2L).order(orderRepository.findById(359L).get()).totalPrice(itemRepository.findById(359L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(360L).get().getPrice()).item(itemRepository.findById(360L).get()).quantity(2L).order(orderRepository.findById(360L).get()).totalPrice(itemRepository.findById(360L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(361L).get().getPrice()).item(itemRepository.findById(361L).get()).quantity(2L).order(orderRepository.findById(361L).get()).totalPrice(itemRepository.findById(361L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(362L).get().getPrice()).item(itemRepository.findById(362L).get()).quantity(2L).order(orderRepository.findById(362L).get()).totalPrice(itemRepository.findById(362L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(363L).get().getPrice()).item(itemRepository.findById(363L).get()).quantity(2L).order(orderRepository.findById(363L).get()).totalPrice(itemRepository.findById(363L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(364L).get().getPrice()).item(itemRepository.findById(364L).get()).quantity(2L).order(orderRepository.findById(364L).get()).totalPrice(itemRepository.findById(364L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(365L).get().getPrice()).item(itemRepository.findById(365L).get()).quantity(2L).order(orderRepository.findById(365L).get()).totalPrice(itemRepository.findById(365L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(366L).get().getPrice()).item(itemRepository.findById(366L).get()).quantity(2L).order(orderRepository.findById(366L).get()).totalPrice(itemRepository.findById(366L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(367L).get().getPrice()).item(itemRepository.findById(367L).get()).quantity(2L).order(orderRepository.findById(367L).get()).totalPrice(itemRepository.findById(367L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(368L).get().getPrice()).item(itemRepository.findById(368L).get()).quantity(2L).order(orderRepository.findById(368L).get()).totalPrice(itemRepository.findById(368L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(369L).get().getPrice()).item(itemRepository.findById(369L).get()).quantity(2L).order(orderRepository.findById(369L).get()).totalPrice(itemRepository.findById(369L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(370L).get().getPrice()).item(itemRepository.findById(370L).get()).quantity(2L).order(orderRepository.findById(370L).get()).totalPrice(itemRepository.findById(370L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(371L).get().getPrice()).item(itemRepository.findById(371L).get()).quantity(2L).order(orderRepository.findById(371L).get()).totalPrice(itemRepository.findById(371L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(372L).get().getPrice()).item(itemRepository.findById(372L).get()).quantity(2L).order(orderRepository.findById(372L).get()).totalPrice(itemRepository.findById(372L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(373L).get().getPrice()).item(itemRepository.findById(373L).get()).quantity(2L).order(orderRepository.findById(373L).get()).totalPrice(itemRepository.findById(373L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(374L).get().getPrice()).item(itemRepository.findById(374L).get()).quantity(2L).order(orderRepository.findById(374L).get()).totalPrice(itemRepository.findById(374L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(375L).get().getPrice()).item(itemRepository.findById(375L).get()).quantity(2L).order(orderRepository.findById(375L).get()).totalPrice(itemRepository.findById(375L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(376L).get().getPrice()).item(itemRepository.findById(376L).get()).quantity(2L).order(orderRepository.findById(376L).get()).totalPrice(itemRepository.findById(376L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(377L).get().getPrice()).item(itemRepository.findById(377L).get()).quantity(2L).order(orderRepository.findById(377L).get()).totalPrice(itemRepository.findById(377L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(378L).get().getPrice()).item(itemRepository.findById(378L).get()).quantity(2L).order(orderRepository.findById(378L).get()).totalPrice(itemRepository.findById(378L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(379L).get().getPrice()).item(itemRepository.findById(379L).get()).quantity(2L).order(orderRepository.findById(379L).get()).totalPrice(itemRepository.findById(379L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(380L).get().getPrice()).item(itemRepository.findById(380L).get()).quantity(2L).order(orderRepository.findById(380L).get()).totalPrice(itemRepository.findById(380L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(381L).get().getPrice()).item(itemRepository.findById(381L).get()).quantity(2L).order(orderRepository.findById(381L).get()).totalPrice(itemRepository.findById(381L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(382L).get().getPrice()).item(itemRepository.findById(382L).get()).quantity(2L).order(orderRepository.findById(382L).get()).totalPrice(itemRepository.findById(382L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(383L).get().getPrice()).item(itemRepository.findById(383L).get()).quantity(2L).order(orderRepository.findById(383L).get()).totalPrice(itemRepository.findById(383L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(384L).get().getPrice()).item(itemRepository.findById(384L).get()).quantity(2L).order(orderRepository.findById(384L).get()).totalPrice(itemRepository.findById(384L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(385L).get().getPrice()).item(itemRepository.findById(385L).get()).quantity(2L).order(orderRepository.findById(385L).get()).totalPrice(itemRepository.findById(385L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(386L).get().getPrice()).item(itemRepository.findById(386L).get()).quantity(2L).order(orderRepository.findById(386L).get()).totalPrice(itemRepository.findById(386L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(387L).get().getPrice()).item(itemRepository.findById(387L).get()).quantity(2L).order(orderRepository.findById(387L).get()).totalPrice(itemRepository.findById(387L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(388L).get().getPrice()).item(itemRepository.findById(388L).get()).quantity(2L).order(orderRepository.findById(388L).get()).totalPrice(itemRepository.findById(388L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(389L).get().getPrice()).item(itemRepository.findById(389L).get()).quantity(2L).order(orderRepository.findById(389L).get()).totalPrice(itemRepository.findById(389L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(390L).get().getPrice()).item(itemRepository.findById(390L).get()).quantity(2L).order(orderRepository.findById(390L).get()).totalPrice(itemRepository.findById(390L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(391L).get().getPrice()).item(itemRepository.findById(391L).get()).quantity(2L).order(orderRepository.findById(391L).get()).totalPrice(itemRepository.findById(391L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(392L).get().getPrice()).item(itemRepository.findById(392L).get()).quantity(2L).order(orderRepository.findById(392L).get()).totalPrice(itemRepository.findById(392L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(393L).get().getPrice()).item(itemRepository.findById(393L).get()).quantity(2L).order(orderRepository.findById(393L).get()).totalPrice(itemRepository.findById(393L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(394L).get().getPrice()).item(itemRepository.findById(394L).get()).quantity(2L).order(orderRepository.findById(394L).get()).totalPrice(itemRepository.findById(394L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(395L).get().getPrice()).item(itemRepository.findById(395L).get()).quantity(2L).order(orderRepository.findById(395L).get()).totalPrice(itemRepository.findById(395L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(396L).get().getPrice()).item(itemRepository.findById(396L).get()).quantity(2L).order(orderRepository.findById(396L).get()).totalPrice(itemRepository.findById(396L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(397L).get().getPrice()).item(itemRepository.findById(397L).get()).quantity(2L).order(orderRepository.findById(397L).get()).totalPrice(itemRepository.findById(397L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(398L).get().getPrice()).item(itemRepository.findById(398L).get()).quantity(2L).order(orderRepository.findById(398L).get()).totalPrice(itemRepository.findById(398L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(399L).get().getPrice()).item(itemRepository.findById(399L).get()).quantity(2L).order(orderRepository.findById(399L).get()).totalPrice(itemRepository.findById(399L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(400L).get().getPrice()).item(itemRepository.findById(400L).get()).quantity(2L).order(orderRepository.findById(400L).get()).totalPrice(itemRepository.findById(400L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
    }

    void initOrderDetail2() {
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(401L).get().getPrice()).item(itemRepository.findById(401L).get()).quantity(2L).order(orderRepository.findById(1L).get()).totalPrice(itemRepository.findById(401L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(402L).get().getPrice()).item(itemRepository.findById(402L).get()).quantity(2L).order(orderRepository.findById(2L).get()).totalPrice(itemRepository.findById(402L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(403L).get().getPrice()).item(itemRepository.findById(403L).get()).quantity(2L).order(orderRepository.findById(3L).get()).totalPrice(itemRepository.findById(403L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(404L).get().getPrice()).item(itemRepository.findById(404L).get()).quantity(2L).order(orderRepository.findById(4L).get()).totalPrice(itemRepository.findById(404L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(405L).get().getPrice()).item(itemRepository.findById(405L).get()).quantity(2L).order(orderRepository.findById(5L).get()).totalPrice(itemRepository.findById(405L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(406L).get().getPrice()).item(itemRepository.findById(406L).get()).quantity(2L).order(orderRepository.findById(6L).get()).totalPrice(itemRepository.findById(406L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(407L).get().getPrice()).item(itemRepository.findById(407L).get()).quantity(2L).order(orderRepository.findById(7L).get()).totalPrice(itemRepository.findById(407L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(408L).get().getPrice()).item(itemRepository.findById(408L).get()).quantity(2L).order(orderRepository.findById(8L).get()).totalPrice(itemRepository.findById(408L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(409L).get().getPrice()).item(itemRepository.findById(409L).get()).quantity(2L).order(orderRepository.findById(9L).get()).totalPrice(itemRepository.findById(409L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(410L).get().getPrice()).item(itemRepository.findById(410L).get()).quantity(2L).order(orderRepository.findById(10L).get()).totalPrice(itemRepository.findById(410L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(411L).get().getPrice()).item(itemRepository.findById(411L).get()).quantity(2L).order(orderRepository.findById(11L).get()).totalPrice(itemRepository.findById(411L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(412L).get().getPrice()).item(itemRepository.findById(412L).get()).quantity(2L).order(orderRepository.findById(12L).get()).totalPrice(itemRepository.findById(412L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(413L).get().getPrice()).item(itemRepository.findById(413L).get()).quantity(2L).order(orderRepository.findById(13L).get()).totalPrice(itemRepository.findById(413L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(414L).get().getPrice()).item(itemRepository.findById(414L).get()).quantity(2L).order(orderRepository.findById(14L).get()).totalPrice(itemRepository.findById(414L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(415L).get().getPrice()).item(itemRepository.findById(415L).get()).quantity(2L).order(orderRepository.findById(15L).get()).totalPrice(itemRepository.findById(415L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(416L).get().getPrice()).item(itemRepository.findById(416L).get()).quantity(2L).order(orderRepository.findById(16L).get()).totalPrice(itemRepository.findById(416L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(417L).get().getPrice()).item(itemRepository.findById(417L).get()).quantity(2L).order(orderRepository.findById(17L).get()).totalPrice(itemRepository.findById(417L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(418L).get().getPrice()).item(itemRepository.findById(418L).get()).quantity(2L).order(orderRepository.findById(18L).get()).totalPrice(itemRepository.findById(418L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(419L).get().getPrice()).item(itemRepository.findById(419L).get()).quantity(2L).order(orderRepository.findById(19L).get()).totalPrice(itemRepository.findById(419L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(420L).get().getPrice()).item(itemRepository.findById(420L).get()).quantity(2L).order(orderRepository.findById(20L).get()).totalPrice(itemRepository.findById(420L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(421L).get().getPrice()).item(itemRepository.findById(421L).get()).quantity(2L).order(orderRepository.findById(21L).get()).totalPrice(itemRepository.findById(421L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(422L).get().getPrice()).item(itemRepository.findById(422L).get()).quantity(2L).order(orderRepository.findById(22L).get()).totalPrice(itemRepository.findById(422L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(423L).get().getPrice()).item(itemRepository.findById(423L).get()).quantity(2L).order(orderRepository.findById(23L).get()).totalPrice(itemRepository.findById(423L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(424L).get().getPrice()).item(itemRepository.findById(424L).get()).quantity(2L).order(orderRepository.findById(24L).get()).totalPrice(itemRepository.findById(424L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(425L).get().getPrice()).item(itemRepository.findById(425L).get()).quantity(2L).order(orderRepository.findById(25L).get()).totalPrice(itemRepository.findById(425L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(426L).get().getPrice()).item(itemRepository.findById(426L).get()).quantity(2L).order(orderRepository.findById(26L).get()).totalPrice(itemRepository.findById(426L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(427L).get().getPrice()).item(itemRepository.findById(427L).get()).quantity(2L).order(orderRepository.findById(27L).get()).totalPrice(itemRepository.findById(427L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(428L).get().getPrice()).item(itemRepository.findById(428L).get()).quantity(2L).order(orderRepository.findById(28L).get()).totalPrice(itemRepository.findById(428L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(429L).get().getPrice()).item(itemRepository.findById(429L).get()).quantity(2L).order(orderRepository.findById(29L).get()).totalPrice(itemRepository.findById(429L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(430L).get().getPrice()).item(itemRepository.findById(430L).get()).quantity(2L).order(orderRepository.findById(30L).get()).totalPrice(itemRepository.findById(430L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(431L).get().getPrice()).item(itemRepository.findById(431L).get()).quantity(2L).order(orderRepository.findById(31L).get()).totalPrice(itemRepository.findById(431L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(432L).get().getPrice()).item(itemRepository.findById(432L).get()).quantity(2L).order(orderRepository.findById(32L).get()).totalPrice(itemRepository.findById(432L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(433L).get().getPrice()).item(itemRepository.findById(433L).get()).quantity(2L).order(orderRepository.findById(33L).get()).totalPrice(itemRepository.findById(433L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(434L).get().getPrice()).item(itemRepository.findById(434L).get()).quantity(2L).order(orderRepository.findById(34L).get()).totalPrice(itemRepository.findById(434L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(435L).get().getPrice()).item(itemRepository.findById(435L).get()).quantity(2L).order(orderRepository.findById(35L).get()).totalPrice(itemRepository.findById(435L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(436L).get().getPrice()).item(itemRepository.findById(436L).get()).quantity(2L).order(orderRepository.findById(36L).get()).totalPrice(itemRepository.findById(436L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(437L).get().getPrice()).item(itemRepository.findById(437L).get()).quantity(2L).order(orderRepository.findById(37L).get()).totalPrice(itemRepository.findById(437L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(438L).get().getPrice()).item(itemRepository.findById(438L).get()).quantity(2L).order(orderRepository.findById(38L).get()).totalPrice(itemRepository.findById(438L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(439L).get().getPrice()).item(itemRepository.findById(439L).get()).quantity(2L).order(orderRepository.findById(39L).get()).totalPrice(itemRepository.findById(439L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(440L).get().getPrice()).item(itemRepository.findById(440L).get()).quantity(2L).order(orderRepository.findById(40L).get()).totalPrice(itemRepository.findById(440L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(441L).get().getPrice()).item(itemRepository.findById(441L).get()).quantity(2L).order(orderRepository.findById(41L).get()).totalPrice(itemRepository.findById(441L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(442L).get().getPrice()).item(itemRepository.findById(442L).get()).quantity(2L).order(orderRepository.findById(42L).get()).totalPrice(itemRepository.findById(442L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(443L).get().getPrice()).item(itemRepository.findById(443L).get()).quantity(2L).order(orderRepository.findById(43L).get()).totalPrice(itemRepository.findById(443L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(444L).get().getPrice()).item(itemRepository.findById(444L).get()).quantity(2L).order(orderRepository.findById(44L).get()).totalPrice(itemRepository.findById(444L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(445L).get().getPrice()).item(itemRepository.findById(445L).get()).quantity(2L).order(orderRepository.findById(45L).get()).totalPrice(itemRepository.findById(445L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(446L).get().getPrice()).item(itemRepository.findById(446L).get()).quantity(2L).order(orderRepository.findById(46L).get()).totalPrice(itemRepository.findById(446L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(447L).get().getPrice()).item(itemRepository.findById(447L).get()).quantity(2L).order(orderRepository.findById(47L).get()).totalPrice(itemRepository.findById(447L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(448L).get().getPrice()).item(itemRepository.findById(448L).get()).quantity(2L).order(orderRepository.findById(48L).get()).totalPrice(itemRepository.findById(448L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(449L).get().getPrice()).item(itemRepository.findById(449L).get()).quantity(2L).order(orderRepository.findById(49L).get()).totalPrice(itemRepository.findById(449L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(450L).get().getPrice()).item(itemRepository.findById(450L).get()).quantity(2L).order(orderRepository.findById(50L).get()).totalPrice(itemRepository.findById(450L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(451L).get().getPrice()).item(itemRepository.findById(451L).get()).quantity(2L).order(orderRepository.findById(51L).get()).totalPrice(itemRepository.findById(451L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(452L).get().getPrice()).item(itemRepository.findById(452L).get()).quantity(2L).order(orderRepository.findById(52L).get()).totalPrice(itemRepository.findById(452L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(453L).get().getPrice()).item(itemRepository.findById(453L).get()).quantity(2L).order(orderRepository.findById(53L).get()).totalPrice(itemRepository.findById(453L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(454L).get().getPrice()).item(itemRepository.findById(454L).get()).quantity(2L).order(orderRepository.findById(54L).get()).totalPrice(itemRepository.findById(454L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(455L).get().getPrice()).item(itemRepository.findById(455L).get()).quantity(2L).order(orderRepository.findById(55L).get()).totalPrice(itemRepository.findById(455L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(456L).get().getPrice()).item(itemRepository.findById(456L).get()).quantity(2L).order(orderRepository.findById(56L).get()).totalPrice(itemRepository.findById(456L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(457L).get().getPrice()).item(itemRepository.findById(457L).get()).quantity(2L).order(orderRepository.findById(57L).get()).totalPrice(itemRepository.findById(457L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(458L).get().getPrice()).item(itemRepository.findById(458L).get()).quantity(2L).order(orderRepository.findById(58L).get()).totalPrice(itemRepository.findById(458L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(459L).get().getPrice()).item(itemRepository.findById(459L).get()).quantity(2L).order(orderRepository.findById(59L).get()).totalPrice(itemRepository.findById(459L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(460L).get().getPrice()).item(itemRepository.findById(460L).get()).quantity(2L).order(orderRepository.findById(60L).get()).totalPrice(itemRepository.findById(460L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(461L).get().getPrice()).item(itemRepository.findById(461L).get()).quantity(2L).order(orderRepository.findById(61L).get()).totalPrice(itemRepository.findById(461L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(462L).get().getPrice()).item(itemRepository.findById(462L).get()).quantity(2L).order(orderRepository.findById(62L).get()).totalPrice(itemRepository.findById(462L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(463L).get().getPrice()).item(itemRepository.findById(463L).get()).quantity(2L).order(orderRepository.findById(63L).get()).totalPrice(itemRepository.findById(463L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(464L).get().getPrice()).item(itemRepository.findById(464L).get()).quantity(2L).order(orderRepository.findById(64L).get()).totalPrice(itemRepository.findById(464L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(465L).get().getPrice()).item(itemRepository.findById(465L).get()).quantity(2L).order(orderRepository.findById(65L).get()).totalPrice(itemRepository.findById(465L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(466L).get().getPrice()).item(itemRepository.findById(466L).get()).quantity(2L).order(orderRepository.findById(66L).get()).totalPrice(itemRepository.findById(466L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(467L).get().getPrice()).item(itemRepository.findById(467L).get()).quantity(2L).order(orderRepository.findById(67L).get()).totalPrice(itemRepository.findById(467L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(468L).get().getPrice()).item(itemRepository.findById(468L).get()).quantity(2L).order(orderRepository.findById(68L).get()).totalPrice(itemRepository.findById(468L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(469L).get().getPrice()).item(itemRepository.findById(469L).get()).quantity(2L).order(orderRepository.findById(69L).get()).totalPrice(itemRepository.findById(469L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(470L).get().getPrice()).item(itemRepository.findById(470L).get()).quantity(2L).order(orderRepository.findById(70L).get()).totalPrice(itemRepository.findById(470L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(471L).get().getPrice()).item(itemRepository.findById(471L).get()).quantity(2L).order(orderRepository.findById(71L).get()).totalPrice(itemRepository.findById(471L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(472L).get().getPrice()).item(itemRepository.findById(472L).get()).quantity(2L).order(orderRepository.findById(72L).get()).totalPrice(itemRepository.findById(472L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(473L).get().getPrice()).item(itemRepository.findById(473L).get()).quantity(2L).order(orderRepository.findById(73L).get()).totalPrice(itemRepository.findById(473L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(474L).get().getPrice()).item(itemRepository.findById(474L).get()).quantity(2L).order(orderRepository.findById(74L).get()).totalPrice(itemRepository.findById(474L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(475L).get().getPrice()).item(itemRepository.findById(475L).get()).quantity(2L).order(orderRepository.findById(75L).get()).totalPrice(itemRepository.findById(475L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(476L).get().getPrice()).item(itemRepository.findById(476L).get()).quantity(2L).order(orderRepository.findById(76L).get()).totalPrice(itemRepository.findById(476L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(477L).get().getPrice()).item(itemRepository.findById(477L).get()).quantity(2L).order(orderRepository.findById(77L).get()).totalPrice(itemRepository.findById(477L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(478L).get().getPrice()).item(itemRepository.findById(478L).get()).quantity(2L).order(orderRepository.findById(78L).get()).totalPrice(itemRepository.findById(478L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(479L).get().getPrice()).item(itemRepository.findById(479L).get()).quantity(2L).order(orderRepository.findById(79L).get()).totalPrice(itemRepository.findById(479L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(480L).get().getPrice()).item(itemRepository.findById(480L).get()).quantity(2L).order(orderRepository.findById(80L).get()).totalPrice(itemRepository.findById(480L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(481L).get().getPrice()).item(itemRepository.findById(481L).get()).quantity(2L).order(orderRepository.findById(81L).get()).totalPrice(itemRepository.findById(481L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(482L).get().getPrice()).item(itemRepository.findById(482L).get()).quantity(2L).order(orderRepository.findById(82L).get()).totalPrice(itemRepository.findById(482L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(483L).get().getPrice()).item(itemRepository.findById(483L).get()).quantity(2L).order(orderRepository.findById(83L).get()).totalPrice(itemRepository.findById(483L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(484L).get().getPrice()).item(itemRepository.findById(484L).get()).quantity(2L).order(orderRepository.findById(84L).get()).totalPrice(itemRepository.findById(484L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(485L).get().getPrice()).item(itemRepository.findById(485L).get()).quantity(2L).order(orderRepository.findById(85L).get()).totalPrice(itemRepository.findById(485L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(486L).get().getPrice()).item(itemRepository.findById(486L).get()).quantity(2L).order(orderRepository.findById(86L).get()).totalPrice(itemRepository.findById(486L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(487L).get().getPrice()).item(itemRepository.findById(487L).get()).quantity(2L).order(orderRepository.findById(87L).get()).totalPrice(itemRepository.findById(487L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(488L).get().getPrice()).item(itemRepository.findById(488L).get()).quantity(2L).order(orderRepository.findById(88L).get()).totalPrice(itemRepository.findById(488L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(489L).get().getPrice()).item(itemRepository.findById(489L).get()).quantity(2L).order(orderRepository.findById(89L).get()).totalPrice(itemRepository.findById(489L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(490L).get().getPrice()).item(itemRepository.findById(490L).get()).quantity(2L).order(orderRepository.findById(90L).get()).totalPrice(itemRepository.findById(490L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(491L).get().getPrice()).item(itemRepository.findById(491L).get()).quantity(2L).order(orderRepository.findById(91L).get()).totalPrice(itemRepository.findById(491L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(492L).get().getPrice()).item(itemRepository.findById(492L).get()).quantity(2L).order(orderRepository.findById(92L).get()).totalPrice(itemRepository.findById(492L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(493L).get().getPrice()).item(itemRepository.findById(493L).get()).quantity(2L).order(orderRepository.findById(93L).get()).totalPrice(itemRepository.findById(493L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(494L).get().getPrice()).item(itemRepository.findById(494L).get()).quantity(2L).order(orderRepository.findById(94L).get()).totalPrice(itemRepository.findById(494L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(495L).get().getPrice()).item(itemRepository.findById(495L).get()).quantity(2L).order(orderRepository.findById(95L).get()).totalPrice(itemRepository.findById(495L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(496L).get().getPrice()).item(itemRepository.findById(496L).get()).quantity(2L).order(orderRepository.findById(96L).get()).totalPrice(itemRepository.findById(496L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(497L).get().getPrice()).item(itemRepository.findById(497L).get()).quantity(2L).order(orderRepository.findById(97L).get()).totalPrice(itemRepository.findById(497L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(498L).get().getPrice()).item(itemRepository.findById(498L).get()).quantity(2L).order(orderRepository.findById(98L).get()).totalPrice(itemRepository.findById(498L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(499L).get().getPrice()).item(itemRepository.findById(499L).get()).quantity(2L).order(orderRepository.findById(99L).get()).totalPrice(itemRepository.findById(499L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(500L).get().getPrice()).item(itemRepository.findById(500L).get()).quantity(2L).order(orderRepository.findById(100L).get()).totalPrice(itemRepository.findById(500L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(1L).get().getPrice()).item(itemRepository.findById(1L).get()).quantity(2L).order(orderRepository.findById(101L).get()).totalPrice(itemRepository.findById(1L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(2L).get().getPrice()).item(itemRepository.findById(2L).get()).quantity(2L).order(orderRepository.findById(102L).get()).totalPrice(itemRepository.findById(2L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(3L).get().getPrice()).item(itemRepository.findById(3L).get()).quantity(2L).order(orderRepository.findById(103L).get()).totalPrice(itemRepository.findById(3L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(4L).get().getPrice()).item(itemRepository.findById(4L).get()).quantity(2L).order(orderRepository.findById(104L).get()).totalPrice(itemRepository.findById(4L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(5L).get().getPrice()).item(itemRepository.findById(5L).get()).quantity(2L).order(orderRepository.findById(105L).get()).totalPrice(itemRepository.findById(5L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(6L).get().getPrice()).item(itemRepository.findById(6L).get()).quantity(2L).order(orderRepository.findById(106L).get()).totalPrice(itemRepository.findById(6L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(7L).get().getPrice()).item(itemRepository.findById(7L).get()).quantity(2L).order(orderRepository.findById(107L).get()).totalPrice(itemRepository.findById(7L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(8L).get().getPrice()).item(itemRepository.findById(8L).get()).quantity(2L).order(orderRepository.findById(108L).get()).totalPrice(itemRepository.findById(8L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(9L).get().getPrice()).item(itemRepository.findById(9L).get()).quantity(2L).order(orderRepository.findById(109L).get()).totalPrice(itemRepository.findById(9L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(10L).get().getPrice()).item(itemRepository.findById(10L).get()).quantity(2L).order(orderRepository.findById(110L).get()).totalPrice(itemRepository.findById(10L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(11L).get().getPrice()).item(itemRepository.findById(11L).get()).quantity(2L).order(orderRepository.findById(111L).get()).totalPrice(itemRepository.findById(11L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(12L).get().getPrice()).item(itemRepository.findById(12L).get()).quantity(2L).order(orderRepository.findById(112L).get()).totalPrice(itemRepository.findById(12L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(13L).get().getPrice()).item(itemRepository.findById(13L).get()).quantity(2L).order(orderRepository.findById(113L).get()).totalPrice(itemRepository.findById(13L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(14L).get().getPrice()).item(itemRepository.findById(14L).get()).quantity(2L).order(orderRepository.findById(114L).get()).totalPrice(itemRepository.findById(14L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(15L).get().getPrice()).item(itemRepository.findById(15L).get()).quantity(2L).order(orderRepository.findById(115L).get()).totalPrice(itemRepository.findById(15L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(16L).get().getPrice()).item(itemRepository.findById(16L).get()).quantity(2L).order(orderRepository.findById(116L).get()).totalPrice(itemRepository.findById(16L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(17L).get().getPrice()).item(itemRepository.findById(17L).get()).quantity(2L).order(orderRepository.findById(117L).get()).totalPrice(itemRepository.findById(17L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(18L).get().getPrice()).item(itemRepository.findById(18L).get()).quantity(2L).order(orderRepository.findById(118L).get()).totalPrice(itemRepository.findById(18L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(19L).get().getPrice()).item(itemRepository.findById(19L).get()).quantity(2L).order(orderRepository.findById(119L).get()).totalPrice(itemRepository.findById(19L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(20L).get().getPrice()).item(itemRepository.findById(20L).get()).quantity(2L).order(orderRepository.findById(120L).get()).totalPrice(itemRepository.findById(20L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(21L).get().getPrice()).item(itemRepository.findById(21L).get()).quantity(2L).order(orderRepository.findById(121L).get()).totalPrice(itemRepository.findById(21L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(22L).get().getPrice()).item(itemRepository.findById(22L).get()).quantity(2L).order(orderRepository.findById(122L).get()).totalPrice(itemRepository.findById(22L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(23L).get().getPrice()).item(itemRepository.findById(23L).get()).quantity(2L).order(orderRepository.findById(123L).get()).totalPrice(itemRepository.findById(23L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(24L).get().getPrice()).item(itemRepository.findById(24L).get()).quantity(2L).order(orderRepository.findById(124L).get()).totalPrice(itemRepository.findById(24L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(25L).get().getPrice()).item(itemRepository.findById(25L).get()).quantity(2L).order(orderRepository.findById(125L).get()).totalPrice(itemRepository.findById(25L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(26L).get().getPrice()).item(itemRepository.findById(26L).get()).quantity(2L).order(orderRepository.findById(126L).get()).totalPrice(itemRepository.findById(26L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(27L).get().getPrice()).item(itemRepository.findById(27L).get()).quantity(2L).order(orderRepository.findById(127L).get()).totalPrice(itemRepository.findById(27L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(28L).get().getPrice()).item(itemRepository.findById(28L).get()).quantity(2L).order(orderRepository.findById(128L).get()).totalPrice(itemRepository.findById(28L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(29L).get().getPrice()).item(itemRepository.findById(29L).get()).quantity(2L).order(orderRepository.findById(129L).get()).totalPrice(itemRepository.findById(29L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(30L).get().getPrice()).item(itemRepository.findById(30L).get()).quantity(2L).order(orderRepository.findById(130L).get()).totalPrice(itemRepository.findById(30L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(31L).get().getPrice()).item(itemRepository.findById(31L).get()).quantity(2L).order(orderRepository.findById(131L).get()).totalPrice(itemRepository.findById(31L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(32L).get().getPrice()).item(itemRepository.findById(32L).get()).quantity(2L).order(orderRepository.findById(132L).get()).totalPrice(itemRepository.findById(32L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(33L).get().getPrice()).item(itemRepository.findById(33L).get()).quantity(2L).order(orderRepository.findById(133L).get()).totalPrice(itemRepository.findById(33L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(34L).get().getPrice()).item(itemRepository.findById(34L).get()).quantity(2L).order(orderRepository.findById(134L).get()).totalPrice(itemRepository.findById(34L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(35L).get().getPrice()).item(itemRepository.findById(35L).get()).quantity(2L).order(orderRepository.findById(135L).get()).totalPrice(itemRepository.findById(35L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(36L).get().getPrice()).item(itemRepository.findById(36L).get()).quantity(2L).order(orderRepository.findById(136L).get()).totalPrice(itemRepository.findById(36L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(37L).get().getPrice()).item(itemRepository.findById(37L).get()).quantity(2L).order(orderRepository.findById(137L).get()).totalPrice(itemRepository.findById(37L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(38L).get().getPrice()).item(itemRepository.findById(38L).get()).quantity(2L).order(orderRepository.findById(138L).get()).totalPrice(itemRepository.findById(38L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(39L).get().getPrice()).item(itemRepository.findById(39L).get()).quantity(2L).order(orderRepository.findById(139L).get()).totalPrice(itemRepository.findById(39L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(40L).get().getPrice()).item(itemRepository.findById(40L).get()).quantity(2L).order(orderRepository.findById(140L).get()).totalPrice(itemRepository.findById(40L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(41L).get().getPrice()).item(itemRepository.findById(41L).get()).quantity(2L).order(orderRepository.findById(141L).get()).totalPrice(itemRepository.findById(41L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(42L).get().getPrice()).item(itemRepository.findById(42L).get()).quantity(2L).order(orderRepository.findById(142L).get()).totalPrice(itemRepository.findById(42L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(43L).get().getPrice()).item(itemRepository.findById(43L).get()).quantity(2L).order(orderRepository.findById(143L).get()).totalPrice(itemRepository.findById(43L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(44L).get().getPrice()).item(itemRepository.findById(44L).get()).quantity(2L).order(orderRepository.findById(144L).get()).totalPrice(itemRepository.findById(44L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(45L).get().getPrice()).item(itemRepository.findById(45L).get()).quantity(2L).order(orderRepository.findById(145L).get()).totalPrice(itemRepository.findById(45L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(46L).get().getPrice()).item(itemRepository.findById(46L).get()).quantity(2L).order(orderRepository.findById(146L).get()).totalPrice(itemRepository.findById(46L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(47L).get().getPrice()).item(itemRepository.findById(47L).get()).quantity(2L).order(orderRepository.findById(147L).get()).totalPrice(itemRepository.findById(47L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(48L).get().getPrice()).item(itemRepository.findById(48L).get()).quantity(2L).order(orderRepository.findById(148L).get()).totalPrice(itemRepository.findById(48L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(49L).get().getPrice()).item(itemRepository.findById(49L).get()).quantity(2L).order(orderRepository.findById(149L).get()).totalPrice(itemRepository.findById(49L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(50L).get().getPrice()).item(itemRepository.findById(50L).get()).quantity(2L).order(orderRepository.findById(150L).get()).totalPrice(itemRepository.findById(50L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(51L).get().getPrice()).item(itemRepository.findById(51L).get()).quantity(2L).order(orderRepository.findById(151L).get()).totalPrice(itemRepository.findById(51L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(52L).get().getPrice()).item(itemRepository.findById(52L).get()).quantity(2L).order(orderRepository.findById(152L).get()).totalPrice(itemRepository.findById(52L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(53L).get().getPrice()).item(itemRepository.findById(53L).get()).quantity(2L).order(orderRepository.findById(153L).get()).totalPrice(itemRepository.findById(53L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(54L).get().getPrice()).item(itemRepository.findById(54L).get()).quantity(2L).order(orderRepository.findById(154L).get()).totalPrice(itemRepository.findById(54L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(55L).get().getPrice()).item(itemRepository.findById(55L).get()).quantity(2L).order(orderRepository.findById(155L).get()).totalPrice(itemRepository.findById(55L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(56L).get().getPrice()).item(itemRepository.findById(56L).get()).quantity(2L).order(orderRepository.findById(156L).get()).totalPrice(itemRepository.findById(56L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(57L).get().getPrice()).item(itemRepository.findById(57L).get()).quantity(2L).order(orderRepository.findById(157L).get()).totalPrice(itemRepository.findById(57L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(58L).get().getPrice()).item(itemRepository.findById(58L).get()).quantity(2L).order(orderRepository.findById(158L).get()).totalPrice(itemRepository.findById(58L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(59L).get().getPrice()).item(itemRepository.findById(59L).get()).quantity(2L).order(orderRepository.findById(159L).get()).totalPrice(itemRepository.findById(59L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(60L).get().getPrice()).item(itemRepository.findById(60L).get()).quantity(2L).order(orderRepository.findById(160L).get()).totalPrice(itemRepository.findById(60L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(61L).get().getPrice()).item(itemRepository.findById(61L).get()).quantity(2L).order(orderRepository.findById(161L).get()).totalPrice(itemRepository.findById(61L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(62L).get().getPrice()).item(itemRepository.findById(62L).get()).quantity(2L).order(orderRepository.findById(162L).get()).totalPrice(itemRepository.findById(62L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(63L).get().getPrice()).item(itemRepository.findById(63L).get()).quantity(2L).order(orderRepository.findById(163L).get()).totalPrice(itemRepository.findById(63L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(64L).get().getPrice()).item(itemRepository.findById(64L).get()).quantity(2L).order(orderRepository.findById(164L).get()).totalPrice(itemRepository.findById(64L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(65L).get().getPrice()).item(itemRepository.findById(65L).get()).quantity(2L).order(orderRepository.findById(165L).get()).totalPrice(itemRepository.findById(65L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(66L).get().getPrice()).item(itemRepository.findById(66L).get()).quantity(2L).order(orderRepository.findById(166L).get()).totalPrice(itemRepository.findById(66L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(67L).get().getPrice()).item(itemRepository.findById(67L).get()).quantity(2L).order(orderRepository.findById(167L).get()).totalPrice(itemRepository.findById(67L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(68L).get().getPrice()).item(itemRepository.findById(68L).get()).quantity(2L).order(orderRepository.findById(168L).get()).totalPrice(itemRepository.findById(68L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(69L).get().getPrice()).item(itemRepository.findById(69L).get()).quantity(2L).order(orderRepository.findById(169L).get()).totalPrice(itemRepository.findById(69L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(70L).get().getPrice()).item(itemRepository.findById(70L).get()).quantity(2L).order(orderRepository.findById(170L).get()).totalPrice(itemRepository.findById(70L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(71L).get().getPrice()).item(itemRepository.findById(71L).get()).quantity(2L).order(orderRepository.findById(171L).get()).totalPrice(itemRepository.findById(71L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(72L).get().getPrice()).item(itemRepository.findById(72L).get()).quantity(2L).order(orderRepository.findById(172L).get()).totalPrice(itemRepository.findById(72L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(73L).get().getPrice()).item(itemRepository.findById(73L).get()).quantity(2L).order(orderRepository.findById(173L).get()).totalPrice(itemRepository.findById(73L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(74L).get().getPrice()).item(itemRepository.findById(74L).get()).quantity(2L).order(orderRepository.findById(174L).get()).totalPrice(itemRepository.findById(74L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(75L).get().getPrice()).item(itemRepository.findById(75L).get()).quantity(2L).order(orderRepository.findById(175L).get()).totalPrice(itemRepository.findById(75L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(76L).get().getPrice()).item(itemRepository.findById(76L).get()).quantity(2L).order(orderRepository.findById(176L).get()).totalPrice(itemRepository.findById(76L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(77L).get().getPrice()).item(itemRepository.findById(77L).get()).quantity(2L).order(orderRepository.findById(177L).get()).totalPrice(itemRepository.findById(77L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(78L).get().getPrice()).item(itemRepository.findById(78L).get()).quantity(2L).order(orderRepository.findById(178L).get()).totalPrice(itemRepository.findById(78L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(79L).get().getPrice()).item(itemRepository.findById(79L).get()).quantity(2L).order(orderRepository.findById(179L).get()).totalPrice(itemRepository.findById(79L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(80L).get().getPrice()).item(itemRepository.findById(80L).get()).quantity(2L).order(orderRepository.findById(180L).get()).totalPrice(itemRepository.findById(80L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(81L).get().getPrice()).item(itemRepository.findById(81L).get()).quantity(2L).order(orderRepository.findById(181L).get()).totalPrice(itemRepository.findById(81L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(82L).get().getPrice()).item(itemRepository.findById(82L).get()).quantity(2L).order(orderRepository.findById(182L).get()).totalPrice(itemRepository.findById(82L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(83L).get().getPrice()).item(itemRepository.findById(83L).get()).quantity(2L).order(orderRepository.findById(183L).get()).totalPrice(itemRepository.findById(83L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(84L).get().getPrice()).item(itemRepository.findById(84L).get()).quantity(2L).order(orderRepository.findById(184L).get()).totalPrice(itemRepository.findById(84L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(85L).get().getPrice()).item(itemRepository.findById(85L).get()).quantity(2L).order(orderRepository.findById(185L).get()).totalPrice(itemRepository.findById(85L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(86L).get().getPrice()).item(itemRepository.findById(86L).get()).quantity(2L).order(orderRepository.findById(186L).get()).totalPrice(itemRepository.findById(86L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(87L).get().getPrice()).item(itemRepository.findById(87L).get()).quantity(2L).order(orderRepository.findById(187L).get()).totalPrice(itemRepository.findById(87L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(88L).get().getPrice()).item(itemRepository.findById(88L).get()).quantity(2L).order(orderRepository.findById(188L).get()).totalPrice(itemRepository.findById(88L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(89L).get().getPrice()).item(itemRepository.findById(89L).get()).quantity(2L).order(orderRepository.findById(189L).get()).totalPrice(itemRepository.findById(89L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(90L).get().getPrice()).item(itemRepository.findById(90L).get()).quantity(2L).order(orderRepository.findById(190L).get()).totalPrice(itemRepository.findById(90L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(91L).get().getPrice()).item(itemRepository.findById(91L).get()).quantity(2L).order(orderRepository.findById(191L).get()).totalPrice(itemRepository.findById(91L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(92L).get().getPrice()).item(itemRepository.findById(92L).get()).quantity(2L).order(orderRepository.findById(192L).get()).totalPrice(itemRepository.findById(92L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(93L).get().getPrice()).item(itemRepository.findById(93L).get()).quantity(2L).order(orderRepository.findById(193L).get()).totalPrice(itemRepository.findById(93L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(94L).get().getPrice()).item(itemRepository.findById(94L).get()).quantity(2L).order(orderRepository.findById(194L).get()).totalPrice(itemRepository.findById(94L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(95L).get().getPrice()).item(itemRepository.findById(95L).get()).quantity(2L).order(orderRepository.findById(195L).get()).totalPrice(itemRepository.findById(95L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(96L).get().getPrice()).item(itemRepository.findById(96L).get()).quantity(2L).order(orderRepository.findById(196L).get()).totalPrice(itemRepository.findById(96L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(97L).get().getPrice()).item(itemRepository.findById(97L).get()).quantity(2L).order(orderRepository.findById(197L).get()).totalPrice(itemRepository.findById(97L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(98L).get().getPrice()).item(itemRepository.findById(98L).get()).quantity(2L).order(orderRepository.findById(198L).get()).totalPrice(itemRepository.findById(98L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(99L).get().getPrice()).item(itemRepository.findById(99L).get()).quantity(2L).order(orderRepository.findById(199L).get()).totalPrice(itemRepository.findById(99L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(100L).get().getPrice()).item(itemRepository.findById(100L).get()).quantity(2L).order(orderRepository.findById(200L).get()).totalPrice(itemRepository.findById(100L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(101L).get().getPrice()).item(itemRepository.findById(101L).get()).quantity(2L).order(orderRepository.findById(201L).get()).totalPrice(itemRepository.findById(101L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(102L).get().getPrice()).item(itemRepository.findById(102L).get()).quantity(2L).order(orderRepository.findById(202L).get()).totalPrice(itemRepository.findById(102L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(103L).get().getPrice()).item(itemRepository.findById(103L).get()).quantity(2L).order(orderRepository.findById(203L).get()).totalPrice(itemRepository.findById(103L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(104L).get().getPrice()).item(itemRepository.findById(104L).get()).quantity(2L).order(orderRepository.findById(204L).get()).totalPrice(itemRepository.findById(104L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(105L).get().getPrice()).item(itemRepository.findById(105L).get()).quantity(2L).order(orderRepository.findById(205L).get()).totalPrice(itemRepository.findById(105L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(106L).get().getPrice()).item(itemRepository.findById(106L).get()).quantity(2L).order(orderRepository.findById(206L).get()).totalPrice(itemRepository.findById(106L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(107L).get().getPrice()).item(itemRepository.findById(107L).get()).quantity(2L).order(orderRepository.findById(207L).get()).totalPrice(itemRepository.findById(107L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(108L).get().getPrice()).item(itemRepository.findById(108L).get()).quantity(2L).order(orderRepository.findById(208L).get()).totalPrice(itemRepository.findById(108L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(109L).get().getPrice()).item(itemRepository.findById(109L).get()).quantity(2L).order(orderRepository.findById(209L).get()).totalPrice(itemRepository.findById(109L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(110L).get().getPrice()).item(itemRepository.findById(110L).get()).quantity(2L).order(orderRepository.findById(210L).get()).totalPrice(itemRepository.findById(110L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(111L).get().getPrice()).item(itemRepository.findById(111L).get()).quantity(2L).order(orderRepository.findById(211L).get()).totalPrice(itemRepository.findById(111L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(112L).get().getPrice()).item(itemRepository.findById(112L).get()).quantity(2L).order(orderRepository.findById(212L).get()).totalPrice(itemRepository.findById(112L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(113L).get().getPrice()).item(itemRepository.findById(113L).get()).quantity(2L).order(orderRepository.findById(213L).get()).totalPrice(itemRepository.findById(113L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(114L).get().getPrice()).item(itemRepository.findById(114L).get()).quantity(2L).order(orderRepository.findById(214L).get()).totalPrice(itemRepository.findById(114L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(115L).get().getPrice()).item(itemRepository.findById(115L).get()).quantity(2L).order(orderRepository.findById(215L).get()).totalPrice(itemRepository.findById(115L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(116L).get().getPrice()).item(itemRepository.findById(116L).get()).quantity(2L).order(orderRepository.findById(216L).get()).totalPrice(itemRepository.findById(116L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(117L).get().getPrice()).item(itemRepository.findById(117L).get()).quantity(2L).order(orderRepository.findById(217L).get()).totalPrice(itemRepository.findById(117L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(118L).get().getPrice()).item(itemRepository.findById(118L).get()).quantity(2L).order(orderRepository.findById(218L).get()).totalPrice(itemRepository.findById(118L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(119L).get().getPrice()).item(itemRepository.findById(119L).get()).quantity(2L).order(orderRepository.findById(219L).get()).totalPrice(itemRepository.findById(119L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(120L).get().getPrice()).item(itemRepository.findById(120L).get()).quantity(2L).order(orderRepository.findById(220L).get()).totalPrice(itemRepository.findById(120L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(121L).get().getPrice()).item(itemRepository.findById(121L).get()).quantity(2L).order(orderRepository.findById(221L).get()).totalPrice(itemRepository.findById(121L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(122L).get().getPrice()).item(itemRepository.findById(122L).get()).quantity(2L).order(orderRepository.findById(222L).get()).totalPrice(itemRepository.findById(122L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(123L).get().getPrice()).item(itemRepository.findById(123L).get()).quantity(2L).order(orderRepository.findById(223L).get()).totalPrice(itemRepository.findById(123L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(124L).get().getPrice()).item(itemRepository.findById(124L).get()).quantity(2L).order(orderRepository.findById(224L).get()).totalPrice(itemRepository.findById(124L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(125L).get().getPrice()).item(itemRepository.findById(125L).get()).quantity(2L).order(orderRepository.findById(225L).get()).totalPrice(itemRepository.findById(125L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(126L).get().getPrice()).item(itemRepository.findById(126L).get()).quantity(2L).order(orderRepository.findById(226L).get()).totalPrice(itemRepository.findById(126L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(127L).get().getPrice()).item(itemRepository.findById(127L).get()).quantity(2L).order(orderRepository.findById(227L).get()).totalPrice(itemRepository.findById(127L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(128L).get().getPrice()).item(itemRepository.findById(128L).get()).quantity(2L).order(orderRepository.findById(228L).get()).totalPrice(itemRepository.findById(128L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(129L).get().getPrice()).item(itemRepository.findById(129L).get()).quantity(2L).order(orderRepository.findById(229L).get()).totalPrice(itemRepository.findById(129L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(130L).get().getPrice()).item(itemRepository.findById(130L).get()).quantity(2L).order(orderRepository.findById(230L).get()).totalPrice(itemRepository.findById(130L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(131L).get().getPrice()).item(itemRepository.findById(131L).get()).quantity(2L).order(orderRepository.findById(231L).get()).totalPrice(itemRepository.findById(131L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(132L).get().getPrice()).item(itemRepository.findById(132L).get()).quantity(2L).order(orderRepository.findById(232L).get()).totalPrice(itemRepository.findById(132L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(133L).get().getPrice()).item(itemRepository.findById(133L).get()).quantity(2L).order(orderRepository.findById(233L).get()).totalPrice(itemRepository.findById(133L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(134L).get().getPrice()).item(itemRepository.findById(134L).get()).quantity(2L).order(orderRepository.findById(234L).get()).totalPrice(itemRepository.findById(134L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(135L).get().getPrice()).item(itemRepository.findById(135L).get()).quantity(2L).order(orderRepository.findById(235L).get()).totalPrice(itemRepository.findById(135L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(136L).get().getPrice()).item(itemRepository.findById(136L).get()).quantity(2L).order(orderRepository.findById(236L).get()).totalPrice(itemRepository.findById(136L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(137L).get().getPrice()).item(itemRepository.findById(137L).get()).quantity(2L).order(orderRepository.findById(237L).get()).totalPrice(itemRepository.findById(137L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(138L).get().getPrice()).item(itemRepository.findById(138L).get()).quantity(2L).order(orderRepository.findById(238L).get()).totalPrice(itemRepository.findById(138L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(139L).get().getPrice()).item(itemRepository.findById(139L).get()).quantity(2L).order(orderRepository.findById(239L).get()).totalPrice(itemRepository.findById(139L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(140L).get().getPrice()).item(itemRepository.findById(140L).get()).quantity(2L).order(orderRepository.findById(240L).get()).totalPrice(itemRepository.findById(140L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(141L).get().getPrice()).item(itemRepository.findById(141L).get()).quantity(2L).order(orderRepository.findById(241L).get()).totalPrice(itemRepository.findById(141L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(142L).get().getPrice()).item(itemRepository.findById(142L).get()).quantity(2L).order(orderRepository.findById(242L).get()).totalPrice(itemRepository.findById(142L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(143L).get().getPrice()).item(itemRepository.findById(143L).get()).quantity(2L).order(orderRepository.findById(243L).get()).totalPrice(itemRepository.findById(143L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(144L).get().getPrice()).item(itemRepository.findById(144L).get()).quantity(2L).order(orderRepository.findById(244L).get()).totalPrice(itemRepository.findById(144L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(145L).get().getPrice()).item(itemRepository.findById(145L).get()).quantity(2L).order(orderRepository.findById(245L).get()).totalPrice(itemRepository.findById(145L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(146L).get().getPrice()).item(itemRepository.findById(146L).get()).quantity(2L).order(orderRepository.findById(246L).get()).totalPrice(itemRepository.findById(146L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(147L).get().getPrice()).item(itemRepository.findById(147L).get()).quantity(2L).order(orderRepository.findById(247L).get()).totalPrice(itemRepository.findById(147L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(148L).get().getPrice()).item(itemRepository.findById(148L).get()).quantity(2L).order(orderRepository.findById(248L).get()).totalPrice(itemRepository.findById(148L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(149L).get().getPrice()).item(itemRepository.findById(149L).get()).quantity(2L).order(orderRepository.findById(249L).get()).totalPrice(itemRepository.findById(149L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(150L).get().getPrice()).item(itemRepository.findById(150L).get()).quantity(2L).order(orderRepository.findById(250L).get()).totalPrice(itemRepository.findById(150L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(151L).get().getPrice()).item(itemRepository.findById(151L).get()).quantity(2L).order(orderRepository.findById(251L).get()).totalPrice(itemRepository.findById(151L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(152L).get().getPrice()).item(itemRepository.findById(152L).get()).quantity(2L).order(orderRepository.findById(252L).get()).totalPrice(itemRepository.findById(152L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(153L).get().getPrice()).item(itemRepository.findById(153L).get()).quantity(2L).order(orderRepository.findById(253L).get()).totalPrice(itemRepository.findById(153L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(154L).get().getPrice()).item(itemRepository.findById(154L).get()).quantity(2L).order(orderRepository.findById(254L).get()).totalPrice(itemRepository.findById(154L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(155L).get().getPrice()).item(itemRepository.findById(155L).get()).quantity(2L).order(orderRepository.findById(255L).get()).totalPrice(itemRepository.findById(155L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(156L).get().getPrice()).item(itemRepository.findById(156L).get()).quantity(2L).order(orderRepository.findById(256L).get()).totalPrice(itemRepository.findById(156L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(157L).get().getPrice()).item(itemRepository.findById(157L).get()).quantity(2L).order(orderRepository.findById(257L).get()).totalPrice(itemRepository.findById(157L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(158L).get().getPrice()).item(itemRepository.findById(158L).get()).quantity(2L).order(orderRepository.findById(258L).get()).totalPrice(itemRepository.findById(158L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(159L).get().getPrice()).item(itemRepository.findById(159L).get()).quantity(2L).order(orderRepository.findById(259L).get()).totalPrice(itemRepository.findById(159L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(160L).get().getPrice()).item(itemRepository.findById(160L).get()).quantity(2L).order(orderRepository.findById(260L).get()).totalPrice(itemRepository.findById(160L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(161L).get().getPrice()).item(itemRepository.findById(161L).get()).quantity(2L).order(orderRepository.findById(261L).get()).totalPrice(itemRepository.findById(161L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(162L).get().getPrice()).item(itemRepository.findById(162L).get()).quantity(2L).order(orderRepository.findById(262L).get()).totalPrice(itemRepository.findById(162L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(163L).get().getPrice()).item(itemRepository.findById(163L).get()).quantity(2L).order(orderRepository.findById(263L).get()).totalPrice(itemRepository.findById(163L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(164L).get().getPrice()).item(itemRepository.findById(164L).get()).quantity(2L).order(orderRepository.findById(264L).get()).totalPrice(itemRepository.findById(164L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(165L).get().getPrice()).item(itemRepository.findById(165L).get()).quantity(2L).order(orderRepository.findById(265L).get()).totalPrice(itemRepository.findById(165L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(166L).get().getPrice()).item(itemRepository.findById(166L).get()).quantity(2L).order(orderRepository.findById(266L).get()).totalPrice(itemRepository.findById(166L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(167L).get().getPrice()).item(itemRepository.findById(167L).get()).quantity(2L).order(orderRepository.findById(267L).get()).totalPrice(itemRepository.findById(167L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(168L).get().getPrice()).item(itemRepository.findById(168L).get()).quantity(2L).order(orderRepository.findById(268L).get()).totalPrice(itemRepository.findById(168L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(169L).get().getPrice()).item(itemRepository.findById(169L).get()).quantity(2L).order(orderRepository.findById(269L).get()).totalPrice(itemRepository.findById(169L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(170L).get().getPrice()).item(itemRepository.findById(170L).get()).quantity(2L).order(orderRepository.findById(270L).get()).totalPrice(itemRepository.findById(170L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(171L).get().getPrice()).item(itemRepository.findById(171L).get()).quantity(2L).order(orderRepository.findById(271L).get()).totalPrice(itemRepository.findById(171L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(172L).get().getPrice()).item(itemRepository.findById(172L).get()).quantity(2L).order(orderRepository.findById(272L).get()).totalPrice(itemRepository.findById(172L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(173L).get().getPrice()).item(itemRepository.findById(173L).get()).quantity(2L).order(orderRepository.findById(273L).get()).totalPrice(itemRepository.findById(173L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(174L).get().getPrice()).item(itemRepository.findById(174L).get()).quantity(2L).order(orderRepository.findById(274L).get()).totalPrice(itemRepository.findById(174L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(175L).get().getPrice()).item(itemRepository.findById(175L).get()).quantity(2L).order(orderRepository.findById(275L).get()).totalPrice(itemRepository.findById(175L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(176L).get().getPrice()).item(itemRepository.findById(176L).get()).quantity(2L).order(orderRepository.findById(276L).get()).totalPrice(itemRepository.findById(176L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(177L).get().getPrice()).item(itemRepository.findById(177L).get()).quantity(2L).order(orderRepository.findById(277L).get()).totalPrice(itemRepository.findById(177L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(178L).get().getPrice()).item(itemRepository.findById(178L).get()).quantity(2L).order(orderRepository.findById(278L).get()).totalPrice(itemRepository.findById(178L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(179L).get().getPrice()).item(itemRepository.findById(179L).get()).quantity(2L).order(orderRepository.findById(279L).get()).totalPrice(itemRepository.findById(179L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(180L).get().getPrice()).item(itemRepository.findById(180L).get()).quantity(2L).order(orderRepository.findById(280L).get()).totalPrice(itemRepository.findById(180L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(181L).get().getPrice()).item(itemRepository.findById(181L).get()).quantity(2L).order(orderRepository.findById(281L).get()).totalPrice(itemRepository.findById(181L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(182L).get().getPrice()).item(itemRepository.findById(182L).get()).quantity(2L).order(orderRepository.findById(282L).get()).totalPrice(itemRepository.findById(182L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(183L).get().getPrice()).item(itemRepository.findById(183L).get()).quantity(2L).order(orderRepository.findById(283L).get()).totalPrice(itemRepository.findById(183L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(184L).get().getPrice()).item(itemRepository.findById(184L).get()).quantity(2L).order(orderRepository.findById(284L).get()).totalPrice(itemRepository.findById(184L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(185L).get().getPrice()).item(itemRepository.findById(185L).get()).quantity(2L).order(orderRepository.findById(285L).get()).totalPrice(itemRepository.findById(185L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(186L).get().getPrice()).item(itemRepository.findById(186L).get()).quantity(2L).order(orderRepository.findById(286L).get()).totalPrice(itemRepository.findById(186L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(187L).get().getPrice()).item(itemRepository.findById(187L).get()).quantity(2L).order(orderRepository.findById(287L).get()).totalPrice(itemRepository.findById(187L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(188L).get().getPrice()).item(itemRepository.findById(188L).get()).quantity(2L).order(orderRepository.findById(288L).get()).totalPrice(itemRepository.findById(188L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(189L).get().getPrice()).item(itemRepository.findById(189L).get()).quantity(2L).order(orderRepository.findById(289L).get()).totalPrice(itemRepository.findById(189L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(190L).get().getPrice()).item(itemRepository.findById(190L).get()).quantity(2L).order(orderRepository.findById(290L).get()).totalPrice(itemRepository.findById(190L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(191L).get().getPrice()).item(itemRepository.findById(191L).get()).quantity(2L).order(orderRepository.findById(291L).get()).totalPrice(itemRepository.findById(191L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(192L).get().getPrice()).item(itemRepository.findById(192L).get()).quantity(2L).order(orderRepository.findById(292L).get()).totalPrice(itemRepository.findById(192L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(193L).get().getPrice()).item(itemRepository.findById(193L).get()).quantity(2L).order(orderRepository.findById(293L).get()).totalPrice(itemRepository.findById(193L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(194L).get().getPrice()).item(itemRepository.findById(194L).get()).quantity(2L).order(orderRepository.findById(294L).get()).totalPrice(itemRepository.findById(194L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(195L).get().getPrice()).item(itemRepository.findById(195L).get()).quantity(2L).order(orderRepository.findById(295L).get()).totalPrice(itemRepository.findById(195L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(196L).get().getPrice()).item(itemRepository.findById(196L).get()).quantity(2L).order(orderRepository.findById(296L).get()).totalPrice(itemRepository.findById(196L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(197L).get().getPrice()).item(itemRepository.findById(197L).get()).quantity(2L).order(orderRepository.findById(297L).get()).totalPrice(itemRepository.findById(197L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(198L).get().getPrice()).item(itemRepository.findById(198L).get()).quantity(2L).order(orderRepository.findById(298L).get()).totalPrice(itemRepository.findById(198L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(199L).get().getPrice()).item(itemRepository.findById(199L).get()).quantity(2L).order(orderRepository.findById(299L).get()).totalPrice(itemRepository.findById(199L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(200L).get().getPrice()).item(itemRepository.findById(200L).get()).quantity(2L).order(orderRepository.findById(300L).get()).totalPrice(itemRepository.findById(200L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(201L).get().getPrice()).item(itemRepository.findById(201L).get()).quantity(2L).order(orderRepository.findById(301L).get()).totalPrice(itemRepository.findById(201L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(202L).get().getPrice()).item(itemRepository.findById(202L).get()).quantity(2L).order(orderRepository.findById(302L).get()).totalPrice(itemRepository.findById(202L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(203L).get().getPrice()).item(itemRepository.findById(203L).get()).quantity(2L).order(orderRepository.findById(303L).get()).totalPrice(itemRepository.findById(203L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(204L).get().getPrice()).item(itemRepository.findById(204L).get()).quantity(2L).order(orderRepository.findById(304L).get()).totalPrice(itemRepository.findById(204L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(205L).get().getPrice()).item(itemRepository.findById(205L).get()).quantity(2L).order(orderRepository.findById(305L).get()).totalPrice(itemRepository.findById(205L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(206L).get().getPrice()).item(itemRepository.findById(206L).get()).quantity(2L).order(orderRepository.findById(306L).get()).totalPrice(itemRepository.findById(206L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(207L).get().getPrice()).item(itemRepository.findById(207L).get()).quantity(2L).order(orderRepository.findById(307L).get()).totalPrice(itemRepository.findById(207L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(208L).get().getPrice()).item(itemRepository.findById(208L).get()).quantity(2L).order(orderRepository.findById(308L).get()).totalPrice(itemRepository.findById(208L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(209L).get().getPrice()).item(itemRepository.findById(209L).get()).quantity(2L).order(orderRepository.findById(309L).get()).totalPrice(itemRepository.findById(209L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(210L).get().getPrice()).item(itemRepository.findById(210L).get()).quantity(2L).order(orderRepository.findById(310L).get()).totalPrice(itemRepository.findById(210L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(211L).get().getPrice()).item(itemRepository.findById(211L).get()).quantity(2L).order(orderRepository.findById(311L).get()).totalPrice(itemRepository.findById(211L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(212L).get().getPrice()).item(itemRepository.findById(212L).get()).quantity(2L).order(orderRepository.findById(312L).get()).totalPrice(itemRepository.findById(212L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(213L).get().getPrice()).item(itemRepository.findById(213L).get()).quantity(2L).order(orderRepository.findById(313L).get()).totalPrice(itemRepository.findById(213L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(214L).get().getPrice()).item(itemRepository.findById(214L).get()).quantity(2L).order(orderRepository.findById(314L).get()).totalPrice(itemRepository.findById(214L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(215L).get().getPrice()).item(itemRepository.findById(215L).get()).quantity(2L).order(orderRepository.findById(315L).get()).totalPrice(itemRepository.findById(215L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(216L).get().getPrice()).item(itemRepository.findById(216L).get()).quantity(2L).order(orderRepository.findById(316L).get()).totalPrice(itemRepository.findById(216L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(217L).get().getPrice()).item(itemRepository.findById(217L).get()).quantity(2L).order(orderRepository.findById(317L).get()).totalPrice(itemRepository.findById(217L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(218L).get().getPrice()).item(itemRepository.findById(218L).get()).quantity(2L).order(orderRepository.findById(318L).get()).totalPrice(itemRepository.findById(218L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(219L).get().getPrice()).item(itemRepository.findById(219L).get()).quantity(2L).order(orderRepository.findById(319L).get()).totalPrice(itemRepository.findById(219L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(220L).get().getPrice()).item(itemRepository.findById(220L).get()).quantity(2L).order(orderRepository.findById(320L).get()).totalPrice(itemRepository.findById(220L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(221L).get().getPrice()).item(itemRepository.findById(221L).get()).quantity(2L).order(orderRepository.findById(321L).get()).totalPrice(itemRepository.findById(221L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(222L).get().getPrice()).item(itemRepository.findById(222L).get()).quantity(2L).order(orderRepository.findById(322L).get()).totalPrice(itemRepository.findById(222L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(223L).get().getPrice()).item(itemRepository.findById(223L).get()).quantity(2L).order(orderRepository.findById(323L).get()).totalPrice(itemRepository.findById(223L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(224L).get().getPrice()).item(itemRepository.findById(224L).get()).quantity(2L).order(orderRepository.findById(324L).get()).totalPrice(itemRepository.findById(224L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(225L).get().getPrice()).item(itemRepository.findById(225L).get()).quantity(2L).order(orderRepository.findById(325L).get()).totalPrice(itemRepository.findById(225L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(226L).get().getPrice()).item(itemRepository.findById(226L).get()).quantity(2L).order(orderRepository.findById(326L).get()).totalPrice(itemRepository.findById(226L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(227L).get().getPrice()).item(itemRepository.findById(227L).get()).quantity(2L).order(orderRepository.findById(327L).get()).totalPrice(itemRepository.findById(227L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(228L).get().getPrice()).item(itemRepository.findById(228L).get()).quantity(2L).order(orderRepository.findById(328L).get()).totalPrice(itemRepository.findById(228L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(229L).get().getPrice()).item(itemRepository.findById(229L).get()).quantity(2L).order(orderRepository.findById(329L).get()).totalPrice(itemRepository.findById(229L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(230L).get().getPrice()).item(itemRepository.findById(230L).get()).quantity(2L).order(orderRepository.findById(330L).get()).totalPrice(itemRepository.findById(230L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(231L).get().getPrice()).item(itemRepository.findById(231L).get()).quantity(2L).order(orderRepository.findById(331L).get()).totalPrice(itemRepository.findById(231L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(232L).get().getPrice()).item(itemRepository.findById(232L).get()).quantity(2L).order(orderRepository.findById(332L).get()).totalPrice(itemRepository.findById(232L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(233L).get().getPrice()).item(itemRepository.findById(233L).get()).quantity(2L).order(orderRepository.findById(333L).get()).totalPrice(itemRepository.findById(233L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(234L).get().getPrice()).item(itemRepository.findById(234L).get()).quantity(2L).order(orderRepository.findById(334L).get()).totalPrice(itemRepository.findById(234L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(235L).get().getPrice()).item(itemRepository.findById(235L).get()).quantity(2L).order(orderRepository.findById(335L).get()).totalPrice(itemRepository.findById(235L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(236L).get().getPrice()).item(itemRepository.findById(236L).get()).quantity(2L).order(orderRepository.findById(336L).get()).totalPrice(itemRepository.findById(236L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(237L).get().getPrice()).item(itemRepository.findById(237L).get()).quantity(2L).order(orderRepository.findById(337L).get()).totalPrice(itemRepository.findById(237L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(238L).get().getPrice()).item(itemRepository.findById(238L).get()).quantity(2L).order(orderRepository.findById(338L).get()).totalPrice(itemRepository.findById(238L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(239L).get().getPrice()).item(itemRepository.findById(239L).get()).quantity(2L).order(orderRepository.findById(339L).get()).totalPrice(itemRepository.findById(239L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(240L).get().getPrice()).item(itemRepository.findById(240L).get()).quantity(2L).order(orderRepository.findById(340L).get()).totalPrice(itemRepository.findById(240L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(241L).get().getPrice()).item(itemRepository.findById(241L).get()).quantity(2L).order(orderRepository.findById(341L).get()).totalPrice(itemRepository.findById(241L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(242L).get().getPrice()).item(itemRepository.findById(242L).get()).quantity(2L).order(orderRepository.findById(342L).get()).totalPrice(itemRepository.findById(242L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(243L).get().getPrice()).item(itemRepository.findById(243L).get()).quantity(2L).order(orderRepository.findById(343L).get()).totalPrice(itemRepository.findById(243L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(244L).get().getPrice()).item(itemRepository.findById(244L).get()).quantity(2L).order(orderRepository.findById(344L).get()).totalPrice(itemRepository.findById(244L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(245L).get().getPrice()).item(itemRepository.findById(245L).get()).quantity(2L).order(orderRepository.findById(345L).get()).totalPrice(itemRepository.findById(245L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(246L).get().getPrice()).item(itemRepository.findById(246L).get()).quantity(2L).order(orderRepository.findById(346L).get()).totalPrice(itemRepository.findById(246L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(247L).get().getPrice()).item(itemRepository.findById(247L).get()).quantity(2L).order(orderRepository.findById(347L).get()).totalPrice(itemRepository.findById(247L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(248L).get().getPrice()).item(itemRepository.findById(248L).get()).quantity(2L).order(orderRepository.findById(348L).get()).totalPrice(itemRepository.findById(248L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(249L).get().getPrice()).item(itemRepository.findById(249L).get()).quantity(2L).order(orderRepository.findById(349L).get()).totalPrice(itemRepository.findById(249L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(250L).get().getPrice()).item(itemRepository.findById(250L).get()).quantity(2L).order(orderRepository.findById(350L).get()).totalPrice(itemRepository.findById(250L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(251L).get().getPrice()).item(itemRepository.findById(251L).get()).quantity(2L).order(orderRepository.findById(351L).get()).totalPrice(itemRepository.findById(251L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(252L).get().getPrice()).item(itemRepository.findById(252L).get()).quantity(2L).order(orderRepository.findById(352L).get()).totalPrice(itemRepository.findById(252L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(253L).get().getPrice()).item(itemRepository.findById(253L).get()).quantity(2L).order(orderRepository.findById(353L).get()).totalPrice(itemRepository.findById(253L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(254L).get().getPrice()).item(itemRepository.findById(254L).get()).quantity(2L).order(orderRepository.findById(354L).get()).totalPrice(itemRepository.findById(254L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(255L).get().getPrice()).item(itemRepository.findById(255L).get()).quantity(2L).order(orderRepository.findById(355L).get()).totalPrice(itemRepository.findById(255L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(256L).get().getPrice()).item(itemRepository.findById(256L).get()).quantity(2L).order(orderRepository.findById(356L).get()).totalPrice(itemRepository.findById(256L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(257L).get().getPrice()).item(itemRepository.findById(257L).get()).quantity(2L).order(orderRepository.findById(357L).get()).totalPrice(itemRepository.findById(257L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(258L).get().getPrice()).item(itemRepository.findById(258L).get()).quantity(2L).order(orderRepository.findById(358L).get()).totalPrice(itemRepository.findById(258L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(259L).get().getPrice()).item(itemRepository.findById(259L).get()).quantity(2L).order(orderRepository.findById(359L).get()).totalPrice(itemRepository.findById(259L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(260L).get().getPrice()).item(itemRepository.findById(260L).get()).quantity(2L).order(orderRepository.findById(360L).get()).totalPrice(itemRepository.findById(260L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(261L).get().getPrice()).item(itemRepository.findById(261L).get()).quantity(2L).order(orderRepository.findById(361L).get()).totalPrice(itemRepository.findById(261L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(262L).get().getPrice()).item(itemRepository.findById(262L).get()).quantity(2L).order(orderRepository.findById(362L).get()).totalPrice(itemRepository.findById(262L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(263L).get().getPrice()).item(itemRepository.findById(263L).get()).quantity(2L).order(orderRepository.findById(363L).get()).totalPrice(itemRepository.findById(263L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(264L).get().getPrice()).item(itemRepository.findById(264L).get()).quantity(2L).order(orderRepository.findById(364L).get()).totalPrice(itemRepository.findById(264L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(265L).get().getPrice()).item(itemRepository.findById(265L).get()).quantity(2L).order(orderRepository.findById(365L).get()).totalPrice(itemRepository.findById(265L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(266L).get().getPrice()).item(itemRepository.findById(266L).get()).quantity(2L).order(orderRepository.findById(366L).get()).totalPrice(itemRepository.findById(266L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(267L).get().getPrice()).item(itemRepository.findById(267L).get()).quantity(2L).order(orderRepository.findById(367L).get()).totalPrice(itemRepository.findById(267L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(268L).get().getPrice()).item(itemRepository.findById(268L).get()).quantity(2L).order(orderRepository.findById(368L).get()).totalPrice(itemRepository.findById(268L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(269L).get().getPrice()).item(itemRepository.findById(269L).get()).quantity(2L).order(orderRepository.findById(369L).get()).totalPrice(itemRepository.findById(269L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(270L).get().getPrice()).item(itemRepository.findById(270L).get()).quantity(2L).order(orderRepository.findById(370L).get()).totalPrice(itemRepository.findById(270L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(271L).get().getPrice()).item(itemRepository.findById(271L).get()).quantity(2L).order(orderRepository.findById(371L).get()).totalPrice(itemRepository.findById(271L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(272L).get().getPrice()).item(itemRepository.findById(272L).get()).quantity(2L).order(orderRepository.findById(372L).get()).totalPrice(itemRepository.findById(272L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(273L).get().getPrice()).item(itemRepository.findById(273L).get()).quantity(2L).order(orderRepository.findById(373L).get()).totalPrice(itemRepository.findById(273L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(274L).get().getPrice()).item(itemRepository.findById(274L).get()).quantity(2L).order(orderRepository.findById(374L).get()).totalPrice(itemRepository.findById(274L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(275L).get().getPrice()).item(itemRepository.findById(275L).get()).quantity(2L).order(orderRepository.findById(375L).get()).totalPrice(itemRepository.findById(275L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(276L).get().getPrice()).item(itemRepository.findById(276L).get()).quantity(2L).order(orderRepository.findById(376L).get()).totalPrice(itemRepository.findById(276L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(277L).get().getPrice()).item(itemRepository.findById(277L).get()).quantity(2L).order(orderRepository.findById(377L).get()).totalPrice(itemRepository.findById(277L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(278L).get().getPrice()).item(itemRepository.findById(278L).get()).quantity(2L).order(orderRepository.findById(378L).get()).totalPrice(itemRepository.findById(278L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(279L).get().getPrice()).item(itemRepository.findById(279L).get()).quantity(2L).order(orderRepository.findById(379L).get()).totalPrice(itemRepository.findById(279L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(280L).get().getPrice()).item(itemRepository.findById(280L).get()).quantity(2L).order(orderRepository.findById(380L).get()).totalPrice(itemRepository.findById(280L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(281L).get().getPrice()).item(itemRepository.findById(281L).get()).quantity(2L).order(orderRepository.findById(381L).get()).totalPrice(itemRepository.findById(281L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(282L).get().getPrice()).item(itemRepository.findById(282L).get()).quantity(2L).order(orderRepository.findById(382L).get()).totalPrice(itemRepository.findById(282L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(283L).get().getPrice()).item(itemRepository.findById(283L).get()).quantity(2L).order(orderRepository.findById(383L).get()).totalPrice(itemRepository.findById(283L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(284L).get().getPrice()).item(itemRepository.findById(284L).get()).quantity(2L).order(orderRepository.findById(384L).get()).totalPrice(itemRepository.findById(284L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(285L).get().getPrice()).item(itemRepository.findById(285L).get()).quantity(2L).order(orderRepository.findById(385L).get()).totalPrice(itemRepository.findById(285L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(286L).get().getPrice()).item(itemRepository.findById(286L).get()).quantity(2L).order(orderRepository.findById(386L).get()).totalPrice(itemRepository.findById(286L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(287L).get().getPrice()).item(itemRepository.findById(287L).get()).quantity(2L).order(orderRepository.findById(387L).get()).totalPrice(itemRepository.findById(287L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(288L).get().getPrice()).item(itemRepository.findById(288L).get()).quantity(2L).order(orderRepository.findById(388L).get()).totalPrice(itemRepository.findById(288L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(289L).get().getPrice()).item(itemRepository.findById(289L).get()).quantity(2L).order(orderRepository.findById(389L).get()).totalPrice(itemRepository.findById(289L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(290L).get().getPrice()).item(itemRepository.findById(290L).get()).quantity(2L).order(orderRepository.findById(390L).get()).totalPrice(itemRepository.findById(290L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(291L).get().getPrice()).item(itemRepository.findById(291L).get()).quantity(2L).order(orderRepository.findById(391L).get()).totalPrice(itemRepository.findById(291L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(292L).get().getPrice()).item(itemRepository.findById(292L).get()).quantity(2L).order(orderRepository.findById(392L).get()).totalPrice(itemRepository.findById(292L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(293L).get().getPrice()).item(itemRepository.findById(293L).get()).quantity(2L).order(orderRepository.findById(393L).get()).totalPrice(itemRepository.findById(293L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(294L).get().getPrice()).item(itemRepository.findById(294L).get()).quantity(2L).order(orderRepository.findById(394L).get()).totalPrice(itemRepository.findById(294L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(295L).get().getPrice()).item(itemRepository.findById(295L).get()).quantity(2L).order(orderRepository.findById(395L).get()).totalPrice(itemRepository.findById(295L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(296L).get().getPrice()).item(itemRepository.findById(296L).get()).quantity(2L).order(orderRepository.findById(396L).get()).totalPrice(itemRepository.findById(296L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(297L).get().getPrice()).item(itemRepository.findById(297L).get()).quantity(2L).order(orderRepository.findById(397L).get()).totalPrice(itemRepository.findById(297L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(298L).get().getPrice()).item(itemRepository.findById(298L).get()).quantity(2L).order(orderRepository.findById(398L).get()).totalPrice(itemRepository.findById(298L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(299L).get().getPrice()).item(itemRepository.findById(299L).get()).quantity(2L).order(orderRepository.findById(399L).get()).totalPrice(itemRepository.findById(299L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
        orderDetailRepository.save(OrderDetail.builder().itemPrice(itemRepository.findById(300L).get().getPrice()).item(itemRepository.findById(300L).get()).quantity(2L).order(orderRepository.findById(400L).get()).totalPrice(itemRepository.findById(300L).get().getPrice().multiply(BigDecimal.valueOf(2))).build());
    }

    void initRestaurantCart() {
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner1").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner2").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner3").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner4").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner5").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner6").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner7").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner8").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner9").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner10").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner11").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner12").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner13").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner14").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner15").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner16").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner17").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner18").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner19").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner20").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner21").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner22").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner23").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner24").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner25").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner26").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner27").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner28").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner29").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner30").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner31").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner32").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner33").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner34").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner35").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner36").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner37").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner38").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner39").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner40").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner41").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner42").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner43").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner44").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner45").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner46").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner47").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner48").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner49").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner50").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner51").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner52").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner53").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner54").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner55").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner56").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner57").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner58").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner59").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner60").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner61").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner62").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner63").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner64").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner65").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner66").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner67").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner68").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner69").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner70").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner71").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner72").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner73").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner74").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner75").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner76").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner77").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner78").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner79").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner80").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner81").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner82").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner83").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner84").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner85").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner86").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner87").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner88").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner89").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner90").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner91").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner92").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner93").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner94").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner95").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner96").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner97").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner98").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner99").get()).build());
        restaurantOrderCartRepository.save(RestaurantOrderCart.builder().member(memberRepository.findByName("owner100").get()).build());
    }

    void initRestaurantCartDetail() {
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(1L).get()).product(productRepository.findById(1L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(2L).get()).product(productRepository.findById(2L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(3L).get()).product(productRepository.findById(3L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(4L).get()).product(productRepository.findById(4L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(5L).get()).product(productRepository.findById(5L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(6L).get()).product(productRepository.findById(6L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(7L).get()).product(productRepository.findById(7L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(8L).get()).product(productRepository.findById(8L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(9L).get()).product(productRepository.findById(9L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(10L).get()).product(productRepository.findById(10L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(11L).get()).product(productRepository.findById(11L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(12L).get()).product(productRepository.findById(12L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(13L).get()).product(productRepository.findById(13L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(14L).get()).product(productRepository.findById(14L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(15L).get()).product(productRepository.findById(15L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(16L).get()).product(productRepository.findById(16L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(17L).get()).product(productRepository.findById(17L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(18L).get()).product(productRepository.findById(18L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(19L).get()).product(productRepository.findById(19L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(20L).get()).product(productRepository.findById(20L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(21L).get()).product(productRepository.findById(21L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(22L).get()).product(productRepository.findById(22L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(23L).get()).product(productRepository.findById(23L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(24L).get()).product(productRepository.findById(24L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(25L).get()).product(productRepository.findById(25L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(26L).get()).product(productRepository.findById(26L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(27L).get()).product(productRepository.findById(27L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(28L).get()).product(productRepository.findById(28L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(29L).get()).product(productRepository.findById(29L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(30L).get()).product(productRepository.findById(30L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(31L).get()).product(productRepository.findById(31L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(32L).get()).product(productRepository.findById(32L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(33L).get()).product(productRepository.findById(33L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(34L).get()).product(productRepository.findById(34L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(35L).get()).product(productRepository.findById(35L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(36L).get()).product(productRepository.findById(36L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(37L).get()).product(productRepository.findById(37L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(38L).get()).product(productRepository.findById(38L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(39L).get()).product(productRepository.findById(39L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(40L).get()).product(productRepository.findById(40L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(41L).get()).product(productRepository.findById(41L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(42L).get()).product(productRepository.findById(42L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(43L).get()).product(productRepository.findById(43L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(44L).get()).product(productRepository.findById(44L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(45L).get()).product(productRepository.findById(45L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(46L).get()).product(productRepository.findById(46L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(47L).get()).product(productRepository.findById(47L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(48L).get()).product(productRepository.findById(48L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(49L).get()).product(productRepository.findById(49L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(50L).get()).product(productRepository.findById(50L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(51L).get()).product(productRepository.findById(51L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(52L).get()).product(productRepository.findById(52L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(53L).get()).product(productRepository.findById(53L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(54L).get()).product(productRepository.findById(54L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(55L).get()).product(productRepository.findById(55L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(56L).get()).product(productRepository.findById(56L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(57L).get()).product(productRepository.findById(57L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(58L).get()).product(productRepository.findById(58L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(59L).get()).product(productRepository.findById(59L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(60L).get()).product(productRepository.findById(60L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(61L).get()).product(productRepository.findById(61L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(62L).get()).product(productRepository.findById(62L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(63L).get()).product(productRepository.findById(63L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(64L).get()).product(productRepository.findById(64L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(65L).get()).product(productRepository.findById(65L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(66L).get()).product(productRepository.findById(66L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(67L).get()).product(productRepository.findById(67L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(68L).get()).product(productRepository.findById(68L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(69L).get()).product(productRepository.findById(69L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(70L).get()).product(productRepository.findById(70L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(71L).get()).product(productRepository.findById(71L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(72L).get()).product(productRepository.findById(72L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(73L).get()).product(productRepository.findById(73L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(74L).get()).product(productRepository.findById(74L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(75L).get()).product(productRepository.findById(75L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(76L).get()).product(productRepository.findById(76L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(77L).get()).product(productRepository.findById(77L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(78L).get()).product(productRepository.findById(78L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(79L).get()).product(productRepository.findById(79L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(80L).get()).product(productRepository.findById(80L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(81L).get()).product(productRepository.findById(81L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(82L).get()).product(productRepository.findById(82L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(83L).get()).product(productRepository.findById(83L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(84L).get()).product(productRepository.findById(84L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(85L).get()).product(productRepository.findById(85L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(86L).get()).product(productRepository.findById(86L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(87L).get()).product(productRepository.findById(87L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(88L).get()).product(productRepository.findById(88L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(89L).get()).product(productRepository.findById(89L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(90L).get()).product(productRepository.findById(90L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(91L).get()).product(productRepository.findById(91L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(92L).get()).product(productRepository.findById(92L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(93L).get()).product(productRepository.findById(93L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(94L).get()).product(productRepository.findById(94L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(95L).get()).product(productRepository.findById(95L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(96L).get()).product(productRepository.findById(96L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(97L).get()).product(productRepository.findById(97L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(98L).get()).product(productRepository.findById(98L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(99L).get()).product(productRepository.findById(99L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(100L).get()).product(productRepository.findById(100L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(1L).get()).product(productRepository.findById(101L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(2L).get()).product(productRepository.findById(102L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(3L).get()).product(productRepository.findById(103L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(4L).get()).product(productRepository.findById(104L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(5L).get()).product(productRepository.findById(105L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(6L).get()).product(productRepository.findById(106L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(7L).get()).product(productRepository.findById(107L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(8L).get()).product(productRepository.findById(108L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(9L).get()).product(productRepository.findById(109L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(10L).get()).product(productRepository.findById(110L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(11L).get()).product(productRepository.findById(111L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(12L).get()).product(productRepository.findById(112L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(13L).get()).product(productRepository.findById(113L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(14L).get()).product(productRepository.findById(114L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(15L).get()).product(productRepository.findById(115L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(16L).get()).product(productRepository.findById(116L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(17L).get()).product(productRepository.findById(117L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(18L).get()).product(productRepository.findById(118L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(19L).get()).product(productRepository.findById(119L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(20L).get()).product(productRepository.findById(120L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(21L).get()).product(productRepository.findById(121L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(22L).get()).product(productRepository.findById(122L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(23L).get()).product(productRepository.findById(123L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(24L).get()).product(productRepository.findById(124L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(25L).get()).product(productRepository.findById(125L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(26L).get()).product(productRepository.findById(126L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(27L).get()).product(productRepository.findById(127L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(28L).get()).product(productRepository.findById(128L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(29L).get()).product(productRepository.findById(129L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(30L).get()).product(productRepository.findById(130L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(31L).get()).product(productRepository.findById(131L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(32L).get()).product(productRepository.findById(132L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(33L).get()).product(productRepository.findById(133L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(34L).get()).product(productRepository.findById(134L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(35L).get()).product(productRepository.findById(135L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(36L).get()).product(productRepository.findById(136L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(37L).get()).product(productRepository.findById(137L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(38L).get()).product(productRepository.findById(138L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(39L).get()).product(productRepository.findById(139L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(40L).get()).product(productRepository.findById(140L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(41L).get()).product(productRepository.findById(141L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(42L).get()).product(productRepository.findById(142L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(43L).get()).product(productRepository.findById(143L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(44L).get()).product(productRepository.findById(144L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(45L).get()).product(productRepository.findById(145L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(46L).get()).product(productRepository.findById(146L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(47L).get()).product(productRepository.findById(147L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(48L).get()).product(productRepository.findById(148L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(49L).get()).product(productRepository.findById(149L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(50L).get()).product(productRepository.findById(150L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(51L).get()).product(productRepository.findById(151L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(52L).get()).product(productRepository.findById(152L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(53L).get()).product(productRepository.findById(153L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(54L).get()).product(productRepository.findById(154L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(55L).get()).product(productRepository.findById(155L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(56L).get()).product(productRepository.findById(156L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(57L).get()).product(productRepository.findById(157L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(58L).get()).product(productRepository.findById(158L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(59L).get()).product(productRepository.findById(159L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(60L).get()).product(productRepository.findById(160L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(61L).get()).product(productRepository.findById(161L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(62L).get()).product(productRepository.findById(162L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(63L).get()).product(productRepository.findById(163L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(64L).get()).product(productRepository.findById(164L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(65L).get()).product(productRepository.findById(165L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(66L).get()).product(productRepository.findById(166L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(67L).get()).product(productRepository.findById(167L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(68L).get()).product(productRepository.findById(168L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(69L).get()).product(productRepository.findById(169L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(70L).get()).product(productRepository.findById(170L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(71L).get()).product(productRepository.findById(171L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(72L).get()).product(productRepository.findById(172L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(73L).get()).product(productRepository.findById(173L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(74L).get()).product(productRepository.findById(174L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(75L).get()).product(productRepository.findById(175L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(76L).get()).product(productRepository.findById(176L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(77L).get()).product(productRepository.findById(177L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(78L).get()).product(productRepository.findById(178L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(79L).get()).product(productRepository.findById(179L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(80L).get()).product(productRepository.findById(180L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(81L).get()).product(productRepository.findById(181L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(82L).get()).product(productRepository.findById(182L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(83L).get()).product(productRepository.findById(183L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(84L).get()).product(productRepository.findById(184L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(85L).get()).product(productRepository.findById(185L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(86L).get()).product(productRepository.findById(186L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(87L).get()).product(productRepository.findById(187L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(88L).get()).product(productRepository.findById(188L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(89L).get()).product(productRepository.findById(189L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(90L).get()).product(productRepository.findById(190L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(91L).get()).product(productRepository.findById(191L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(92L).get()).product(productRepository.findById(192L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(93L).get()).product(productRepository.findById(193L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(94L).get()).product(productRepository.findById(194L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(95L).get()).product(productRepository.findById(195L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(96L).get()).product(productRepository.findById(196L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(97L).get()).product(productRepository.findById(197L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(98L).get()).product(productRepository.findById(198L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(99L).get()).product(productRepository.findById(199L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(100L).get()).product(productRepository.findById(200L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(1L).get()).product(productRepository.findById(201L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(2L).get()).product(productRepository.findById(202L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(3L).get()).product(productRepository.findById(203L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(4L).get()).product(productRepository.findById(204L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(5L).get()).product(productRepository.findById(205L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(6L).get()).product(productRepository.findById(206L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(7L).get()).product(productRepository.findById(207L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(8L).get()).product(productRepository.findById(208L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(9L).get()).product(productRepository.findById(209L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(10L).get()).product(productRepository.findById(210L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(11L).get()).product(productRepository.findById(211L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(12L).get()).product(productRepository.findById(212L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(13L).get()).product(productRepository.findById(213L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(14L).get()).product(productRepository.findById(214L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(15L).get()).product(productRepository.findById(215L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(16L).get()).product(productRepository.findById(216L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(17L).get()).product(productRepository.findById(217L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(18L).get()).product(productRepository.findById(218L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(19L).get()).product(productRepository.findById(219L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(20L).get()).product(productRepository.findById(220L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(21L).get()).product(productRepository.findById(221L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(22L).get()).product(productRepository.findById(222L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(23L).get()).product(productRepository.findById(223L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(24L).get()).product(productRepository.findById(224L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(25L).get()).product(productRepository.findById(225L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(26L).get()).product(productRepository.findById(226L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(27L).get()).product(productRepository.findById(227L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(28L).get()).product(productRepository.findById(228L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(29L).get()).product(productRepository.findById(229L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(30L).get()).product(productRepository.findById(230L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(31L).get()).product(productRepository.findById(231L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(32L).get()).product(productRepository.findById(232L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(33L).get()).product(productRepository.findById(233L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(34L).get()).product(productRepository.findById(234L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(35L).get()).product(productRepository.findById(235L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(36L).get()).product(productRepository.findById(236L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(37L).get()).product(productRepository.findById(237L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(38L).get()).product(productRepository.findById(238L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(39L).get()).product(productRepository.findById(239L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(40L).get()).product(productRepository.findById(240L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(41L).get()).product(productRepository.findById(241L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(42L).get()).product(productRepository.findById(242L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(43L).get()).product(productRepository.findById(243L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(44L).get()).product(productRepository.findById(244L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(45L).get()).product(productRepository.findById(245L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(46L).get()).product(productRepository.findById(246L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(47L).get()).product(productRepository.findById(247L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(48L).get()).product(productRepository.findById(248L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(49L).get()).product(productRepository.findById(249L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(50L).get()).product(productRepository.findById(250L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(51L).get()).product(productRepository.findById(251L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(52L).get()).product(productRepository.findById(252L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(53L).get()).product(productRepository.findById(253L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(54L).get()).product(productRepository.findById(254L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(55L).get()).product(productRepository.findById(255L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(56L).get()).product(productRepository.findById(256L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(57L).get()).product(productRepository.findById(257L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(58L).get()).product(productRepository.findById(258L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(59L).get()).product(productRepository.findById(259L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(60L).get()).product(productRepository.findById(260L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(61L).get()).product(productRepository.findById(261L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(62L).get()).product(productRepository.findById(262L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(63L).get()).product(productRepository.findById(263L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(64L).get()).product(productRepository.findById(264L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(65L).get()).product(productRepository.findById(265L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(66L).get()).product(productRepository.findById(266L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(67L).get()).product(productRepository.findById(267L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(68L).get()).product(productRepository.findById(268L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(69L).get()).product(productRepository.findById(269L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(70L).get()).product(productRepository.findById(270L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(71L).get()).product(productRepository.findById(271L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(72L).get()).product(productRepository.findById(272L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(73L).get()).product(productRepository.findById(273L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(74L).get()).product(productRepository.findById(274L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(75L).get()).product(productRepository.findById(275L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(76L).get()).product(productRepository.findById(276L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(77L).get()).product(productRepository.findById(277L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(78L).get()).product(productRepository.findById(278L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(79L).get()).product(productRepository.findById(279L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(80L).get()).product(productRepository.findById(280L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(81L).get()).product(productRepository.findById(281L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(82L).get()).product(productRepository.findById(282L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(83L).get()).product(productRepository.findById(283L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(84L).get()).product(productRepository.findById(284L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(85L).get()).product(productRepository.findById(285L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(86L).get()).product(productRepository.findById(286L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(87L).get()).product(productRepository.findById(287L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(88L).get()).product(productRepository.findById(288L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(89L).get()).product(productRepository.findById(289L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(90L).get()).product(productRepository.findById(290L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(91L).get()).product(productRepository.findById(291L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(92L).get()).product(productRepository.findById(292L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(93L).get()).product(productRepository.findById(293L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(94L).get()).product(productRepository.findById(294L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(95L).get()).product(productRepository.findById(295L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(96L).get()).product(productRepository.findById(296L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(97L).get()).product(productRepository.findById(297L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(98L).get()).product(productRepository.findById(298L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(99L).get()).product(productRepository.findById(299L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(100L).get()).product(productRepository.findById(300L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(1L).get()).product(productRepository.findById(301L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(2L).get()).product(productRepository.findById(302L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(3L).get()).product(productRepository.findById(303L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(4L).get()).product(productRepository.findById(304L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(5L).get()).product(productRepository.findById(305L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(6L).get()).product(productRepository.findById(306L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(7L).get()).product(productRepository.findById(307L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(8L).get()).product(productRepository.findById(308L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(9L).get()).product(productRepository.findById(309L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(10L).get()).product(productRepository.findById(310L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(11L).get()).product(productRepository.findById(311L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(12L).get()).product(productRepository.findById(312L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(13L).get()).product(productRepository.findById(313L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(14L).get()).product(productRepository.findById(314L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(15L).get()).product(productRepository.findById(315L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(16L).get()).product(productRepository.findById(316L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(17L).get()).product(productRepository.findById(317L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(18L).get()).product(productRepository.findById(318L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(19L).get()).product(productRepository.findById(319L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(20L).get()).product(productRepository.findById(320L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(21L).get()).product(productRepository.findById(321L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(22L).get()).product(productRepository.findById(322L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(23L).get()).product(productRepository.findById(323L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(24L).get()).product(productRepository.findById(324L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(25L).get()).product(productRepository.findById(325L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(26L).get()).product(productRepository.findById(326L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(27L).get()).product(productRepository.findById(327L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(28L).get()).product(productRepository.findById(328L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(29L).get()).product(productRepository.findById(329L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(30L).get()).product(productRepository.findById(330L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(31L).get()).product(productRepository.findById(331L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(32L).get()).product(productRepository.findById(332L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(33L).get()).product(productRepository.findById(333L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(34L).get()).product(productRepository.findById(334L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(35L).get()).product(productRepository.findById(335L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(36L).get()).product(productRepository.findById(336L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(37L).get()).product(productRepository.findById(337L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(38L).get()).product(productRepository.findById(338L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(39L).get()).product(productRepository.findById(339L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(40L).get()).product(productRepository.findById(340L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(41L).get()).product(productRepository.findById(341L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(42L).get()).product(productRepository.findById(342L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(43L).get()).product(productRepository.findById(343L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(44L).get()).product(productRepository.findById(344L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(45L).get()).product(productRepository.findById(345L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(46L).get()).product(productRepository.findById(346L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(47L).get()).product(productRepository.findById(347L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(48L).get()).product(productRepository.findById(348L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(49L).get()).product(productRepository.findById(349L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(50L).get()).product(productRepository.findById(350L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(51L).get()).product(productRepository.findById(351L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(52L).get()).product(productRepository.findById(352L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(53L).get()).product(productRepository.findById(353L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(54L).get()).product(productRepository.findById(354L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(55L).get()).product(productRepository.findById(355L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(56L).get()).product(productRepository.findById(356L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(57L).get()).product(productRepository.findById(357L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(58L).get()).product(productRepository.findById(358L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(59L).get()).product(productRepository.findById(359L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(60L).get()).product(productRepository.findById(360L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(61L).get()).product(productRepository.findById(361L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(62L).get()).product(productRepository.findById(362L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(63L).get()).product(productRepository.findById(363L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(64L).get()).product(productRepository.findById(364L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(65L).get()).product(productRepository.findById(365L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(66L).get()).product(productRepository.findById(366L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(67L).get()).product(productRepository.findById(367L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(68L).get()).product(productRepository.findById(368L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(69L).get()).product(productRepository.findById(369L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(70L).get()).product(productRepository.findById(370L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(71L).get()).product(productRepository.findById(371L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(72L).get()).product(productRepository.findById(372L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(73L).get()).product(productRepository.findById(373L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(74L).get()).product(productRepository.findById(374L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(75L).get()).product(productRepository.findById(375L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(76L).get()).product(productRepository.findById(376L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(77L).get()).product(productRepository.findById(377L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(78L).get()).product(productRepository.findById(378L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(79L).get()).product(productRepository.findById(379L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(80L).get()).product(productRepository.findById(380L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(81L).get()).product(productRepository.findById(381L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(82L).get()).product(productRepository.findById(382L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(83L).get()).product(productRepository.findById(383L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(84L).get()).product(productRepository.findById(384L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(85L).get()).product(productRepository.findById(385L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(86L).get()).product(productRepository.findById(386L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(87L).get()).product(productRepository.findById(387L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(88L).get()).product(productRepository.findById(388L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(89L).get()).product(productRepository.findById(389L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(90L).get()).product(productRepository.findById(390L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(91L).get()).product(productRepository.findById(391L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(92L).get()).product(productRepository.findById(392L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(93L).get()).product(productRepository.findById(393L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(94L).get()).product(productRepository.findById(394L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(95L).get()).product(productRepository.findById(395L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(96L).get()).product(productRepository.findById(396L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(97L).get()).product(productRepository.findById(397L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(98L).get()).product(productRepository.findById(398L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(99L).get()).product(productRepository.findById(399L).get()).quantity(200L).build());
        restaurantOrderCartDetailRepository.save(RestaurantOrderCartDetail.builder().restaurantOrderCart(restaurantOrderCartRepository.findById(100L).get()).product(productRepository.findById(400L).get()).quantity(200L).build());
    }

    void initPayment() {
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl00aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(101L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(101L).get()).member(orderRepository.findById(101L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl01aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(102L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(102L).get()).member(orderRepository.findById(102L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl02aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(103L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(103L).get()).member(orderRepository.findById(103L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl03aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(104L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(104L).get()).member(orderRepository.findById(104L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl04aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(105L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(105L).get()).member(orderRepository.findById(105L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl05aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(106L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(106L).get()).member(orderRepository.findById(106L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl06aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(107L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(107L).get()).member(orderRepository.findById(107L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl07aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(108L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(108L).get()).member(orderRepository.findById(108L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl08aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(109L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(109L).get()).member(orderRepository.findById(109L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl09aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(110L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(110L).get()).member(orderRepository.findById(110L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl10aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(111L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(111L).get()).member(orderRepository.findById(111L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl11aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(112L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(112L).get()).member(orderRepository.findById(112L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl12aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(113L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(113L).get()).member(orderRepository.findById(113L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl13aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(114L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(114L).get()).member(orderRepository.findById(114L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl14aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(115L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(115L).get()).member(orderRepository.findById(115L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl15aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(116L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(116L).get()).member(orderRepository.findById(116L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl16aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(117L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(117L).get()).member(orderRepository.findById(117L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl17aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(118L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(118L).get()).member(orderRepository.findById(118L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl18aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(119L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(119L).get()).member(orderRepository.findById(119L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl19aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(120L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(120L).get()).member(orderRepository.findById(120L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl20aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(121L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(121L).get()).member(orderRepository.findById(121L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl21aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(122L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(122L).get()).member(orderRepository.findById(122L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl22aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(123L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(123L).get()).member(orderRepository.findById(123L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl23aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(124L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(124L).get()).member(orderRepository.findById(124L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl24aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(125L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(125L).get()).member(orderRepository.findById(125L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl25aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(126L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(126L).get()).member(orderRepository.findById(126L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl26aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(127L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(127L).get()).member(orderRepository.findById(127L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl27aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(128L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(128L).get()).member(orderRepository.findById(128L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl28aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(129L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(129L).get()).member(orderRepository.findById(129L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl29aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(130L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(130L).get()).member(orderRepository.findById(130L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl30aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(131L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(131L).get()).member(orderRepository.findById(131L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl31aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(132L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(132L).get()).member(orderRepository.findById(132L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl32aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(133L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(133L).get()).member(orderRepository.findById(133L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl33aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(134L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(134L).get()).member(orderRepository.findById(134L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl34aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(135L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(135L).get()).member(orderRepository.findById(135L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl35aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(136L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(136L).get()).member(orderRepository.findById(136L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl36aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(137L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(137L).get()).member(orderRepository.findById(137L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl37aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(138L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(138L).get()).member(orderRepository.findById(138L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl38aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(139L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(139L).get()).member(orderRepository.findById(139L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl39aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(140L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(140L).get()).member(orderRepository.findById(140L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl40aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(141L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(141L).get()).member(orderRepository.findById(141L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl41aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(142L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(142L).get()).member(orderRepository.findById(142L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl42aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(143L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(143L).get()).member(orderRepository.findById(143L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl43aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(144L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(144L).get()).member(orderRepository.findById(144L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl44aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(145L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(145L).get()).member(orderRepository.findById(145L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl45aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(146L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(146L).get()).member(orderRepository.findById(146L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl46aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(147L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(147L).get()).member(orderRepository.findById(147L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl47aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(148L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(148L).get()).member(orderRepository.findById(148L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl48aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(149L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(149L).get()).member(orderRepository.findById(149L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl49aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(150L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(150L).get()).member(orderRepository.findById(150L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl50aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(151L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(151L).get()).member(orderRepository.findById(151L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl51aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(152L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(152L).get()).member(orderRepository.findById(152L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl52aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(153L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(153L).get()).member(orderRepository.findById(153L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl53aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(154L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(154L).get()).member(orderRepository.findById(154L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl54aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(155L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(155L).get()).member(orderRepository.findById(155L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl55aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(156L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(156L).get()).member(orderRepository.findById(156L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl56aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(157L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(157L).get()).member(orderRepository.findById(157L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl57aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(158L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(158L).get()).member(orderRepository.findById(158L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl58aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(159L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(159L).get()).member(orderRepository.findById(159L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl59aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(160L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(160L).get()).member(orderRepository.findById(160L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl60aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(161L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(161L).get()).member(orderRepository.findById(161L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl61aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(162L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(162L).get()).member(orderRepository.findById(162L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl62aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(163L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(163L).get()).member(orderRepository.findById(163L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl63aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(164L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(164L).get()).member(orderRepository.findById(164L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl64aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(165L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(165L).get()).member(orderRepository.findById(165L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl65aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(166L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(166L).get()).member(orderRepository.findById(166L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl66aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(167L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(167L).get()).member(orderRepository.findById(167L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl67aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(168L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(168L).get()).member(orderRepository.findById(168L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl68aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(169L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(169L).get()).member(orderRepository.findById(169L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl69aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(170L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(170L).get()).member(orderRepository.findById(170L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl70aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(171L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(171L).get()).member(orderRepository.findById(171L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl71aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(172L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(172L).get()).member(orderRepository.findById(172L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl72aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(173L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(173L).get()).member(orderRepository.findById(173L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl73aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(174L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(174L).get()).member(orderRepository.findById(174L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl74aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(175L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(175L).get()).member(orderRepository.findById(175L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl75aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(176L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(176L).get()).member(orderRepository.findById(176L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl76aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(177L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(177L).get()).member(orderRepository.findById(177L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl77aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(178L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(178L).get()).member(orderRepository.findById(178L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl78aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(179L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(179L).get()).member(orderRepository.findById(179L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl79aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(180L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(180L).get()).member(orderRepository.findById(180L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl80aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(181L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(181L).get()).member(orderRepository.findById(181L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl81aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(182L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(182L).get()).member(orderRepository.findById(182L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl82aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(183L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(183L).get()).member(orderRepository.findById(183L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl83aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(184L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(184L).get()).member(orderRepository.findById(184L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl84aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(185L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(185L).get()).member(orderRepository.findById(185L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl85aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(186L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(186L).get()).member(orderRepository.findById(186L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl86aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(187L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(187L).get()).member(orderRepository.findById(187L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl87aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(188L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(188L).get()).member(orderRepository.findById(188L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl88aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(189L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(189L).get()).member(orderRepository.findById(189L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl89aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(190L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(190L).get()).member(orderRepository.findById(190L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl90aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(191L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(191L).get()).member(orderRepository.findById(191L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl91aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(192L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(192L).get()).member(orderRepository.findById(192L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl92aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(193L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(193L).get()).member(orderRepository.findById(193L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl93aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(194L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(194L).get()).member(orderRepository.findById(194L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl94aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(195L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(195L).get()).member(orderRepository.findById(195L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl95aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(196L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(196L).get()).member(orderRepository.findById(196L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl96aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(197L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(197L).get()).member(orderRepository.findById(197L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl97aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(198L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(198L).get()).member(orderRepository.findById(198L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl98aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(199L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(199L).get()).member(orderRepository.findById(199L).get().getMember()).build());
        paymentRepository.save(Payment.builder().paymentNo("jPR7DvYpNk6bJXmgo01emDojZdPByA8LAnGKWx4qMl99aEwB").paymentStatus(PaymentStatus.DONE).paymentMethod(PaymentMethod.CARD).paymentProvider(PaymentProvider.TOSS_PAY).paymentCardType(PaymentCardType.CHECK).paymentOwnerType(PaymentOwnerType.PERSONAL).issuerCode(PaymentCardCode.SHINHAN).acquirerCode(PaymentCardCode.SHINHAN).totalPrice(orderRepository.findById(200L).get().getTotalPrice()).requestedAt(LocalDateTime.now()).approvedAt(LocalDateTime.now()).currency("KRW").order(orderRepository.findById(200L).get()).member(orderRepository.findById(200L).get().getMember()).build());
    }

    void initReview() {
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 1 : 좋습니다 ~!").item(orderDetailRepository.findById(1L).get().getItem()).orderDetail(orderDetailRepository.findById(1L).get()).member(orderRepository.findById(orderDetailRepository.findById(1L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 2 : 좋습니다 ~!").item(orderDetailRepository.findById(2L).get().getItem()).orderDetail(orderDetailRepository.findById(2L).get()).member(orderRepository.findById(orderDetailRepository.findById(2L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 3 : 좋습니다 ~!").item(orderDetailRepository.findById(3L).get().getItem()).orderDetail(orderDetailRepository.findById(3L).get()).member(orderRepository.findById(orderDetailRepository.findById(3L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 4 : 좋습니다 ~!").item(orderDetailRepository.findById(4L).get().getItem()).orderDetail(orderDetailRepository.findById(4L).get()).member(orderRepository.findById(orderDetailRepository.findById(4L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 5 : 좋습니다 ~!").item(orderDetailRepository.findById(5L).get().getItem()).orderDetail(orderDetailRepository.findById(5L).get()).member(orderRepository.findById(orderDetailRepository.findById(5L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(5D).content("테스트 리뷰 6 : 좋습니다 ~!").item(orderDetailRepository.findById(6L).get().getItem()).orderDetail(orderDetailRepository.findById(6L).get()).member(orderRepository.findById(orderDetailRepository.findById(6L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 7 : 좋습니다 ~!").item(orderDetailRepository.findById(7L).get().getItem()).orderDetail(orderDetailRepository.findById(7L).get()).member(orderRepository.findById(orderDetailRepository.findById(7L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 8 : 좋습니다 ~!").item(orderDetailRepository.findById(8L).get().getItem()).orderDetail(orderDetailRepository.findById(8L).get()).member(orderRepository.findById(orderDetailRepository.findById(8L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 9 : 좋습니다 ~!").item(orderDetailRepository.findById(9L).get().getItem()).orderDetail(orderDetailRepository.findById(9L).get()).member(orderRepository.findById(orderDetailRepository.findById(9L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 10 : 좋습니다 ~!").item(orderDetailRepository.findById(10L).get().getItem()).orderDetail(orderDetailRepository.findById(10L).get()).member(orderRepository.findById(orderDetailRepository.findById(10L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 11 : 좋습니다 ~!").item(orderDetailRepository.findById(11L).get().getItem()).orderDetail(orderDetailRepository.findById(11L).get()).member(orderRepository.findById(orderDetailRepository.findById(11L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 12 : 좋습니다 ~!").item(orderDetailRepository.findById(12L).get().getItem()).orderDetail(orderDetailRepository.findById(12L).get()).member(orderRepository.findById(orderDetailRepository.findById(12L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 13 : 좋습니다 ~!").item(orderDetailRepository.findById(13L).get().getItem()).orderDetail(orderDetailRepository.findById(13L).get()).member(orderRepository.findById(orderDetailRepository.findById(13L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 14 : 좋습니다 ~!").item(orderDetailRepository.findById(14L).get().getItem()).orderDetail(orderDetailRepository.findById(14L).get()).member(orderRepository.findById(orderDetailRepository.findById(14L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 15 : 좋습니다 ~!").item(orderDetailRepository.findById(15L).get().getItem()).orderDetail(orderDetailRepository.findById(15L).get()).member(orderRepository.findById(orderDetailRepository.findById(15L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 16 : 좋습니다 ~!").item(orderDetailRepository.findById(16L).get().getItem()).orderDetail(orderDetailRepository.findById(16L).get()).member(orderRepository.findById(orderDetailRepository.findById(16L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 17 : 좋습니다 ~!").item(orderDetailRepository.findById(17L).get().getItem()).orderDetail(orderDetailRepository.findById(17L).get()).member(orderRepository.findById(orderDetailRepository.findById(17L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 18 : 좋습니다 ~!").item(orderDetailRepository.findById(18L).get().getItem()).orderDetail(orderDetailRepository.findById(18L).get()).member(orderRepository.findById(orderDetailRepository.findById(18L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 19 : 좋습니다 ~!").item(orderDetailRepository.findById(19L).get().getItem()).orderDetail(orderDetailRepository.findById(19L).get()).member(orderRepository.findById(orderDetailRepository.findById(19L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 20 : 좋습니다 ~!").item(orderDetailRepository.findById(20L).get().getItem()).orderDetail(orderDetailRepository.findById(20L).get()).member(orderRepository.findById(orderDetailRepository.findById(20L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 21 : 좋습니다 ~!").item(orderDetailRepository.findById(21L).get().getItem()).orderDetail(orderDetailRepository.findById(21L).get()).member(orderRepository.findById(orderDetailRepository.findById(21L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 22 : 좋습니다 ~!").item(orderDetailRepository.findById(22L).get().getItem()).orderDetail(orderDetailRepository.findById(22L).get()).member(orderRepository.findById(orderDetailRepository.findById(22L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 23 : 좋습니다 ~!").item(orderDetailRepository.findById(23L).get().getItem()).orderDetail(orderDetailRepository.findById(23L).get()).member(orderRepository.findById(orderDetailRepository.findById(23L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 24 : 좋습니다 ~!").item(orderDetailRepository.findById(24L).get().getItem()).orderDetail(orderDetailRepository.findById(24L).get()).member(orderRepository.findById(orderDetailRepository.findById(24L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 25 : 좋습니다 ~!").item(orderDetailRepository.findById(25L).get().getItem()).orderDetail(orderDetailRepository.findById(25L).get()).member(orderRepository.findById(orderDetailRepository.findById(25L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(5D).content("테스트 리뷰 26 : 좋습니다 ~!").item(orderDetailRepository.findById(26L).get().getItem()).orderDetail(orderDetailRepository.findById(26L).get()).member(orderRepository.findById(orderDetailRepository.findById(26L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 27 : 좋습니다 ~!").item(orderDetailRepository.findById(27L).get().getItem()).orderDetail(orderDetailRepository.findById(27L).get()).member(orderRepository.findById(orderDetailRepository.findById(27L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 28 : 좋습니다 ~!").item(orderDetailRepository.findById(28L).get().getItem()).orderDetail(orderDetailRepository.findById(28L).get()).member(orderRepository.findById(orderDetailRepository.findById(28L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 29 : 좋습니다 ~!").item(orderDetailRepository.findById(29L).get().getItem()).orderDetail(orderDetailRepository.findById(29L).get()).member(orderRepository.findById(orderDetailRepository.findById(29L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 30 : 좋습니다 ~!").item(orderDetailRepository.findById(30L).get().getItem()).orderDetail(orderDetailRepository.findById(30L).get()).member(orderRepository.findById(orderDetailRepository.findById(30L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 31 : 좋습니다 ~!").item(orderDetailRepository.findById(31L).get().getItem()).orderDetail(orderDetailRepository.findById(31L).get()).member(orderRepository.findById(orderDetailRepository.findById(31L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 32 : 좋습니다 ~!").item(orderDetailRepository.findById(32L).get().getItem()).orderDetail(orderDetailRepository.findById(32L).get()).member(orderRepository.findById(orderDetailRepository.findById(32L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 33 : 좋습니다 ~!").item(orderDetailRepository.findById(33L).get().getItem()).orderDetail(orderDetailRepository.findById(33L).get()).member(orderRepository.findById(orderDetailRepository.findById(33L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 34 : 좋습니다 ~!").item(orderDetailRepository.findById(34L).get().getItem()).orderDetail(orderDetailRepository.findById(34L).get()).member(orderRepository.findById(orderDetailRepository.findById(34L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 35 : 좋습니다 ~!").item(orderDetailRepository.findById(35L).get().getItem()).orderDetail(orderDetailRepository.findById(35L).get()).member(orderRepository.findById(orderDetailRepository.findById(35L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 36 : 좋습니다 ~!").item(orderDetailRepository.findById(36L).get().getItem()).orderDetail(orderDetailRepository.findById(36L).get()).member(orderRepository.findById(orderDetailRepository.findById(36L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 37 : 좋습니다 ~!").item(orderDetailRepository.findById(37L).get().getItem()).orderDetail(orderDetailRepository.findById(37L).get()).member(orderRepository.findById(orderDetailRepository.findById(37L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 38 : 좋습니다 ~!").item(orderDetailRepository.findById(38L).get().getItem()).orderDetail(orderDetailRepository.findById(38L).get()).member(orderRepository.findById(orderDetailRepository.findById(38L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 39 : 좋습니다 ~!").item(orderDetailRepository.findById(39L).get().getItem()).orderDetail(orderDetailRepository.findById(39L).get()).member(orderRepository.findById(orderDetailRepository.findById(39L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 40 : 좋습니다 ~!").item(orderDetailRepository.findById(40L).get().getItem()).orderDetail(orderDetailRepository.findById(40L).get()).member(orderRepository.findById(orderDetailRepository.findById(40L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 41 : 좋습니다 ~!").item(orderDetailRepository.findById(41L).get().getItem()).orderDetail(orderDetailRepository.findById(41L).get()).member(orderRepository.findById(orderDetailRepository.findById(41L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 42 : 좋습니다 ~!").item(orderDetailRepository.findById(42L).get().getItem()).orderDetail(orderDetailRepository.findById(42L).get()).member(orderRepository.findById(orderDetailRepository.findById(42L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 43 : 좋습니다 ~!").item(orderDetailRepository.findById(43L).get().getItem()).orderDetail(orderDetailRepository.findById(43L).get()).member(orderRepository.findById(orderDetailRepository.findById(43L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 44 : 좋습니다 ~!").item(orderDetailRepository.findById(44L).get().getItem()).orderDetail(orderDetailRepository.findById(44L).get()).member(orderRepository.findById(orderDetailRepository.findById(44L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 45 : 좋습니다 ~!").item(orderDetailRepository.findById(45L).get().getItem()).orderDetail(orderDetailRepository.findById(45L).get()).member(orderRepository.findById(orderDetailRepository.findById(45L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(5D).content("테스트 리뷰 46 : 좋습니다 ~!").item(orderDetailRepository.findById(46L).get().getItem()).orderDetail(orderDetailRepository.findById(46L).get()).member(orderRepository.findById(orderDetailRepository.findById(46L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 47 : 좋습니다 ~!").item(orderDetailRepository.findById(47L).get().getItem()).orderDetail(orderDetailRepository.findById(47L).get()).member(orderRepository.findById(orderDetailRepository.findById(47L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 48 : 좋습니다 ~!").item(orderDetailRepository.findById(48L).get().getItem()).orderDetail(orderDetailRepository.findById(48L).get()).member(orderRepository.findById(orderDetailRepository.findById(48L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 49 : 좋습니다 ~!").item(orderDetailRepository.findById(49L).get().getItem()).orderDetail(orderDetailRepository.findById(49L).get()).member(orderRepository.findById(orderDetailRepository.findById(49L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 50 : 좋습니다 ~!").item(orderDetailRepository.findById(50L).get().getItem()).orderDetail(orderDetailRepository.findById(50L).get()).member(orderRepository.findById(orderDetailRepository.findById(50L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 51 : 좋습니다 ~!").item(orderDetailRepository.findById(51L).get().getItem()).orderDetail(orderDetailRepository.findById(51L).get()).member(orderRepository.findById(orderDetailRepository.findById(51L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 52 : 좋습니다 ~!").item(orderDetailRepository.findById(52L).get().getItem()).orderDetail(orderDetailRepository.findById(52L).get()).member(orderRepository.findById(orderDetailRepository.findById(52L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 53 : 좋습니다 ~!").item(orderDetailRepository.findById(53L).get().getItem()).orderDetail(orderDetailRepository.findById(53L).get()).member(orderRepository.findById(orderDetailRepository.findById(53L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 54 : 좋습니다 ~!").item(orderDetailRepository.findById(54L).get().getItem()).orderDetail(orderDetailRepository.findById(54L).get()).member(orderRepository.findById(orderDetailRepository.findById(54L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 55 : 좋습니다 ~!").item(orderDetailRepository.findById(55L).get().getItem()).orderDetail(orderDetailRepository.findById(55L).get()).member(orderRepository.findById(orderDetailRepository.findById(55L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 56 : 좋습니다 ~!").item(orderDetailRepository.findById(56L).get().getItem()).orderDetail(orderDetailRepository.findById(56L).get()).member(orderRepository.findById(orderDetailRepository.findById(56L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 57 : 좋습니다 ~!").item(orderDetailRepository.findById(57L).get().getItem()).orderDetail(orderDetailRepository.findById(57L).get()).member(orderRepository.findById(orderDetailRepository.findById(57L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 58 : 좋습니다 ~!").item(orderDetailRepository.findById(58L).get().getItem()).orderDetail(orderDetailRepository.findById(58L).get()).member(orderRepository.findById(orderDetailRepository.findById(58L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 59 : 좋습니다 ~!").item(orderDetailRepository.findById(59L).get().getItem()).orderDetail(orderDetailRepository.findById(59L).get()).member(orderRepository.findById(orderDetailRepository.findById(59L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 60 : 좋습니다 ~!").item(orderDetailRepository.findById(60L).get().getItem()).orderDetail(orderDetailRepository.findById(60L).get()).member(orderRepository.findById(orderDetailRepository.findById(60L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 61 : 좋습니다 ~!").item(orderDetailRepository.findById(61L).get().getItem()).orderDetail(orderDetailRepository.findById(61L).get()).member(orderRepository.findById(orderDetailRepository.findById(61L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 62 : 좋습니다 ~!").item(orderDetailRepository.findById(62L).get().getItem()).orderDetail(orderDetailRepository.findById(62L).get()).member(orderRepository.findById(orderDetailRepository.findById(62L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 63 : 좋습니다 ~!").item(orderDetailRepository.findById(63L).get().getItem()).orderDetail(orderDetailRepository.findById(63L).get()).member(orderRepository.findById(orderDetailRepository.findById(63L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 64 : 좋습니다 ~!").item(orderDetailRepository.findById(64L).get().getItem()).orderDetail(orderDetailRepository.findById(64L).get()).member(orderRepository.findById(orderDetailRepository.findById(64L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 65 : 좋습니다 ~!").item(orderDetailRepository.findById(65L).get().getItem()).orderDetail(orderDetailRepository.findById(65L).get()).member(orderRepository.findById(orderDetailRepository.findById(65L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(5D).content("테스트 리뷰 66 : 좋습니다 ~!").item(orderDetailRepository.findById(66L).get().getItem()).orderDetail(orderDetailRepository.findById(66L).get()).member(orderRepository.findById(orderDetailRepository.findById(66L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 67 : 좋습니다 ~!").item(orderDetailRepository.findById(67L).get().getItem()).orderDetail(orderDetailRepository.findById(67L).get()).member(orderRepository.findById(orderDetailRepository.findById(67L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 68 : 좋습니다 ~!").item(orderDetailRepository.findById(68L).get().getItem()).orderDetail(orderDetailRepository.findById(68L).get()).member(orderRepository.findById(orderDetailRepository.findById(68L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 69 : 좋습니다 ~!").item(orderDetailRepository.findById(69L).get().getItem()).orderDetail(orderDetailRepository.findById(69L).get()).member(orderRepository.findById(orderDetailRepository.findById(69L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 70 : 좋습니다 ~!").item(orderDetailRepository.findById(70L).get().getItem()).orderDetail(orderDetailRepository.findById(70L).get()).member(orderRepository.findById(orderDetailRepository.findById(70L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 71 : 좋습니다 ~!").item(orderDetailRepository.findById(71L).get().getItem()).orderDetail(orderDetailRepository.findById(71L).get()).member(orderRepository.findById(orderDetailRepository.findById(71L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 72 : 좋습니다 ~!").item(orderDetailRepository.findById(72L).get().getItem()).orderDetail(orderDetailRepository.findById(72L).get()).member(orderRepository.findById(orderDetailRepository.findById(72L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 73 : 좋습니다 ~!").item(orderDetailRepository.findById(73L).get().getItem()).orderDetail(orderDetailRepository.findById(73L).get()).member(orderRepository.findById(orderDetailRepository.findById(73L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 74 : 좋습니다 ~!").item(orderDetailRepository.findById(74L).get().getItem()).orderDetail(orderDetailRepository.findById(74L).get()).member(orderRepository.findById(orderDetailRepository.findById(74L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 75 : 좋습니다 ~!").item(orderDetailRepository.findById(75L).get().getItem()).orderDetail(orderDetailRepository.findById(75L).get()).member(orderRepository.findById(orderDetailRepository.findById(75L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 76 : 좋습니다 ~!").item(orderDetailRepository.findById(76L).get().getItem()).orderDetail(orderDetailRepository.findById(76L).get()).member(orderRepository.findById(orderDetailRepository.findById(76L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 77 : 좋습니다 ~!").item(orderDetailRepository.findById(77L).get().getItem()).orderDetail(orderDetailRepository.findById(77L).get()).member(orderRepository.findById(orderDetailRepository.findById(77L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 78 : 좋습니다 ~!").item(orderDetailRepository.findById(78L).get().getItem()).orderDetail(orderDetailRepository.findById(78L).get()).member(orderRepository.findById(orderDetailRepository.findById(78L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 79 : 좋습니다 ~!").item(orderDetailRepository.findById(79L).get().getItem()).orderDetail(orderDetailRepository.findById(79L).get()).member(orderRepository.findById(orderDetailRepository.findById(79L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 80 : 좋습니다 ~!").item(orderDetailRepository.findById(80L).get().getItem()).orderDetail(orderDetailRepository.findById(80L).get()).member(orderRepository.findById(orderDetailRepository.findById(80L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 81 : 좋습니다 ~!").item(orderDetailRepository.findById(81L).get().getItem()).orderDetail(orderDetailRepository.findById(81L).get()).member(orderRepository.findById(orderDetailRepository.findById(81L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 82 : 좋습니다 ~!").item(orderDetailRepository.findById(82L).get().getItem()).orderDetail(orderDetailRepository.findById(82L).get()).member(orderRepository.findById(orderDetailRepository.findById(82L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 83 : 좋습니다 ~!").item(orderDetailRepository.findById(83L).get().getItem()).orderDetail(orderDetailRepository.findById(83L).get()).member(orderRepository.findById(orderDetailRepository.findById(83L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 84 : 좋습니다 ~!").item(orderDetailRepository.findById(84L).get().getItem()).orderDetail(orderDetailRepository.findById(84L).get()).member(orderRepository.findById(orderDetailRepository.findById(84L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 85 : 좋습니다 ~!").item(orderDetailRepository.findById(85L).get().getItem()).orderDetail(orderDetailRepository.findById(85L).get()).member(orderRepository.findById(orderDetailRepository.findById(85L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(5D).content("테스트 리뷰 86 : 좋습니다 ~!").item(orderDetailRepository.findById(86L).get().getItem()).orderDetail(orderDetailRepository.findById(86L).get()).member(orderRepository.findById(orderDetailRepository.findById(86L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 87 : 좋습니다 ~!").item(orderDetailRepository.findById(87L).get().getItem()).orderDetail(orderDetailRepository.findById(87L).get()).member(orderRepository.findById(orderDetailRepository.findById(87L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 88 : 좋습니다 ~!").item(orderDetailRepository.findById(88L).get().getItem()).orderDetail(orderDetailRepository.findById(88L).get()).member(orderRepository.findById(orderDetailRepository.findById(88L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 89 : 좋습니다 ~!").item(orderDetailRepository.findById(89L).get().getItem()).orderDetail(orderDetailRepository.findById(89L).get()).member(orderRepository.findById(orderDetailRepository.findById(89L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 90 : 좋습니다 ~!").item(orderDetailRepository.findById(90L).get().getItem()).orderDetail(orderDetailRepository.findById(90L).get()).member(orderRepository.findById(orderDetailRepository.findById(90L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 91 : 좋습니다 ~!").item(orderDetailRepository.findById(91L).get().getItem()).orderDetail(orderDetailRepository.findById(91L).get()).member(orderRepository.findById(orderDetailRepository.findById(91L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 92 : 좋습니다 ~!").item(orderDetailRepository.findById(92L).get().getItem()).orderDetail(orderDetailRepository.findById(92L).get()).member(orderRepository.findById(orderDetailRepository.findById(92L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 93 : 좋습니다 ~!").item(orderDetailRepository.findById(93L).get().getItem()).orderDetail(orderDetailRepository.findById(93L).get()).member(orderRepository.findById(orderDetailRepository.findById(93L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 94 : 좋습니다 ~!").item(orderDetailRepository.findById(94L).get().getItem()).orderDetail(orderDetailRepository.findById(94L).get()).member(orderRepository.findById(orderDetailRepository.findById(94L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 95 : 좋습니다 ~!").item(orderDetailRepository.findById(95L).get().getItem()).orderDetail(orderDetailRepository.findById(95L).get()).member(orderRepository.findById(orderDetailRepository.findById(95L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(2D).content("테스트 리뷰 96 : 좋습니다 ~!").item(orderDetailRepository.findById(96L).get().getItem()).orderDetail(orderDetailRepository.findById(96L).get()).member(orderRepository.findById(orderDetailRepository.findById(96L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(3D).content("테스트 리뷰 97 : 좋습니다 ~!").item(orderDetailRepository.findById(97L).get().getItem()).orderDetail(orderDetailRepository.findById(97L).get()).member(orderRepository.findById(orderDetailRepository.findById(97L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 98 : 좋습니다 ~!").item(orderDetailRepository.findById(98L).get().getItem()).orderDetail(orderDetailRepository.findById(98L).get()).member(orderRepository.findById(orderDetailRepository.findById(98L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(1D).content("테스트 리뷰 99 : 좋습니다 ~!").item(orderDetailRepository.findById(99L).get().getItem()).orderDetail(orderDetailRepository.findById(99L).get()).member(orderRepository.findById(orderDetailRepository.findById(99L).get().getOrder().getId()).get().getMember()).build());
        reviewRepository.save(Review.builder().score(4D).content("테스트 리뷰 100 : 좋습니다 ~!").item(orderDetailRepository.findById(100L).get().getItem()).orderDetail(orderDetailRepository.findById(100L).get()).member(orderRepository.findById(orderDetailRepository.findById(100L).get().getOrder().getId()).get().getMember()).build());
    }

    void initAddress() {
        addressRepository.save(Address.builder().member(memberRepository.findById(116L).get()).isPrimary(true).address("테스트 주소 : 1").addressDetail("101호").postcode("00001").phone(1012345678L).recipient(memberRepository.findById(116L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(117L).get()).isPrimary(true).address("테스트 주소 : 2").addressDetail("102호").postcode("00002").phone(1012345679L).recipient(memberRepository.findById(117L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(118L).get()).isPrimary(true).address("테스트 주소 : 3").addressDetail("103호").postcode("00003").phone(1012345680L).recipient(memberRepository.findById(118L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(119L).get()).isPrimary(true).address("테스트 주소 : 4").addressDetail("104호").postcode("00004").phone(1012345681L).recipient(memberRepository.findById(119L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(120L).get()).isPrimary(true).address("테스트 주소 : 5").addressDetail("105호").postcode("00005").phone(1012345682L).recipient(memberRepository.findById(120L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(121L).get()).isPrimary(true).address("테스트 주소 : 6").addressDetail("106호").postcode("00006").phone(1012345683L).recipient(memberRepository.findById(121L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(122L).get()).isPrimary(true).address("테스트 주소 : 7").addressDetail("107호").postcode("00007").phone(1012345684L).recipient(memberRepository.findById(122L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(123L).get()).isPrimary(true).address("테스트 주소 : 8").addressDetail("108호").postcode("00008").phone(1012345685L).recipient(memberRepository.findById(123L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(124L).get()).isPrimary(true).address("테스트 주소 : 9").addressDetail("109호").postcode("00009").phone(1012345686L).recipient(memberRepository.findById(124L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(125L).get()).isPrimary(true).address("테스트 주소 : 10").addressDetail("110호").postcode("00010").phone(1012345687L).recipient(memberRepository.findById(125L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(126L).get()).isPrimary(true).address("테스트 주소 : 11").addressDetail("111호").postcode("00011").phone(1012345688L).recipient(memberRepository.findById(126L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(127L).get()).isPrimary(true).address("테스트 주소 : 12").addressDetail("112호").postcode("00012").phone(1012345689L).recipient(memberRepository.findById(127L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(128L).get()).isPrimary(true).address("테스트 주소 : 13").addressDetail("113호").postcode("00013").phone(1012345690L).recipient(memberRepository.findById(128L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(129L).get()).isPrimary(true).address("테스트 주소 : 14").addressDetail("114호").postcode("00014").phone(1012345691L).recipient(memberRepository.findById(129L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(130L).get()).isPrimary(true).address("테스트 주소 : 15").addressDetail("115호").postcode("00015").phone(1012345692L).recipient(memberRepository.findById(130L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(131L).get()).isPrimary(true).address("테스트 주소 : 16").addressDetail("116호").postcode("00016").phone(1012345693L).recipient(memberRepository.findById(131L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(132L).get()).isPrimary(true).address("테스트 주소 : 17").addressDetail("117호").postcode("00017").phone(1012345694L).recipient(memberRepository.findById(132L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(133L).get()).isPrimary(true).address("테스트 주소 : 18").addressDetail("118호").postcode("00018").phone(1012345695L).recipient(memberRepository.findById(133L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(134L).get()).isPrimary(true).address("테스트 주소 : 19").addressDetail("119호").postcode("00019").phone(1012345696L).recipient(memberRepository.findById(134L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(135L).get()).isPrimary(true).address("테스트 주소 : 20").addressDetail("120호").postcode("00020").phone(1012345697L).recipient(memberRepository.findById(135L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(136L).get()).isPrimary(true).address("테스트 주소 : 21").addressDetail("121호").postcode("00021").phone(1012345698L).recipient(memberRepository.findById(136L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(137L).get()).isPrimary(true).address("테스트 주소 : 22").addressDetail("122호").postcode("00022").phone(1012345699L).recipient(memberRepository.findById(137L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(138L).get()).isPrimary(true).address("테스트 주소 : 23").addressDetail("123호").postcode("00023").phone(1012345700L).recipient(memberRepository.findById(138L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(139L).get()).isPrimary(true).address("테스트 주소 : 24").addressDetail("124호").postcode("00024").phone(1012345701L).recipient(memberRepository.findById(139L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(140L).get()).isPrimary(true).address("테스트 주소 : 25").addressDetail("125호").postcode("00025").phone(1012345702L).recipient(memberRepository.findById(140L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(141L).get()).isPrimary(true).address("테스트 주소 : 26").addressDetail("126호").postcode("00026").phone(1012345703L).recipient(memberRepository.findById(141L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(142L).get()).isPrimary(true).address("테스트 주소 : 27").addressDetail("127호").postcode("00027").phone(1012345704L).recipient(memberRepository.findById(142L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(143L).get()).isPrimary(true).address("테스트 주소 : 28").addressDetail("128호").postcode("00028").phone(1012345705L).recipient(memberRepository.findById(143L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(144L).get()).isPrimary(true).address("테스트 주소 : 29").addressDetail("129호").postcode("00029").phone(1012345706L).recipient(memberRepository.findById(144L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(145L).get()).isPrimary(true).address("테스트 주소 : 30").addressDetail("130호").postcode("00030").phone(1012345707L).recipient(memberRepository.findById(145L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(146L).get()).isPrimary(true).address("테스트 주소 : 31").addressDetail("131호").postcode("00031").phone(1012345708L).recipient(memberRepository.findById(146L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(147L).get()).isPrimary(true).address("테스트 주소 : 32").addressDetail("132호").postcode("00032").phone(1012345709L).recipient(memberRepository.findById(147L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(148L).get()).isPrimary(true).address("테스트 주소 : 33").addressDetail("133호").postcode("00033").phone(1012345710L).recipient(memberRepository.findById(148L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(149L).get()).isPrimary(true).address("테스트 주소 : 34").addressDetail("134호").postcode("00034").phone(1012345711L).recipient(memberRepository.findById(149L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(150L).get()).isPrimary(true).address("테스트 주소 : 35").addressDetail("135호").postcode("00035").phone(1012345712L).recipient(memberRepository.findById(150L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(151L).get()).isPrimary(true).address("테스트 주소 : 36").addressDetail("136호").postcode("00036").phone(1012345713L).recipient(memberRepository.findById(151L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(152L).get()).isPrimary(true).address("테스트 주소 : 37").addressDetail("137호").postcode("00037").phone(1012345714L).recipient(memberRepository.findById(152L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(153L).get()).isPrimary(true).address("테스트 주소 : 38").addressDetail("138호").postcode("00038").phone(1012345715L).recipient(memberRepository.findById(153L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(154L).get()).isPrimary(true).address("테스트 주소 : 39").addressDetail("139호").postcode("00039").phone(1012345716L).recipient(memberRepository.findById(154L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(155L).get()).isPrimary(true).address("테스트 주소 : 40").addressDetail("140호").postcode("00040").phone(1012345717L).recipient(memberRepository.findById(155L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(156L).get()).isPrimary(true).address("테스트 주소 : 41").addressDetail("141호").postcode("00041").phone(1012345718L).recipient(memberRepository.findById(156L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(157L).get()).isPrimary(true).address("테스트 주소 : 42").addressDetail("142호").postcode("00042").phone(1012345719L).recipient(memberRepository.findById(157L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(158L).get()).isPrimary(true).address("테스트 주소 : 43").addressDetail("143호").postcode("00043").phone(1012345720L).recipient(memberRepository.findById(158L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(159L).get()).isPrimary(true).address("테스트 주소 : 44").addressDetail("144호").postcode("00044").phone(1012345721L).recipient(memberRepository.findById(159L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(160L).get()).isPrimary(true).address("테스트 주소 : 45").addressDetail("145호").postcode("00045").phone(1012345722L).recipient(memberRepository.findById(160L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(161L).get()).isPrimary(true).address("테스트 주소 : 46").addressDetail("146호").postcode("00046").phone(1012345723L).recipient(memberRepository.findById(161L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(162L).get()).isPrimary(true).address("테스트 주소 : 47").addressDetail("147호").postcode("00047").phone(1012345724L).recipient(memberRepository.findById(162L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(163L).get()).isPrimary(true).address("테스트 주소 : 48").addressDetail("148호").postcode("00048").phone(1012345725L).recipient(memberRepository.findById(163L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(164L).get()).isPrimary(true).address("테스트 주소 : 49").addressDetail("149호").postcode("00049").phone(1012345726L).recipient(memberRepository.findById(164L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(165L).get()).isPrimary(true).address("테스트 주소 : 50").addressDetail("150호").postcode("00050").phone(1012345727L).recipient(memberRepository.findById(165L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(166L).get()).isPrimary(true).address("테스트 주소 : 51").addressDetail("151호").postcode("00051").phone(1012345728L).recipient(memberRepository.findById(166L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(167L).get()).isPrimary(true).address("테스트 주소 : 52").addressDetail("152호").postcode("00052").phone(1012345729L).recipient(memberRepository.findById(167L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(168L).get()).isPrimary(true).address("테스트 주소 : 53").addressDetail("153호").postcode("00053").phone(1012345730L).recipient(memberRepository.findById(168L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(169L).get()).isPrimary(true).address("테스트 주소 : 54").addressDetail("154호").postcode("00054").phone(1012345731L).recipient(memberRepository.findById(169L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(170L).get()).isPrimary(true).address("테스트 주소 : 55").addressDetail("155호").postcode("00055").phone(1012345732L).recipient(memberRepository.findById(170L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(171L).get()).isPrimary(true).address("테스트 주소 : 56").addressDetail("156호").postcode("00056").phone(1012345733L).recipient(memberRepository.findById(171L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(172L).get()).isPrimary(true).address("테스트 주소 : 57").addressDetail("157호").postcode("00057").phone(1012345734L).recipient(memberRepository.findById(172L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(173L).get()).isPrimary(true).address("테스트 주소 : 58").addressDetail("158호").postcode("00058").phone(1012345735L).recipient(memberRepository.findById(173L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(174L).get()).isPrimary(true).address("테스트 주소 : 59").addressDetail("159호").postcode("00059").phone(1012345736L).recipient(memberRepository.findById(174L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(175L).get()).isPrimary(true).address("테스트 주소 : 60").addressDetail("160호").postcode("00060").phone(1012345737L).recipient(memberRepository.findById(175L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(176L).get()).isPrimary(true).address("테스트 주소 : 61").addressDetail("161호").postcode("00061").phone(1012345738L).recipient(memberRepository.findById(176L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(177L).get()).isPrimary(true).address("테스트 주소 : 62").addressDetail("162호").postcode("00062").phone(1012345739L).recipient(memberRepository.findById(177L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(178L).get()).isPrimary(true).address("테스트 주소 : 63").addressDetail("163호").postcode("00063").phone(1012345740L).recipient(memberRepository.findById(178L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(179L).get()).isPrimary(true).address("테스트 주소 : 64").addressDetail("164호").postcode("00064").phone(1012345741L).recipient(memberRepository.findById(179L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(180L).get()).isPrimary(true).address("테스트 주소 : 65").addressDetail("165호").postcode("00065").phone(1012345742L).recipient(memberRepository.findById(180L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(181L).get()).isPrimary(true).address("테스트 주소 : 66").addressDetail("166호").postcode("00066").phone(1012345743L).recipient(memberRepository.findById(181L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(182L).get()).isPrimary(true).address("테스트 주소 : 67").addressDetail("167호").postcode("00067").phone(1012345744L).recipient(memberRepository.findById(182L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(183L).get()).isPrimary(true).address("테스트 주소 : 68").addressDetail("168호").postcode("00068").phone(1012345745L).recipient(memberRepository.findById(183L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(184L).get()).isPrimary(true).address("테스트 주소 : 69").addressDetail("169호").postcode("00069").phone(1012345746L).recipient(memberRepository.findById(184L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(185L).get()).isPrimary(true).address("테스트 주소 : 70").addressDetail("170호").postcode("00070").phone(1012345747L).recipient(memberRepository.findById(185L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(186L).get()).isPrimary(true).address("테스트 주소 : 71").addressDetail("171호").postcode("00071").phone(1012345748L).recipient(memberRepository.findById(186L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(187L).get()).isPrimary(true).address("테스트 주소 : 72").addressDetail("172호").postcode("00072").phone(1012345749L).recipient(memberRepository.findById(187L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(188L).get()).isPrimary(true).address("테스트 주소 : 73").addressDetail("173호").postcode("00073").phone(1012345750L).recipient(memberRepository.findById(188L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(189L).get()).isPrimary(true).address("테스트 주소 : 74").addressDetail("174호").postcode("00074").phone(1012345751L).recipient(memberRepository.findById(189L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(190L).get()).isPrimary(true).address("테스트 주소 : 75").addressDetail("175호").postcode("00075").phone(1012345752L).recipient(memberRepository.findById(190L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(191L).get()).isPrimary(true).address("테스트 주소 : 76").addressDetail("176호").postcode("00076").phone(1012345753L).recipient(memberRepository.findById(191L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(192L).get()).isPrimary(true).address("테스트 주소 : 77").addressDetail("177호").postcode("00077").phone(1012345754L).recipient(memberRepository.findById(192L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(193L).get()).isPrimary(true).address("테스트 주소 : 78").addressDetail("178호").postcode("00078").phone(1012345755L).recipient(memberRepository.findById(193L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(194L).get()).isPrimary(true).address("테스트 주소 : 79").addressDetail("179호").postcode("00079").phone(1012345756L).recipient(memberRepository.findById(194L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(195L).get()).isPrimary(true).address("테스트 주소 : 80").addressDetail("180호").postcode("00080").phone(1012345757L).recipient(memberRepository.findById(195L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(196L).get()).isPrimary(true).address("테스트 주소 : 81").addressDetail("181호").postcode("00081").phone(1012345758L).recipient(memberRepository.findById(196L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(197L).get()).isPrimary(true).address("테스트 주소 : 82").addressDetail("182호").postcode("00082").phone(1012345759L).recipient(memberRepository.findById(197L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(198L).get()).isPrimary(true).address("테스트 주소 : 83").addressDetail("183호").postcode("00083").phone(1012345760L).recipient(memberRepository.findById(198L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(199L).get()).isPrimary(true).address("테스트 주소 : 84").addressDetail("184호").postcode("00084").phone(1012345761L).recipient(memberRepository.findById(199L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(200L).get()).isPrimary(true).address("테스트 주소 : 85").addressDetail("185호").postcode("00085").phone(1012345762L).recipient(memberRepository.findById(200L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(201L).get()).isPrimary(true).address("테스트 주소 : 86").addressDetail("186호").postcode("00086").phone(1012345763L).recipient(memberRepository.findById(201L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(202L).get()).isPrimary(true).address("테스트 주소 : 87").addressDetail("187호").postcode("00087").phone(1012345764L).recipient(memberRepository.findById(202L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(203L).get()).isPrimary(true).address("테스트 주소 : 88").addressDetail("188호").postcode("00088").phone(1012345765L).recipient(memberRepository.findById(203L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(204L).get()).isPrimary(true).address("테스트 주소 : 89").addressDetail("189호").postcode("00089").phone(1012345766L).recipient(memberRepository.findById(204L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(205L).get()).isPrimary(true).address("테스트 주소 : 90").addressDetail("190호").postcode("00090").phone(1012345767L).recipient(memberRepository.findById(205L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(206L).get()).isPrimary(true).address("테스트 주소 : 91").addressDetail("191호").postcode("00091").phone(1012345768L).recipient(memberRepository.findById(206L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(207L).get()).isPrimary(true).address("테스트 주소 : 92").addressDetail("192호").postcode("00092").phone(1012345769L).recipient(memberRepository.findById(207L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(208L).get()).isPrimary(true).address("테스트 주소 : 93").addressDetail("193호").postcode("00093").phone(1012345770L).recipient(memberRepository.findById(208L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(209L).get()).isPrimary(true).address("테스트 주소 : 94").addressDetail("194호").postcode("00094").phone(1012345771L).recipient(memberRepository.findById(209L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(210L).get()).isPrimary(true).address("테스트 주소 : 95").addressDetail("195호").postcode("00095").phone(1012345772L).recipient(memberRepository.findById(210L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(211L).get()).isPrimary(true).address("테스트 주소 : 96").addressDetail("196호").postcode("00096").phone(1012345773L).recipient(memberRepository.findById(211L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(212L).get()).isPrimary(true).address("테스트 주소 : 97").addressDetail("197호").postcode("00097").phone(1012345774L).recipient(memberRepository.findById(212L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(213L).get()).isPrimary(true).address("테스트 주소 : 98").addressDetail("198호").postcode("00098").phone(1012345775L).recipient(memberRepository.findById(213L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(214L).get()).isPrimary(true).address("테스트 주소 : 99").addressDetail("199호").postcode("00099").phone(1012345776L).recipient(memberRepository.findById(214L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(215L).get()).isPrimary(true).address("테스트 주소 : 100").addressDetail("200호").postcode("00100").phone(1012345777L).recipient(memberRepository.findById(215L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(216L).get()).isPrimary(true).address("테스트 주소 : 101").addressDetail("201호").postcode("00101").phone(1012345778L).recipient(memberRepository.findById(216L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(217L).get()).isPrimary(true).address("테스트 주소 : 102").addressDetail("202호").postcode("00102").phone(1012345779L).recipient(memberRepository.findById(217L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(218L).get()).isPrimary(true).address("테스트 주소 : 103").addressDetail("203호").postcode("00103").phone(1012345780L).recipient(memberRepository.findById(218L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(219L).get()).isPrimary(true).address("테스트 주소 : 104").addressDetail("204호").postcode("00104").phone(1012345781L).recipient(memberRepository.findById(219L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(220L).get()).isPrimary(true).address("테스트 주소 : 105").addressDetail("205호").postcode("00105").phone(1012345782L).recipient(memberRepository.findById(220L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(221L).get()).isPrimary(true).address("테스트 주소 : 106").addressDetail("206호").postcode("00106").phone(1012345783L).recipient(memberRepository.findById(221L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(222L).get()).isPrimary(true).address("테스트 주소 : 107").addressDetail("207호").postcode("00107").phone(1012345784L).recipient(memberRepository.findById(222L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(223L).get()).isPrimary(true).address("테스트 주소 : 108").addressDetail("208호").postcode("00108").phone(1012345785L).recipient(memberRepository.findById(223L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(224L).get()).isPrimary(true).address("테스트 주소 : 109").addressDetail("209호").postcode("00109").phone(1012345786L).recipient(memberRepository.findById(224L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(225L).get()).isPrimary(true).address("테스트 주소 : 110").addressDetail("210호").postcode("00110").phone(1012345787L).recipient(memberRepository.findById(225L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(226L).get()).isPrimary(true).address("테스트 주소 : 111").addressDetail("211호").postcode("00111").phone(1012345788L).recipient(memberRepository.findById(226L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(227L).get()).isPrimary(true).address("테스트 주소 : 112").addressDetail("212호").postcode("00112").phone(1012345789L).recipient(memberRepository.findById(227L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(228L).get()).isPrimary(true).address("테스트 주소 : 113").addressDetail("213호").postcode("00113").phone(1012345790L).recipient(memberRepository.findById(228L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(229L).get()).isPrimary(true).address("테스트 주소 : 114").addressDetail("214호").postcode("00114").phone(1012345791L).recipient(memberRepository.findById(229L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(230L).get()).isPrimary(true).address("테스트 주소 : 115").addressDetail("215호").postcode("00115").phone(1012345792L).recipient(memberRepository.findById(230L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(231L).get()).isPrimary(true).address("테스트 주소 : 116").addressDetail("216호").postcode("00116").phone(1012345793L).recipient(memberRepository.findById(231L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(232L).get()).isPrimary(true).address("테스트 주소 : 117").addressDetail("217호").postcode("00117").phone(1012345794L).recipient(memberRepository.findById(232L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(233L).get()).isPrimary(true).address("테스트 주소 : 118").addressDetail("218호").postcode("00118").phone(1012345795L).recipient(memberRepository.findById(233L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(234L).get()).isPrimary(true).address("테스트 주소 : 119").addressDetail("219호").postcode("00119").phone(1012345796L).recipient(memberRepository.findById(234L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(235L).get()).isPrimary(true).address("테스트 주소 : 120").addressDetail("220호").postcode("00120").phone(1012345797L).recipient(memberRepository.findById(235L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(236L).get()).isPrimary(true).address("테스트 주소 : 121").addressDetail("221호").postcode("00121").phone(1012345798L).recipient(memberRepository.findById(236L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(237L).get()).isPrimary(true).address("테스트 주소 : 122").addressDetail("222호").postcode("00122").phone(1012345799L).recipient(memberRepository.findById(237L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(238L).get()).isPrimary(true).address("테스트 주소 : 123").addressDetail("223호").postcode("00123").phone(1012345800L).recipient(memberRepository.findById(238L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(239L).get()).isPrimary(true).address("테스트 주소 : 124").addressDetail("224호").postcode("00124").phone(1012345801L).recipient(memberRepository.findById(239L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(240L).get()).isPrimary(true).address("테스트 주소 : 125").addressDetail("225호").postcode("00125").phone(1012345802L).recipient(memberRepository.findById(240L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(241L).get()).isPrimary(true).address("테스트 주소 : 126").addressDetail("226호").postcode("00126").phone(1012345803L).recipient(memberRepository.findById(241L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(242L).get()).isPrimary(true).address("테스트 주소 : 127").addressDetail("227호").postcode("00127").phone(1012345804L).recipient(memberRepository.findById(242L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(243L).get()).isPrimary(true).address("테스트 주소 : 128").addressDetail("228호").postcode("00128").phone(1012345805L).recipient(memberRepository.findById(243L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(244L).get()).isPrimary(true).address("테스트 주소 : 129").addressDetail("229호").postcode("00129").phone(1012345806L).recipient(memberRepository.findById(244L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(245L).get()).isPrimary(true).address("테스트 주소 : 130").addressDetail("230호").postcode("00130").phone(1012345807L).recipient(memberRepository.findById(245L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(246L).get()).isPrimary(true).address("테스트 주소 : 131").addressDetail("231호").postcode("00131").phone(1012345808L).recipient(memberRepository.findById(246L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(247L).get()).isPrimary(true).address("테스트 주소 : 132").addressDetail("232호").postcode("00132").phone(1012345809L).recipient(memberRepository.findById(247L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(248L).get()).isPrimary(true).address("테스트 주소 : 133").addressDetail("233호").postcode("00133").phone(1012345810L).recipient(memberRepository.findById(248L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(249L).get()).isPrimary(true).address("테스트 주소 : 134").addressDetail("234호").postcode("00134").phone(1012345811L).recipient(memberRepository.findById(249L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(250L).get()).isPrimary(true).address("테스트 주소 : 135").addressDetail("235호").postcode("00135").phone(1012345812L).recipient(memberRepository.findById(250L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(251L).get()).isPrimary(true).address("테스트 주소 : 136").addressDetail("236호").postcode("00136").phone(1012345813L).recipient(memberRepository.findById(251L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(252L).get()).isPrimary(true).address("테스트 주소 : 137").addressDetail("237호").postcode("00137").phone(1012345814L).recipient(memberRepository.findById(252L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(253L).get()).isPrimary(true).address("테스트 주소 : 138").addressDetail("238호").postcode("00138").phone(1012345815L).recipient(memberRepository.findById(253L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(254L).get()).isPrimary(true).address("테스트 주소 : 139").addressDetail("239호").postcode("00139").phone(1012345816L).recipient(memberRepository.findById(254L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(255L).get()).isPrimary(true).address("테스트 주소 : 140").addressDetail("240호").postcode("00140").phone(1012345817L).recipient(memberRepository.findById(255L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(256L).get()).isPrimary(true).address("테스트 주소 : 141").addressDetail("241호").postcode("00141").phone(1012345818L).recipient(memberRepository.findById(256L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(257L).get()).isPrimary(true).address("테스트 주소 : 142").addressDetail("242호").postcode("00142").phone(1012345819L).recipient(memberRepository.findById(257L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(258L).get()).isPrimary(true).address("테스트 주소 : 143").addressDetail("243호").postcode("00143").phone(1012345820L).recipient(memberRepository.findById(258L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(259L).get()).isPrimary(true).address("테스트 주소 : 144").addressDetail("244호").postcode("00144").phone(1012345821L).recipient(memberRepository.findById(259L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(260L).get()).isPrimary(true).address("테스트 주소 : 145").addressDetail("245호").postcode("00145").phone(1012345822L).recipient(memberRepository.findById(260L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(261L).get()).isPrimary(true).address("테스트 주소 : 146").addressDetail("246호").postcode("00146").phone(1012345823L).recipient(memberRepository.findById(261L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(262L).get()).isPrimary(true).address("테스트 주소 : 147").addressDetail("247호").postcode("00147").phone(1012345824L).recipient(memberRepository.findById(262L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(263L).get()).isPrimary(true).address("테스트 주소 : 148").addressDetail("248호").postcode("00148").phone(1012345825L).recipient(memberRepository.findById(263L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(264L).get()).isPrimary(true).address("테스트 주소 : 149").addressDetail("249호").postcode("00149").phone(1012345826L).recipient(memberRepository.findById(264L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(265L).get()).isPrimary(true).address("테스트 주소 : 150").addressDetail("250호").postcode("00150").phone(1012345827L).recipient(memberRepository.findById(265L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(266L).get()).isPrimary(true).address("테스트 주소 : 151").addressDetail("251호").postcode("00151").phone(1012345828L).recipient(memberRepository.findById(266L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(267L).get()).isPrimary(true).address("테스트 주소 : 152").addressDetail("252호").postcode("00152").phone(1012345829L).recipient(memberRepository.findById(267L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(268L).get()).isPrimary(true).address("테스트 주소 : 153").addressDetail("253호").postcode("00153").phone(1012345830L).recipient(memberRepository.findById(268L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(269L).get()).isPrimary(true).address("테스트 주소 : 154").addressDetail("254호").postcode("00154").phone(1012345831L).recipient(memberRepository.findById(269L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(270L).get()).isPrimary(true).address("테스트 주소 : 155").addressDetail("255호").postcode("00155").phone(1012345832L).recipient(memberRepository.findById(270L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(271L).get()).isPrimary(true).address("테스트 주소 : 156").addressDetail("256호").postcode("00156").phone(1012345833L).recipient(memberRepository.findById(271L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(272L).get()).isPrimary(true).address("테스트 주소 : 157").addressDetail("257호").postcode("00157").phone(1012345834L).recipient(memberRepository.findById(272L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(273L).get()).isPrimary(true).address("테스트 주소 : 158").addressDetail("258호").postcode("00158").phone(1012345835L).recipient(memberRepository.findById(273L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(274L).get()).isPrimary(true).address("테스트 주소 : 159").addressDetail("259호").postcode("00159").phone(1012345836L).recipient(memberRepository.findById(274L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(275L).get()).isPrimary(true).address("테스트 주소 : 160").addressDetail("260호").postcode("00160").phone(1012345837L).recipient(memberRepository.findById(275L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(276L).get()).isPrimary(true).address("테스트 주소 : 161").addressDetail("261호").postcode("00161").phone(1012345838L).recipient(memberRepository.findById(276L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(277L).get()).isPrimary(true).address("테스트 주소 : 162").addressDetail("262호").postcode("00162").phone(1012345839L).recipient(memberRepository.findById(277L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(278L).get()).isPrimary(true).address("테스트 주소 : 163").addressDetail("263호").postcode("00163").phone(1012345840L).recipient(memberRepository.findById(278L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(279L).get()).isPrimary(true).address("테스트 주소 : 164").addressDetail("264호").postcode("00164").phone(1012345841L).recipient(memberRepository.findById(279L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(280L).get()).isPrimary(true).address("테스트 주소 : 165").addressDetail("265호").postcode("00165").phone(1012345842L).recipient(memberRepository.findById(280L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(281L).get()).isPrimary(true).address("테스트 주소 : 166").addressDetail("266호").postcode("00166").phone(1012345843L).recipient(memberRepository.findById(281L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(282L).get()).isPrimary(true).address("테스트 주소 : 167").addressDetail("267호").postcode("00167").phone(1012345844L).recipient(memberRepository.findById(282L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(283L).get()).isPrimary(true).address("테스트 주소 : 168").addressDetail("268호").postcode("00168").phone(1012345845L).recipient(memberRepository.findById(283L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(284L).get()).isPrimary(true).address("테스트 주소 : 169").addressDetail("269호").postcode("00169").phone(1012345846L).recipient(memberRepository.findById(284L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(285L).get()).isPrimary(true).address("테스트 주소 : 170").addressDetail("270호").postcode("00170").phone(1012345847L).recipient(memberRepository.findById(285L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(286L).get()).isPrimary(true).address("테스트 주소 : 171").addressDetail("271호").postcode("00171").phone(1012345848L).recipient(memberRepository.findById(286L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(287L).get()).isPrimary(true).address("테스트 주소 : 172").addressDetail("272호").postcode("00172").phone(1012345849L).recipient(memberRepository.findById(287L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(288L).get()).isPrimary(true).address("테스트 주소 : 173").addressDetail("273호").postcode("00173").phone(1012345850L).recipient(memberRepository.findById(288L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(289L).get()).isPrimary(true).address("테스트 주소 : 174").addressDetail("274호").postcode("00174").phone(1012345851L).recipient(memberRepository.findById(289L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(290L).get()).isPrimary(true).address("테스트 주소 : 175").addressDetail("275호").postcode("00175").phone(1012345852L).recipient(memberRepository.findById(290L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(291L).get()).isPrimary(true).address("테스트 주소 : 176").addressDetail("276호").postcode("00176").phone(1012345853L).recipient(memberRepository.findById(291L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(292L).get()).isPrimary(true).address("테스트 주소 : 177").addressDetail("277호").postcode("00177").phone(1012345854L).recipient(memberRepository.findById(292L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(293L).get()).isPrimary(true).address("테스트 주소 : 178").addressDetail("278호").postcode("00178").phone(1012345855L).recipient(memberRepository.findById(293L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(294L).get()).isPrimary(true).address("테스트 주소 : 179").addressDetail("279호").postcode("00179").phone(1012345856L).recipient(memberRepository.findById(294L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(295L).get()).isPrimary(true).address("테스트 주소 : 180").addressDetail("280호").postcode("00180").phone(1012345857L).recipient(memberRepository.findById(295L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(296L).get()).isPrimary(true).address("테스트 주소 : 181").addressDetail("281호").postcode("00181").phone(1012345858L).recipient(memberRepository.findById(296L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(297L).get()).isPrimary(true).address("테스트 주소 : 182").addressDetail("282호").postcode("00182").phone(1012345859L).recipient(memberRepository.findById(297L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(298L).get()).isPrimary(true).address("테스트 주소 : 183").addressDetail("283호").postcode("00183").phone(1012345860L).recipient(memberRepository.findById(298L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(299L).get()).isPrimary(true).address("테스트 주소 : 184").addressDetail("284호").postcode("00184").phone(1012345861L).recipient(memberRepository.findById(299L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(300L).get()).isPrimary(true).address("테스트 주소 : 185").addressDetail("285호").postcode("00185").phone(1012345862L).recipient(memberRepository.findById(300L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(301L).get()).isPrimary(true).address("테스트 주소 : 186").addressDetail("286호").postcode("00186").phone(1012345863L).recipient(memberRepository.findById(301L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(302L).get()).isPrimary(true).address("테스트 주소 : 187").addressDetail("287호").postcode("00187").phone(1012345864L).recipient(memberRepository.findById(302L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(303L).get()).isPrimary(true).address("테스트 주소 : 188").addressDetail("288호").postcode("00188").phone(1012345865L).recipient(memberRepository.findById(303L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(304L).get()).isPrimary(true).address("테스트 주소 : 189").addressDetail("289호").postcode("00189").phone(1012345866L).recipient(memberRepository.findById(304L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(305L).get()).isPrimary(true).address("테스트 주소 : 190").addressDetail("290호").postcode("00190").phone(1012345867L).recipient(memberRepository.findById(305L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(306L).get()).isPrimary(true).address("테스트 주소 : 191").addressDetail("291호").postcode("00191").phone(1012345868L).recipient(memberRepository.findById(306L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(307L).get()).isPrimary(true).address("테스트 주소 : 192").addressDetail("292호").postcode("00192").phone(1012345869L).recipient(memberRepository.findById(307L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(308L).get()).isPrimary(true).address("테스트 주소 : 193").addressDetail("293호").postcode("00193").phone(1012345870L).recipient(memberRepository.findById(308L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(309L).get()).isPrimary(true).address("테스트 주소 : 194").addressDetail("294호").postcode("00194").phone(1012345871L).recipient(memberRepository.findById(309L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(310L).get()).isPrimary(true).address("테스트 주소 : 195").addressDetail("295호").postcode("00195").phone(1012345872L).recipient(memberRepository.findById(310L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(311L).get()).isPrimary(true).address("테스트 주소 : 196").addressDetail("296호").postcode("00196").phone(1012345873L).recipient(memberRepository.findById(311L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(312L).get()).isPrimary(true).address("테스트 주소 : 197").addressDetail("297호").postcode("00197").phone(1012345874L).recipient(memberRepository.findById(312L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(313L).get()).isPrimary(true).address("테스트 주소 : 198").addressDetail("298호").postcode("00198").phone(1012345875L).recipient(memberRepository.findById(313L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(314L).get()).isPrimary(true).address("테스트 주소 : 199").addressDetail("299호").postcode("00199").phone(1012345876L).recipient(memberRepository.findById(314L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(315L).get()).isPrimary(true).address("테스트 주소 : 200").addressDetail("300호").postcode("00200").phone(1012345877L).recipient(memberRepository.findById(315L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(116L).get()).isPrimary(false).address("테스트 주소 : 201").addressDetail("301호").postcode("00201").phone(1012345878L).recipient(memberRepository.findById(116L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(117L).get()).isPrimary(false).address("테스트 주소 : 202").addressDetail("302호").postcode("00202").phone(1012345879L).recipient(memberRepository.findById(117L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(118L).get()).isPrimary(false).address("테스트 주소 : 203").addressDetail("303호").postcode("00203").phone(1012345880L).recipient(memberRepository.findById(118L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(119L).get()).isPrimary(false).address("테스트 주소 : 204").addressDetail("304호").postcode("00204").phone(1012345881L).recipient(memberRepository.findById(119L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(120L).get()).isPrimary(false).address("테스트 주소 : 205").addressDetail("305호").postcode("00205").phone(1012345882L).recipient(memberRepository.findById(120L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(121L).get()).isPrimary(false).address("테스트 주소 : 206").addressDetail("306호").postcode("00206").phone(1012345883L).recipient(memberRepository.findById(121L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(122L).get()).isPrimary(false).address("테스트 주소 : 207").addressDetail("307호").postcode("00207").phone(1012345884L).recipient(memberRepository.findById(122L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(123L).get()).isPrimary(false).address("테스트 주소 : 208").addressDetail("308호").postcode("00208").phone(1012345885L).recipient(memberRepository.findById(123L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(124L).get()).isPrimary(false).address("테스트 주소 : 209").addressDetail("309호").postcode("00209").phone(1012345886L).recipient(memberRepository.findById(124L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(125L).get()).isPrimary(false).address("테스트 주소 : 210").addressDetail("310호").postcode("00210").phone(1012345887L).recipient(memberRepository.findById(125L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(126L).get()).isPrimary(false).address("테스트 주소 : 211").addressDetail("311호").postcode("00211").phone(1012345888L).recipient(memberRepository.findById(126L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(127L).get()).isPrimary(false).address("테스트 주소 : 212").addressDetail("312호").postcode("00212").phone(1012345889L).recipient(memberRepository.findById(127L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(128L).get()).isPrimary(false).address("테스트 주소 : 213").addressDetail("313호").postcode("00213").phone(1012345890L).recipient(memberRepository.findById(128L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(129L).get()).isPrimary(false).address("테스트 주소 : 214").addressDetail("314호").postcode("00214").phone(1012345891L).recipient(memberRepository.findById(129L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(130L).get()).isPrimary(false).address("테스트 주소 : 215").addressDetail("315호").postcode("00215").phone(1012345892L).recipient(memberRepository.findById(130L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(131L).get()).isPrimary(false).address("테스트 주소 : 216").addressDetail("316호").postcode("00216").phone(1012345893L).recipient(memberRepository.findById(131L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(132L).get()).isPrimary(false).address("테스트 주소 : 217").addressDetail("317호").postcode("00217").phone(1012345894L).recipient(memberRepository.findById(132L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(133L).get()).isPrimary(false).address("테스트 주소 : 218").addressDetail("318호").postcode("00218").phone(1012345895L).recipient(memberRepository.findById(133L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(134L).get()).isPrimary(false).address("테스트 주소 : 219").addressDetail("319호").postcode("00219").phone(1012345896L).recipient(memberRepository.findById(134L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(135L).get()).isPrimary(false).address("테스트 주소 : 220").addressDetail("320호").postcode("00220").phone(1012345897L).recipient(memberRepository.findById(135L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(136L).get()).isPrimary(false).address("테스트 주소 : 221").addressDetail("321호").postcode("00221").phone(1012345898L).recipient(memberRepository.findById(136L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(137L).get()).isPrimary(false).address("테스트 주소 : 222").addressDetail("322호").postcode("00222").phone(1012345899L).recipient(memberRepository.findById(137L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(138L).get()).isPrimary(false).address("테스트 주소 : 223").addressDetail("323호").postcode("00223").phone(1012345900L).recipient(memberRepository.findById(138L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(139L).get()).isPrimary(false).address("테스트 주소 : 224").addressDetail("324호").postcode("00224").phone(1012345901L).recipient(memberRepository.findById(139L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(140L).get()).isPrimary(false).address("테스트 주소 : 225").addressDetail("325호").postcode("00225").phone(1012345902L).recipient(memberRepository.findById(140L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(141L).get()).isPrimary(false).address("테스트 주소 : 226").addressDetail("326호").postcode("00226").phone(1012345903L).recipient(memberRepository.findById(141L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(142L).get()).isPrimary(false).address("테스트 주소 : 227").addressDetail("327호").postcode("00227").phone(1012345904L).recipient(memberRepository.findById(142L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(143L).get()).isPrimary(false).address("테스트 주소 : 228").addressDetail("328호").postcode("00228").phone(1012345905L).recipient(memberRepository.findById(143L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(144L).get()).isPrimary(false).address("테스트 주소 : 229").addressDetail("329호").postcode("00229").phone(1012345906L).recipient(memberRepository.findById(144L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(145L).get()).isPrimary(false).address("테스트 주소 : 230").addressDetail("330호").postcode("00230").phone(1012345907L).recipient(memberRepository.findById(145L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(146L).get()).isPrimary(false).address("테스트 주소 : 231").addressDetail("331호").postcode("00231").phone(1012345908L).recipient(memberRepository.findById(146L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(147L).get()).isPrimary(false).address("테스트 주소 : 232").addressDetail("332호").postcode("00232").phone(1012345909L).recipient(memberRepository.findById(147L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(148L).get()).isPrimary(false).address("테스트 주소 : 233").addressDetail("333호").postcode("00233").phone(1012345910L).recipient(memberRepository.findById(148L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(149L).get()).isPrimary(false).address("테스트 주소 : 234").addressDetail("334호").postcode("00234").phone(1012345911L).recipient(memberRepository.findById(149L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(150L).get()).isPrimary(false).address("테스트 주소 : 235").addressDetail("335호").postcode("00235").phone(1012345912L).recipient(memberRepository.findById(150L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(151L).get()).isPrimary(false).address("테스트 주소 : 236").addressDetail("336호").postcode("00236").phone(1012345913L).recipient(memberRepository.findById(151L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(152L).get()).isPrimary(false).address("테스트 주소 : 237").addressDetail("337호").postcode("00237").phone(1012345914L).recipient(memberRepository.findById(152L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(153L).get()).isPrimary(false).address("테스트 주소 : 238").addressDetail("338호").postcode("00238").phone(1012345915L).recipient(memberRepository.findById(153L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(154L).get()).isPrimary(false).address("테스트 주소 : 239").addressDetail("339호").postcode("00239").phone(1012345916L).recipient(memberRepository.findById(154L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(155L).get()).isPrimary(false).address("테스트 주소 : 240").addressDetail("340호").postcode("00240").phone(1012345917L).recipient(memberRepository.findById(155L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(156L).get()).isPrimary(false).address("테스트 주소 : 241").addressDetail("341호").postcode("00241").phone(1012345918L).recipient(memberRepository.findById(156L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(157L).get()).isPrimary(false).address("테스트 주소 : 242").addressDetail("342호").postcode("00242").phone(1012345919L).recipient(memberRepository.findById(157L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(158L).get()).isPrimary(false).address("테스트 주소 : 243").addressDetail("343호").postcode("00243").phone(1012345920L).recipient(memberRepository.findById(158L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(159L).get()).isPrimary(false).address("테스트 주소 : 244").addressDetail("344호").postcode("00244").phone(1012345921L).recipient(memberRepository.findById(159L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(160L).get()).isPrimary(false).address("테스트 주소 : 245").addressDetail("345호").postcode("00245").phone(1012345922L).recipient(memberRepository.findById(160L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(161L).get()).isPrimary(false).address("테스트 주소 : 246").addressDetail("346호").postcode("00246").phone(1012345923L).recipient(memberRepository.findById(161L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(162L).get()).isPrimary(false).address("테스트 주소 : 247").addressDetail("347호").postcode("00247").phone(1012345924L).recipient(memberRepository.findById(162L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(163L).get()).isPrimary(false).address("테스트 주소 : 248").addressDetail("348호").postcode("00248").phone(1012345925L).recipient(memberRepository.findById(163L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(164L).get()).isPrimary(false).address("테스트 주소 : 249").addressDetail("349호").postcode("00249").phone(1012345926L).recipient(memberRepository.findById(164L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(165L).get()).isPrimary(false).address("테스트 주소 : 250").addressDetail("350호").postcode("00250").phone(1012345927L).recipient(memberRepository.findById(165L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(166L).get()).isPrimary(false).address("테스트 주소 : 251").addressDetail("351호").postcode("00251").phone(1012345928L).recipient(memberRepository.findById(166L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(167L).get()).isPrimary(false).address("테스트 주소 : 252").addressDetail("352호").postcode("00252").phone(1012345929L).recipient(memberRepository.findById(167L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(168L).get()).isPrimary(false).address("테스트 주소 : 253").addressDetail("353호").postcode("00253").phone(1012345930L).recipient(memberRepository.findById(168L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(169L).get()).isPrimary(false).address("테스트 주소 : 254").addressDetail("354호").postcode("00254").phone(1012345931L).recipient(memberRepository.findById(169L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(170L).get()).isPrimary(false).address("테스트 주소 : 255").addressDetail("355호").postcode("00255").phone(1012345932L).recipient(memberRepository.findById(170L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(171L).get()).isPrimary(false).address("테스트 주소 : 256").addressDetail("356호").postcode("00256").phone(1012345933L).recipient(memberRepository.findById(171L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(172L).get()).isPrimary(false).address("테스트 주소 : 257").addressDetail("357호").postcode("00257").phone(1012345934L).recipient(memberRepository.findById(172L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(173L).get()).isPrimary(false).address("테스트 주소 : 258").addressDetail("358호").postcode("00258").phone(1012345935L).recipient(memberRepository.findById(173L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(174L).get()).isPrimary(false).address("테스트 주소 : 259").addressDetail("359호").postcode("00259").phone(1012345936L).recipient(memberRepository.findById(174L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(175L).get()).isPrimary(false).address("테스트 주소 : 260").addressDetail("360호").postcode("00260").phone(1012345937L).recipient(memberRepository.findById(175L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(176L).get()).isPrimary(false).address("테스트 주소 : 261").addressDetail("361호").postcode("00261").phone(1012345938L).recipient(memberRepository.findById(176L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(177L).get()).isPrimary(false).address("테스트 주소 : 262").addressDetail("362호").postcode("00262").phone(1012345939L).recipient(memberRepository.findById(177L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(178L).get()).isPrimary(false).address("테스트 주소 : 263").addressDetail("363호").postcode("00263").phone(1012345940L).recipient(memberRepository.findById(178L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(179L).get()).isPrimary(false).address("테스트 주소 : 264").addressDetail("364호").postcode("00264").phone(1012345941L).recipient(memberRepository.findById(179L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(180L).get()).isPrimary(false).address("테스트 주소 : 265").addressDetail("365호").postcode("00265").phone(1012345942L).recipient(memberRepository.findById(180L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(181L).get()).isPrimary(false).address("테스트 주소 : 266").addressDetail("366호").postcode("00266").phone(1012345943L).recipient(memberRepository.findById(181L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(182L).get()).isPrimary(false).address("테스트 주소 : 267").addressDetail("367호").postcode("00267").phone(1012345944L).recipient(memberRepository.findById(182L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(183L).get()).isPrimary(false).address("테스트 주소 : 268").addressDetail("368호").postcode("00268").phone(1012345945L).recipient(memberRepository.findById(183L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(184L).get()).isPrimary(false).address("테스트 주소 : 269").addressDetail("369호").postcode("00269").phone(1012345946L).recipient(memberRepository.findById(184L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(185L).get()).isPrimary(false).address("테스트 주소 : 270").addressDetail("370호").postcode("00270").phone(1012345947L).recipient(memberRepository.findById(185L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(186L).get()).isPrimary(false).address("테스트 주소 : 271").addressDetail("371호").postcode("00271").phone(1012345948L).recipient(memberRepository.findById(186L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(187L).get()).isPrimary(false).address("테스트 주소 : 272").addressDetail("372호").postcode("00272").phone(1012345949L).recipient(memberRepository.findById(187L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(188L).get()).isPrimary(false).address("테스트 주소 : 273").addressDetail("373호").postcode("00273").phone(1012345950L).recipient(memberRepository.findById(188L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(189L).get()).isPrimary(false).address("테스트 주소 : 274").addressDetail("374호").postcode("00274").phone(1012345951L).recipient(memberRepository.findById(189L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(190L).get()).isPrimary(false).address("테스트 주소 : 275").addressDetail("375호").postcode("00275").phone(1012345952L).recipient(memberRepository.findById(190L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(191L).get()).isPrimary(false).address("테스트 주소 : 276").addressDetail("376호").postcode("00276").phone(1012345953L).recipient(memberRepository.findById(191L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(192L).get()).isPrimary(false).address("테스트 주소 : 277").addressDetail("377호").postcode("00277").phone(1012345954L).recipient(memberRepository.findById(192L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(193L).get()).isPrimary(false).address("테스트 주소 : 278").addressDetail("378호").postcode("00278").phone(1012345955L).recipient(memberRepository.findById(193L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(194L).get()).isPrimary(false).address("테스트 주소 : 279").addressDetail("379호").postcode("00279").phone(1012345956L).recipient(memberRepository.findById(194L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(195L).get()).isPrimary(false).address("테스트 주소 : 280").addressDetail("380호").postcode("00280").phone(1012345957L).recipient(memberRepository.findById(195L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(196L).get()).isPrimary(false).address("테스트 주소 : 281").addressDetail("381호").postcode("00281").phone(1012345958L).recipient(memberRepository.findById(196L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(197L).get()).isPrimary(false).address("테스트 주소 : 282").addressDetail("382호").postcode("00282").phone(1012345959L).recipient(memberRepository.findById(197L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(198L).get()).isPrimary(false).address("테스트 주소 : 283").addressDetail("383호").postcode("00283").phone(1012345960L).recipient(memberRepository.findById(198L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(199L).get()).isPrimary(false).address("테스트 주소 : 284").addressDetail("384호").postcode("00284").phone(1012345961L).recipient(memberRepository.findById(199L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(200L).get()).isPrimary(false).address("테스트 주소 : 285").addressDetail("385호").postcode("00285").phone(1012345962L).recipient(memberRepository.findById(200L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(201L).get()).isPrimary(false).address("테스트 주소 : 286").addressDetail("386호").postcode("00286").phone(1012345963L).recipient(memberRepository.findById(201L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(202L).get()).isPrimary(false).address("테스트 주소 : 287").addressDetail("387호").postcode("00287").phone(1012345964L).recipient(memberRepository.findById(202L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(203L).get()).isPrimary(false).address("테스트 주소 : 288").addressDetail("388호").postcode("00288").phone(1012345965L).recipient(memberRepository.findById(203L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(204L).get()).isPrimary(false).address("테스트 주소 : 289").addressDetail("389호").postcode("00289").phone(1012345966L).recipient(memberRepository.findById(204L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(205L).get()).isPrimary(false).address("테스트 주소 : 290").addressDetail("390호").postcode("00290").phone(1012345967L).recipient(memberRepository.findById(205L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(206L).get()).isPrimary(false).address("테스트 주소 : 291").addressDetail("391호").postcode("00291").phone(1012345968L).recipient(memberRepository.findById(206L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(207L).get()).isPrimary(false).address("테스트 주소 : 292").addressDetail("392호").postcode("00292").phone(1012345969L).recipient(memberRepository.findById(207L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(208L).get()).isPrimary(false).address("테스트 주소 : 293").addressDetail("393호").postcode("00293").phone(1012345970L).recipient(memberRepository.findById(208L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(209L).get()).isPrimary(false).address("테스트 주소 : 294").addressDetail("394호").postcode("00294").phone(1012345971L).recipient(memberRepository.findById(209L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(210L).get()).isPrimary(false).address("테스트 주소 : 295").addressDetail("395호").postcode("00295").phone(1012345972L).recipient(memberRepository.findById(210L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(211L).get()).isPrimary(false).address("테스트 주소 : 296").addressDetail("396호").postcode("00296").phone(1012345973L).recipient(memberRepository.findById(211L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(212L).get()).isPrimary(false).address("테스트 주소 : 297").addressDetail("397호").postcode("00297").phone(1012345974L).recipient(memberRepository.findById(212L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(213L).get()).isPrimary(false).address("테스트 주소 : 298").addressDetail("398호").postcode("00298").phone(1012345975L).recipient(memberRepository.findById(213L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(214L).get()).isPrimary(false).address("테스트 주소 : 299").addressDetail("399호").postcode("00299").phone(1012345976L).recipient(memberRepository.findById(214L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(215L).get()).isPrimary(false).address("테스트 주소 : 300").addressDetail("400호").postcode("00300").phone(1012345977L).recipient(memberRepository.findById(215L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(216L).get()).isPrimary(false).address("테스트 주소 : 301").addressDetail("401호").postcode("00301").phone(1012345978L).recipient(memberRepository.findById(216L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(217L).get()).isPrimary(false).address("테스트 주소 : 302").addressDetail("402호").postcode("00302").phone(1012345979L).recipient(memberRepository.findById(217L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(218L).get()).isPrimary(false).address("테스트 주소 : 303").addressDetail("403호").postcode("00303").phone(1012345980L).recipient(memberRepository.findById(218L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(219L).get()).isPrimary(false).address("테스트 주소 : 304").addressDetail("404호").postcode("00304").phone(1012345981L).recipient(memberRepository.findById(219L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(220L).get()).isPrimary(false).address("테스트 주소 : 305").addressDetail("405호").postcode("00305").phone(1012345982L).recipient(memberRepository.findById(220L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(221L).get()).isPrimary(false).address("테스트 주소 : 306").addressDetail("406호").postcode("00306").phone(1012345983L).recipient(memberRepository.findById(221L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(222L).get()).isPrimary(false).address("테스트 주소 : 307").addressDetail("407호").postcode("00307").phone(1012345984L).recipient(memberRepository.findById(222L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(223L).get()).isPrimary(false).address("테스트 주소 : 308").addressDetail("408호").postcode("00308").phone(1012345985L).recipient(memberRepository.findById(223L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(224L).get()).isPrimary(false).address("테스트 주소 : 309").addressDetail("409호").postcode("00309").phone(1012345986L).recipient(memberRepository.findById(224L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(225L).get()).isPrimary(false).address("테스트 주소 : 310").addressDetail("410호").postcode("00310").phone(1012345987L).recipient(memberRepository.findById(225L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(226L).get()).isPrimary(false).address("테스트 주소 : 311").addressDetail("411호").postcode("00311").phone(1012345988L).recipient(memberRepository.findById(226L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(227L).get()).isPrimary(false).address("테스트 주소 : 312").addressDetail("412호").postcode("00312").phone(1012345989L).recipient(memberRepository.findById(227L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(228L).get()).isPrimary(false).address("테스트 주소 : 313").addressDetail("413호").postcode("00313").phone(1012345990L).recipient(memberRepository.findById(228L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(229L).get()).isPrimary(false).address("테스트 주소 : 314").addressDetail("414호").postcode("00314").phone(1012345991L).recipient(memberRepository.findById(229L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(230L).get()).isPrimary(false).address("테스트 주소 : 315").addressDetail("415호").postcode("00315").phone(1012345992L).recipient(memberRepository.findById(230L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(231L).get()).isPrimary(false).address("테스트 주소 : 316").addressDetail("416호").postcode("00316").phone(1012345993L).recipient(memberRepository.findById(231L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(232L).get()).isPrimary(false).address("테스트 주소 : 317").addressDetail("417호").postcode("00317").phone(1012345994L).recipient(memberRepository.findById(232L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(233L).get()).isPrimary(false).address("테스트 주소 : 318").addressDetail("418호").postcode("00318").phone(1012345995L).recipient(memberRepository.findById(233L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(234L).get()).isPrimary(false).address("테스트 주소 : 319").addressDetail("419호").postcode("00319").phone(1012345996L).recipient(memberRepository.findById(234L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(235L).get()).isPrimary(false).address("테스트 주소 : 320").addressDetail("420호").postcode("00320").phone(1012345997L).recipient(memberRepository.findById(235L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(236L).get()).isPrimary(false).address("테스트 주소 : 321").addressDetail("421호").postcode("00321").phone(1012345998L).recipient(memberRepository.findById(236L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(237L).get()).isPrimary(false).address("테스트 주소 : 322").addressDetail("422호").postcode("00322").phone(1012345999L).recipient(memberRepository.findById(237L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(238L).get()).isPrimary(false).address("테스트 주소 : 323").addressDetail("423호").postcode("00323").phone(1012346000L).recipient(memberRepository.findById(238L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(239L).get()).isPrimary(false).address("테스트 주소 : 324").addressDetail("424호").postcode("00324").phone(1012346001L).recipient(memberRepository.findById(239L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(240L).get()).isPrimary(false).address("테스트 주소 : 325").addressDetail("425호").postcode("00325").phone(1012346002L).recipient(memberRepository.findById(240L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(241L).get()).isPrimary(false).address("테스트 주소 : 326").addressDetail("426호").postcode("00326").phone(1012346003L).recipient(memberRepository.findById(241L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(242L).get()).isPrimary(false).address("테스트 주소 : 327").addressDetail("427호").postcode("00327").phone(1012346004L).recipient(memberRepository.findById(242L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(243L).get()).isPrimary(false).address("테스트 주소 : 328").addressDetail("428호").postcode("00328").phone(1012346005L).recipient(memberRepository.findById(243L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(244L).get()).isPrimary(false).address("테스트 주소 : 329").addressDetail("429호").postcode("00329").phone(1012346006L).recipient(memberRepository.findById(244L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(245L).get()).isPrimary(false).address("테스트 주소 : 330").addressDetail("430호").postcode("00330").phone(1012346007L).recipient(memberRepository.findById(245L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(246L).get()).isPrimary(false).address("테스트 주소 : 331").addressDetail("431호").postcode("00331").phone(1012346008L).recipient(memberRepository.findById(246L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(247L).get()).isPrimary(false).address("테스트 주소 : 332").addressDetail("432호").postcode("00332").phone(1012346009L).recipient(memberRepository.findById(247L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(248L).get()).isPrimary(false).address("테스트 주소 : 333").addressDetail("433호").postcode("00333").phone(1012346010L).recipient(memberRepository.findById(248L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(249L).get()).isPrimary(false).address("테스트 주소 : 334").addressDetail("434호").postcode("00334").phone(1012346011L).recipient(memberRepository.findById(249L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(250L).get()).isPrimary(false).address("테스트 주소 : 335").addressDetail("435호").postcode("00335").phone(1012346012L).recipient(memberRepository.findById(250L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(251L).get()).isPrimary(false).address("테스트 주소 : 336").addressDetail("436호").postcode("00336").phone(1012346013L).recipient(memberRepository.findById(251L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(252L).get()).isPrimary(false).address("테스트 주소 : 337").addressDetail("437호").postcode("00337").phone(1012346014L).recipient(memberRepository.findById(252L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(253L).get()).isPrimary(false).address("테스트 주소 : 338").addressDetail("438호").postcode("00338").phone(1012346015L).recipient(memberRepository.findById(253L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(254L).get()).isPrimary(false).address("테스트 주소 : 339").addressDetail("439호").postcode("00339").phone(1012346016L).recipient(memberRepository.findById(254L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(255L).get()).isPrimary(false).address("테스트 주소 : 340").addressDetail("440호").postcode("00340").phone(1012346017L).recipient(memberRepository.findById(255L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(256L).get()).isPrimary(false).address("테스트 주소 : 341").addressDetail("441호").postcode("00341").phone(1012346018L).recipient(memberRepository.findById(256L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(257L).get()).isPrimary(false).address("테스트 주소 : 342").addressDetail("442호").postcode("00342").phone(1012346019L).recipient(memberRepository.findById(257L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(258L).get()).isPrimary(false).address("테스트 주소 : 343").addressDetail("443호").postcode("00343").phone(1012346020L).recipient(memberRepository.findById(258L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(259L).get()).isPrimary(false).address("테스트 주소 : 344").addressDetail("444호").postcode("00344").phone(1012346021L).recipient(memberRepository.findById(259L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(260L).get()).isPrimary(false).address("테스트 주소 : 345").addressDetail("445호").postcode("00345").phone(1012346022L).recipient(memberRepository.findById(260L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(261L).get()).isPrimary(false).address("테스트 주소 : 346").addressDetail("446호").postcode("00346").phone(1012346023L).recipient(memberRepository.findById(261L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(262L).get()).isPrimary(false).address("테스트 주소 : 347").addressDetail("447호").postcode("00347").phone(1012346024L).recipient(memberRepository.findById(262L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(263L).get()).isPrimary(false).address("테스트 주소 : 348").addressDetail("448호").postcode("00348").phone(1012346025L).recipient(memberRepository.findById(263L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(264L).get()).isPrimary(false).address("테스트 주소 : 349").addressDetail("449호").postcode("00349").phone(1012346026L).recipient(memberRepository.findById(264L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(265L).get()).isPrimary(false).address("테스트 주소 : 350").addressDetail("450호").postcode("00350").phone(1012346027L).recipient(memberRepository.findById(265L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(266L).get()).isPrimary(false).address("테스트 주소 : 351").addressDetail("451호").postcode("00351").phone(1012346028L).recipient(memberRepository.findById(266L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(267L).get()).isPrimary(false).address("테스트 주소 : 352").addressDetail("452호").postcode("00352").phone(1012346029L).recipient(memberRepository.findById(267L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(268L).get()).isPrimary(false).address("테스트 주소 : 353").addressDetail("453호").postcode("00353").phone(1012346030L).recipient(memberRepository.findById(268L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(269L).get()).isPrimary(false).address("테스트 주소 : 354").addressDetail("454호").postcode("00354").phone(1012346031L).recipient(memberRepository.findById(269L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(270L).get()).isPrimary(false).address("테스트 주소 : 355").addressDetail("455호").postcode("00355").phone(1012346032L).recipient(memberRepository.findById(270L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(271L).get()).isPrimary(false).address("테스트 주소 : 356").addressDetail("456호").postcode("00356").phone(1012346033L).recipient(memberRepository.findById(271L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(272L).get()).isPrimary(false).address("테스트 주소 : 357").addressDetail("457호").postcode("00357").phone(1012346034L).recipient(memberRepository.findById(272L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(273L).get()).isPrimary(false).address("테스트 주소 : 358").addressDetail("458호").postcode("00358").phone(1012346035L).recipient(memberRepository.findById(273L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(274L).get()).isPrimary(false).address("테스트 주소 : 359").addressDetail("459호").postcode("00359").phone(1012346036L).recipient(memberRepository.findById(274L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(275L).get()).isPrimary(false).address("테스트 주소 : 360").addressDetail("460호").postcode("00360").phone(1012346037L).recipient(memberRepository.findById(275L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(276L).get()).isPrimary(false).address("테스트 주소 : 361").addressDetail("461호").postcode("00361").phone(1012346038L).recipient(memberRepository.findById(276L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(277L).get()).isPrimary(false).address("테스트 주소 : 362").addressDetail("462호").postcode("00362").phone(1012346039L).recipient(memberRepository.findById(277L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(278L).get()).isPrimary(false).address("테스트 주소 : 363").addressDetail("463호").postcode("00363").phone(1012346040L).recipient(memberRepository.findById(278L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(279L).get()).isPrimary(false).address("테스트 주소 : 364").addressDetail("464호").postcode("00364").phone(1012346041L).recipient(memberRepository.findById(279L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(280L).get()).isPrimary(false).address("테스트 주소 : 365").addressDetail("465호").postcode("00365").phone(1012346042L).recipient(memberRepository.findById(280L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(281L).get()).isPrimary(false).address("테스트 주소 : 366").addressDetail("466호").postcode("00366").phone(1012346043L).recipient(memberRepository.findById(281L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(282L).get()).isPrimary(false).address("테스트 주소 : 367").addressDetail("467호").postcode("00367").phone(1012346044L).recipient(memberRepository.findById(282L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(283L).get()).isPrimary(false).address("테스트 주소 : 368").addressDetail("468호").postcode("00368").phone(1012346045L).recipient(memberRepository.findById(283L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(284L).get()).isPrimary(false).address("테스트 주소 : 369").addressDetail("469호").postcode("00369").phone(1012346046L).recipient(memberRepository.findById(284L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(285L).get()).isPrimary(false).address("테스트 주소 : 370").addressDetail("470호").postcode("00370").phone(1012346047L).recipient(memberRepository.findById(285L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(286L).get()).isPrimary(false).address("테스트 주소 : 371").addressDetail("471호").postcode("00371").phone(1012346048L).recipient(memberRepository.findById(286L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(287L).get()).isPrimary(false).address("테스트 주소 : 372").addressDetail("472호").postcode("00372").phone(1012346049L).recipient(memberRepository.findById(287L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(288L).get()).isPrimary(false).address("테스트 주소 : 373").addressDetail("473호").postcode("00373").phone(1012346050L).recipient(memberRepository.findById(288L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(289L).get()).isPrimary(false).address("테스트 주소 : 374").addressDetail("474호").postcode("00374").phone(1012346051L).recipient(memberRepository.findById(289L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(290L).get()).isPrimary(false).address("테스트 주소 : 375").addressDetail("475호").postcode("00375").phone(1012346052L).recipient(memberRepository.findById(290L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(291L).get()).isPrimary(false).address("테스트 주소 : 376").addressDetail("476호").postcode("00376").phone(1012346053L).recipient(memberRepository.findById(291L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(292L).get()).isPrimary(false).address("테스트 주소 : 377").addressDetail("477호").postcode("00377").phone(1012346054L).recipient(memberRepository.findById(292L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(293L).get()).isPrimary(false).address("테스트 주소 : 378").addressDetail("478호").postcode("00378").phone(1012346055L).recipient(memberRepository.findById(293L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(294L).get()).isPrimary(false).address("테스트 주소 : 379").addressDetail("479호").postcode("00379").phone(1012346056L).recipient(memberRepository.findById(294L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(295L).get()).isPrimary(false).address("테스트 주소 : 380").addressDetail("480호").postcode("00380").phone(1012346057L).recipient(memberRepository.findById(295L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(296L).get()).isPrimary(false).address("테스트 주소 : 381").addressDetail("481호").postcode("00381").phone(1012346058L).recipient(memberRepository.findById(296L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(297L).get()).isPrimary(false).address("테스트 주소 : 382").addressDetail("482호").postcode("00382").phone(1012346059L).recipient(memberRepository.findById(297L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(298L).get()).isPrimary(false).address("테스트 주소 : 383").addressDetail("483호").postcode("00383").phone(1012346060L).recipient(memberRepository.findById(298L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(299L).get()).isPrimary(false).address("테스트 주소 : 384").addressDetail("484호").postcode("00384").phone(1012346061L).recipient(memberRepository.findById(299L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(300L).get()).isPrimary(false).address("테스트 주소 : 385").addressDetail("485호").postcode("00385").phone(1012346062L).recipient(memberRepository.findById(300L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(301L).get()).isPrimary(false).address("테스트 주소 : 386").addressDetail("486호").postcode("00386").phone(1012346063L).recipient(memberRepository.findById(301L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(302L).get()).isPrimary(false).address("테스트 주소 : 387").addressDetail("487호").postcode("00387").phone(1012346064L).recipient(memberRepository.findById(302L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(303L).get()).isPrimary(false).address("테스트 주소 : 388").addressDetail("488호").postcode("00388").phone(1012346065L).recipient(memberRepository.findById(303L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(304L).get()).isPrimary(false).address("테스트 주소 : 389").addressDetail("489호").postcode("00389").phone(1012346066L).recipient(memberRepository.findById(304L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(305L).get()).isPrimary(false).address("테스트 주소 : 390").addressDetail("490호").postcode("00390").phone(1012346067L).recipient(memberRepository.findById(305L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(306L).get()).isPrimary(false).address("테스트 주소 : 391").addressDetail("491호").postcode("00391").phone(1012346068L).recipient(memberRepository.findById(306L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(307L).get()).isPrimary(false).address("테스트 주소 : 392").addressDetail("492호").postcode("00392").phone(1012346069L).recipient(memberRepository.findById(307L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(308L).get()).isPrimary(false).address("테스트 주소 : 393").addressDetail("493호").postcode("00393").phone(1012346070L).recipient(memberRepository.findById(308L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(309L).get()).isPrimary(false).address("테스트 주소 : 394").addressDetail("494호").postcode("00394").phone(1012346071L).recipient(memberRepository.findById(309L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(310L).get()).isPrimary(false).address("테스트 주소 : 395").addressDetail("495호").postcode("00395").phone(1012346072L).recipient(memberRepository.findById(310L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(311L).get()).isPrimary(false).address("테스트 주소 : 396").addressDetail("496호").postcode("00396").phone(1012346073L).recipient(memberRepository.findById(311L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(312L).get()).isPrimary(false).address("테스트 주소 : 397").addressDetail("497호").postcode("00397").phone(1012346074L).recipient(memberRepository.findById(312L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(313L).get()).isPrimary(false).address("테스트 주소 : 398").addressDetail("498호").postcode("00398").phone(1012346075L).recipient(memberRepository.findById(313L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(314L).get()).isPrimary(false).address("테스트 주소 : 399").addressDetail("499호").postcode("00399").phone(1012346076L).recipient(memberRepository.findById(314L).get().getName()).request("부재 시 문 앞").build());
        addressRepository.save(Address.builder().member(memberRepository.findById(315L).get()).isPrimary(false).address("테스트 주소 : 400").addressDetail("500호").postcode("00400").phone(1012346077L).recipient(memberRepository.findById(315L).get().getName()).request("부재 시 문 앞").build());
    }

    void initRestaurantOrder() {
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(58300)).address(restaurantRepository.findById(1L).get().getAddress()).addressDetail(restaurantRepository.findById(1L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(1L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(1L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(1L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(1L).get()).member(restaurantRepository.findById(1L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(51040)).address(restaurantRepository.findById(2L).get().getAddress()).addressDetail(restaurantRepository.findById(2L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(2L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(2L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(2L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(2L).get()).member(restaurantRepository.findById(2L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(77000)).address(restaurantRepository.findById(3L).get().getAddress()).addressDetail(restaurantRepository.findById(3L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(3L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(3L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(3L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(3L).get()).member(restaurantRepository.findById(3L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(92400)).address(restaurantRepository.findById(4L).get().getAddress()).addressDetail(restaurantRepository.findById(4L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(4L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(4L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(4L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(4L).get()).member(restaurantRepository.findById(4L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(113300)).address(restaurantRepository.findById(5L).get().getAddress()).addressDetail(restaurantRepository.findById(5L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(5L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(5L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(5L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(5L).get()).member(restaurantRepository.findById(5L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(29700)).address(restaurantRepository.findById(6L).get().getAddress()).addressDetail(restaurantRepository.findById(6L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(6L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(6L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(6L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(6L).get()).member(restaurantRepository.findById(6L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(88000)).address(restaurantRepository.findById(7L).get().getAddress()).addressDetail(restaurantRepository.findById(7L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(7L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(7L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(7L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(7L).get()).member(restaurantRepository.findById(7L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(157080)).address(restaurantRepository.findById(8L).get().getAddress()).addressDetail(restaurantRepository.findById(8L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(8L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(8L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(8L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(8L).get()).member(restaurantRepository.findById(8L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(107800)).address(restaurantRepository.findById(9L).get().getAddress()).addressDetail(restaurantRepository.findById(9L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(9L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(9L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(9L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(9L).get()).member(restaurantRepository.findById(9L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(33000)).address(restaurantRepository.findById(10L).get().getAddress()).addressDetail(restaurantRepository.findById(10L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(10L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(10L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(10L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(10L).get()).member(restaurantRepository.findById(10L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(33000)).address(restaurantRepository.findById(11L).get().getAddress()).addressDetail(restaurantRepository.findById(11L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(11L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(11L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(11L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(11L).get()).member(restaurantRepository.findById(11L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(46200)).address(restaurantRepository.findById(12L).get().getAddress()).addressDetail(restaurantRepository.findById(12L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(12L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(12L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(12L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(12L).get()).member(restaurantRepository.findById(12L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(35200)).address(restaurantRepository.findById(13L).get().getAddress()).addressDetail(restaurantRepository.findById(13L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(13L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(13L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(13L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(13L).get()).member(restaurantRepository.findById(13L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(40700)).address(restaurantRepository.findById(14L).get().getAddress()).addressDetail(restaurantRepository.findById(14L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(14L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(14L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(14L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(14L).get()).member(restaurantRepository.findById(14L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(81400)).address(restaurantRepository.findById(15L).get().getAddress()).addressDetail(restaurantRepository.findById(15L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(15L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(15L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(15L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(15L).get()).member(restaurantRepository.findById(15L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(7590)).address(restaurantRepository.findById(16L).get().getAddress()).addressDetail(restaurantRepository.findById(16L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(16L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(16L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(16L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(16L).get()).member(restaurantRepository.findById(16L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(70400)).address(restaurantRepository.findById(17L).get().getAddress()).addressDetail(restaurantRepository.findById(17L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(17L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(17L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(17L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(17L).get()).member(restaurantRepository.findById(17L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(50600)).address(restaurantRepository.findById(18L).get().getAddress()).addressDetail(restaurantRepository.findById(18L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(18L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(18L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(18L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(18L).get()).member(restaurantRepository.findById(18L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(121000)).address(restaurantRepository.findById(19L).get().getAddress()).addressDetail(restaurantRepository.findById(19L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(19L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(19L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(19L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(19L).get()).member(restaurantRepository.findById(19L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(211200)).address(restaurantRepository.findById(20L).get().getAddress()).addressDetail(restaurantRepository.findById(20L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(20L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(20L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(20L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(20L).get()).member(restaurantRepository.findById(20L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(46200)).address(restaurantRepository.findById(21L).get().getAddress()).addressDetail(restaurantRepository.findById(21L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(21L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(21L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(21L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(21L).get()).member(restaurantRepository.findById(21L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(101200)).address(restaurantRepository.findById(22L).get().getAddress()).addressDetail(restaurantRepository.findById(22L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(22L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(22L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(22L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(22L).get()).member(restaurantRepository.findById(22L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(92400)).address(restaurantRepository.findById(23L).get().getAddress()).addressDetail(restaurantRepository.findById(23L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(23L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(23L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(23L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(23L).get()).member(restaurantRepository.findById(23L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(66000)).address(restaurantRepository.findById(24L).get().getAddress()).addressDetail(restaurantRepository.findById(24L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(24L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(24L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(24L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(24L).get()).member(restaurantRepository.findById(24L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(33440)).address(restaurantRepository.findById(25L).get().getAddress()).addressDetail(restaurantRepository.findById(25L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(25L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(25L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(25L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(25L).get()).member(restaurantRepository.findById(25L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(209000)).address(restaurantRepository.findById(26L).get().getAddress()).addressDetail(restaurantRepository.findById(26L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(26L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(26L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(26L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(26L).get()).member(restaurantRepository.findById(26L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(242000)).address(restaurantRepository.findById(27L).get().getAddress()).addressDetail(restaurantRepository.findById(27L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(27L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(27L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(27L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(27L).get()).member(restaurantRepository.findById(27L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(57200)).address(restaurantRepository.findById(28L).get().getAddress()).addressDetail(restaurantRepository.findById(28L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(28L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(28L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(28L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(28L).get()).member(restaurantRepository.findById(28L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(49500)).address(restaurantRepository.findById(29L).get().getAddress()).addressDetail(restaurantRepository.findById(29L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(29L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(29L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(29L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(29L).get()).member(restaurantRepository.findById(29L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(39600)).address(restaurantRepository.findById(30L).get().getAddress()).addressDetail(restaurantRepository.findById(30L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(30L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(30L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(30L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(30L).get()).member(restaurantRepository.findById(30L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(58960)).address(restaurantRepository.findById(31L).get().getAddress()).addressDetail(restaurantRepository.findById(31L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(31L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(31L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(31L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(31L).get()).member(restaurantRepository.findById(31L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(62700)).address(restaurantRepository.findById(32L).get().getAddress()).addressDetail(restaurantRepository.findById(32L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(32L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(32L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(32L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(32L).get()).member(restaurantRepository.findById(32L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(374000)).address(restaurantRepository.findById(33L).get().getAddress()).addressDetail(restaurantRepository.findById(33L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(33L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(33L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(33L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(33L).get()).member(restaurantRepository.findById(33L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(169400)).address(restaurantRepository.findById(34L).get().getAddress()).addressDetail(restaurantRepository.findById(34L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(34L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(34L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(34L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(34L).get()).member(restaurantRepository.findById(34L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(132000)).address(restaurantRepository.findById(35L).get().getAddress()).addressDetail(restaurantRepository.findById(35L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(35L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(35L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(35L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(35L).get()).member(restaurantRepository.findById(35L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(220000)).address(restaurantRepository.findById(36L).get().getAddress()).addressDetail(restaurantRepository.findById(36L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(36L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(36L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(36L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(36L).get()).member(restaurantRepository.findById(36L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(308000)).address(restaurantRepository.findById(37L).get().getAddress()).addressDetail(restaurantRepository.findById(37L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(37L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(37L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(37L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(37L).get()).member(restaurantRepository.findById(37L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(660000)).address(restaurantRepository.findById(38L).get().getAddress()).addressDetail(restaurantRepository.findById(38L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(38L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(38L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(38L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(38L).get()).member(restaurantRepository.findById(38L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(71500)).address(restaurantRepository.findById(39L).get().getAddress()).addressDetail(restaurantRepository.findById(39L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(39L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(39L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(39L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(39L).get()).member(restaurantRepository.findById(39L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(147400)).address(restaurantRepository.findById(40L).get().getAddress()).addressDetail(restaurantRepository.findById(40L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(40L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(40L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(40L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(40L).get()).member(restaurantRepository.findById(40L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(83600)).address(restaurantRepository.findById(41L).get().getAddress()).addressDetail(restaurantRepository.findById(41L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(41L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(41L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(41L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(41L).get()).member(restaurantRepository.findById(41L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(63800)).address(restaurantRepository.findById(42L).get().getAddress()).addressDetail(restaurantRepository.findById(42L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(42L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(42L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(42L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(42L).get()).member(restaurantRepository.findById(42L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(61600)).address(restaurantRepository.findById(43L).get().getAddress()).addressDetail(restaurantRepository.findById(43L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(43L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(43L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(43L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(43L).get()).member(restaurantRepository.findById(43L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(112200)).address(restaurantRepository.findById(44L).get().getAddress()).addressDetail(restaurantRepository.findById(44L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(44L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(44L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(44L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(44L).get()).member(restaurantRepository.findById(44L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(125400)).address(restaurantRepository.findById(45L).get().getAddress()).addressDetail(restaurantRepository.findById(45L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(45L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(45L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(45L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(45L).get()).member(restaurantRepository.findById(45L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(880000)).address(restaurantRepository.findById(46L).get().getAddress()).addressDetail(restaurantRepository.findById(46L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(46L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(46L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(46L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(46L).get()).member(restaurantRepository.findById(46L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(853600)).address(restaurantRepository.findById(47L).get().getAddress()).addressDetail(restaurantRepository.findById(47L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(47L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(47L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(47L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(47L).get()).member(restaurantRepository.findById(47L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(9240)).address(restaurantRepository.findById(48L).get().getAddress()).addressDetail(restaurantRepository.findById(48L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(48L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(48L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(48L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(48L).get()).member(restaurantRepository.findById(48L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(132000)).address(restaurantRepository.findById(49L).get().getAddress()).addressDetail(restaurantRepository.findById(49L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(49L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(49L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(49L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(49L).get()).member(restaurantRepository.findById(49L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(57200)).address(restaurantRepository.findById(50L).get().getAddress()).addressDetail(restaurantRepository.findById(50L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(50L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(50L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(50L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(50L).get()).member(restaurantRepository.findById(50L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(99000)).address(restaurantRepository.findById(51L).get().getAddress()).addressDetail(restaurantRepository.findById(51L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(51L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(51L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(51L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(51L).get()).member(restaurantRepository.findById(51L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(12100)).address(restaurantRepository.findById(52L).get().getAddress()).addressDetail(restaurantRepository.findById(52L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(52L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(52L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(52L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(52L).get()).member(restaurantRepository.findById(52L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(71280)).address(restaurantRepository.findById(53L).get().getAddress()).addressDetail(restaurantRepository.findById(53L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(53L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(53L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(53L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(53L).get()).member(restaurantRepository.findById(53L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(48620)).address(restaurantRepository.findById(54L).get().getAddress()).addressDetail(restaurantRepository.findById(54L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(54L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(54L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(54L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(54L).get()).member(restaurantRepository.findById(54L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(673200)).address(restaurantRepository.findById(55L).get().getAddress()).addressDetail(restaurantRepository.findById(55L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(55L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(55L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(55L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(55L).get()).member(restaurantRepository.findById(55L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(80300)).address(restaurantRepository.findById(56L).get().getAddress()).addressDetail(restaurantRepository.findById(56L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(56L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(56L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(56L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(56L).get()).member(restaurantRepository.findById(56L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(49500)).address(restaurantRepository.findById(57L).get().getAddress()).addressDetail(restaurantRepository.findById(57L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(57L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(57L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(57L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(57L).get()).member(restaurantRepository.findById(57L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(181500)).address(restaurantRepository.findById(58L).get().getAddress()).addressDetail(restaurantRepository.findById(58L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(58L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(58L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(58L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(58L).get()).member(restaurantRepository.findById(58L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(144980)).address(restaurantRepository.findById(59L).get().getAddress()).addressDetail(restaurantRepository.findById(59L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(59L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(59L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(59L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(59L).get()).member(restaurantRepository.findById(59L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(125180)).address(restaurantRepository.findById(60L).get().getAddress()).addressDetail(restaurantRepository.findById(60L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(60L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(60L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(60L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(60L).get()).member(restaurantRepository.findById(60L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(187000)).address(restaurantRepository.findById(61L).get().getAddress()).addressDetail(restaurantRepository.findById(61L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(61L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(61L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(61L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(61L).get()).member(restaurantRepository.findById(61L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(173800)).address(restaurantRepository.findById(62L).get().getAddress()).addressDetail(restaurantRepository.findById(62L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(62L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(62L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(62L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(62L).get()).member(restaurantRepository.findById(62L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(33000)).address(restaurantRepository.findById(63L).get().getAddress()).addressDetail(restaurantRepository.findById(63L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(63L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(63L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(63L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(63L).get()).member(restaurantRepository.findById(63L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(46156)).address(restaurantRepository.findById(64L).get().getAddress()).addressDetail(restaurantRepository.findById(64L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(64L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(64L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(64L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(64L).get()).member(restaurantRepository.findById(64L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(26840)).address(restaurantRepository.findById(65L).get().getAddress()).addressDetail(restaurantRepository.findById(65L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(65L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(65L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(65L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(65L).get()).member(restaurantRepository.findById(65L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(28380)).address(restaurantRepository.findById(66L).get().getAddress()).addressDetail(restaurantRepository.findById(66L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(66L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(66L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(66L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(66L).get()).member(restaurantRepository.findById(66L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(35640)).address(restaurantRepository.findById(67L).get().getAddress()).addressDetail(restaurantRepository.findById(67L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(67L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(67L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(67L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(67L).get()).member(restaurantRepository.findById(67L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(70400)).address(restaurantRepository.findById(68L).get().getAddress()).addressDetail(restaurantRepository.findById(68L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(68L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(68L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(68L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(68L).get()).member(restaurantRepository.findById(68L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(55000)).address(restaurantRepository.findById(69L).get().getAddress()).addressDetail(restaurantRepository.findById(69L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(69L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(69L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(69L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(69L).get()).member(restaurantRepository.findById(69L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(70400)).address(restaurantRepository.findById(70L).get().getAddress()).addressDetail(restaurantRepository.findById(70L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(70L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(70L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(70L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(70L).get()).member(restaurantRepository.findById(70L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(101640)).address(restaurantRepository.findById(71L).get().getAddress()).addressDetail(restaurantRepository.findById(71L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(71L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(71L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(71L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(71L).get()).member(restaurantRepository.findById(71L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(79200)).address(restaurantRepository.findById(72L).get().getAddress()).addressDetail(restaurantRepository.findById(72L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(72L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(72L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(72L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(72L).get()).member(restaurantRepository.findById(72L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(114400)).address(restaurantRepository.findById(73L).get().getAddress()).addressDetail(restaurantRepository.findById(73L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(73L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(73L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(73L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(73L).get()).member(restaurantRepository.findById(73L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(162800)).address(restaurantRepository.findById(74L).get().getAddress()).addressDetail(restaurantRepository.findById(74L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(74L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(74L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(74L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(74L).get()).member(restaurantRepository.findById(74L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(17600)).address(restaurantRepository.findById(75L).get().getAddress()).addressDetail(restaurantRepository.findById(75L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(75L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(75L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(75L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(75L).get()).member(restaurantRepository.findById(75L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(30800)).address(restaurantRepository.findById(76L).get().getAddress()).addressDetail(restaurantRepository.findById(76L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(76L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(76L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(76L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(76L).get()).member(restaurantRepository.findById(76L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(40920)).address(restaurantRepository.findById(77L).get().getAddress()).addressDetail(restaurantRepository.findById(77L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(77L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(77L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(77L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(77L).get()).member(restaurantRepository.findById(77L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(94600)).address(restaurantRepository.findById(78L).get().getAddress()).addressDetail(restaurantRepository.findById(78L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(78L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(78L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(78L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(78L).get()).member(restaurantRepository.findById(78L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(145200)).address(restaurantRepository.findById(79L).get().getAddress()).addressDetail(restaurantRepository.findById(79L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(79L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(79L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(79L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(79L).get()).member(restaurantRepository.findById(79L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(200200)).address(restaurantRepository.findById(80L).get().getAddress()).addressDetail(restaurantRepository.findById(80L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(80L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(80L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(80L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(80L).get()).member(restaurantRepository.findById(80L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(118800)).address(restaurantRepository.findById(81L).get().getAddress()).addressDetail(restaurantRepository.findById(81L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(81L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(81L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(81L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(81L).get()).member(restaurantRepository.findById(81L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(129800)).address(restaurantRepository.findById(82L).get().getAddress()).addressDetail(restaurantRepository.findById(82L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(82L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(82L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(82L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(82L).get()).member(restaurantRepository.findById(82L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(116600)).address(restaurantRepository.findById(83L).get().getAddress()).addressDetail(restaurantRepository.findById(83L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(83L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(83L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(83L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(83L).get()).member(restaurantRepository.findById(83L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(28600)).address(restaurantRepository.findById(84L).get().getAddress()).addressDetail(restaurantRepository.findById(84L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(84L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(84L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(84L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(84L).get()).member(restaurantRepository.findById(84L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(21780)).address(restaurantRepository.findById(85L).get().getAddress()).addressDetail(restaurantRepository.findById(85L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(85L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(85L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(85L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(85L).get()).member(restaurantRepository.findById(85L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(75900)).address(restaurantRepository.findById(86L).get().getAddress()).addressDetail(restaurantRepository.findById(86L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(86L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(86L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(86L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(86L).get()).member(restaurantRepository.findById(86L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(62920)).address(restaurantRepository.findById(87L).get().getAddress()).addressDetail(restaurantRepository.findById(87L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(87L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(87L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(87L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(87L).get()).member(restaurantRepository.findById(87L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(81400)).address(restaurantRepository.findById(88L).get().getAddress()).addressDetail(restaurantRepository.findById(88L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(88L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(88L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(88L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(88L).get()).member(restaurantRepository.findById(88L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(127600)).address(restaurantRepository.findById(89L).get().getAddress()).addressDetail(restaurantRepository.findById(89L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(89L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(89L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(89L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(89L).get()).member(restaurantRepository.findById(89L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(88000)).address(restaurantRepository.findById(90L).get().getAddress()).addressDetail(restaurantRepository.findById(90L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(90L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(90L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(90L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(90L).get()).member(restaurantRepository.findById(90L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(127600)).address(restaurantRepository.findById(91L).get().getAddress()).addressDetail(restaurantRepository.findById(91L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(91L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(91L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(91L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(91L).get()).member(restaurantRepository.findById(91L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(105600)).address(restaurantRepository.findById(92L).get().getAddress()).addressDetail(restaurantRepository.findById(92L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(92L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(92L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(92L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(92L).get()).member(restaurantRepository.findById(92L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(74800)).address(restaurantRepository.findById(93L).get().getAddress()).addressDetail(restaurantRepository.findById(93L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(93L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(93L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(93L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(93L).get()).member(restaurantRepository.findById(93L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(26180)).address(restaurantRepository.findById(94L).get().getAddress()).addressDetail(restaurantRepository.findById(94L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(94L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(94L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(94L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(94L).get()).member(restaurantRepository.findById(94L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(226600)).address(restaurantRepository.findById(95L).get().getAddress()).addressDetail(restaurantRepository.findById(95L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(95L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(95L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(95L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(95L).get()).member(restaurantRepository.findById(95L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(81400)).address(restaurantRepository.findById(96L).get().getAddress()).addressDetail(restaurantRepository.findById(96L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(96L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(96L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(96L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(96L).get()).member(restaurantRepository.findById(96L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(83600)).address(restaurantRepository.findById(97L).get().getAddress()).addressDetail(restaurantRepository.findById(97L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(97L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(97L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(97L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(97L).get()).member(restaurantRepository.findById(97L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(204600)).address(restaurantRepository.findById(98L).get().getAddress()).addressDetail(restaurantRepository.findById(98L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(98L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(98L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(98L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(98L).get()).member(restaurantRepository.findById(98L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(50600)).address(restaurantRepository.findById(99L).get().getAddress()).addressDetail(restaurantRepository.findById(99L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(99L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(99L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(99L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(99L).get()).member(restaurantRepository.findById(99L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.COMPLETED).totalPrice(BigDecimal.valueOf(55000)).address(restaurantRepository.findById(100L).get().getAddress()).addressDetail(restaurantRepository.findById(100L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(100L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(100L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(100L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(100L).get()).member(restaurantRepository.findById(100L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(31460)).address(restaurantRepository.findById(1L).get().getAddress()).addressDetail(restaurantRepository.findById(1L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(1L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(1L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(1L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(1L).get()).member(restaurantRepository.findById(1L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(11000)).address(restaurantRepository.findById(2L).get().getAddress()).addressDetail(restaurantRepository.findById(2L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(2L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(2L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(2L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(2L).get()).member(restaurantRepository.findById(2L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(56100)).address(restaurantRepository.findById(3L).get().getAddress()).addressDetail(restaurantRepository.findById(3L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(3L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(3L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(3L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(3L).get()).member(restaurantRepository.findById(3L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(63800)).address(restaurantRepository.findById(4L).get().getAddress()).addressDetail(restaurantRepository.findById(4L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(4L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(4L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(4L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(4L).get()).member(restaurantRepository.findById(4L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(112200)).address(restaurantRepository.findById(5L).get().getAddress()).addressDetail(restaurantRepository.findById(5L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(5L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(5L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(5L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(5L).get()).member(restaurantRepository.findById(5L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(59400)).address(restaurantRepository.findById(6L).get().getAddress()).addressDetail(restaurantRepository.findById(6L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(6L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(6L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(6L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(6L).get()).member(restaurantRepository.findById(6L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(56100)).address(restaurantRepository.findById(7L).get().getAddress()).addressDetail(restaurantRepository.findById(7L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(7L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(7L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(7L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(7L).get()).member(restaurantRepository.findById(7L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(57200)).address(restaurantRepository.findById(8L).get().getAddress()).addressDetail(restaurantRepository.findById(8L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(8L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(8L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(8L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(8L).get()).member(restaurantRepository.findById(8L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(88000)).address(restaurantRepository.findById(9L).get().getAddress()).addressDetail(restaurantRepository.findById(9L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(9L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(9L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(9L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(9L).get()).member(restaurantRepository.findById(9L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(59400)).address(restaurantRepository.findById(10L).get().getAddress()).addressDetail(restaurantRepository.findById(10L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(10L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(10L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(10L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(10L).get()).member(restaurantRepository.findById(10L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(9020)).address(restaurantRepository.findById(11L).get().getAddress()).addressDetail(restaurantRepository.findById(11L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(11L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(11L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(11L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(11L).get()).member(restaurantRepository.findById(11L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(121000)).address(restaurantRepository.findById(12L).get().getAddress()).addressDetail(restaurantRepository.findById(12L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(12L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(12L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(12L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(12L).get()).member(restaurantRepository.findById(12L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(53900)).address(restaurantRepository.findById(13L).get().getAddress()).addressDetail(restaurantRepository.findById(13L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(13L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(13L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(13L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(13L).get()).member(restaurantRepository.findById(13L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(112200)).address(restaurantRepository.findById(14L).get().getAddress()).addressDetail(restaurantRepository.findById(14L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(14L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(14L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(14L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(14L).get()).member(restaurantRepository.findById(14L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(85800)).address(restaurantRepository.findById(15L).get().getAddress()).addressDetail(restaurantRepository.findById(15L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(15L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(15L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(15L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(15L).get()).member(restaurantRepository.findById(15L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(11000)).address(restaurantRepository.findById(16L).get().getAddress()).addressDetail(restaurantRepository.findById(16L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(16L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(16L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(16L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(16L).get()).member(restaurantRepository.findById(16L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(112200)).address(restaurantRepository.findById(17L).get().getAddress()).addressDetail(restaurantRepository.findById(17L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(17L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(17L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(17L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(17L).get()).member(restaurantRepository.findById(17L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(77000)).address(restaurantRepository.findById(18L).get().getAddress()).addressDetail(restaurantRepository.findById(18L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(18L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(18L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(18L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(18L).get()).member(restaurantRepository.findById(18L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(239800)).address(restaurantRepository.findById(19L).get().getAddress()).addressDetail(restaurantRepository.findById(19L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(19L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(19L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(19L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(19L).get()).member(restaurantRepository.findById(19L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(54780)).address(restaurantRepository.findById(20L).get().getAddress()).addressDetail(restaurantRepository.findById(20L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(20L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(20L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(20L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(20L).get()).member(restaurantRepository.findById(20L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(121000)).address(restaurantRepository.findById(21L).get().getAddress()).addressDetail(restaurantRepository.findById(21L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(21L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(21L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(21L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(21L).get()).member(restaurantRepository.findById(21L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(123200)).address(restaurantRepository.findById(22L).get().getAddress()).addressDetail(restaurantRepository.findById(22L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(22L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(22L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(22L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(22L).get()).member(restaurantRepository.findById(22L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(55000)).address(restaurantRepository.findById(23L).get().getAddress()).addressDetail(restaurantRepository.findById(23L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(23L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(23L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(23L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(23L).get()).member(restaurantRepository.findById(23L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(77000)).address(restaurantRepository.findById(24L).get().getAddress()).addressDetail(restaurantRepository.findById(24L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(24L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(24L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(24L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(24L).get()).member(restaurantRepository.findById(24L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(52800)).address(restaurantRepository.findById(25L).get().getAddress()).addressDetail(restaurantRepository.findById(25L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(25L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(25L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(25L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(25L).get()).member(restaurantRepository.findById(25L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(116600)).address(restaurantRepository.findById(26L).get().getAddress()).addressDetail(restaurantRepository.findById(26L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(26L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(26L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(26L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(26L).get()).member(restaurantRepository.findById(26L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(89100)).address(restaurantRepository.findById(27L).get().getAddress()).addressDetail(restaurantRepository.findById(27L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(27L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(27L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(27L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(27L).get()).member(restaurantRepository.findById(27L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(33000)).address(restaurantRepository.findById(28L).get().getAddress()).addressDetail(restaurantRepository.findById(28L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(28L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(28L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(28L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(28L).get()).member(restaurantRepository.findById(28L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(26400)).address(restaurantRepository.findById(29L).get().getAddress()).addressDetail(restaurantRepository.findById(29L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(29L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(29L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(29L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(29L).get()).member(restaurantRepository.findById(29L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(132000)).address(restaurantRepository.findById(30L).get().getAddress()).addressDetail(restaurantRepository.findById(30L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(30L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(30L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(30L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(30L).get()).member(restaurantRepository.findById(30L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(202400)).address(restaurantRepository.findById(31L).get().getAddress()).addressDetail(restaurantRepository.findById(31L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(31L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(31L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(31L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(31L).get()).member(restaurantRepository.findById(31L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(121000)).address(restaurantRepository.findById(32L).get().getAddress()).addressDetail(restaurantRepository.findById(32L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(32L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(32L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(32L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(32L).get()).member(restaurantRepository.findById(32L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(88000)).address(restaurantRepository.findById(33L).get().getAddress()).addressDetail(restaurantRepository.findById(33L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(33L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(33L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(33L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(33L).get()).member(restaurantRepository.findById(33L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(101200)).address(restaurantRepository.findById(34L).get().getAddress()).addressDetail(restaurantRepository.findById(34L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(34L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(34L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(34L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(34L).get()).member(restaurantRepository.findById(34L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(103400)).address(restaurantRepository.findById(35L).get().getAddress()).addressDetail(restaurantRepository.findById(35L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(35L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(35L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(35L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(35L).get()).member(restaurantRepository.findById(35L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(171600)).address(restaurantRepository.findById(36L).get().getAddress()).addressDetail(restaurantRepository.findById(36L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(36L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(36L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(36L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(36L).get()).member(restaurantRepository.findById(36L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(54560)).address(restaurantRepository.findById(37L).get().getAddress()).addressDetail(restaurantRepository.findById(37L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(37L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(37L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(37L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(37L).get()).member(restaurantRepository.findById(37L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(121440)).address(restaurantRepository.findById(38L).get().getAddress()).addressDetail(restaurantRepository.findById(38L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(38L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(38L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(38L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(38L).get()).member(restaurantRepository.findById(38L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(66000)).address(restaurantRepository.findById(39L).get().getAddress()).addressDetail(restaurantRepository.findById(39L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(39L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(39L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(39L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(39L).get()).member(restaurantRepository.findById(39L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(10780)).address(restaurantRepository.findById(40L).get().getAddress()).addressDetail(restaurantRepository.findById(40L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(40L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(40L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(40L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(40L).get()).member(restaurantRepository.findById(40L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(11000)).address(restaurantRepository.findById(41L).get().getAddress()).addressDetail(restaurantRepository.findById(41L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(41L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(41L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(41L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(41L).get()).member(restaurantRepository.findById(41L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(63800)).address(restaurantRepository.findById(42L).get().getAddress()).addressDetail(restaurantRepository.findById(42L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(42L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(42L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(42L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(42L).get()).member(restaurantRepository.findById(42L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(122100)).address(restaurantRepository.findById(43L).get().getAddress()).addressDetail(restaurantRepository.findById(43L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(43L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(43L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(43L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(43L).get()).member(restaurantRepository.findById(43L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(24200)).address(restaurantRepository.findById(44L).get().getAddress()).addressDetail(restaurantRepository.findById(44L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(44L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(44L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(44L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(44L).get()).member(restaurantRepository.findById(44L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(79200)).address(restaurantRepository.findById(45L).get().getAddress()).addressDetail(restaurantRepository.findById(45L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(45L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(45L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(45L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(45L).get()).member(restaurantRepository.findById(45L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(72600)).address(restaurantRepository.findById(46L).get().getAddress()).addressDetail(restaurantRepository.findById(46L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(46L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(46L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(46L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(46L).get()).member(restaurantRepository.findById(46L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(162800)).address(restaurantRepository.findById(47L).get().getAddress()).addressDetail(restaurantRepository.findById(47L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(47L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(47L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(47L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(47L).get()).member(restaurantRepository.findById(47L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(88000)).address(restaurantRepository.findById(48L).get().getAddress()).addressDetail(restaurantRepository.findById(48L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(48L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(48L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(48L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(48L).get()).member(restaurantRepository.findById(48L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(9900)).address(restaurantRepository.findById(49L).get().getAddress()).addressDetail(restaurantRepository.findById(49L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(49L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(49L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(49L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(49L).get()).member(restaurantRepository.findById(49L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(336600)).address(restaurantRepository.findById(50L).get().getAddress()).addressDetail(restaurantRepository.findById(50L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(50L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(50L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(50L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(50L).get()).member(restaurantRepository.findById(50L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(149600)).address(restaurantRepository.findById(51L).get().getAddress()).addressDetail(restaurantRepository.findById(51L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(51L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(51L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(51L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(51L).get()).member(restaurantRepository.findById(51L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(61600)).address(restaurantRepository.findById(52L).get().getAddress()).addressDetail(restaurantRepository.findById(52L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(52L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(52L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(52L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(52L).get()).member(restaurantRepository.findById(52L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(68640)).address(restaurantRepository.findById(53L).get().getAddress()).addressDetail(restaurantRepository.findById(53L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(53L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(53L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(53L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(53L).get()).member(restaurantRepository.findById(53L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(40700)).address(restaurantRepository.findById(54L).get().getAddress()).addressDetail(restaurantRepository.findById(54L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(54L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(54L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(54L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(54L).get()).member(restaurantRepository.findById(54L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(180400)).address(restaurantRepository.findById(55L).get().getAddress()).addressDetail(restaurantRepository.findById(55L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(55L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(55L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(55L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(55L).get()).member(restaurantRepository.findById(55L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(105600)).address(restaurantRepository.findById(56L).get().getAddress()).addressDetail(restaurantRepository.findById(56L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(56L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(56L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(56L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(56L).get()).member(restaurantRepository.findById(56L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(154000)).address(restaurantRepository.findById(57L).get().getAddress()).addressDetail(restaurantRepository.findById(57L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(57L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(57L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(57L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(57L).get()).member(restaurantRepository.findById(57L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(116600)).address(restaurantRepository.findById(58L).get().getAddress()).addressDetail(restaurantRepository.findById(58L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(58L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(58L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(58L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(58L).get()).member(restaurantRepository.findById(58L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(114400)).address(restaurantRepository.findById(59L).get().getAddress()).addressDetail(restaurantRepository.findById(59L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(59L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(59L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(59L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(59L).get()).member(restaurantRepository.findById(59L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(77000)).address(restaurantRepository.findById(60L).get().getAddress()).addressDetail(restaurantRepository.findById(60L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(60L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(60L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(60L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(60L).get()).member(restaurantRepository.findById(60L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(35640)).address(restaurantRepository.findById(61L).get().getAddress()).addressDetail(restaurantRepository.findById(61L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(61L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(61L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(61L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(61L).get()).member(restaurantRepository.findById(61L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(121000)).address(restaurantRepository.findById(62L).get().getAddress()).addressDetail(restaurantRepository.findById(62L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(62L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(62L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(62L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(62L).get()).member(restaurantRepository.findById(62L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(99000)).address(restaurantRepository.findById(63L).get().getAddress()).addressDetail(restaurantRepository.findById(63L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(63L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(63L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(63L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(63L).get()).member(restaurantRepository.findById(63L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(35420)).address(restaurantRepository.findById(64L).get().getAddress()).addressDetail(restaurantRepository.findById(64L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(64L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(64L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(64L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(64L).get()).member(restaurantRepository.findById(64L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(69960)).address(restaurantRepository.findById(65L).get().getAddress()).addressDetail(restaurantRepository.findById(65L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(65L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(65L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(65L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(65L).get()).member(restaurantRepository.findById(65L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(118800)).address(restaurantRepository.findById(66L).get().getAddress()).addressDetail(restaurantRepository.findById(66L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(66L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(66L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(66L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(66L).get()).member(restaurantRepository.findById(66L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(100100)).address(restaurantRepository.findById(67L).get().getAddress()).addressDetail(restaurantRepository.findById(67L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(67L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(67L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(67L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(67L).get()).member(restaurantRepository.findById(67L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(113300)).address(restaurantRepository.findById(68L).get().getAddress()).addressDetail(restaurantRepository.findById(68L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(68L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(68L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(68L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(68L).get()).member(restaurantRepository.findById(68L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(118360)).address(restaurantRepository.findById(69L).get().getAddress()).addressDetail(restaurantRepository.findById(69L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(69L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(69L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(69L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(69L).get()).member(restaurantRepository.findById(69L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(182600)).address(restaurantRepository.findById(70L).get().getAddress()).addressDetail(restaurantRepository.findById(70L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(70L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(70L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(70L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(70L).get()).member(restaurantRepository.findById(70L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(156200)).address(restaurantRepository.findById(71L).get().getAddress()).addressDetail(restaurantRepository.findById(71L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(71L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(71L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(71L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(71L).get()).member(restaurantRepository.findById(71L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(121000)).address(restaurantRepository.findById(72L).get().getAddress()).addressDetail(restaurantRepository.findById(72L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(72L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(72L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(72L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(72L).get()).member(restaurantRepository.findById(72L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(42460)).address(restaurantRepository.findById(73L).get().getAddress()).addressDetail(restaurantRepository.findById(73L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(73L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(73L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(73L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(73L).get()).member(restaurantRepository.findById(73L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(54120)).address(restaurantRepository.findById(74L).get().getAddress()).addressDetail(restaurantRepository.findById(74L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(74L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(74L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(74L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(74L).get()).member(restaurantRepository.findById(74L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(101420)).address(restaurantRepository.findById(75L).get().getAddress()).addressDetail(restaurantRepository.findById(75L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(75L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(75L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(75L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(75L).get()).member(restaurantRepository.findById(75L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(58300)).address(restaurantRepository.findById(76L).get().getAddress()).addressDetail(restaurantRepository.findById(76L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(76L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(76L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(76L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(76L).get()).member(restaurantRepository.findById(76L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(114400)).address(restaurantRepository.findById(77L).get().getAddress()).addressDetail(restaurantRepository.findById(77L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(77L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(77L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(77L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(77L).get()).member(restaurantRepository.findById(77L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(57640)).address(restaurantRepository.findById(78L).get().getAddress()).addressDetail(restaurantRepository.findById(78L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(78L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(78L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(78L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(78L).get()).member(restaurantRepository.findById(78L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(35640)).address(restaurantRepository.findById(79L).get().getAddress()).addressDetail(restaurantRepository.findById(79L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(79L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(79L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(79L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(79L).get()).member(restaurantRepository.findById(79L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(110000)).address(restaurantRepository.findById(80L).get().getAddress()).addressDetail(restaurantRepository.findById(80L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(80L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(80L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(80L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(80L).get()).member(restaurantRepository.findById(80L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(110000)).address(restaurantRepository.findById(81L).get().getAddress()).addressDetail(restaurantRepository.findById(81L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(81L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(81L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(81L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(81L).get()).member(restaurantRepository.findById(81L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(126940)).address(restaurantRepository.findById(82L).get().getAddress()).addressDetail(restaurantRepository.findById(82L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(82L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(82L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(82L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(82L).get()).member(restaurantRepository.findById(82L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(39600)).address(restaurantRepository.findById(83L).get().getAddress()).addressDetail(restaurantRepository.findById(83L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(83L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(83L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(83L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(83L).get()).member(restaurantRepository.findById(83L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(44000)).address(restaurantRepository.findById(84L).get().getAddress()).addressDetail(restaurantRepository.findById(84L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(84L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(84L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(84L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(84L).get()).member(restaurantRepository.findById(84L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(59400)).address(restaurantRepository.findById(85L).get().getAddress()).addressDetail(restaurantRepository.findById(85L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(85L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(85L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(85L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(85L).get()).member(restaurantRepository.findById(85L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(30800)).address(restaurantRepository.findById(86L).get().getAddress()).addressDetail(restaurantRepository.findById(86L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(86L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(86L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(86L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(86L).get()).member(restaurantRepository.findById(86L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(46640)).address(restaurantRepository.findById(87L).get().getAddress()).addressDetail(restaurantRepository.findById(87L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(87L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(87L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(87L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(87L).get()).member(restaurantRepository.findById(87L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(33880)).address(restaurantRepository.findById(88L).get().getAddress()).addressDetail(restaurantRepository.findById(88L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(88L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(88L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(88L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(88L).get()).member(restaurantRepository.findById(88L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(48400)).address(restaurantRepository.findById(89L).get().getAddress()).addressDetail(restaurantRepository.findById(89L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(89L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(89L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(89L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(89L).get()).member(restaurantRepository.findById(89L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(116600)).address(restaurantRepository.findById(90L).get().getAddress()).addressDetail(restaurantRepository.findById(90L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(90L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(90L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(90L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(90L).get()).member(restaurantRepository.findById(90L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(55000)).address(restaurantRepository.findById(91L).get().getAddress()).addressDetail(restaurantRepository.findById(91L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(91L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(91L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(91L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(91L).get()).member(restaurantRepository.findById(91L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(33000)).address(restaurantRepository.findById(92L).get().getAddress()).addressDetail(restaurantRepository.findById(92L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(92L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(92L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(92L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(92L).get()).member(restaurantRepository.findById(92L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(43120)).address(restaurantRepository.findById(93L).get().getAddress()).addressDetail(restaurantRepository.findById(93L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(93L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(93L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(93L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(93L).get()).member(restaurantRepository.findById(93L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(114400)).address(restaurantRepository.findById(94L).get().getAddress()).addressDetail(restaurantRepository.findById(94L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(94L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(94L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(94L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(94L).get()).member(restaurantRepository.findById(94L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(32560)).address(restaurantRepository.findById(95L).get().getAddress()).addressDetail(restaurantRepository.findById(95L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(95L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(95L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(95L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(95L).get()).member(restaurantRepository.findById(95L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(103400)).address(restaurantRepository.findById(96L).get().getAddress()).addressDetail(restaurantRepository.findById(96L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(96L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(96L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(96L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(96L).get()).member(restaurantRepository.findById(96L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(177100)).address(restaurantRepository.findById(97L).get().getAddress()).addressDetail(restaurantRepository.findById(97L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(97L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(97L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(97L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(97L).get()).member(restaurantRepository.findById(97L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(127600)).address(restaurantRepository.findById(98L).get().getAddress()).addressDetail(restaurantRepository.findById(98L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(98L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(98L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(98L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(98L).get()).member(restaurantRepository.findById(98L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(59400)).address(restaurantRepository.findById(99L).get().getAddress()).addressDetail(restaurantRepository.findById(99L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(99L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(99L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(99L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(99L).get()).member(restaurantRepository.findById(99L).get().getMembers()).build());
        restaurantOrderRepository.save(RestaurantOrder.builder().orderStatus(RestaurantOrderStatus.WAITING_APPROVAL).totalPrice(BigDecimal.valueOf(209000)).address(restaurantRepository.findById(100L).get().getAddress()).addressDetail(restaurantRepository.findById(100L).get().getAddressDetail()).description("조심히 배송 부탁드립니다.").postcode(restaurantRepository.findById(100L).get().getPostcode()).recipient(memberRepository.findById(restaurantRepository.findById(100L).get().getMembers().getId()).get().getName()).phone(memberRepository.findById(restaurantRepository.findById(100L).get().getMembers().getId()).get().getPhone()).restaurant(restaurantRepository.findById(100L).get()).member(restaurantRepository.findById(100L).get().getMembers()).build());
    }

    void initRestaurantOrderDetail() {
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(1L).get().getDistributionPrice()).totalPrice(productRepository.findById(1L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(1L).get()).product(productRepository.findById(1L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(2L).get().getDistributionPrice()).totalPrice(productRepository.findById(2L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(2L).get()).product(productRepository.findById(2L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(3L).get().getDistributionPrice()).totalPrice(productRepository.findById(3L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(3L).get()).product(productRepository.findById(3L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(4L).get().getDistributionPrice()).totalPrice(productRepository.findById(4L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(4L).get()).product(productRepository.findById(4L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(5L).get().getDistributionPrice()).totalPrice(productRepository.findById(5L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(5L).get()).product(productRepository.findById(5L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(6L).get().getDistributionPrice()).totalPrice(productRepository.findById(6L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(6L).get()).product(productRepository.findById(6L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(7L).get().getDistributionPrice()).totalPrice(productRepository.findById(7L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(7L).get()).product(productRepository.findById(7L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(8L).get().getDistributionPrice()).totalPrice(productRepository.findById(8L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(8L).get()).product(productRepository.findById(8L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(9L).get().getDistributionPrice()).totalPrice(productRepository.findById(9L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(9L).get()).product(productRepository.findById(9L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(10L).get().getDistributionPrice()).totalPrice(productRepository.findById(10L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(10L).get()).product(productRepository.findById(10L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(11L).get().getDistributionPrice()).totalPrice(productRepository.findById(11L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(11L).get()).product(productRepository.findById(11L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(12L).get().getDistributionPrice()).totalPrice(productRepository.findById(12L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(12L).get()).product(productRepository.findById(12L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(13L).get().getDistributionPrice()).totalPrice(productRepository.findById(13L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(13L).get()).product(productRepository.findById(13L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(14L).get().getDistributionPrice()).totalPrice(productRepository.findById(14L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(14L).get()).product(productRepository.findById(14L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(15L).get().getDistributionPrice()).totalPrice(productRepository.findById(15L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(15L).get()).product(productRepository.findById(15L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(16L).get().getDistributionPrice()).totalPrice(productRepository.findById(16L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(16L).get()).product(productRepository.findById(16L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(17L).get().getDistributionPrice()).totalPrice(productRepository.findById(17L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(17L).get()).product(productRepository.findById(17L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(18L).get().getDistributionPrice()).totalPrice(productRepository.findById(18L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(18L).get()).product(productRepository.findById(18L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(19L).get().getDistributionPrice()).totalPrice(productRepository.findById(19L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(19L).get()).product(productRepository.findById(19L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(20L).get().getDistributionPrice()).totalPrice(productRepository.findById(20L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(20L).get()).product(productRepository.findById(20L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(21L).get().getDistributionPrice()).totalPrice(productRepository.findById(21L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(21L).get()).product(productRepository.findById(21L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(22L).get().getDistributionPrice()).totalPrice(productRepository.findById(22L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(22L).get()).product(productRepository.findById(22L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(23L).get().getDistributionPrice()).totalPrice(productRepository.findById(23L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(23L).get()).product(productRepository.findById(23L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(24L).get().getDistributionPrice()).totalPrice(productRepository.findById(24L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(24L).get()).product(productRepository.findById(24L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(25L).get().getDistributionPrice()).totalPrice(productRepository.findById(25L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(25L).get()).product(productRepository.findById(25L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(26L).get().getDistributionPrice()).totalPrice(productRepository.findById(26L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(26L).get()).product(productRepository.findById(26L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(27L).get().getDistributionPrice()).totalPrice(productRepository.findById(27L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(27L).get()).product(productRepository.findById(27L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(28L).get().getDistributionPrice()).totalPrice(productRepository.findById(28L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(28L).get()).product(productRepository.findById(28L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(29L).get().getDistributionPrice()).totalPrice(productRepository.findById(29L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(29L).get()).product(productRepository.findById(29L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(30L).get().getDistributionPrice()).totalPrice(productRepository.findById(30L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(30L).get()).product(productRepository.findById(30L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(31L).get().getDistributionPrice()).totalPrice(productRepository.findById(31L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(31L).get()).product(productRepository.findById(31L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(32L).get().getDistributionPrice()).totalPrice(productRepository.findById(32L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(32L).get()).product(productRepository.findById(32L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(33L).get().getDistributionPrice()).totalPrice(productRepository.findById(33L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(33L).get()).product(productRepository.findById(33L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(34L).get().getDistributionPrice()).totalPrice(productRepository.findById(34L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(34L).get()).product(productRepository.findById(34L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(35L).get().getDistributionPrice()).totalPrice(productRepository.findById(35L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(35L).get()).product(productRepository.findById(35L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(36L).get().getDistributionPrice()).totalPrice(productRepository.findById(36L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(36L).get()).product(productRepository.findById(36L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(37L).get().getDistributionPrice()).totalPrice(productRepository.findById(37L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(37L).get()).product(productRepository.findById(37L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(38L).get().getDistributionPrice()).totalPrice(productRepository.findById(38L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(38L).get()).product(productRepository.findById(38L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(39L).get().getDistributionPrice()).totalPrice(productRepository.findById(39L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(39L).get()).product(productRepository.findById(39L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(40L).get().getDistributionPrice()).totalPrice(productRepository.findById(40L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(40L).get()).product(productRepository.findById(40L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(41L).get().getDistributionPrice()).totalPrice(productRepository.findById(41L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(41L).get()).product(productRepository.findById(41L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(42L).get().getDistributionPrice()).totalPrice(productRepository.findById(42L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(42L).get()).product(productRepository.findById(42L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(43L).get().getDistributionPrice()).totalPrice(productRepository.findById(43L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(43L).get()).product(productRepository.findById(43L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(44L).get().getDistributionPrice()).totalPrice(productRepository.findById(44L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(44L).get()).product(productRepository.findById(44L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(45L).get().getDistributionPrice()).totalPrice(productRepository.findById(45L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(45L).get()).product(productRepository.findById(45L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(46L).get().getDistributionPrice()).totalPrice(productRepository.findById(46L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(46L).get()).product(productRepository.findById(46L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(47L).get().getDistributionPrice()).totalPrice(productRepository.findById(47L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(47L).get()).product(productRepository.findById(47L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(48L).get().getDistributionPrice()).totalPrice(productRepository.findById(48L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(48L).get()).product(productRepository.findById(48L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(49L).get().getDistributionPrice()).totalPrice(productRepository.findById(49L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(49L).get()).product(productRepository.findById(49L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(50L).get().getDistributionPrice()).totalPrice(productRepository.findById(50L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(50L).get()).product(productRepository.findById(50L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(51L).get().getDistributionPrice()).totalPrice(productRepository.findById(51L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(51L).get()).product(productRepository.findById(51L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(52L).get().getDistributionPrice()).totalPrice(productRepository.findById(52L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(52L).get()).product(productRepository.findById(52L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(53L).get().getDistributionPrice()).totalPrice(productRepository.findById(53L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(53L).get()).product(productRepository.findById(53L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(54L).get().getDistributionPrice()).totalPrice(productRepository.findById(54L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(54L).get()).product(productRepository.findById(54L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(55L).get().getDistributionPrice()).totalPrice(productRepository.findById(55L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(55L).get()).product(productRepository.findById(55L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(56L).get().getDistributionPrice()).totalPrice(productRepository.findById(56L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(56L).get()).product(productRepository.findById(56L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(57L).get().getDistributionPrice()).totalPrice(productRepository.findById(57L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(57L).get()).product(productRepository.findById(57L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(58L).get().getDistributionPrice()).totalPrice(productRepository.findById(58L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(58L).get()).product(productRepository.findById(58L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(59L).get().getDistributionPrice()).totalPrice(productRepository.findById(59L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(59L).get()).product(productRepository.findById(59L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(60L).get().getDistributionPrice()).totalPrice(productRepository.findById(60L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(60L).get()).product(productRepository.findById(60L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(61L).get().getDistributionPrice()).totalPrice(productRepository.findById(61L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(61L).get()).product(productRepository.findById(61L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(62L).get().getDistributionPrice()).totalPrice(productRepository.findById(62L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(62L).get()).product(productRepository.findById(62L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(63L).get().getDistributionPrice()).totalPrice(productRepository.findById(63L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(63L).get()).product(productRepository.findById(63L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(64L).get().getDistributionPrice()).totalPrice(productRepository.findById(64L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(64L).get()).product(productRepository.findById(64L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(65L).get().getDistributionPrice()).totalPrice(productRepository.findById(65L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(65L).get()).product(productRepository.findById(65L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(66L).get().getDistributionPrice()).totalPrice(productRepository.findById(66L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(66L).get()).product(productRepository.findById(66L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(67L).get().getDistributionPrice()).totalPrice(productRepository.findById(67L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(67L).get()).product(productRepository.findById(67L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(68L).get().getDistributionPrice()).totalPrice(productRepository.findById(68L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(68L).get()).product(productRepository.findById(68L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(69L).get().getDistributionPrice()).totalPrice(productRepository.findById(69L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(69L).get()).product(productRepository.findById(69L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(70L).get().getDistributionPrice()).totalPrice(productRepository.findById(70L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(70L).get()).product(productRepository.findById(70L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(71L).get().getDistributionPrice()).totalPrice(productRepository.findById(71L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(71L).get()).product(productRepository.findById(71L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(72L).get().getDistributionPrice()).totalPrice(productRepository.findById(72L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(72L).get()).product(productRepository.findById(72L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(73L).get().getDistributionPrice()).totalPrice(productRepository.findById(73L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(73L).get()).product(productRepository.findById(73L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(74L).get().getDistributionPrice()).totalPrice(productRepository.findById(74L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(74L).get()).product(productRepository.findById(74L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(75L).get().getDistributionPrice()).totalPrice(productRepository.findById(75L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(75L).get()).product(productRepository.findById(75L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(76L).get().getDistributionPrice()).totalPrice(productRepository.findById(76L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(76L).get()).product(productRepository.findById(76L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(77L).get().getDistributionPrice()).totalPrice(productRepository.findById(77L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(77L).get()).product(productRepository.findById(77L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(78L).get().getDistributionPrice()).totalPrice(productRepository.findById(78L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(78L).get()).product(productRepository.findById(78L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(79L).get().getDistributionPrice()).totalPrice(productRepository.findById(79L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(79L).get()).product(productRepository.findById(79L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(80L).get().getDistributionPrice()).totalPrice(productRepository.findById(80L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(80L).get()).product(productRepository.findById(80L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(81L).get().getDistributionPrice()).totalPrice(productRepository.findById(81L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(81L).get()).product(productRepository.findById(81L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(82L).get().getDistributionPrice()).totalPrice(productRepository.findById(82L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(82L).get()).product(productRepository.findById(82L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(83L).get().getDistributionPrice()).totalPrice(productRepository.findById(83L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(83L).get()).product(productRepository.findById(83L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(84L).get().getDistributionPrice()).totalPrice(productRepository.findById(84L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(84L).get()).product(productRepository.findById(84L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(85L).get().getDistributionPrice()).totalPrice(productRepository.findById(85L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(85L).get()).product(productRepository.findById(85L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(86L).get().getDistributionPrice()).totalPrice(productRepository.findById(86L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(86L).get()).product(productRepository.findById(86L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(87L).get().getDistributionPrice()).totalPrice(productRepository.findById(87L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(87L).get()).product(productRepository.findById(87L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(88L).get().getDistributionPrice()).totalPrice(productRepository.findById(88L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(88L).get()).product(productRepository.findById(88L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(89L).get().getDistributionPrice()).totalPrice(productRepository.findById(89L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(89L).get()).product(productRepository.findById(89L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(90L).get().getDistributionPrice()).totalPrice(productRepository.findById(90L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(90L).get()).product(productRepository.findById(90L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(91L).get().getDistributionPrice()).totalPrice(productRepository.findById(91L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(91L).get()).product(productRepository.findById(91L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(92L).get().getDistributionPrice()).totalPrice(productRepository.findById(92L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(92L).get()).product(productRepository.findById(92L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(93L).get().getDistributionPrice()).totalPrice(productRepository.findById(93L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(93L).get()).product(productRepository.findById(93L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(94L).get().getDistributionPrice()).totalPrice(productRepository.findById(94L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(94L).get()).product(productRepository.findById(94L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(95L).get().getDistributionPrice()).totalPrice(productRepository.findById(95L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(95L).get()).product(productRepository.findById(95L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(96L).get().getDistributionPrice()).totalPrice(productRepository.findById(96L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(96L).get()).product(productRepository.findById(96L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(97L).get().getDistributionPrice()).totalPrice(productRepository.findById(97L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(97L).get()).product(productRepository.findById(97L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(98L).get().getDistributionPrice()).totalPrice(productRepository.findById(98L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(98L).get()).product(productRepository.findById(98L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(99L).get().getDistributionPrice()).totalPrice(productRepository.findById(99L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(99L).get()).product(productRepository.findById(99L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(100L).get().getDistributionPrice()).totalPrice(productRepository.findById(100L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(100L).get()).product(productRepository.findById(100L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(101L).get().getDistributionPrice()).totalPrice(productRepository.findById(101L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(101L).get()).product(productRepository.findById(101L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(102L).get().getDistributionPrice()).totalPrice(productRepository.findById(102L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(102L).get()).product(productRepository.findById(102L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(103L).get().getDistributionPrice()).totalPrice(productRepository.findById(103L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(103L).get()).product(productRepository.findById(103L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(104L).get().getDistributionPrice()).totalPrice(productRepository.findById(104L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(104L).get()).product(productRepository.findById(104L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(105L).get().getDistributionPrice()).totalPrice(productRepository.findById(105L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(105L).get()).product(productRepository.findById(105L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(106L).get().getDistributionPrice()).totalPrice(productRepository.findById(106L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(106L).get()).product(productRepository.findById(106L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(107L).get().getDistributionPrice()).totalPrice(productRepository.findById(107L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(107L).get()).product(productRepository.findById(107L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(108L).get().getDistributionPrice()).totalPrice(productRepository.findById(108L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(108L).get()).product(productRepository.findById(108L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(109L).get().getDistributionPrice()).totalPrice(productRepository.findById(109L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(109L).get()).product(productRepository.findById(109L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(110L).get().getDistributionPrice()).totalPrice(productRepository.findById(110L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(110L).get()).product(productRepository.findById(110L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(111L).get().getDistributionPrice()).totalPrice(productRepository.findById(111L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(111L).get()).product(productRepository.findById(111L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(112L).get().getDistributionPrice()).totalPrice(productRepository.findById(112L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(112L).get()).product(productRepository.findById(112L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(113L).get().getDistributionPrice()).totalPrice(productRepository.findById(113L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(113L).get()).product(productRepository.findById(113L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(114L).get().getDistributionPrice()).totalPrice(productRepository.findById(114L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(114L).get()).product(productRepository.findById(114L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(115L).get().getDistributionPrice()).totalPrice(productRepository.findById(115L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(115L).get()).product(productRepository.findById(115L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(116L).get().getDistributionPrice()).totalPrice(productRepository.findById(116L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(116L).get()).product(productRepository.findById(116L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(117L).get().getDistributionPrice()).totalPrice(productRepository.findById(117L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(117L).get()).product(productRepository.findById(117L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(118L).get().getDistributionPrice()).totalPrice(productRepository.findById(118L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(118L).get()).product(productRepository.findById(118L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(119L).get().getDistributionPrice()).totalPrice(productRepository.findById(119L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(119L).get()).product(productRepository.findById(119L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(120L).get().getDistributionPrice()).totalPrice(productRepository.findById(120L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(120L).get()).product(productRepository.findById(120L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(121L).get().getDistributionPrice()).totalPrice(productRepository.findById(121L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(121L).get()).product(productRepository.findById(121L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(122L).get().getDistributionPrice()).totalPrice(productRepository.findById(122L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(122L).get()).product(productRepository.findById(122L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(123L).get().getDistributionPrice()).totalPrice(productRepository.findById(123L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(123L).get()).product(productRepository.findById(123L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(124L).get().getDistributionPrice()).totalPrice(productRepository.findById(124L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(124L).get()).product(productRepository.findById(124L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(125L).get().getDistributionPrice()).totalPrice(productRepository.findById(125L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(125L).get()).product(productRepository.findById(125L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(126L).get().getDistributionPrice()).totalPrice(productRepository.findById(126L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(126L).get()).product(productRepository.findById(126L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(127L).get().getDistributionPrice()).totalPrice(productRepository.findById(127L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(127L).get()).product(productRepository.findById(127L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(128L).get().getDistributionPrice()).totalPrice(productRepository.findById(128L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(128L).get()).product(productRepository.findById(128L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(129L).get().getDistributionPrice()).totalPrice(productRepository.findById(129L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(129L).get()).product(productRepository.findById(129L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(130L).get().getDistributionPrice()).totalPrice(productRepository.findById(130L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(130L).get()).product(productRepository.findById(130L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(131L).get().getDistributionPrice()).totalPrice(productRepository.findById(131L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(131L).get()).product(productRepository.findById(131L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(132L).get().getDistributionPrice()).totalPrice(productRepository.findById(132L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(132L).get()).product(productRepository.findById(132L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(133L).get().getDistributionPrice()).totalPrice(productRepository.findById(133L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(133L).get()).product(productRepository.findById(133L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(134L).get().getDistributionPrice()).totalPrice(productRepository.findById(134L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(134L).get()).product(productRepository.findById(134L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(135L).get().getDistributionPrice()).totalPrice(productRepository.findById(135L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(135L).get()).product(productRepository.findById(135L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(136L).get().getDistributionPrice()).totalPrice(productRepository.findById(136L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(136L).get()).product(productRepository.findById(136L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(137L).get().getDistributionPrice()).totalPrice(productRepository.findById(137L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(137L).get()).product(productRepository.findById(137L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(138L).get().getDistributionPrice()).totalPrice(productRepository.findById(138L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(138L).get()).product(productRepository.findById(138L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(139L).get().getDistributionPrice()).totalPrice(productRepository.findById(139L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(139L).get()).product(productRepository.findById(139L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(140L).get().getDistributionPrice()).totalPrice(productRepository.findById(140L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(140L).get()).product(productRepository.findById(140L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(141L).get().getDistributionPrice()).totalPrice(productRepository.findById(141L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(141L).get()).product(productRepository.findById(141L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(142L).get().getDistributionPrice()).totalPrice(productRepository.findById(142L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(142L).get()).product(productRepository.findById(142L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(143L).get().getDistributionPrice()).totalPrice(productRepository.findById(143L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(143L).get()).product(productRepository.findById(143L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(144L).get().getDistributionPrice()).totalPrice(productRepository.findById(144L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(144L).get()).product(productRepository.findById(144L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(145L).get().getDistributionPrice()).totalPrice(productRepository.findById(145L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(145L).get()).product(productRepository.findById(145L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(146L).get().getDistributionPrice()).totalPrice(productRepository.findById(146L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(146L).get()).product(productRepository.findById(146L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(147L).get().getDistributionPrice()).totalPrice(productRepository.findById(147L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(147L).get()).product(productRepository.findById(147L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(148L).get().getDistributionPrice()).totalPrice(productRepository.findById(148L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(148L).get()).product(productRepository.findById(148L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(149L).get().getDistributionPrice()).totalPrice(productRepository.findById(149L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(149L).get()).product(productRepository.findById(149L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(150L).get().getDistributionPrice()).totalPrice(productRepository.findById(150L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(150L).get()).product(productRepository.findById(150L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(151L).get().getDistributionPrice()).totalPrice(productRepository.findById(151L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(151L).get()).product(productRepository.findById(151L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(152L).get().getDistributionPrice()).totalPrice(productRepository.findById(152L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(152L).get()).product(productRepository.findById(152L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(153L).get().getDistributionPrice()).totalPrice(productRepository.findById(153L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(153L).get()).product(productRepository.findById(153L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(154L).get().getDistributionPrice()).totalPrice(productRepository.findById(154L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(154L).get()).product(productRepository.findById(154L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(155L).get().getDistributionPrice()).totalPrice(productRepository.findById(155L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(155L).get()).product(productRepository.findById(155L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(156L).get().getDistributionPrice()).totalPrice(productRepository.findById(156L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(156L).get()).product(productRepository.findById(156L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(157L).get().getDistributionPrice()).totalPrice(productRepository.findById(157L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(157L).get()).product(productRepository.findById(157L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(158L).get().getDistributionPrice()).totalPrice(productRepository.findById(158L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(158L).get()).product(productRepository.findById(158L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(159L).get().getDistributionPrice()).totalPrice(productRepository.findById(159L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(159L).get()).product(productRepository.findById(159L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(160L).get().getDistributionPrice()).totalPrice(productRepository.findById(160L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(160L).get()).product(productRepository.findById(160L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(161L).get().getDistributionPrice()).totalPrice(productRepository.findById(161L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(161L).get()).product(productRepository.findById(161L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(162L).get().getDistributionPrice()).totalPrice(productRepository.findById(162L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(162L).get()).product(productRepository.findById(162L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(163L).get().getDistributionPrice()).totalPrice(productRepository.findById(163L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(163L).get()).product(productRepository.findById(163L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(164L).get().getDistributionPrice()).totalPrice(productRepository.findById(164L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(164L).get()).product(productRepository.findById(164L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(165L).get().getDistributionPrice()).totalPrice(productRepository.findById(165L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(165L).get()).product(productRepository.findById(165L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(166L).get().getDistributionPrice()).totalPrice(productRepository.findById(166L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(166L).get()).product(productRepository.findById(166L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(167L).get().getDistributionPrice()).totalPrice(productRepository.findById(167L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(167L).get()).product(productRepository.findById(167L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(168L).get().getDistributionPrice()).totalPrice(productRepository.findById(168L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(168L).get()).product(productRepository.findById(168L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(169L).get().getDistributionPrice()).totalPrice(productRepository.findById(169L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(169L).get()).product(productRepository.findById(169L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(170L).get().getDistributionPrice()).totalPrice(productRepository.findById(170L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(170L).get()).product(productRepository.findById(170L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(171L).get().getDistributionPrice()).totalPrice(productRepository.findById(171L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(171L).get()).product(productRepository.findById(171L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(172L).get().getDistributionPrice()).totalPrice(productRepository.findById(172L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(172L).get()).product(productRepository.findById(172L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(173L).get().getDistributionPrice()).totalPrice(productRepository.findById(173L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(173L).get()).product(productRepository.findById(173L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(174L).get().getDistributionPrice()).totalPrice(productRepository.findById(174L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(174L).get()).product(productRepository.findById(174L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(175L).get().getDistributionPrice()).totalPrice(productRepository.findById(175L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(175L).get()).product(productRepository.findById(175L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(176L).get().getDistributionPrice()).totalPrice(productRepository.findById(176L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(176L).get()).product(productRepository.findById(176L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(177L).get().getDistributionPrice()).totalPrice(productRepository.findById(177L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(177L).get()).product(productRepository.findById(177L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(178L).get().getDistributionPrice()).totalPrice(productRepository.findById(178L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(178L).get()).product(productRepository.findById(178L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(179L).get().getDistributionPrice()).totalPrice(productRepository.findById(179L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(179L).get()).product(productRepository.findById(179L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(180L).get().getDistributionPrice()).totalPrice(productRepository.findById(180L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(180L).get()).product(productRepository.findById(180L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(181L).get().getDistributionPrice()).totalPrice(productRepository.findById(181L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(181L).get()).product(productRepository.findById(181L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(182L).get().getDistributionPrice()).totalPrice(productRepository.findById(182L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(182L).get()).product(productRepository.findById(182L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(183L).get().getDistributionPrice()).totalPrice(productRepository.findById(183L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(183L).get()).product(productRepository.findById(183L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(184L).get().getDistributionPrice()).totalPrice(productRepository.findById(184L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(184L).get()).product(productRepository.findById(184L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(185L).get().getDistributionPrice()).totalPrice(productRepository.findById(185L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(185L).get()).product(productRepository.findById(185L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(186L).get().getDistributionPrice()).totalPrice(productRepository.findById(186L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(186L).get()).product(productRepository.findById(186L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(187L).get().getDistributionPrice()).totalPrice(productRepository.findById(187L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(187L).get()).product(productRepository.findById(187L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(188L).get().getDistributionPrice()).totalPrice(productRepository.findById(188L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(188L).get()).product(productRepository.findById(188L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(189L).get().getDistributionPrice()).totalPrice(productRepository.findById(189L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(189L).get()).product(productRepository.findById(189L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(190L).get().getDistributionPrice()).totalPrice(productRepository.findById(190L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(190L).get()).product(productRepository.findById(190L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(191L).get().getDistributionPrice()).totalPrice(productRepository.findById(191L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(191L).get()).product(productRepository.findById(191L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(192L).get().getDistributionPrice()).totalPrice(productRepository.findById(192L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(192L).get()).product(productRepository.findById(192L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(193L).get().getDistributionPrice()).totalPrice(productRepository.findById(193L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(193L).get()).product(productRepository.findById(193L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(194L).get().getDistributionPrice()).totalPrice(productRepository.findById(194L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(194L).get()).product(productRepository.findById(194L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(195L).get().getDistributionPrice()).totalPrice(productRepository.findById(195L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(195L).get()).product(productRepository.findById(195L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(196L).get().getDistributionPrice()).totalPrice(productRepository.findById(196L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(196L).get()).product(productRepository.findById(196L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(197L).get().getDistributionPrice()).totalPrice(productRepository.findById(197L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(197L).get()).product(productRepository.findById(197L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(198L).get().getDistributionPrice()).totalPrice(productRepository.findById(198L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(198L).get()).product(productRepository.findById(198L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(199L).get().getDistributionPrice()).totalPrice(productRepository.findById(199L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(199L).get()).product(productRepository.findById(199L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(200L).get().getDistributionPrice()).totalPrice(productRepository.findById(200L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(200L).get()).product(productRepository.findById(200L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(201L).get().getDistributionPrice()).totalPrice(productRepository.findById(201L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(1L).get()).product(productRepository.findById(201L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(202L).get().getDistributionPrice()).totalPrice(productRepository.findById(202L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(2L).get()).product(productRepository.findById(202L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(203L).get().getDistributionPrice()).totalPrice(productRepository.findById(203L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(3L).get()).product(productRepository.findById(203L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(204L).get().getDistributionPrice()).totalPrice(productRepository.findById(204L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(4L).get()).product(productRepository.findById(204L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(205L).get().getDistributionPrice()).totalPrice(productRepository.findById(205L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(5L).get()).product(productRepository.findById(205L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(206L).get().getDistributionPrice()).totalPrice(productRepository.findById(206L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(6L).get()).product(productRepository.findById(206L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(207L).get().getDistributionPrice()).totalPrice(productRepository.findById(207L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(7L).get()).product(productRepository.findById(207L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(208L).get().getDistributionPrice()).totalPrice(productRepository.findById(208L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(8L).get()).product(productRepository.findById(208L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(209L).get().getDistributionPrice()).totalPrice(productRepository.findById(209L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(9L).get()).product(productRepository.findById(209L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(210L).get().getDistributionPrice()).totalPrice(productRepository.findById(210L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(10L).get()).product(productRepository.findById(210L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(211L).get().getDistributionPrice()).totalPrice(productRepository.findById(211L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(11L).get()).product(productRepository.findById(211L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(212L).get().getDistributionPrice()).totalPrice(productRepository.findById(212L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(12L).get()).product(productRepository.findById(212L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(213L).get().getDistributionPrice()).totalPrice(productRepository.findById(213L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(13L).get()).product(productRepository.findById(213L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(214L).get().getDistributionPrice()).totalPrice(productRepository.findById(214L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(14L).get()).product(productRepository.findById(214L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(215L).get().getDistributionPrice()).totalPrice(productRepository.findById(215L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(15L).get()).product(productRepository.findById(215L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(216L).get().getDistributionPrice()).totalPrice(productRepository.findById(216L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(16L).get()).product(productRepository.findById(216L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(217L).get().getDistributionPrice()).totalPrice(productRepository.findById(217L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(17L).get()).product(productRepository.findById(217L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(218L).get().getDistributionPrice()).totalPrice(productRepository.findById(218L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(18L).get()).product(productRepository.findById(218L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(219L).get().getDistributionPrice()).totalPrice(productRepository.findById(219L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(19L).get()).product(productRepository.findById(219L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(220L).get().getDistributionPrice()).totalPrice(productRepository.findById(220L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(20L).get()).product(productRepository.findById(220L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(221L).get().getDistributionPrice()).totalPrice(productRepository.findById(221L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(21L).get()).product(productRepository.findById(221L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(222L).get().getDistributionPrice()).totalPrice(productRepository.findById(222L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(22L).get()).product(productRepository.findById(222L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(223L).get().getDistributionPrice()).totalPrice(productRepository.findById(223L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(23L).get()).product(productRepository.findById(223L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(224L).get().getDistributionPrice()).totalPrice(productRepository.findById(224L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(24L).get()).product(productRepository.findById(224L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(225L).get().getDistributionPrice()).totalPrice(productRepository.findById(225L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(25L).get()).product(productRepository.findById(225L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(226L).get().getDistributionPrice()).totalPrice(productRepository.findById(226L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(26L).get()).product(productRepository.findById(226L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(227L).get().getDistributionPrice()).totalPrice(productRepository.findById(227L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(27L).get()).product(productRepository.findById(227L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(228L).get().getDistributionPrice()).totalPrice(productRepository.findById(228L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(28L).get()).product(productRepository.findById(228L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(229L).get().getDistributionPrice()).totalPrice(productRepository.findById(229L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(29L).get()).product(productRepository.findById(229L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(230L).get().getDistributionPrice()).totalPrice(productRepository.findById(230L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(30L).get()).product(productRepository.findById(230L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(231L).get().getDistributionPrice()).totalPrice(productRepository.findById(231L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(31L).get()).product(productRepository.findById(231L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(232L).get().getDistributionPrice()).totalPrice(productRepository.findById(232L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(32L).get()).product(productRepository.findById(232L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(233L).get().getDistributionPrice()).totalPrice(productRepository.findById(233L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(33L).get()).product(productRepository.findById(233L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(234L).get().getDistributionPrice()).totalPrice(productRepository.findById(234L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(34L).get()).product(productRepository.findById(234L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(235L).get().getDistributionPrice()).totalPrice(productRepository.findById(235L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(35L).get()).product(productRepository.findById(235L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(236L).get().getDistributionPrice()).totalPrice(productRepository.findById(236L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(36L).get()).product(productRepository.findById(236L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(237L).get().getDistributionPrice()).totalPrice(productRepository.findById(237L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(37L).get()).product(productRepository.findById(237L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(238L).get().getDistributionPrice()).totalPrice(productRepository.findById(238L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(38L).get()).product(productRepository.findById(238L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(239L).get().getDistributionPrice()).totalPrice(productRepository.findById(239L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(39L).get()).product(productRepository.findById(239L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(240L).get().getDistributionPrice()).totalPrice(productRepository.findById(240L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(40L).get()).product(productRepository.findById(240L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(241L).get().getDistributionPrice()).totalPrice(productRepository.findById(241L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(41L).get()).product(productRepository.findById(241L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(242L).get().getDistributionPrice()).totalPrice(productRepository.findById(242L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(42L).get()).product(productRepository.findById(242L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(243L).get().getDistributionPrice()).totalPrice(productRepository.findById(243L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(43L).get()).product(productRepository.findById(243L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(244L).get().getDistributionPrice()).totalPrice(productRepository.findById(244L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(44L).get()).product(productRepository.findById(244L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(245L).get().getDistributionPrice()).totalPrice(productRepository.findById(245L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(45L).get()).product(productRepository.findById(245L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(246L).get().getDistributionPrice()).totalPrice(productRepository.findById(246L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(46L).get()).product(productRepository.findById(246L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(247L).get().getDistributionPrice()).totalPrice(productRepository.findById(247L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(47L).get()).product(productRepository.findById(247L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(248L).get().getDistributionPrice()).totalPrice(productRepository.findById(248L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(48L).get()).product(productRepository.findById(248L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(249L).get().getDistributionPrice()).totalPrice(productRepository.findById(249L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(49L).get()).product(productRepository.findById(249L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(250L).get().getDistributionPrice()).totalPrice(productRepository.findById(250L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(50L).get()).product(productRepository.findById(250L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(251L).get().getDistributionPrice()).totalPrice(productRepository.findById(251L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(51L).get()).product(productRepository.findById(251L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(252L).get().getDistributionPrice()).totalPrice(productRepository.findById(252L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(52L).get()).product(productRepository.findById(252L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(253L).get().getDistributionPrice()).totalPrice(productRepository.findById(253L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(53L).get()).product(productRepository.findById(253L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(254L).get().getDistributionPrice()).totalPrice(productRepository.findById(254L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(54L).get()).product(productRepository.findById(254L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(255L).get().getDistributionPrice()).totalPrice(productRepository.findById(255L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(55L).get()).product(productRepository.findById(255L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(256L).get().getDistributionPrice()).totalPrice(productRepository.findById(256L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(56L).get()).product(productRepository.findById(256L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(257L).get().getDistributionPrice()).totalPrice(productRepository.findById(257L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(57L).get()).product(productRepository.findById(257L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(258L).get().getDistributionPrice()).totalPrice(productRepository.findById(258L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(58L).get()).product(productRepository.findById(258L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(259L).get().getDistributionPrice()).totalPrice(productRepository.findById(259L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(59L).get()).product(productRepository.findById(259L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(260L).get().getDistributionPrice()).totalPrice(productRepository.findById(260L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(60L).get()).product(productRepository.findById(260L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(261L).get().getDistributionPrice()).totalPrice(productRepository.findById(261L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(61L).get()).product(productRepository.findById(261L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(262L).get().getDistributionPrice()).totalPrice(productRepository.findById(262L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(62L).get()).product(productRepository.findById(262L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(263L).get().getDistributionPrice()).totalPrice(productRepository.findById(263L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(63L).get()).product(productRepository.findById(263L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(264L).get().getDistributionPrice()).totalPrice(productRepository.findById(264L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(64L).get()).product(productRepository.findById(264L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(265L).get().getDistributionPrice()).totalPrice(productRepository.findById(265L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(65L).get()).product(productRepository.findById(265L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(266L).get().getDistributionPrice()).totalPrice(productRepository.findById(266L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(66L).get()).product(productRepository.findById(266L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(267L).get().getDistributionPrice()).totalPrice(productRepository.findById(267L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(67L).get()).product(productRepository.findById(267L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(268L).get().getDistributionPrice()).totalPrice(productRepository.findById(268L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(68L).get()).product(productRepository.findById(268L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(269L).get().getDistributionPrice()).totalPrice(productRepository.findById(269L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(69L).get()).product(productRepository.findById(269L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(270L).get().getDistributionPrice()).totalPrice(productRepository.findById(270L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(70L).get()).product(productRepository.findById(270L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(271L).get().getDistributionPrice()).totalPrice(productRepository.findById(271L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(71L).get()).product(productRepository.findById(271L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(272L).get().getDistributionPrice()).totalPrice(productRepository.findById(272L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(72L).get()).product(productRepository.findById(272L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(273L).get().getDistributionPrice()).totalPrice(productRepository.findById(273L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(73L).get()).product(productRepository.findById(273L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(274L).get().getDistributionPrice()).totalPrice(productRepository.findById(274L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(74L).get()).product(productRepository.findById(274L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(275L).get().getDistributionPrice()).totalPrice(productRepository.findById(275L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(75L).get()).product(productRepository.findById(275L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(276L).get().getDistributionPrice()).totalPrice(productRepository.findById(276L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(76L).get()).product(productRepository.findById(276L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(277L).get().getDistributionPrice()).totalPrice(productRepository.findById(277L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(77L).get()).product(productRepository.findById(277L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(278L).get().getDistributionPrice()).totalPrice(productRepository.findById(278L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(78L).get()).product(productRepository.findById(278L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(279L).get().getDistributionPrice()).totalPrice(productRepository.findById(279L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(79L).get()).product(productRepository.findById(279L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(280L).get().getDistributionPrice()).totalPrice(productRepository.findById(280L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(80L).get()).product(productRepository.findById(280L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(281L).get().getDistributionPrice()).totalPrice(productRepository.findById(281L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(81L).get()).product(productRepository.findById(281L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(282L).get().getDistributionPrice()).totalPrice(productRepository.findById(282L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(82L).get()).product(productRepository.findById(282L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(283L).get().getDistributionPrice()).totalPrice(productRepository.findById(283L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(83L).get()).product(productRepository.findById(283L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(284L).get().getDistributionPrice()).totalPrice(productRepository.findById(284L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(84L).get()).product(productRepository.findById(284L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(285L).get().getDistributionPrice()).totalPrice(productRepository.findById(285L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(85L).get()).product(productRepository.findById(285L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(286L).get().getDistributionPrice()).totalPrice(productRepository.findById(286L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(86L).get()).product(productRepository.findById(286L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(287L).get().getDistributionPrice()).totalPrice(productRepository.findById(287L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(87L).get()).product(productRepository.findById(287L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(288L).get().getDistributionPrice()).totalPrice(productRepository.findById(288L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(88L).get()).product(productRepository.findById(288L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(289L).get().getDistributionPrice()).totalPrice(productRepository.findById(289L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(89L).get()).product(productRepository.findById(289L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(290L).get().getDistributionPrice()).totalPrice(productRepository.findById(290L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(90L).get()).product(productRepository.findById(290L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(291L).get().getDistributionPrice()).totalPrice(productRepository.findById(291L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(91L).get()).product(productRepository.findById(291L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(292L).get().getDistributionPrice()).totalPrice(productRepository.findById(292L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(92L).get()).product(productRepository.findById(292L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(293L).get().getDistributionPrice()).totalPrice(productRepository.findById(293L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(93L).get()).product(productRepository.findById(293L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(294L).get().getDistributionPrice()).totalPrice(productRepository.findById(294L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(94L).get()).product(productRepository.findById(294L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(295L).get().getDistributionPrice()).totalPrice(productRepository.findById(295L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(95L).get()).product(productRepository.findById(295L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(296L).get().getDistributionPrice()).totalPrice(productRepository.findById(296L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(96L).get()).product(productRepository.findById(296L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(297L).get().getDistributionPrice()).totalPrice(productRepository.findById(297L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(97L).get()).product(productRepository.findById(297L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(298L).get().getDistributionPrice()).totalPrice(productRepository.findById(298L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(98L).get()).product(productRepository.findById(298L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(299L).get().getDistributionPrice()).totalPrice(productRepository.findById(299L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(99L).get()).product(productRepository.findById(299L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(300L).get().getDistributionPrice()).totalPrice(productRepository.findById(300L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(100L).get()).product(productRepository.findById(300L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(301L).get().getDistributionPrice()).totalPrice(productRepository.findById(301L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(101L).get()).product(productRepository.findById(301L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(302L).get().getDistributionPrice()).totalPrice(productRepository.findById(302L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(102L).get()).product(productRepository.findById(302L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(303L).get().getDistributionPrice()).totalPrice(productRepository.findById(303L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(103L).get()).product(productRepository.findById(303L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(304L).get().getDistributionPrice()).totalPrice(productRepository.findById(304L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(104L).get()).product(productRepository.findById(304L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(305L).get().getDistributionPrice()).totalPrice(productRepository.findById(305L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(105L).get()).product(productRepository.findById(305L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(306L).get().getDistributionPrice()).totalPrice(productRepository.findById(306L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(106L).get()).product(productRepository.findById(306L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(307L).get().getDistributionPrice()).totalPrice(productRepository.findById(307L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(107L).get()).product(productRepository.findById(307L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(308L).get().getDistributionPrice()).totalPrice(productRepository.findById(308L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(108L).get()).product(productRepository.findById(308L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(309L).get().getDistributionPrice()).totalPrice(productRepository.findById(309L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(109L).get()).product(productRepository.findById(309L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(310L).get().getDistributionPrice()).totalPrice(productRepository.findById(310L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(110L).get()).product(productRepository.findById(310L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(311L).get().getDistributionPrice()).totalPrice(productRepository.findById(311L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(111L).get()).product(productRepository.findById(311L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(312L).get().getDistributionPrice()).totalPrice(productRepository.findById(312L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(112L).get()).product(productRepository.findById(312L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(313L).get().getDistributionPrice()).totalPrice(productRepository.findById(313L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(113L).get()).product(productRepository.findById(313L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(314L).get().getDistributionPrice()).totalPrice(productRepository.findById(314L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(114L).get()).product(productRepository.findById(314L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(315L).get().getDistributionPrice()).totalPrice(productRepository.findById(315L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(115L).get()).product(productRepository.findById(315L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(316L).get().getDistributionPrice()).totalPrice(productRepository.findById(316L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(116L).get()).product(productRepository.findById(316L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(317L).get().getDistributionPrice()).totalPrice(productRepository.findById(317L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(117L).get()).product(productRepository.findById(317L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(318L).get().getDistributionPrice()).totalPrice(productRepository.findById(318L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(118L).get()).product(productRepository.findById(318L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(319L).get().getDistributionPrice()).totalPrice(productRepository.findById(319L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(119L).get()).product(productRepository.findById(319L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(320L).get().getDistributionPrice()).totalPrice(productRepository.findById(320L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(120L).get()).product(productRepository.findById(320L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(321L).get().getDistributionPrice()).totalPrice(productRepository.findById(321L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(121L).get()).product(productRepository.findById(321L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(322L).get().getDistributionPrice()).totalPrice(productRepository.findById(322L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(122L).get()).product(productRepository.findById(322L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(323L).get().getDistributionPrice()).totalPrice(productRepository.findById(323L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(123L).get()).product(productRepository.findById(323L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(324L).get().getDistributionPrice()).totalPrice(productRepository.findById(324L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(124L).get()).product(productRepository.findById(324L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(325L).get().getDistributionPrice()).totalPrice(productRepository.findById(325L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(125L).get()).product(productRepository.findById(325L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(326L).get().getDistributionPrice()).totalPrice(productRepository.findById(326L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(126L).get()).product(productRepository.findById(326L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(327L).get().getDistributionPrice()).totalPrice(productRepository.findById(327L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(127L).get()).product(productRepository.findById(327L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(328L).get().getDistributionPrice()).totalPrice(productRepository.findById(328L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(128L).get()).product(productRepository.findById(328L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(329L).get().getDistributionPrice()).totalPrice(productRepository.findById(329L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(129L).get()).product(productRepository.findById(329L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(330L).get().getDistributionPrice()).totalPrice(productRepository.findById(330L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(130L).get()).product(productRepository.findById(330L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(331L).get().getDistributionPrice()).totalPrice(productRepository.findById(331L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(131L).get()).product(productRepository.findById(331L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(332L).get().getDistributionPrice()).totalPrice(productRepository.findById(332L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(132L).get()).product(productRepository.findById(332L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(333L).get().getDistributionPrice()).totalPrice(productRepository.findById(333L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(133L).get()).product(productRepository.findById(333L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(334L).get().getDistributionPrice()).totalPrice(productRepository.findById(334L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(134L).get()).product(productRepository.findById(334L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(335L).get().getDistributionPrice()).totalPrice(productRepository.findById(335L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(135L).get()).product(productRepository.findById(335L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(336L).get().getDistributionPrice()).totalPrice(productRepository.findById(336L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(136L).get()).product(productRepository.findById(336L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(337L).get().getDistributionPrice()).totalPrice(productRepository.findById(337L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(137L).get()).product(productRepository.findById(337L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(338L).get().getDistributionPrice()).totalPrice(productRepository.findById(338L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(138L).get()).product(productRepository.findById(338L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(339L).get().getDistributionPrice()).totalPrice(productRepository.findById(339L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(139L).get()).product(productRepository.findById(339L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(340L).get().getDistributionPrice()).totalPrice(productRepository.findById(340L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(140L).get()).product(productRepository.findById(340L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(341L).get().getDistributionPrice()).totalPrice(productRepository.findById(341L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(141L).get()).product(productRepository.findById(341L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(342L).get().getDistributionPrice()).totalPrice(productRepository.findById(342L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(142L).get()).product(productRepository.findById(342L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(343L).get().getDistributionPrice()).totalPrice(productRepository.findById(343L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(143L).get()).product(productRepository.findById(343L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(344L).get().getDistributionPrice()).totalPrice(productRepository.findById(344L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(144L).get()).product(productRepository.findById(344L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(345L).get().getDistributionPrice()).totalPrice(productRepository.findById(345L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(145L).get()).product(productRepository.findById(345L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(346L).get().getDistributionPrice()).totalPrice(productRepository.findById(346L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(146L).get()).product(productRepository.findById(346L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(347L).get().getDistributionPrice()).totalPrice(productRepository.findById(347L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(147L).get()).product(productRepository.findById(347L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(348L).get().getDistributionPrice()).totalPrice(productRepository.findById(348L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(148L).get()).product(productRepository.findById(348L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(349L).get().getDistributionPrice()).totalPrice(productRepository.findById(349L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(149L).get()).product(productRepository.findById(349L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(350L).get().getDistributionPrice()).totalPrice(productRepository.findById(350L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(150L).get()).product(productRepository.findById(350L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(351L).get().getDistributionPrice()).totalPrice(productRepository.findById(351L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(151L).get()).product(productRepository.findById(351L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(352L).get().getDistributionPrice()).totalPrice(productRepository.findById(352L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(152L).get()).product(productRepository.findById(352L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(353L).get().getDistributionPrice()).totalPrice(productRepository.findById(353L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(153L).get()).product(productRepository.findById(353L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(354L).get().getDistributionPrice()).totalPrice(productRepository.findById(354L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(154L).get()).product(productRepository.findById(354L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(355L).get().getDistributionPrice()).totalPrice(productRepository.findById(355L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(155L).get()).product(productRepository.findById(355L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(356L).get().getDistributionPrice()).totalPrice(productRepository.findById(356L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(156L).get()).product(productRepository.findById(356L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(357L).get().getDistributionPrice()).totalPrice(productRepository.findById(357L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(157L).get()).product(productRepository.findById(357L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(358L).get().getDistributionPrice()).totalPrice(productRepository.findById(358L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(158L).get()).product(productRepository.findById(358L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(359L).get().getDistributionPrice()).totalPrice(productRepository.findById(359L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(159L).get()).product(productRepository.findById(359L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(360L).get().getDistributionPrice()).totalPrice(productRepository.findById(360L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(160L).get()).product(productRepository.findById(360L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(361L).get().getDistributionPrice()).totalPrice(productRepository.findById(361L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(161L).get()).product(productRepository.findById(361L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(362L).get().getDistributionPrice()).totalPrice(productRepository.findById(362L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(162L).get()).product(productRepository.findById(362L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(363L).get().getDistributionPrice()).totalPrice(productRepository.findById(363L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(163L).get()).product(productRepository.findById(363L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(364L).get().getDistributionPrice()).totalPrice(productRepository.findById(364L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(164L).get()).product(productRepository.findById(364L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(365L).get().getDistributionPrice()).totalPrice(productRepository.findById(365L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(165L).get()).product(productRepository.findById(365L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(366L).get().getDistributionPrice()).totalPrice(productRepository.findById(366L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(166L).get()).product(productRepository.findById(366L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(367L).get().getDistributionPrice()).totalPrice(productRepository.findById(367L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(167L).get()).product(productRepository.findById(367L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(368L).get().getDistributionPrice()).totalPrice(productRepository.findById(368L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(168L).get()).product(productRepository.findById(368L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(369L).get().getDistributionPrice()).totalPrice(productRepository.findById(369L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(169L).get()).product(productRepository.findById(369L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(370L).get().getDistributionPrice()).totalPrice(productRepository.findById(370L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(170L).get()).product(productRepository.findById(370L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(371L).get().getDistributionPrice()).totalPrice(productRepository.findById(371L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(171L).get()).product(productRepository.findById(371L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(372L).get().getDistributionPrice()).totalPrice(productRepository.findById(372L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(172L).get()).product(productRepository.findById(372L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(373L).get().getDistributionPrice()).totalPrice(productRepository.findById(373L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(173L).get()).product(productRepository.findById(373L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(374L).get().getDistributionPrice()).totalPrice(productRepository.findById(374L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(174L).get()).product(productRepository.findById(374L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(375L).get().getDistributionPrice()).totalPrice(productRepository.findById(375L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(175L).get()).product(productRepository.findById(375L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(376L).get().getDistributionPrice()).totalPrice(productRepository.findById(376L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(176L).get()).product(productRepository.findById(376L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(377L).get().getDistributionPrice()).totalPrice(productRepository.findById(377L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(177L).get()).product(productRepository.findById(377L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(378L).get().getDistributionPrice()).totalPrice(productRepository.findById(378L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(178L).get()).product(productRepository.findById(378L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(379L).get().getDistributionPrice()).totalPrice(productRepository.findById(379L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(179L).get()).product(productRepository.findById(379L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(380L).get().getDistributionPrice()).totalPrice(productRepository.findById(380L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(180L).get()).product(productRepository.findById(380L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(381L).get().getDistributionPrice()).totalPrice(productRepository.findById(381L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(181L).get()).product(productRepository.findById(381L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(382L).get().getDistributionPrice()).totalPrice(productRepository.findById(382L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(182L).get()).product(productRepository.findById(382L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(383L).get().getDistributionPrice()).totalPrice(productRepository.findById(383L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(183L).get()).product(productRepository.findById(383L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(384L).get().getDistributionPrice()).totalPrice(productRepository.findById(384L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(184L).get()).product(productRepository.findById(384L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(385L).get().getDistributionPrice()).totalPrice(productRepository.findById(385L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(185L).get()).product(productRepository.findById(385L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(386L).get().getDistributionPrice()).totalPrice(productRepository.findById(386L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(186L).get()).product(productRepository.findById(386L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(387L).get().getDistributionPrice()).totalPrice(productRepository.findById(387L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(187L).get()).product(productRepository.findById(387L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(388L).get().getDistributionPrice()).totalPrice(productRepository.findById(388L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(188L).get()).product(productRepository.findById(388L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(389L).get().getDistributionPrice()).totalPrice(productRepository.findById(389L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(189L).get()).product(productRepository.findById(389L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(390L).get().getDistributionPrice()).totalPrice(productRepository.findById(390L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(190L).get()).product(productRepository.findById(390L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(391L).get().getDistributionPrice()).totalPrice(productRepository.findById(391L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(191L).get()).product(productRepository.findById(391L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(392L).get().getDistributionPrice()).totalPrice(productRepository.findById(392L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(192L).get()).product(productRepository.findById(392L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(393L).get().getDistributionPrice()).totalPrice(productRepository.findById(393L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(193L).get()).product(productRepository.findById(393L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(394L).get().getDistributionPrice()).totalPrice(productRepository.findById(394L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(194L).get()).product(productRepository.findById(394L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(395L).get().getDistributionPrice()).totalPrice(productRepository.findById(395L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(195L).get()).product(productRepository.findById(395L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(396L).get().getDistributionPrice()).totalPrice(productRepository.findById(396L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(196L).get()).product(productRepository.findById(396L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(397L).get().getDistributionPrice()).totalPrice(productRepository.findById(397L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(197L).get()).product(productRepository.findById(397L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(398L).get().getDistributionPrice()).totalPrice(productRepository.findById(398L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(198L).get()).product(productRepository.findById(398L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(399L).get().getDistributionPrice()).totalPrice(productRepository.findById(399L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(199L).get()).product(productRepository.findById(399L).get()).build());
        restaurantOrderDetailRepository.save(RestaurantOrderDetail.builder().quantity(2L).price(productRepository.findById(400L).get().getDistributionPrice()).totalPrice(productRepository.findById(400L).get().getDistributionPrice().multiply(BigDecimal.valueOf(2))).restaurantOrder(restaurantOrderRepository.findById(200L).get()).product(productRepository.findById(400L).get()).build());
    }

    void initRestaurantOrderRefund() {
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(1L).get()).totalPrice(BigDecimal.valueOf(3850)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(2L).get()).totalPrice(BigDecimal.valueOf(3520)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(3L).get()).totalPrice(BigDecimal.valueOf(16500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(4L).get()).totalPrice(BigDecimal.valueOf(16500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(5L).get()).totalPrice(BigDecimal.valueOf(53900)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(6L).get()).totalPrice(BigDecimal.valueOf(11000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(7L).get()).totalPrice(BigDecimal.valueOf(8800)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(8L).get()).totalPrice(BigDecimal.valueOf(13200)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(9L).get()).totalPrice(BigDecimal.valueOf(9900)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(10L).get()).totalPrice(BigDecimal.valueOf(9900)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(11L).get()).totalPrice(BigDecimal.valueOf(9900)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(12L).get()).totalPrice(BigDecimal.valueOf(9900)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(13L).get()).totalPrice(BigDecimal.valueOf(9900)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(14L).get()).totalPrice(BigDecimal.valueOf(14850)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(15L).get()).totalPrice(BigDecimal.valueOf(38500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(16L).get()).totalPrice(BigDecimal.valueOf(1595)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(17L).get()).totalPrice(BigDecimal.valueOf(15400)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(18L).get()).totalPrice(BigDecimal.valueOf(19800)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(19L).get()).totalPrice(BigDecimal.valueOf(27500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(20L).get()).totalPrice(BigDecimal.valueOf(97900)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(21L).get()).totalPrice(BigDecimal.valueOf(16500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(22L).get()).totalPrice(BigDecimal.valueOf(28600)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(23L).get()).totalPrice(BigDecimal.valueOf(30800)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(24L).get()).totalPrice(BigDecimal.valueOf(11000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(25L).get()).totalPrice(BigDecimal.valueOf(15400)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(26L).get()).totalPrice(BigDecimal.valueOf(82500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(27L).get()).totalPrice(BigDecimal.valueOf(99000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(28L).get()).totalPrice(BigDecimal.valueOf(12100)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(29L).get()).totalPrice(BigDecimal.valueOf(2750)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(30L).get()).totalPrice(BigDecimal.valueOf(6600)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(31L).get()).totalPrice(BigDecimal.valueOf(11000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(32L).get()).totalPrice(BigDecimal.valueOf(29700)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(33L).get()).totalPrice(BigDecimal.valueOf(165000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(34L).get()).totalPrice(BigDecimal.valueOf(40700)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(35L).get()).totalPrice(BigDecimal.valueOf(44000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(36L).get()).totalPrice(BigDecimal.valueOf(88000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(37L).get()).totalPrice(BigDecimal.valueOf(121000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(38L).get()).totalPrice(BigDecimal.valueOf(165000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(39L).get()).totalPrice(BigDecimal.valueOf(27500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(40L).get()).totalPrice(BigDecimal.valueOf(24200)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(41L).get()).totalPrice(BigDecimal.valueOf(41800)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(42L).get()).totalPrice(BigDecimal.valueOf(24200)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(43L).get()).totalPrice(BigDecimal.valueOf(24200)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(44L).get()).totalPrice(BigDecimal.valueOf(49500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(45L).get()).totalPrice(BigDecimal.valueOf(35200)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(46L).get()).totalPrice(BigDecimal.valueOf(396000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(47L).get()).totalPrice(BigDecimal.valueOf(396000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(48L).get()).totalPrice(BigDecimal.valueOf(2750)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(49L).get()).totalPrice(BigDecimal.valueOf(66000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(50L).get()).totalPrice(BigDecimal.valueOf(6600)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(51L).get()).totalPrice(BigDecimal.valueOf(11000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(52L).get()).totalPrice(BigDecimal.valueOf(1650)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(53L).get()).totalPrice(BigDecimal.valueOf(27500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(54L).get()).totalPrice(BigDecimal.valueOf(23100)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(55L).get()).totalPrice(BigDecimal.valueOf(61600)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(56L).get()).totalPrice(BigDecimal.valueOf(38500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(57L).get()).totalPrice(BigDecimal.valueOf(23100)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(58L).get()).totalPrice(BigDecimal.valueOf(80850)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(59L).get()).totalPrice(BigDecimal.valueOf(44000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(60L).get()).totalPrice(BigDecimal.valueOf(44000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(61L).get()).totalPrice(BigDecimal.valueOf(44000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(62L).get()).totalPrice(BigDecimal.valueOf(44000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(63L).get()).totalPrice(BigDecimal.valueOf(13200)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(64L).get()).totalPrice(BigDecimal.valueOf(20900)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(65L).get()).totalPrice(BigDecimal.valueOf(12100)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(66L).get()).totalPrice(BigDecimal.valueOf(10890)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(67L).get()).totalPrice(BigDecimal.valueOf(16500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(68L).get()).totalPrice(BigDecimal.valueOf(27500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(69L).get()).totalPrice(BigDecimal.valueOf(24200)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(70L).get()).totalPrice(BigDecimal.valueOf(22000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(71L).get()).totalPrice(BigDecimal.valueOf(1320)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(72L).get()).totalPrice(BigDecimal.valueOf(4400)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(73L).get()).totalPrice(BigDecimal.valueOf(11000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(74L).get()).totalPrice(BigDecimal.valueOf(19800)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(75L).get()).totalPrice(BigDecimal.valueOf(3300)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(76L).get()).totalPrice(BigDecimal.valueOf(5500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(77L).get()).totalPrice(BigDecimal.valueOf(12100)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(78L).get()).totalPrice(BigDecimal.valueOf(7700)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(79L).get()).totalPrice(BigDecimal.valueOf(49500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(80L).get()).totalPrice(BigDecimal.valueOf(60500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(81L).get()).totalPrice(BigDecimal.valueOf(19800)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(82L).get()).totalPrice(BigDecimal.valueOf(25300)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(83L).get()).totalPrice(BigDecimal.valueOf(38500)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(84L).get()).totalPrice(BigDecimal.valueOf(6600)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(85L).get()).totalPrice(BigDecimal.valueOf(4400)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(86L).get()).totalPrice(BigDecimal.valueOf(7150)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(87L).get()).totalPrice(BigDecimal.valueOf(3960)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(88L).get()).totalPrice(BigDecimal.valueOf(13200)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(89L).get()).totalPrice(BigDecimal.valueOf(36300)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(90L).get()).totalPrice(BigDecimal.valueOf(11000)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(91L).get()).totalPrice(BigDecimal.valueOf(30800)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(92L).get()).totalPrice(BigDecimal.valueOf(19800)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(93L).get()).totalPrice(BigDecimal.valueOf(4400)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(94L).get()).totalPrice(BigDecimal.valueOf(4400)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(95L).get()).totalPrice(BigDecimal.valueOf(4400)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(96L).get()).totalPrice(BigDecimal.valueOf(24200)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(97L).get()).totalPrice(BigDecimal.valueOf(14300)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(98L).get()).totalPrice(BigDecimal.valueOf(36300)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(99L).get()).totalPrice(BigDecimal.valueOf(4400)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
        restaurantOrderRefundRepository.save(RestaurantOrderRefund.builder().restaurantOrder(restaurantOrderRepository.findById(100L).get()).totalPrice(BigDecimal.valueOf(17600)).ownerReason("불필요 수량").status(RestaurantOrderRefundStatus.COMPLETED_APPROVAL).build());
    }

    void initRestaurantOrderRefundDetail() {
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(1L).get()).product(productRepository.findById(1L).get()).quantity(1L).price(productRepository.findById(1L).get().getDistributionPrice()).totalPrice(productRepository.findById(1L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(2L).get()).product(productRepository.findById(2L).get()).quantity(1L).price(productRepository.findById(2L).get().getDistributionPrice()).totalPrice(productRepository.findById(2L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(3L).get()).product(productRepository.findById(3L).get()).quantity(1L).price(productRepository.findById(3L).get().getDistributionPrice()).totalPrice(productRepository.findById(3L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(4L).get()).product(productRepository.findById(4L).get()).quantity(1L).price(productRepository.findById(4L).get().getDistributionPrice()).totalPrice(productRepository.findById(4L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(5L).get()).product(productRepository.findById(5L).get()).quantity(1L).price(productRepository.findById(5L).get().getDistributionPrice()).totalPrice(productRepository.findById(5L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(6L).get()).product(productRepository.findById(6L).get()).quantity(1L).price(productRepository.findById(6L).get().getDistributionPrice()).totalPrice(productRepository.findById(6L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(7L).get()).product(productRepository.findById(7L).get()).quantity(1L).price(productRepository.findById(7L).get().getDistributionPrice()).totalPrice(productRepository.findById(7L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(8L).get()).product(productRepository.findById(8L).get()).quantity(1L).price(productRepository.findById(8L).get().getDistributionPrice()).totalPrice(productRepository.findById(8L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(9L).get()).product(productRepository.findById(9L).get()).quantity(1L).price(productRepository.findById(9L).get().getDistributionPrice()).totalPrice(productRepository.findById(9L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(10L).get()).product(productRepository.findById(10L).get()).quantity(1L).price(productRepository.findById(10L).get().getDistributionPrice()).totalPrice(productRepository.findById(10L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(11L).get()).product(productRepository.findById(11L).get()).quantity(1L).price(productRepository.findById(11L).get().getDistributionPrice()).totalPrice(productRepository.findById(11L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(12L).get()).product(productRepository.findById(12L).get()).quantity(1L).price(productRepository.findById(12L).get().getDistributionPrice()).totalPrice(productRepository.findById(12L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(13L).get()).product(productRepository.findById(13L).get()).quantity(1L).price(productRepository.findById(13L).get().getDistributionPrice()).totalPrice(productRepository.findById(13L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(14L).get()).product(productRepository.findById(14L).get()).quantity(1L).price(productRepository.findById(14L).get().getDistributionPrice()).totalPrice(productRepository.findById(14L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(15L).get()).product(productRepository.findById(15L).get()).quantity(1L).price(productRepository.findById(15L).get().getDistributionPrice()).totalPrice(productRepository.findById(15L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(16L).get()).product(productRepository.findById(16L).get()).quantity(1L).price(productRepository.findById(16L).get().getDistributionPrice()).totalPrice(productRepository.findById(16L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(17L).get()).product(productRepository.findById(17L).get()).quantity(1L).price(productRepository.findById(17L).get().getDistributionPrice()).totalPrice(productRepository.findById(17L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(18L).get()).product(productRepository.findById(18L).get()).quantity(1L).price(productRepository.findById(18L).get().getDistributionPrice()).totalPrice(productRepository.findById(18L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(19L).get()).product(productRepository.findById(19L).get()).quantity(1L).price(productRepository.findById(19L).get().getDistributionPrice()).totalPrice(productRepository.findById(19L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(20L).get()).product(productRepository.findById(20L).get()).quantity(1L).price(productRepository.findById(20L).get().getDistributionPrice()).totalPrice(productRepository.findById(20L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(21L).get()).product(productRepository.findById(21L).get()).quantity(1L).price(productRepository.findById(21L).get().getDistributionPrice()).totalPrice(productRepository.findById(21L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(22L).get()).product(productRepository.findById(22L).get()).quantity(1L).price(productRepository.findById(22L).get().getDistributionPrice()).totalPrice(productRepository.findById(22L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(23L).get()).product(productRepository.findById(23L).get()).quantity(1L).price(productRepository.findById(23L).get().getDistributionPrice()).totalPrice(productRepository.findById(23L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(24L).get()).product(productRepository.findById(24L).get()).quantity(1L).price(productRepository.findById(24L).get().getDistributionPrice()).totalPrice(productRepository.findById(24L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(25L).get()).product(productRepository.findById(25L).get()).quantity(1L).price(productRepository.findById(25L).get().getDistributionPrice()).totalPrice(productRepository.findById(25L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(26L).get()).product(productRepository.findById(26L).get()).quantity(1L).price(productRepository.findById(26L).get().getDistributionPrice()).totalPrice(productRepository.findById(26L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(27L).get()).product(productRepository.findById(27L).get()).quantity(1L).price(productRepository.findById(27L).get().getDistributionPrice()).totalPrice(productRepository.findById(27L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(28L).get()).product(productRepository.findById(28L).get()).quantity(1L).price(productRepository.findById(28L).get().getDistributionPrice()).totalPrice(productRepository.findById(28L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(29L).get()).product(productRepository.findById(29L).get()).quantity(1L).price(productRepository.findById(29L).get().getDistributionPrice()).totalPrice(productRepository.findById(29L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(30L).get()).product(productRepository.findById(30L).get()).quantity(1L).price(productRepository.findById(30L).get().getDistributionPrice()).totalPrice(productRepository.findById(30L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(31L).get()).product(productRepository.findById(31L).get()).quantity(1L).price(productRepository.findById(31L).get().getDistributionPrice()).totalPrice(productRepository.findById(31L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(32L).get()).product(productRepository.findById(32L).get()).quantity(1L).price(productRepository.findById(32L).get().getDistributionPrice()).totalPrice(productRepository.findById(32L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(33L).get()).product(productRepository.findById(33L).get()).quantity(1L).price(productRepository.findById(33L).get().getDistributionPrice()).totalPrice(productRepository.findById(33L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(34L).get()).product(productRepository.findById(34L).get()).quantity(1L).price(productRepository.findById(34L).get().getDistributionPrice()).totalPrice(productRepository.findById(34L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(35L).get()).product(productRepository.findById(35L).get()).quantity(1L).price(productRepository.findById(35L).get().getDistributionPrice()).totalPrice(productRepository.findById(35L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(36L).get()).product(productRepository.findById(36L).get()).quantity(1L).price(productRepository.findById(36L).get().getDistributionPrice()).totalPrice(productRepository.findById(36L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(37L).get()).product(productRepository.findById(37L).get()).quantity(1L).price(productRepository.findById(37L).get().getDistributionPrice()).totalPrice(productRepository.findById(37L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(38L).get()).product(productRepository.findById(38L).get()).quantity(1L).price(productRepository.findById(38L).get().getDistributionPrice()).totalPrice(productRepository.findById(38L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(39L).get()).product(productRepository.findById(39L).get()).quantity(1L).price(productRepository.findById(39L).get().getDistributionPrice()).totalPrice(productRepository.findById(39L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(40L).get()).product(productRepository.findById(40L).get()).quantity(1L).price(productRepository.findById(40L).get().getDistributionPrice()).totalPrice(productRepository.findById(40L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(41L).get()).product(productRepository.findById(41L).get()).quantity(1L).price(productRepository.findById(41L).get().getDistributionPrice()).totalPrice(productRepository.findById(41L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(42L).get()).product(productRepository.findById(42L).get()).quantity(1L).price(productRepository.findById(42L).get().getDistributionPrice()).totalPrice(productRepository.findById(42L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(43L).get()).product(productRepository.findById(43L).get()).quantity(1L).price(productRepository.findById(43L).get().getDistributionPrice()).totalPrice(productRepository.findById(43L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(44L).get()).product(productRepository.findById(44L).get()).quantity(1L).price(productRepository.findById(44L).get().getDistributionPrice()).totalPrice(productRepository.findById(44L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(45L).get()).product(productRepository.findById(45L).get()).quantity(1L).price(productRepository.findById(45L).get().getDistributionPrice()).totalPrice(productRepository.findById(45L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(46L).get()).product(productRepository.findById(46L).get()).quantity(1L).price(productRepository.findById(46L).get().getDistributionPrice()).totalPrice(productRepository.findById(46L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(47L).get()).product(productRepository.findById(47L).get()).quantity(1L).price(productRepository.findById(47L).get().getDistributionPrice()).totalPrice(productRepository.findById(47L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(48L).get()).product(productRepository.findById(48L).get()).quantity(1L).price(productRepository.findById(48L).get().getDistributionPrice()).totalPrice(productRepository.findById(48L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(49L).get()).product(productRepository.findById(49L).get()).quantity(1L).price(productRepository.findById(49L).get().getDistributionPrice()).totalPrice(productRepository.findById(49L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(50L).get()).product(productRepository.findById(50L).get()).quantity(1L).price(productRepository.findById(50L).get().getDistributionPrice()).totalPrice(productRepository.findById(50L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(51L).get()).product(productRepository.findById(51L).get()).quantity(1L).price(productRepository.findById(51L).get().getDistributionPrice()).totalPrice(productRepository.findById(51L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(52L).get()).product(productRepository.findById(52L).get()).quantity(1L).price(productRepository.findById(52L).get().getDistributionPrice()).totalPrice(productRepository.findById(52L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(53L).get()).product(productRepository.findById(53L).get()).quantity(1L).price(productRepository.findById(53L).get().getDistributionPrice()).totalPrice(productRepository.findById(53L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(54L).get()).product(productRepository.findById(54L).get()).quantity(1L).price(productRepository.findById(54L).get().getDistributionPrice()).totalPrice(productRepository.findById(54L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(55L).get()).product(productRepository.findById(55L).get()).quantity(1L).price(productRepository.findById(55L).get().getDistributionPrice()).totalPrice(productRepository.findById(55L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(56L).get()).product(productRepository.findById(56L).get()).quantity(1L).price(productRepository.findById(56L).get().getDistributionPrice()).totalPrice(productRepository.findById(56L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(57L).get()).product(productRepository.findById(57L).get()).quantity(1L).price(productRepository.findById(57L).get().getDistributionPrice()).totalPrice(productRepository.findById(57L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(58L).get()).product(productRepository.findById(58L).get()).quantity(1L).price(productRepository.findById(58L).get().getDistributionPrice()).totalPrice(productRepository.findById(58L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(59L).get()).product(productRepository.findById(59L).get()).quantity(1L).price(productRepository.findById(59L).get().getDistributionPrice()).totalPrice(productRepository.findById(59L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(60L).get()).product(productRepository.findById(60L).get()).quantity(1L).price(productRepository.findById(60L).get().getDistributionPrice()).totalPrice(productRepository.findById(60L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(61L).get()).product(productRepository.findById(61L).get()).quantity(1L).price(productRepository.findById(61L).get().getDistributionPrice()).totalPrice(productRepository.findById(61L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(62L).get()).product(productRepository.findById(62L).get()).quantity(1L).price(productRepository.findById(62L).get().getDistributionPrice()).totalPrice(productRepository.findById(62L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(63L).get()).product(productRepository.findById(63L).get()).quantity(1L).price(productRepository.findById(63L).get().getDistributionPrice()).totalPrice(productRepository.findById(63L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(64L).get()).product(productRepository.findById(64L).get()).quantity(1L).price(productRepository.findById(64L).get().getDistributionPrice()).totalPrice(productRepository.findById(64L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(65L).get()).product(productRepository.findById(65L).get()).quantity(1L).price(productRepository.findById(65L).get().getDistributionPrice()).totalPrice(productRepository.findById(65L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(66L).get()).product(productRepository.findById(66L).get()).quantity(1L).price(productRepository.findById(66L).get().getDistributionPrice()).totalPrice(productRepository.findById(66L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(67L).get()).product(productRepository.findById(67L).get()).quantity(1L).price(productRepository.findById(67L).get().getDistributionPrice()).totalPrice(productRepository.findById(67L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(68L).get()).product(productRepository.findById(68L).get()).quantity(1L).price(productRepository.findById(68L).get().getDistributionPrice()).totalPrice(productRepository.findById(68L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(69L).get()).product(productRepository.findById(69L).get()).quantity(1L).price(productRepository.findById(69L).get().getDistributionPrice()).totalPrice(productRepository.findById(69L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(70L).get()).product(productRepository.findById(70L).get()).quantity(1L).price(productRepository.findById(70L).get().getDistributionPrice()).totalPrice(productRepository.findById(70L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(71L).get()).product(productRepository.findById(71L).get()).quantity(1L).price(productRepository.findById(71L).get().getDistributionPrice()).totalPrice(productRepository.findById(71L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(72L).get()).product(productRepository.findById(72L).get()).quantity(1L).price(productRepository.findById(72L).get().getDistributionPrice()).totalPrice(productRepository.findById(72L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(73L).get()).product(productRepository.findById(73L).get()).quantity(1L).price(productRepository.findById(73L).get().getDistributionPrice()).totalPrice(productRepository.findById(73L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(74L).get()).product(productRepository.findById(74L).get()).quantity(1L).price(productRepository.findById(74L).get().getDistributionPrice()).totalPrice(productRepository.findById(74L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(75L).get()).product(productRepository.findById(75L).get()).quantity(1L).price(productRepository.findById(75L).get().getDistributionPrice()).totalPrice(productRepository.findById(75L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(76L).get()).product(productRepository.findById(76L).get()).quantity(1L).price(productRepository.findById(76L).get().getDistributionPrice()).totalPrice(productRepository.findById(76L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(77L).get()).product(productRepository.findById(77L).get()).quantity(1L).price(productRepository.findById(77L).get().getDistributionPrice()).totalPrice(productRepository.findById(77L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(78L).get()).product(productRepository.findById(78L).get()).quantity(1L).price(productRepository.findById(78L).get().getDistributionPrice()).totalPrice(productRepository.findById(78L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(79L).get()).product(productRepository.findById(79L).get()).quantity(1L).price(productRepository.findById(79L).get().getDistributionPrice()).totalPrice(productRepository.findById(79L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(80L).get()).product(productRepository.findById(80L).get()).quantity(1L).price(productRepository.findById(80L).get().getDistributionPrice()).totalPrice(productRepository.findById(80L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(81L).get()).product(productRepository.findById(81L).get()).quantity(1L).price(productRepository.findById(81L).get().getDistributionPrice()).totalPrice(productRepository.findById(81L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(82L).get()).product(productRepository.findById(82L).get()).quantity(1L).price(productRepository.findById(82L).get().getDistributionPrice()).totalPrice(productRepository.findById(82L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(83L).get()).product(productRepository.findById(83L).get()).quantity(1L).price(productRepository.findById(83L).get().getDistributionPrice()).totalPrice(productRepository.findById(83L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(84L).get()).product(productRepository.findById(84L).get()).quantity(1L).price(productRepository.findById(84L).get().getDistributionPrice()).totalPrice(productRepository.findById(84L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(85L).get()).product(productRepository.findById(85L).get()).quantity(1L).price(productRepository.findById(85L).get().getDistributionPrice()).totalPrice(productRepository.findById(85L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(86L).get()).product(productRepository.findById(86L).get()).quantity(1L).price(productRepository.findById(86L).get().getDistributionPrice()).totalPrice(productRepository.findById(86L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(87L).get()).product(productRepository.findById(87L).get()).quantity(1L).price(productRepository.findById(87L).get().getDistributionPrice()).totalPrice(productRepository.findById(87L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(88L).get()).product(productRepository.findById(88L).get()).quantity(1L).price(productRepository.findById(88L).get().getDistributionPrice()).totalPrice(productRepository.findById(88L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(89L).get()).product(productRepository.findById(89L).get()).quantity(1L).price(productRepository.findById(89L).get().getDistributionPrice()).totalPrice(productRepository.findById(89L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(90L).get()).product(productRepository.findById(90L).get()).quantity(1L).price(productRepository.findById(90L).get().getDistributionPrice()).totalPrice(productRepository.findById(90L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(91L).get()).product(productRepository.findById(91L).get()).quantity(1L).price(productRepository.findById(91L).get().getDistributionPrice()).totalPrice(productRepository.findById(91L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(92L).get()).product(productRepository.findById(92L).get()).quantity(1L).price(productRepository.findById(92L).get().getDistributionPrice()).totalPrice(productRepository.findById(92L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(93L).get()).product(productRepository.findById(93L).get()).quantity(1L).price(productRepository.findById(93L).get().getDistributionPrice()).totalPrice(productRepository.findById(93L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(94L).get()).product(productRepository.findById(94L).get()).quantity(1L).price(productRepository.findById(94L).get().getDistributionPrice()).totalPrice(productRepository.findById(94L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(95L).get()).product(productRepository.findById(95L).get()).quantity(1L).price(productRepository.findById(95L).get().getDistributionPrice()).totalPrice(productRepository.findById(95L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(96L).get()).product(productRepository.findById(96L).get()).quantity(1L).price(productRepository.findById(96L).get().getDistributionPrice()).totalPrice(productRepository.findById(96L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(97L).get()).product(productRepository.findById(97L).get()).quantity(1L).price(productRepository.findById(97L).get().getDistributionPrice()).totalPrice(productRepository.findById(97L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(98L).get()).product(productRepository.findById(98L).get()).quantity(1L).price(productRepository.findById(98L).get().getDistributionPrice()).totalPrice(productRepository.findById(98L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(99L).get()).product(productRepository.findById(99L).get()).quantity(1L).price(productRepository.findById(99L).get().getDistributionPrice()).totalPrice(productRepository.findById(99L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
        restaurantOrderRefundDetailRepository.save(RestaurantOrderRefundDetail.builder().restaurantOrderRefund(restaurantOrderRefundRepository.findById(100L).get()).product(productRepository.findById(100L).get()).quantity(1L).price(productRepository.findById(100L).get().getDistributionPrice()).totalPrice(productRepository.findById(100L).get().getDistributionPrice().multiply(BigDecimal.valueOf(1))).build());
    }
}